var gE=Object.defineProperty;var vE=(n,e,t)=>e in n?gE(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var yE=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var Vn=(n,e,t)=>(vE(n,typeof e!="symbol"?e+"":e,t),t);var qj=yE(hf=>{function jy(n,e){for(var t=0;t<e.length;t++){const i=e[t];if(typeof i!="string"&&!Array.isArray(i)){for(const r in i)if(r!=="default"&&!(r in n)){const a=Object.getOwnPropertyDescriptor(i,r);a&&Object.defineProperty(n,r,a.get?a:{enumerable:!0,get:()=>i[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function t(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(r){if(r.ep)return;r.ep=!0;const a=t(r);fetch(r.href,a)}})();var V3=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function I4(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var Hy={exports:{}},nu={},Vy={exports:{}},i1={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var N4=Symbol.for("react.element"),_E=Symbol.for("react.portal"),xE=Symbol.for("react.fragment"),wE=Symbol.for("react.strict_mode"),bE=Symbol.for("react.profiler"),SE=Symbol.for("react.provider"),ME=Symbol.for("react.context"),EE=Symbol.for("react.forward_ref"),PE=Symbol.for("react.suspense"),TE=Symbol.for("react.memo"),LE=Symbol.for("react.lazy"),Yp=Symbol.iterator;function CE(n){return n===null||typeof n!="object"?null:(n=Yp&&n[Yp]||n["@@iterator"],typeof n=="function"?n:null)}var Gy={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Wy=Object.assign,Xy={};function g3(n,e,t){this.props=n,this.context=e,this.refs=Xy,this.updater=t||Gy}g3.prototype.isReactComponent={};g3.prototype.setState=function(n,e){if(typeof n!="object"&&typeof n!="function"&&n!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,n,e,"setState")};g3.prototype.forceUpdate=function(n){this.updater.enqueueForceUpdate(this,n,"forceUpdate")};function Yy(){}Yy.prototype=g3.prototype;function x7(n,e,t){this.props=n,this.context=e,this.refs=Xy,this.updater=t||Gy}var w7=x7.prototype=new Yy;w7.constructor=x7;Wy(w7,g3.prototype);w7.isPureReactComponent=!0;var qp=Array.isArray,qy=Object.prototype.hasOwnProperty,b7={current:null},$y={key:!0,ref:!0,__self:!0,__source:!0};function Ky(n,e,t){var i,r={},a=null,s=null;if(e!=null)for(i in e.ref!==void 0&&(s=e.ref),e.key!==void 0&&(a=""+e.key),e)qy.call(e,i)&&!$y.hasOwnProperty(i)&&(r[i]=e[i]);var o=arguments.length-2;if(o===1)r.children=t;else if(1<o){for(var l=Array(o),d=0;d<o;d++)l[d]=arguments[d+2];r.children=l}if(n&&n.defaultProps)for(i in o=n.defaultProps,o)r[i]===void 0&&(r[i]=o[i]);return{$$typeof:N4,type:n,key:a,ref:s,props:r,_owner:b7.current}}function AE(n,e){return{$$typeof:N4,type:n.type,key:e,ref:n.ref,props:n.props,_owner:n._owner}}function S7(n){return typeof n=="object"&&n!==null&&n.$$typeof===N4}function RE(n){var e={"=":"=0",":":"=2"};return"$"+n.replace(/[=:]/g,function(t){return e[t]})}var $p=/\/+/g;function K6(n,e){return typeof n=="object"&&n!==null&&n.key!=null?RE(""+n.key):e.toString(36)}function Jc(n,e,t,i,r){var a=typeof n;(a==="undefined"||a==="boolean")&&(n=null);var s=!1;if(n===null)s=!0;else switch(a){case"string":case"number":s=!0;break;case"object":switch(n.$$typeof){case N4:case _E:s=!0}}if(s)return s=n,r=r(s),n=i===""?"."+K6(s,0):i,qp(r)?(t="",n!=null&&(t=n.replace($p,"$&/")+"/"),Jc(r,e,t,"",function(d){return d})):r!=null&&(S7(r)&&(r=AE(r,t+(!r.key||s&&s.key===r.key?"":(""+r.key).replace($p,"$&/")+"/")+n)),e.push(r)),1;if(s=0,i=i===""?".":i+":",qp(n))for(var o=0;o<n.length;o++){a=n[o];var l=i+K6(a,o);s+=Jc(a,e,t,l,r)}else if(l=CE(n),typeof l=="function")for(n=l.call(n),o=0;!(a=n.next()).done;)a=a.value,l=i+K6(a,o++),s+=Jc(a,e,t,l,r);else if(a==="object")throw e=String(n),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return s}function F0(n,e,t){if(n==null)return n;var i=[],r=0;return Jc(n,i,"","",function(a){return e.call(t,a,r++)}),i}function kE(n){if(n._status===-1){var e=n._result;e=e(),e.then(function(t){(n._status===0||n._status===-1)&&(n._status=1,n._result=t)},function(t){(n._status===0||n._status===-1)&&(n._status=2,n._result=t)}),n._status===-1&&(n._status=0,n._result=e)}if(n._status===1)return n._result.default;throw n._result}var Jn={current:null},Qc={transition:null},IE={ReactCurrentDispatcher:Jn,ReactCurrentBatchConfig:Qc,ReactCurrentOwner:b7};i1.Children={map:F0,forEach:function(n,e,t){F0(n,function(){e.apply(this,arguments)},t)},count:function(n){var e=0;return F0(n,function(){e++}),e},toArray:function(n){return F0(n,function(e){return e})||[]},only:function(n){if(!S7(n))throw Error("React.Children.only expected to receive a single React element child.");return n}};i1.Component=g3;i1.Fragment=xE;i1.Profiler=bE;i1.PureComponent=x7;i1.StrictMode=wE;i1.Suspense=PE;i1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=IE;i1.cloneElement=function(n,e,t){if(n==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+n+".");var i=Wy({},n.props),r=n.key,a=n.ref,s=n._owner;if(e!=null){if(e.ref!==void 0&&(a=e.ref,s=b7.current),e.key!==void 0&&(r=""+e.key),n.type&&n.type.defaultProps)var o=n.type.defaultProps;for(l in e)qy.call(e,l)&&!$y.hasOwnProperty(l)&&(i[l]=e[l]===void 0&&o!==void 0?o[l]:e[l])}var l=arguments.length-2;if(l===1)i.children=t;else if(1<l){o=Array(l);for(var d=0;d<l;d++)o[d]=arguments[d+2];i.children=o}return{$$typeof:N4,type:n.type,key:r,ref:a,props:i,_owner:s}};i1.createContext=function(n){return n={$$typeof:ME,_currentValue:n,_currentValue2:n,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},n.Provider={$$typeof:SE,_context:n},n.Consumer=n};i1.createElement=Ky;i1.createFactory=function(n){var e=Ky.bind(null,n);return e.type=n,e};i1.createRef=function(){return{current:null}};i1.forwardRef=function(n){return{$$typeof:EE,render:n}};i1.isValidElement=S7;i1.lazy=function(n){return{$$typeof:LE,_payload:{_status:-1,_result:n},_init:kE}};i1.memo=function(n,e){return{$$typeof:TE,type:n,compare:e===void 0?null:e}};i1.startTransition=function(n){var e=Qc.transition;Qc.transition={};try{n()}finally{Qc.transition=e}};i1.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};i1.useCallback=function(n,e){return Jn.current.useCallback(n,e)};i1.useContext=function(n){return Jn.current.useContext(n)};i1.useDebugValue=function(){};i1.useDeferredValue=function(n){return Jn.current.useDeferredValue(n)};i1.useEffect=function(n,e){return Jn.current.useEffect(n,e)};i1.useId=function(){return Jn.current.useId()};i1.useImperativeHandle=function(n,e,t){return Jn.current.useImperativeHandle(n,e,t)};i1.useInsertionEffect=function(n,e){return Jn.current.useInsertionEffect(n,e)};i1.useLayoutEffect=function(n,e){return Jn.current.useLayoutEffect(n,e)};i1.useMemo=function(n,e){return Jn.current.useMemo(n,e)};i1.useReducer=function(n,e,t){return Jn.current.useReducer(n,e,t)};i1.useRef=function(n){return Jn.current.useRef(n)};i1.useState=function(n){return Jn.current.useState(n)};i1.useSyncExternalStore=function(n,e,t){return Jn.current.useSyncExternalStore(n,e,t)};i1.useTransition=function(){return Jn.current.useTransition()};i1.version="18.2.0";Vy.exports=i1;var I=Vy.exports;const or=I4(I),NE=jy({__proto__:null,default:or},[I]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var DE=I,OE=Symbol.for("react.element"),BE=Symbol.for("react.fragment"),UE=Object.prototype.hasOwnProperty,FE=DE.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,zE={key:!0,ref:!0,__self:!0,__source:!0};function Zy(n,e,t){var i,r={},a=null,s=null;t!==void 0&&(a=""+t),e.key!==void 0&&(a=""+e.key),e.ref!==void 0&&(s=e.ref);for(i in e)UE.call(e,i)&&!zE.hasOwnProperty(i)&&(r[i]=e[i]);if(n&&n.defaultProps)for(i in e=n.defaultProps,e)r[i]===void 0&&(r[i]=e[i]);return{$$typeof:OE,type:n,key:a,ref:s,props:r,_owner:FE.current}}nu.Fragment=BE;nu.jsx=Zy;nu.jsxs=Zy;Hy.exports=nu;var xe=Hy.exports,y8={},Jy={exports:{}},Pi={},Qy={exports:{}},e_={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(n){function e(z,K){var Z=z.length;z.push(K);e:for(;0<Z;){var re=Z-1>>>1,_e=z[re];if(0<r(_e,K))z[re]=K,z[Z]=_e,Z=re;else break e}}function t(z){return z.length===0?null:z[0]}function i(z){if(z.length===0)return null;var K=z[0],Z=z.pop();if(Z!==K){z[0]=Z;e:for(var re=0,_e=z.length,je=_e>>>1;re<je;){var ce=2*(re+1)-1,Ee=z[ce],ze=ce+1,Je=z[ze];if(0>r(Ee,Z))ze<_e&&0>r(Je,Ee)?(z[re]=Je,z[ze]=Z,re=ze):(z[re]=Ee,z[ce]=Z,re=ce);else if(ze<_e&&0>r(Je,Z))z[re]=Je,z[ze]=Z,re=ze;else break e}}return K}function r(z,K){var Z=z.sortIndex-K.sortIndex;return Z!==0?Z:z.id-K.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;n.unstable_now=function(){return a.now()}}else{var s=Date,o=s.now();n.unstable_now=function(){return s.now()-o}}var l=[],d=[],h=1,f=null,p=3,m=!1,y=!1,b=!1,_=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function S(z){for(var K=t(d);K!==null;){if(K.callback===null)i(d);else if(K.startTime<=z)i(d),K.sortIndex=K.expirationTime,e(l,K);else break;K=t(d)}}function E(z){if(b=!1,S(z),!y)if(t(l)!==null)y=!0,se(A);else{var K=t(d);K!==null&&ve(E,K.startTime-z)}}function A(z,K){y=!1,b&&(b=!1,g(N),N=-1),m=!0;var Z=p;try{for(S(K),f=t(l);f!==null&&(!(f.expirationTime>K)||z&&!R());){var re=f.callback;if(typeof re=="function"){f.callback=null,p=f.priorityLevel;var _e=re(f.expirationTime<=K);K=n.unstable_now(),typeof _e=="function"?f.callback=_e:f===t(l)&&i(l),S(K)}else i(l);f=t(l)}if(f!==null)var je=!0;else{var ce=t(d);ce!==null&&ve(E,ce.startTime-K),je=!1}return je}finally{f=null,p=Z,m=!1}}var P=!1,C=null,N=-1,Y=5,T=-1;function R(){return!(n.unstable_now()-T<Y)}function ee(){if(C!==null){var z=n.unstable_now();T=z;var K=!0;try{K=C(!0,z)}finally{K?he():(P=!1,C=null)}}else P=!1}var he;if(typeof x=="function")he=function(){x(ee)};else if(typeof MessageChannel<"u"){var q=new MessageChannel,ue=q.port2;q.port1.onmessage=ee,he=function(){ue.postMessage(null)}}else he=function(){_(ee,0)};function se(z){C=z,P||(P=!0,he())}function ve(z,K){N=_(function(){z(n.unstable_now())},K)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(z){z.callback=null},n.unstable_continueExecution=function(){y||m||(y=!0,se(A))},n.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):Y=0<z?Math.floor(1e3/z):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(z){switch(p){case 1:case 2:case 3:var K=3;break;default:K=p}var Z=p;p=K;try{return z()}finally{p=Z}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(z,K){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var Z=p;p=z;try{return K()}finally{p=Z}},n.unstable_scheduleCallback=function(z,K,Z){var re=n.unstable_now();switch(typeof Z=="object"&&Z!==null?(Z=Z.delay,Z=typeof Z=="number"&&0<Z?re+Z:re):Z=re,z){case 1:var _e=-1;break;case 2:_e=250;break;case 5:_e=1073741823;break;case 4:_e=1e4;break;default:_e=5e3}return _e=Z+_e,z={id:h++,callback:K,priorityLevel:z,startTime:Z,expirationTime:_e,sortIndex:-1},Z>re?(z.sortIndex=Z,e(d,z),t(l)===null&&z===t(d)&&(b?(g(N),N=-1):b=!0,ve(E,Z-re))):(z.sortIndex=_e,e(l,z),y||m||(y=!0,se(A))),z},n.unstable_shouldYield=R,n.unstable_wrapCallback=function(z){var K=p;return function(){var Z=p;p=K;try{return z.apply(this,arguments)}finally{p=Z}}}})(e_);Qy.exports=e_;var jE=Qy.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t_=I,Ei=jE;function Ge(n){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+n,t=1;t<arguments.length;t++)e+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+n+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var n_=new Set,Hl={};function Rs(n,e){n3(n,e),n3(n+"Capture",e)}function n3(n,e){for(Hl[n]=e,n=0;n<e.length;n++)n_.add(e[n])}var gr=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),_8=Object.prototype.hasOwnProperty,HE=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Kp={},Zp={};function VE(n){return _8.call(Zp,n)?!0:_8.call(Kp,n)?!1:HE.test(n)?Zp[n]=!0:(Kp[n]=!0,!1)}function GE(n,e,t,i){if(t!==null&&t.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return i?!1:t!==null?!t.acceptsBooleans:(n=n.toLowerCase().slice(0,5),n!=="data-"&&n!=="aria-");default:return!1}}function WE(n,e,t,i){if(e===null||typeof e>"u"||GE(n,e,t,i))return!0;if(i)return!1;if(t!==null)switch(t.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function Qn(n,e,t,i,r,a,s){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=i,this.attributeNamespace=r,this.mustUseProperty=t,this.propertyName=n,this.type=e,this.sanitizeURL=a,this.removeEmptyString=s}var Mn={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(n){Mn[n]=new Qn(n,0,!1,n,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(n){var e=n[0];Mn[e]=new Qn(e,1,!1,n[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(n){Mn[n]=new Qn(n,2,!1,n.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(n){Mn[n]=new Qn(n,2,!1,n,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(n){Mn[n]=new Qn(n,3,!1,n.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(n){Mn[n]=new Qn(n,3,!0,n,null,!1,!1)});["capture","download"].forEach(function(n){Mn[n]=new Qn(n,4,!1,n,null,!1,!1)});["cols","rows","size","span"].forEach(function(n){Mn[n]=new Qn(n,6,!1,n,null,!1,!1)});["rowSpan","start"].forEach(function(n){Mn[n]=new Qn(n,5,!1,n.toLowerCase(),null,!1,!1)});var M7=/[\-:]([a-z])/g;function E7(n){return n[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(n){var e=n.replace(M7,E7);Mn[e]=new Qn(e,1,!1,n,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(n){var e=n.replace(M7,E7);Mn[e]=new Qn(e,1,!1,n,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(n){var e=n.replace(M7,E7);Mn[e]=new Qn(e,1,!1,n,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(n){Mn[n]=new Qn(n,1,!1,n.toLowerCase(),null,!1,!1)});Mn.xlinkHref=new Qn("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(n){Mn[n]=new Qn(n,1,!1,n.toLowerCase(),null,!0,!0)});function P7(n,e,t,i){var r=Mn.hasOwnProperty(e)?Mn[e]:null;(r!==null?r.type!==0:i||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(WE(e,t,r,i)&&(t=null),i||r===null?VE(e)&&(t===null?n.removeAttribute(e):n.setAttribute(e,""+t)):r.mustUseProperty?n[r.propertyName]=t===null?r.type===3?!1:"":t:(e=r.attributeName,i=r.attributeNamespace,t===null?n.removeAttribute(e):(r=r.type,t=r===3||r===4&&t===!0?"":""+t,i?n.setAttributeNS(i,e,t):n.setAttribute(e,t))))}var Sr=t_.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,z0=Symbol.for("react.element"),Lo=Symbol.for("react.portal"),Co=Symbol.for("react.fragment"),T7=Symbol.for("react.strict_mode"),x8=Symbol.for("react.profiler"),i_=Symbol.for("react.provider"),r_=Symbol.for("react.context"),L7=Symbol.for("react.forward_ref"),w8=Symbol.for("react.suspense"),b8=Symbol.for("react.suspense_list"),C7=Symbol.for("react.memo"),Wr=Symbol.for("react.lazy"),a_=Symbol.for("react.offscreen"),Jp=Symbol.iterator;function G3(n){return n===null||typeof n!="object"?null:(n=Jp&&n[Jp]||n["@@iterator"],typeof n=="function"?n:null)}var U1=Object.assign,Z6;function _l(n){if(Z6===void 0)try{throw Error()}catch(t){var e=t.stack.trim().match(/\n( *(at )?)/);Z6=e&&e[1]||""}return`
`+Z6+n}var J6=!1;function Q6(n,e){if(!n||J6)return"";J6=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(d){var i=d}Reflect.construct(n,[],e)}else{try{e.call()}catch(d){i=d}n.call(e.prototype)}else{try{throw Error()}catch(d){i=d}n()}}catch(d){if(d&&i&&typeof d.stack=="string"){for(var r=d.stack.split(`
`),a=i.stack.split(`
`),s=r.length-1,o=a.length-1;1<=s&&0<=o&&r[s]!==a[o];)o--;for(;1<=s&&0<=o;s--,o--)if(r[s]!==a[o]){if(s!==1||o!==1)do if(s--,o--,0>o||r[s]!==a[o]){var l=`
`+r[s].replace(" at new "," at ");return n.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",n.displayName)),l}while(1<=s&&0<=o);break}}}finally{J6=!1,Error.prepareStackTrace=t}return(n=n?n.displayName||n.name:"")?_l(n):""}function XE(n){switch(n.tag){case 5:return _l(n.type);case 16:return _l("Lazy");case 13:return _l("Suspense");case 19:return _l("SuspenseList");case 0:case 2:case 15:return n=Q6(n.type,!1),n;case 11:return n=Q6(n.type.render,!1),n;case 1:return n=Q6(n.type,!0),n;default:return""}}function S8(n){if(n==null)return null;if(typeof n=="function")return n.displayName||n.name||null;if(typeof n=="string")return n;switch(n){case Co:return"Fragment";case Lo:return"Portal";case x8:return"Profiler";case T7:return"StrictMode";case w8:return"Suspense";case b8:return"SuspenseList"}if(typeof n=="object")switch(n.$$typeof){case r_:return(n.displayName||"Context")+".Consumer";case i_:return(n._context.displayName||"Context")+".Provider";case L7:var e=n.render;return n=n.displayName,n||(n=e.displayName||e.name||"",n=n!==""?"ForwardRef("+n+")":"ForwardRef"),n;case C7:return e=n.displayName||null,e!==null?e:S8(n.type)||"Memo";case Wr:e=n._payload,n=n._init;try{return S8(n(e))}catch{}}return null}function YE(n){var e=n.type;switch(n.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return n=e.render,n=n.displayName||n.name||"",e.displayName||(n!==""?"ForwardRef("+n+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return S8(e);case 8:return e===T7?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function da(n){switch(typeof n){case"boolean":case"number":case"string":case"undefined":return n;case"object":return n;default:return""}}function s_(n){var e=n.type;return(n=n.nodeName)&&n.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function qE(n){var e=s_(n)?"checked":"value",t=Object.getOwnPropertyDescriptor(n.constructor.prototype,e),i=""+n[e];if(!n.hasOwnProperty(e)&&typeof t<"u"&&typeof t.get=="function"&&typeof t.set=="function"){var r=t.get,a=t.set;return Object.defineProperty(n,e,{configurable:!0,get:function(){return r.call(this)},set:function(s){i=""+s,a.call(this,s)}}),Object.defineProperty(n,e,{enumerable:t.enumerable}),{getValue:function(){return i},setValue:function(s){i=""+s},stopTracking:function(){n._valueTracker=null,delete n[e]}}}}function j0(n){n._valueTracker||(n._valueTracker=qE(n))}function o_(n){if(!n)return!1;var e=n._valueTracker;if(!e)return!0;var t=e.getValue(),i="";return n&&(i=s_(n)?n.checked?"true":"false":n.value),n=i,n!==t?(e.setValue(n),!0):!1}function y5(n){if(n=n||(typeof document<"u"?document:void 0),typeof n>"u")return null;try{return n.activeElement||n.body}catch{return n.body}}function M8(n,e){var t=e.checked;return U1({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:t??n._wrapperState.initialChecked})}function Qp(n,e){var t=e.defaultValue==null?"":e.defaultValue,i=e.checked!=null?e.checked:e.defaultChecked;t=da(e.value!=null?e.value:t),n._wrapperState={initialChecked:i,initialValue:t,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function l_(n,e){e=e.checked,e!=null&&P7(n,"checked",e,!1)}function E8(n,e){l_(n,e);var t=da(e.value),i=e.type;if(t!=null)i==="number"?(t===0&&n.value===""||n.value!=t)&&(n.value=""+t):n.value!==""+t&&(n.value=""+t);else if(i==="submit"||i==="reset"){n.removeAttribute("value");return}e.hasOwnProperty("value")?P8(n,e.type,t):e.hasOwnProperty("defaultValue")&&P8(n,e.type,da(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(n.defaultChecked=!!e.defaultChecked)}function em(n,e,t){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var i=e.type;if(!(i!=="submit"&&i!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+n._wrapperState.initialValue,t||e===n.value||(n.value=e),n.defaultValue=e}t=n.name,t!==""&&(n.name=""),n.defaultChecked=!!n._wrapperState.initialChecked,t!==""&&(n.name=t)}function P8(n,e,t){(e!=="number"||y5(n.ownerDocument)!==n)&&(t==null?n.defaultValue=""+n._wrapperState.initialValue:n.defaultValue!==""+t&&(n.defaultValue=""+t))}var xl=Array.isArray;function $o(n,e,t,i){if(n=n.options,e){e={};for(var r=0;r<t.length;r++)e["$"+t[r]]=!0;for(t=0;t<n.length;t++)r=e.hasOwnProperty("$"+n[t].value),n[t].selected!==r&&(n[t].selected=r),r&&i&&(n[t].defaultSelected=!0)}else{for(t=""+da(t),e=null,r=0;r<n.length;r++){if(n[r].value===t){n[r].selected=!0,i&&(n[r].defaultSelected=!0);return}e!==null||n[r].disabled||(e=n[r])}e!==null&&(e.selected=!0)}}function T8(n,e){if(e.dangerouslySetInnerHTML!=null)throw Error(Ge(91));return U1({},e,{value:void 0,defaultValue:void 0,children:""+n._wrapperState.initialValue})}function tm(n,e){var t=e.value;if(t==null){if(t=e.children,e=e.defaultValue,t!=null){if(e!=null)throw Error(Ge(92));if(xl(t)){if(1<t.length)throw Error(Ge(93));t=t[0]}e=t}e==null&&(e=""),t=e}n._wrapperState={initialValue:da(t)}}function c_(n,e){var t=da(e.value),i=da(e.defaultValue);t!=null&&(t=""+t,t!==n.value&&(n.value=t),e.defaultValue==null&&n.defaultValue!==t&&(n.defaultValue=t)),i!=null&&(n.defaultValue=""+i)}function nm(n){var e=n.textContent;e===n._wrapperState.initialValue&&e!==""&&e!==null&&(n.value=e)}function u_(n){switch(n){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function L8(n,e){return n==null||n==="http://www.w3.org/1999/xhtml"?u_(e):n==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":n}var H0,d_=function(n){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,t,i,r){MSApp.execUnsafeLocalFunction(function(){return n(e,t,i,r)})}:n}(function(n,e){if(n.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in n)n.innerHTML=e;else{for(H0=H0||document.createElement("div"),H0.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=H0.firstChild;n.firstChild;)n.removeChild(n.firstChild);for(;e.firstChild;)n.appendChild(e.firstChild)}});function Vl(n,e){if(e){var t=n.firstChild;if(t&&t===n.lastChild&&t.nodeType===3){t.nodeValue=e;return}}n.textContent=e}var Pl={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},$E=["Webkit","ms","Moz","O"];Object.keys(Pl).forEach(function(n){$E.forEach(function(e){e=e+n.charAt(0).toUpperCase()+n.substring(1),Pl[e]=Pl[n]})});function h_(n,e,t){return e==null||typeof e=="boolean"||e===""?"":t||typeof e!="number"||e===0||Pl.hasOwnProperty(n)&&Pl[n]?(""+e).trim():e+"px"}function f_(n,e){n=n.style;for(var t in e)if(e.hasOwnProperty(t)){var i=t.indexOf("--")===0,r=h_(t,e[t],i);t==="float"&&(t="cssFloat"),i?n.setProperty(t,r):n[t]=r}}var KE=U1({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function C8(n,e){if(e){if(KE[n]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(Ge(137,n));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(Ge(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(Ge(61))}if(e.style!=null&&typeof e.style!="object")throw Error(Ge(62))}}function A8(n,e){if(n.indexOf("-")===-1)return typeof e.is=="string";switch(n){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var R8=null;function A7(n){return n=n.target||n.srcElement||window,n.correspondingUseElement&&(n=n.correspondingUseElement),n.nodeType===3?n.parentNode:n}var k8=null,Ko=null,Zo=null;function im(n){if(n=B4(n)){if(typeof k8!="function")throw Error(Ge(280));var e=n.stateNode;e&&(e=ou(e),k8(n.stateNode,n.type,e))}}function p_(n){Ko?Zo?Zo.push(n):Zo=[n]:Ko=n}function m_(){if(Ko){var n=Ko,e=Zo;if(Zo=Ko=null,im(n),e)for(n=0;n<e.length;n++)im(e[n])}}function g_(n,e){return n(e)}function v_(){}var ed=!1;function y_(n,e,t){if(ed)return n(e,t);ed=!0;try{return g_(n,e,t)}finally{ed=!1,(Ko!==null||Zo!==null)&&(v_(),m_())}}function Gl(n,e){var t=n.stateNode;if(t===null)return null;var i=ou(t);if(i===null)return null;t=i[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(n=n.type,i=!(n==="button"||n==="input"||n==="select"||n==="textarea")),n=!i;break e;default:n=!1}if(n)return null;if(t&&typeof t!="function")throw Error(Ge(231,e,typeof t));return t}var I8=!1;if(gr)try{var W3={};Object.defineProperty(W3,"passive",{get:function(){I8=!0}}),window.addEventListener("test",W3,W3),window.removeEventListener("test",W3,W3)}catch{I8=!1}function ZE(n,e,t,i,r,a,s,o,l){var d=Array.prototype.slice.call(arguments,3);try{e.apply(t,d)}catch(h){this.onError(h)}}var Tl=!1,_5=null,x5=!1,N8=null,JE={onError:function(n){Tl=!0,_5=n}};function QE(n,e,t,i,r,a,s,o,l){Tl=!1,_5=null,ZE.apply(JE,arguments)}function eP(n,e,t,i,r,a,s,o,l){if(QE.apply(this,arguments),Tl){if(Tl){var d=_5;Tl=!1,_5=null}else throw Error(Ge(198));x5||(x5=!0,N8=d)}}function ks(n){var e=n,t=n;if(n.alternate)for(;e.return;)e=e.return;else{n=e;do e=n,e.flags&4098&&(t=e.return),n=e.return;while(n)}return e.tag===3?t:null}function __(n){if(n.tag===13){var e=n.memoizedState;if(e===null&&(n=n.alternate,n!==null&&(e=n.memoizedState)),e!==null)return e.dehydrated}return null}function rm(n){if(ks(n)!==n)throw Error(Ge(188))}function tP(n){var e=n.alternate;if(!e){if(e=ks(n),e===null)throw Error(Ge(188));return e!==n?null:n}for(var t=n,i=e;;){var r=t.return;if(r===null)break;var a=r.alternate;if(a===null){if(i=r.return,i!==null){t=i;continue}break}if(r.child===a.child){for(a=r.child;a;){if(a===t)return rm(r),n;if(a===i)return rm(r),e;a=a.sibling}throw Error(Ge(188))}if(t.return!==i.return)t=r,i=a;else{for(var s=!1,o=r.child;o;){if(o===t){s=!0,t=r,i=a;break}if(o===i){s=!0,i=r,t=a;break}o=o.sibling}if(!s){for(o=a.child;o;){if(o===t){s=!0,t=a,i=r;break}if(o===i){s=!0,i=a,t=r;break}o=o.sibling}if(!s)throw Error(Ge(189))}}if(t.alternate!==i)throw Error(Ge(190))}if(t.tag!==3)throw Error(Ge(188));return t.stateNode.current===t?n:e}function x_(n){return n=tP(n),n!==null?w_(n):null}function w_(n){if(n.tag===5||n.tag===6)return n;for(n=n.child;n!==null;){var e=w_(n);if(e!==null)return e;n=n.sibling}return null}var b_=Ei.unstable_scheduleCallback,am=Ei.unstable_cancelCallback,nP=Ei.unstable_shouldYield,iP=Ei.unstable_requestPaint,Q1=Ei.unstable_now,rP=Ei.unstable_getCurrentPriorityLevel,R7=Ei.unstable_ImmediatePriority,S_=Ei.unstable_UserBlockingPriority,w5=Ei.unstable_NormalPriority,aP=Ei.unstable_LowPriority,M_=Ei.unstable_IdlePriority,iu=null,R2=null;function sP(n){if(R2&&typeof R2.onCommitFiberRoot=="function")try{R2.onCommitFiberRoot(iu,n,void 0,(n.current.flags&128)===128)}catch{}}var c2=Math.clz32?Math.clz32:cP,oP=Math.log,lP=Math.LN2;function cP(n){return n>>>=0,n===0?32:31-(oP(n)/lP|0)|0}var V0=64,G0=4194304;function wl(n){switch(n&-n){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return n&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return n}}function b5(n,e){var t=n.pendingLanes;if(t===0)return 0;var i=0,r=n.suspendedLanes,a=n.pingedLanes,s=t&268435455;if(s!==0){var o=s&~r;o!==0?i=wl(o):(a&=s,a!==0&&(i=wl(a)))}else s=t&~r,s!==0?i=wl(s):a!==0&&(i=wl(a));if(i===0)return 0;if(e!==0&&e!==i&&!(e&r)&&(r=i&-i,a=e&-e,r>=a||r===16&&(a&4194240)!==0))return e;if(i&4&&(i|=t&16),e=n.entangledLanes,e!==0)for(n=n.entanglements,e&=i;0<e;)t=31-c2(e),r=1<<t,i|=n[t],e&=~r;return i}function uP(n,e){switch(n){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function dP(n,e){for(var t=n.suspendedLanes,i=n.pingedLanes,r=n.expirationTimes,a=n.pendingLanes;0<a;){var s=31-c2(a),o=1<<s,l=r[s];l===-1?(!(o&t)||o&i)&&(r[s]=uP(o,e)):l<=e&&(n.expiredLanes|=o),a&=~o}}function D8(n){return n=n.pendingLanes&-1073741825,n!==0?n:n&1073741824?1073741824:0}function E_(){var n=V0;return V0<<=1,!(V0&4194240)&&(V0=64),n}function td(n){for(var e=[],t=0;31>t;t++)e.push(n);return e}function D4(n,e,t){n.pendingLanes|=e,e!==536870912&&(n.suspendedLanes=0,n.pingedLanes=0),n=n.eventTimes,e=31-c2(e),n[e]=t}function hP(n,e){var t=n.pendingLanes&~e;n.pendingLanes=e,n.suspendedLanes=0,n.pingedLanes=0,n.expiredLanes&=e,n.mutableReadLanes&=e,n.entangledLanes&=e,e=n.entanglements;var i=n.eventTimes;for(n=n.expirationTimes;0<t;){var r=31-c2(t),a=1<<r;e[r]=0,i[r]=-1,n[r]=-1,t&=~a}}function k7(n,e){var t=n.entangledLanes|=e;for(n=n.entanglements;t;){var i=31-c2(t),r=1<<i;r&e|n[i]&e&&(n[i]|=e),t&=~r}}var f1=0;function P_(n){return n&=-n,1<n?4<n?n&268435455?16:536870912:4:1}var T_,I7,L_,C_,A_,O8=!1,W0=[],Qr=null,ea=null,ta=null,Wl=new Map,Xl=new Map,qr=[],fP="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function sm(n,e){switch(n){case"focusin":case"focusout":Qr=null;break;case"dragenter":case"dragleave":ea=null;break;case"mouseover":case"mouseout":ta=null;break;case"pointerover":case"pointerout":Wl.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Xl.delete(e.pointerId)}}function X3(n,e,t,i,r,a){return n===null||n.nativeEvent!==a?(n={blockedOn:e,domEventName:t,eventSystemFlags:i,nativeEvent:a,targetContainers:[r]},e!==null&&(e=B4(e),e!==null&&I7(e)),n):(n.eventSystemFlags|=i,e=n.targetContainers,r!==null&&e.indexOf(r)===-1&&e.push(r),n)}function pP(n,e,t,i,r){switch(e){case"focusin":return Qr=X3(Qr,n,e,t,i,r),!0;case"dragenter":return ea=X3(ea,n,e,t,i,r),!0;case"mouseover":return ta=X3(ta,n,e,t,i,r),!0;case"pointerover":var a=r.pointerId;return Wl.set(a,X3(Wl.get(a)||null,n,e,t,i,r)),!0;case"gotpointercapture":return a=r.pointerId,Xl.set(a,X3(Xl.get(a)||null,n,e,t,i,r)),!0}return!1}function R_(n){var e=ns(n.target);if(e!==null){var t=ks(e);if(t!==null){if(e=t.tag,e===13){if(e=__(t),e!==null){n.blockedOn=e,A_(n.priority,function(){L_(t)});return}}else if(e===3&&t.stateNode.current.memoizedState.isDehydrated){n.blockedOn=t.tag===3?t.stateNode.containerInfo:null;return}}}n.blockedOn=null}function e5(n){if(n.blockedOn!==null)return!1;for(var e=n.targetContainers;0<e.length;){var t=B8(n.domEventName,n.eventSystemFlags,e[0],n.nativeEvent);if(t===null){t=n.nativeEvent;var i=new t.constructor(t.type,t);R8=i,t.target.dispatchEvent(i),R8=null}else return e=B4(t),e!==null&&I7(e),n.blockedOn=t,!1;e.shift()}return!0}function om(n,e,t){e5(n)&&t.delete(e)}function mP(){O8=!1,Qr!==null&&e5(Qr)&&(Qr=null),ea!==null&&e5(ea)&&(ea=null),ta!==null&&e5(ta)&&(ta=null),Wl.forEach(om),Xl.forEach(om)}function Y3(n,e){n.blockedOn===e&&(n.blockedOn=null,O8||(O8=!0,Ei.unstable_scheduleCallback(Ei.unstable_NormalPriority,mP)))}function Yl(n){function e(r){return Y3(r,n)}if(0<W0.length){Y3(W0[0],n);for(var t=1;t<W0.length;t++){var i=W0[t];i.blockedOn===n&&(i.blockedOn=null)}}for(Qr!==null&&Y3(Qr,n),ea!==null&&Y3(ea,n),ta!==null&&Y3(ta,n),Wl.forEach(e),Xl.forEach(e),t=0;t<qr.length;t++)i=qr[t],i.blockedOn===n&&(i.blockedOn=null);for(;0<qr.length&&(t=qr[0],t.blockedOn===null);)R_(t),t.blockedOn===null&&qr.shift()}var Jo=Sr.ReactCurrentBatchConfig,S5=!0;function gP(n,e,t,i){var r=f1,a=Jo.transition;Jo.transition=null;try{f1=1,N7(n,e,t,i)}finally{f1=r,Jo.transition=a}}function vP(n,e,t,i){var r=f1,a=Jo.transition;Jo.transition=null;try{f1=4,N7(n,e,t,i)}finally{f1=r,Jo.transition=a}}function N7(n,e,t,i){if(S5){var r=B8(n,e,t,i);if(r===null)dd(n,e,i,M5,t),sm(n,i);else if(pP(r,n,e,t,i))i.stopPropagation();else if(sm(n,i),e&4&&-1<fP.indexOf(n)){for(;r!==null;){var a=B4(r);if(a!==null&&T_(a),a=B8(n,e,t,i),a===null&&dd(n,e,i,M5,t),a===r)break;r=a}r!==null&&i.stopPropagation()}else dd(n,e,i,null,t)}}var M5=null;function B8(n,e,t,i){if(M5=null,n=A7(i),n=ns(n),n!==null)if(e=ks(n),e===null)n=null;else if(t=e.tag,t===13){if(n=__(e),n!==null)return n;n=null}else if(t===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;n=null}else e!==n&&(n=null);return M5=n,null}function k_(n){switch(n){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(rP()){case R7:return 1;case S_:return 4;case w5:case aP:return 16;case M_:return 536870912;default:return 16}default:return 16}}var Zr=null,D7=null,t5=null;function I_(){if(t5)return t5;var n,e=D7,t=e.length,i,r="value"in Zr?Zr.value:Zr.textContent,a=r.length;for(n=0;n<t&&e[n]===r[n];n++);var s=t-n;for(i=1;i<=s&&e[t-i]===r[a-i];i++);return t5=r.slice(n,1<i?1-i:void 0)}function n5(n){var e=n.keyCode;return"charCode"in n?(n=n.charCode,n===0&&e===13&&(n=13)):n=e,n===10&&(n=13),32<=n||n===13?n:0}function X0(){return!0}function lm(){return!1}function Ti(n){function e(t,i,r,a,s){this._reactName=t,this._targetInst=r,this.type=i,this.nativeEvent=a,this.target=s,this.currentTarget=null;for(var o in n)n.hasOwnProperty(o)&&(t=n[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(a.defaultPrevented!=null?a.defaultPrevented:a.returnValue===!1)?X0:lm,this.isPropagationStopped=lm,this}return U1(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():typeof t.returnValue!="unknown"&&(t.returnValue=!1),this.isDefaultPrevented=X0)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():typeof t.cancelBubble!="unknown"&&(t.cancelBubble=!0),this.isPropagationStopped=X0)},persist:function(){},isPersistent:X0}),e}var v3={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(n){return n.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},O7=Ti(v3),O4=U1({},v3,{view:0,detail:0}),yP=Ti(O4),nd,id,q3,ru=U1({},O4,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:B7,button:0,buttons:0,relatedTarget:function(n){return n.relatedTarget===void 0?n.fromElement===n.srcElement?n.toElement:n.fromElement:n.relatedTarget},movementX:function(n){return"movementX"in n?n.movementX:(n!==q3&&(q3&&n.type==="mousemove"?(nd=n.screenX-q3.screenX,id=n.screenY-q3.screenY):id=nd=0,q3=n),nd)},movementY:function(n){return"movementY"in n?n.movementY:id}}),cm=Ti(ru),_P=U1({},ru,{dataTransfer:0}),xP=Ti(_P),wP=U1({},O4,{relatedTarget:0}),rd=Ti(wP),bP=U1({},v3,{animationName:0,elapsedTime:0,pseudoElement:0}),SP=Ti(bP),MP=U1({},v3,{clipboardData:function(n){return"clipboardData"in n?n.clipboardData:window.clipboardData}}),EP=Ti(MP),PP=U1({},v3,{data:0}),um=Ti(PP),TP={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},LP={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},CP={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function AP(n){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(n):(n=CP[n])?!!e[n]:!1}function B7(){return AP}var RP=U1({},O4,{key:function(n){if(n.key){var e=TP[n.key]||n.key;if(e!=="Unidentified")return e}return n.type==="keypress"?(n=n5(n),n===13?"Enter":String.fromCharCode(n)):n.type==="keydown"||n.type==="keyup"?LP[n.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:B7,charCode:function(n){return n.type==="keypress"?n5(n):0},keyCode:function(n){return n.type==="keydown"||n.type==="keyup"?n.keyCode:0},which:function(n){return n.type==="keypress"?n5(n):n.type==="keydown"||n.type==="keyup"?n.keyCode:0}}),kP=Ti(RP),IP=U1({},ru,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),dm=Ti(IP),NP=U1({},O4,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:B7}),DP=Ti(NP),OP=U1({},v3,{propertyName:0,elapsedTime:0,pseudoElement:0}),BP=Ti(OP),UP=U1({},ru,{deltaX:function(n){return"deltaX"in n?n.deltaX:"wheelDeltaX"in n?-n.wheelDeltaX:0},deltaY:function(n){return"deltaY"in n?n.deltaY:"wheelDeltaY"in n?-n.wheelDeltaY:"wheelDelta"in n?-n.wheelDelta:0},deltaZ:0,deltaMode:0}),FP=Ti(UP),zP=[9,13,27,32],U7=gr&&"CompositionEvent"in window,Ll=null;gr&&"documentMode"in document&&(Ll=document.documentMode);var jP=gr&&"TextEvent"in window&&!Ll,N_=gr&&(!U7||Ll&&8<Ll&&11>=Ll),hm=" ",fm=!1;function D_(n,e){switch(n){case"keyup":return zP.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function O_(n){return n=n.detail,typeof n=="object"&&"data"in n?n.data:null}var Ao=!1;function HP(n,e){switch(n){case"compositionend":return O_(e);case"keypress":return e.which!==32?null:(fm=!0,hm);case"textInput":return n=e.data,n===hm&&fm?null:n;default:return null}}function VP(n,e){if(Ao)return n==="compositionend"||!U7&&D_(n,e)?(n=I_(),t5=D7=Zr=null,Ao=!1,n):null;switch(n){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return N_&&e.locale!=="ko"?null:e.data;default:return null}}var GP={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pm(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e==="input"?!!GP[n.type]:e==="textarea"}function B_(n,e,t,i){p_(i),e=E5(e,"onChange"),0<e.length&&(t=new O7("onChange","change",null,t,i),n.push({event:t,listeners:e}))}var Cl=null,ql=null;function WP(n){q_(n,0)}function au(n){var e=Io(n);if(o_(e))return n}function XP(n,e){if(n==="change")return e}var U_=!1;if(gr){var ad;if(gr){var sd="oninput"in document;if(!sd){var mm=document.createElement("div");mm.setAttribute("oninput","return;"),sd=typeof mm.oninput=="function"}ad=sd}else ad=!1;U_=ad&&(!document.documentMode||9<document.documentMode)}function gm(){Cl&&(Cl.detachEvent("onpropertychange",F_),ql=Cl=null)}function F_(n){if(n.propertyName==="value"&&au(ql)){var e=[];B_(e,ql,n,A7(n)),y_(WP,e)}}function YP(n,e,t){n==="focusin"?(gm(),Cl=e,ql=t,Cl.attachEvent("onpropertychange",F_)):n==="focusout"&&gm()}function qP(n){if(n==="selectionchange"||n==="keyup"||n==="keydown")return au(ql)}function $P(n,e){if(n==="click")return au(e)}function KP(n,e){if(n==="input"||n==="change")return au(e)}function ZP(n,e){return n===e&&(n!==0||1/n===1/e)||n!==n&&e!==e}var d2=typeof Object.is=="function"?Object.is:ZP;function $l(n,e){if(d2(n,e))return!0;if(typeof n!="object"||n===null||typeof e!="object"||e===null)return!1;var t=Object.keys(n),i=Object.keys(e);if(t.length!==i.length)return!1;for(i=0;i<t.length;i++){var r=t[i];if(!_8.call(e,r)||!d2(n[r],e[r]))return!1}return!0}function vm(n){for(;n&&n.firstChild;)n=n.firstChild;return n}function ym(n,e){var t=vm(n);n=0;for(var i;t;){if(t.nodeType===3){if(i=n+t.textContent.length,n<=e&&i>=e)return{node:t,offset:e-n};n=i}e:{for(;t;){if(t.nextSibling){t=t.nextSibling;break e}t=t.parentNode}t=void 0}t=vm(t)}}function z_(n,e){return n&&e?n===e?!0:n&&n.nodeType===3?!1:e&&e.nodeType===3?z_(n,e.parentNode):"contains"in n?n.contains(e):n.compareDocumentPosition?!!(n.compareDocumentPosition(e)&16):!1:!1}function j_(){for(var n=window,e=y5();e instanceof n.HTMLIFrameElement;){try{var t=typeof e.contentWindow.location.href=="string"}catch{t=!1}if(t)n=e.contentWindow;else break;e=y5(n.document)}return e}function F7(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e&&(e==="input"&&(n.type==="text"||n.type==="search"||n.type==="tel"||n.type==="url"||n.type==="password")||e==="textarea"||n.contentEditable==="true")}function JP(n){var e=j_(),t=n.focusedElem,i=n.selectionRange;if(e!==t&&t&&t.ownerDocument&&z_(t.ownerDocument.documentElement,t)){if(i!==null&&F7(t)){if(e=i.start,n=i.end,n===void 0&&(n=e),"selectionStart"in t)t.selectionStart=e,t.selectionEnd=Math.min(n,t.value.length);else if(n=(e=t.ownerDocument||document)&&e.defaultView||window,n.getSelection){n=n.getSelection();var r=t.textContent.length,a=Math.min(i.start,r);i=i.end===void 0?a:Math.min(i.end,r),!n.extend&&a>i&&(r=i,i=a,a=r),r=ym(t,a);var s=ym(t,i);r&&s&&(n.rangeCount!==1||n.anchorNode!==r.node||n.anchorOffset!==r.offset||n.focusNode!==s.node||n.focusOffset!==s.offset)&&(e=e.createRange(),e.setStart(r.node,r.offset),n.removeAllRanges(),a>i?(n.addRange(e),n.extend(s.node,s.offset)):(e.setEnd(s.node,s.offset),n.addRange(e)))}}for(e=[],n=t;n=n.parentNode;)n.nodeType===1&&e.push({element:n,left:n.scrollLeft,top:n.scrollTop});for(typeof t.focus=="function"&&t.focus(),t=0;t<e.length;t++)n=e[t],n.element.scrollLeft=n.left,n.element.scrollTop=n.top}}var QP=gr&&"documentMode"in document&&11>=document.documentMode,Ro=null,U8=null,Al=null,F8=!1;function _m(n,e,t){var i=t.window===t?t.document:t.nodeType===9?t:t.ownerDocument;F8||Ro==null||Ro!==y5(i)||(i=Ro,"selectionStart"in i&&F7(i)?i={start:i.selectionStart,end:i.selectionEnd}:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection(),i={anchorNode:i.anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset}),Al&&$l(Al,i)||(Al=i,i=E5(U8,"onSelect"),0<i.length&&(e=new O7("onSelect","select",null,e,t),n.push({event:e,listeners:i}),e.target=Ro)))}function Y0(n,e){var t={};return t[n.toLowerCase()]=e.toLowerCase(),t["Webkit"+n]="webkit"+e,t["Moz"+n]="moz"+e,t}var ko={animationend:Y0("Animation","AnimationEnd"),animationiteration:Y0("Animation","AnimationIteration"),animationstart:Y0("Animation","AnimationStart"),transitionend:Y0("Transition","TransitionEnd")},od={},H_={};gr&&(H_=document.createElement("div").style,"AnimationEvent"in window||(delete ko.animationend.animation,delete ko.animationiteration.animation,delete ko.animationstart.animation),"TransitionEvent"in window||delete ko.transitionend.transition);function su(n){if(od[n])return od[n];if(!ko[n])return n;var e=ko[n],t;for(t in e)if(e.hasOwnProperty(t)&&t in H_)return od[n]=e[t];return n}var V_=su("animationend"),G_=su("animationiteration"),W_=su("animationstart"),X_=su("transitionend"),Y_=new Map,xm="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ma(n,e){Y_.set(n,e),Rs(e,[n])}for(var ld=0;ld<xm.length;ld++){var cd=xm[ld],eT=cd.toLowerCase(),tT=cd[0].toUpperCase()+cd.slice(1);ma(eT,"on"+tT)}ma(V_,"onAnimationEnd");ma(G_,"onAnimationIteration");ma(W_,"onAnimationStart");ma("dblclick","onDoubleClick");ma("focusin","onFocus");ma("focusout","onBlur");ma(X_,"onTransitionEnd");n3("onMouseEnter",["mouseout","mouseover"]);n3("onMouseLeave",["mouseout","mouseover"]);n3("onPointerEnter",["pointerout","pointerover"]);n3("onPointerLeave",["pointerout","pointerover"]);Rs("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Rs("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Rs("onBeforeInput",["compositionend","keypress","textInput","paste"]);Rs("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Rs("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Rs("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var bl="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),nT=new Set("cancel close invalid load scroll toggle".split(" ").concat(bl));function wm(n,e,t){var i=n.type||"unknown-event";n.currentTarget=t,eP(i,e,void 0,n),n.currentTarget=null}function q_(n,e){e=(e&4)!==0;for(var t=0;t<n.length;t++){var i=n[t],r=i.event;i=i.listeners;e:{var a=void 0;if(e)for(var s=i.length-1;0<=s;s--){var o=i[s],l=o.instance,d=o.currentTarget;if(o=o.listener,l!==a&&r.isPropagationStopped())break e;wm(r,o,d),a=l}else for(s=0;s<i.length;s++){if(o=i[s],l=o.instance,d=o.currentTarget,o=o.listener,l!==a&&r.isPropagationStopped())break e;wm(r,o,d),a=l}}}if(x5)throw n=N8,x5=!1,N8=null,n}function P1(n,e){var t=e[G8];t===void 0&&(t=e[G8]=new Set);var i=n+"__bubble";t.has(i)||($_(e,n,2,!1),t.add(i))}function ud(n,e,t){var i=0;e&&(i|=4),$_(t,n,i,e)}var q0="_reactListening"+Math.random().toString(36).slice(2);function Kl(n){if(!n[q0]){n[q0]=!0,n_.forEach(function(t){t!=="selectionchange"&&(nT.has(t)||ud(t,!1,n),ud(t,!0,n))});var e=n.nodeType===9?n:n.ownerDocument;e===null||e[q0]||(e[q0]=!0,ud("selectionchange",!1,e))}}function $_(n,e,t,i){switch(k_(e)){case 1:var r=gP;break;case 4:r=vP;break;default:r=N7}t=r.bind(null,e,t,n),r=void 0,!I8||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(r=!0),i?r!==void 0?n.addEventListener(e,t,{capture:!0,passive:r}):n.addEventListener(e,t,!0):r!==void 0?n.addEventListener(e,t,{passive:r}):n.addEventListener(e,t,!1)}function dd(n,e,t,i,r){var a=i;if(!(e&1)&&!(e&2)&&i!==null)e:for(;;){if(i===null)return;var s=i.tag;if(s===3||s===4){var o=i.stateNode.containerInfo;if(o===r||o.nodeType===8&&o.parentNode===r)break;if(s===4)for(s=i.return;s!==null;){var l=s.tag;if((l===3||l===4)&&(l=s.stateNode.containerInfo,l===r||l.nodeType===8&&l.parentNode===r))return;s=s.return}for(;o!==null;){if(s=ns(o),s===null)return;if(l=s.tag,l===5||l===6){i=a=s;continue e}o=o.parentNode}}i=i.return}y_(function(){var d=a,h=A7(t),f=[];e:{var p=Y_.get(n);if(p!==void 0){var m=O7,y=n;switch(n){case"keypress":if(n5(t)===0)break e;case"keydown":case"keyup":m=kP;break;case"focusin":y="focus",m=rd;break;case"focusout":y="blur",m=rd;break;case"beforeblur":case"afterblur":m=rd;break;case"click":if(t.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":m=cm;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":m=xP;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":m=DP;break;case V_:case G_:case W_:m=SP;break;case X_:m=BP;break;case"scroll":m=yP;break;case"wheel":m=FP;break;case"copy":case"cut":case"paste":m=EP;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":m=dm}var b=(e&4)!==0,_=!b&&n==="scroll",g=b?p!==null?p+"Capture":null:p;b=[];for(var x=d,S;x!==null;){S=x;var E=S.stateNode;if(S.tag===5&&E!==null&&(S=E,g!==null&&(E=Gl(x,g),E!=null&&b.push(Zl(x,E,S)))),_)break;x=x.return}0<b.length&&(p=new m(p,y,null,t,h),f.push({event:p,listeners:b}))}}if(!(e&7)){e:{if(p=n==="mouseover"||n==="pointerover",m=n==="mouseout"||n==="pointerout",p&&t!==R8&&(y=t.relatedTarget||t.fromElement)&&(ns(y)||y[vr]))break e;if((m||p)&&(p=h.window===h?h:(p=h.ownerDocument)?p.defaultView||p.parentWindow:window,m?(y=t.relatedTarget||t.toElement,m=d,y=y?ns(y):null,y!==null&&(_=ks(y),y!==_||y.tag!==5&&y.tag!==6)&&(y=null)):(m=null,y=d),m!==y)){if(b=cm,E="onMouseLeave",g="onMouseEnter",x="mouse",(n==="pointerout"||n==="pointerover")&&(b=dm,E="onPointerLeave",g="onPointerEnter",x="pointer"),_=m==null?p:Io(m),S=y==null?p:Io(y),p=new b(E,x+"leave",m,t,h),p.target=_,p.relatedTarget=S,E=null,ns(h)===d&&(b=new b(g,x+"enter",y,t,h),b.target=S,b.relatedTarget=_,E=b),_=E,m&&y)t:{for(b=m,g=y,x=0,S=b;S;S=Zs(S))x++;for(S=0,E=g;E;E=Zs(E))S++;for(;0<x-S;)b=Zs(b),x--;for(;0<S-x;)g=Zs(g),S--;for(;x--;){if(b===g||g!==null&&b===g.alternate)break t;b=Zs(b),g=Zs(g)}b=null}else b=null;m!==null&&bm(f,p,m,b,!1),y!==null&&_!==null&&bm(f,_,y,b,!0)}}e:{if(p=d?Io(d):window,m=p.nodeName&&p.nodeName.toLowerCase(),m==="select"||m==="input"&&p.type==="file")var A=XP;else if(pm(p))if(U_)A=KP;else{A=qP;var P=YP}else(m=p.nodeName)&&m.toLowerCase()==="input"&&(p.type==="checkbox"||p.type==="radio")&&(A=$P);if(A&&(A=A(n,d))){B_(f,A,t,h);break e}P&&P(n,p,d),n==="focusout"&&(P=p._wrapperState)&&P.controlled&&p.type==="number"&&P8(p,"number",p.value)}switch(P=d?Io(d):window,n){case"focusin":(pm(P)||P.contentEditable==="true")&&(Ro=P,U8=d,Al=null);break;case"focusout":Al=U8=Ro=null;break;case"mousedown":F8=!0;break;case"contextmenu":case"mouseup":case"dragend":F8=!1,_m(f,t,h);break;case"selectionchange":if(QP)break;case"keydown":case"keyup":_m(f,t,h)}var C;if(U7)e:{switch(n){case"compositionstart":var N="onCompositionStart";break e;case"compositionend":N="onCompositionEnd";break e;case"compositionupdate":N="onCompositionUpdate";break e}N=void 0}else Ao?D_(n,t)&&(N="onCompositionEnd"):n==="keydown"&&t.keyCode===229&&(N="onCompositionStart");N&&(N_&&t.locale!=="ko"&&(Ao||N!=="onCompositionStart"?N==="onCompositionEnd"&&Ao&&(C=I_()):(Zr=h,D7="value"in Zr?Zr.value:Zr.textContent,Ao=!0)),P=E5(d,N),0<P.length&&(N=new um(N,n,null,t,h),f.push({event:N,listeners:P}),C?N.data=C:(C=O_(t),C!==null&&(N.data=C)))),(C=jP?HP(n,t):VP(n,t))&&(d=E5(d,"onBeforeInput"),0<d.length&&(h=new um("onBeforeInput","beforeinput",null,t,h),f.push({event:h,listeners:d}),h.data=C))}q_(f,e)})}function Zl(n,e,t){return{instance:n,listener:e,currentTarget:t}}function E5(n,e){for(var t=e+"Capture",i=[];n!==null;){var r=n,a=r.stateNode;r.tag===5&&a!==null&&(r=a,a=Gl(n,t),a!=null&&i.unshift(Zl(n,a,r)),a=Gl(n,e),a!=null&&i.push(Zl(n,a,r))),n=n.return}return i}function Zs(n){if(n===null)return null;do n=n.return;while(n&&n.tag!==5);return n||null}function bm(n,e,t,i,r){for(var a=e._reactName,s=[];t!==null&&t!==i;){var o=t,l=o.alternate,d=o.stateNode;if(l!==null&&l===i)break;o.tag===5&&d!==null&&(o=d,r?(l=Gl(t,a),l!=null&&s.unshift(Zl(t,l,o))):r||(l=Gl(t,a),l!=null&&s.push(Zl(t,l,o)))),t=t.return}s.length!==0&&n.push({event:e,listeners:s})}var iT=/\r\n?/g,rT=/\u0000|\uFFFD/g;function Sm(n){return(typeof n=="string"?n:""+n).replace(iT,`
`).replace(rT,"")}function $0(n,e,t){if(e=Sm(e),Sm(n)!==e&&t)throw Error(Ge(425))}function P5(){}var z8=null,j8=null;function H8(n,e){return n==="textarea"||n==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var V8=typeof setTimeout=="function"?setTimeout:void 0,aT=typeof clearTimeout=="function"?clearTimeout:void 0,Mm=typeof Promise=="function"?Promise:void 0,sT=typeof queueMicrotask=="function"?queueMicrotask:typeof Mm<"u"?function(n){return Mm.resolve(null).then(n).catch(oT)}:V8;function oT(n){setTimeout(function(){throw n})}function hd(n,e){var t=e,i=0;do{var r=t.nextSibling;if(n.removeChild(t),r&&r.nodeType===8)if(t=r.data,t==="/$"){if(i===0){n.removeChild(r),Yl(e);return}i--}else t!=="$"&&t!=="$?"&&t!=="$!"||i++;t=r}while(t);Yl(e)}function na(n){for(;n!=null;n=n.nextSibling){var e=n.nodeType;if(e===1||e===3)break;if(e===8){if(e=n.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return n}function Em(n){n=n.previousSibling;for(var e=0;n;){if(n.nodeType===8){var t=n.data;if(t==="$"||t==="$!"||t==="$?"){if(e===0)return n;e--}else t==="/$"&&e++}n=n.previousSibling}return null}var y3=Math.random().toString(36).slice(2),T2="__reactFiber$"+y3,Jl="__reactProps$"+y3,vr="__reactContainer$"+y3,G8="__reactEvents$"+y3,lT="__reactListeners$"+y3,cT="__reactHandles$"+y3;function ns(n){var e=n[T2];if(e)return e;for(var t=n.parentNode;t;){if(e=t[vr]||t[T2]){if(t=e.alternate,e.child!==null||t!==null&&t.child!==null)for(n=Em(n);n!==null;){if(t=n[T2])return t;n=Em(n)}return e}n=t,t=n.parentNode}return null}function B4(n){return n=n[T2]||n[vr],!n||n.tag!==5&&n.tag!==6&&n.tag!==13&&n.tag!==3?null:n}function Io(n){if(n.tag===5||n.tag===6)return n.stateNode;throw Error(Ge(33))}function ou(n){return n[Jl]||null}var W8=[],No=-1;function ga(n){return{current:n}}function T1(n){0>No||(n.current=W8[No],W8[No]=null,No--)}function E1(n,e){No++,W8[No]=n.current,n.current=e}var ha={},Fn=ga(ha),ci=ga(!1),xs=ha;function i3(n,e){var t=n.type.contextTypes;if(!t)return ha;var i=n.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===e)return i.__reactInternalMemoizedMaskedChildContext;var r={},a;for(a in t)r[a]=e[a];return i&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=e,n.__reactInternalMemoizedMaskedChildContext=r),r}function ui(n){return n=n.childContextTypes,n!=null}function T5(){T1(ci),T1(Fn)}function Pm(n,e,t){if(Fn.current!==ha)throw Error(Ge(168));E1(Fn,e),E1(ci,t)}function K_(n,e,t){var i=n.stateNode;if(e=e.childContextTypes,typeof i.getChildContext!="function")return t;i=i.getChildContext();for(var r in i)if(!(r in e))throw Error(Ge(108,YE(n)||"Unknown",r));return U1({},t,i)}function L5(n){return n=(n=n.stateNode)&&n.__reactInternalMemoizedMergedChildContext||ha,xs=Fn.current,E1(Fn,n),E1(ci,ci.current),!0}function Tm(n,e,t){var i=n.stateNode;if(!i)throw Error(Ge(169));t?(n=K_(n,e,xs),i.__reactInternalMemoizedMergedChildContext=n,T1(ci),T1(Fn),E1(Fn,n)):T1(ci),E1(ci,t)}var ir=null,lu=!1,fd=!1;function Z_(n){ir===null?ir=[n]:ir.push(n)}function uT(n){lu=!0,Z_(n)}function va(){if(!fd&&ir!==null){fd=!0;var n=0,e=f1;try{var t=ir;for(f1=1;n<t.length;n++){var i=t[n];do i=i(!0);while(i!==null)}ir=null,lu=!1}catch(r){throw ir!==null&&(ir=ir.slice(n+1)),b_(R7,va),r}finally{f1=e,fd=!1}}return null}var Do=[],Oo=0,C5=null,A5=0,zi=[],ji=0,ws=null,lr=1,cr="";function qa(n,e){Do[Oo++]=A5,Do[Oo++]=C5,C5=n,A5=e}function J_(n,e,t){zi[ji++]=lr,zi[ji++]=cr,zi[ji++]=ws,ws=n;var i=lr;n=cr;var r=32-c2(i)-1;i&=~(1<<r),t+=1;var a=32-c2(e)+r;if(30<a){var s=r-r%5;a=(i&(1<<s)-1).toString(32),i>>=s,r-=s,lr=1<<32-c2(e)+r|t<<r|i,cr=a+n}else lr=1<<a|t<<r|i,cr=n}function z7(n){n.return!==null&&(qa(n,1),J_(n,1,0))}function j7(n){for(;n===C5;)C5=Do[--Oo],Do[Oo]=null,A5=Do[--Oo],Do[Oo]=null;for(;n===ws;)ws=zi[--ji],zi[ji]=null,cr=zi[--ji],zi[ji]=null,lr=zi[--ji],zi[ji]=null}var Si=null,bi=null,R1=!1,o2=null;function Q_(n,e){var t=Gi(5,null,null,0);t.elementType="DELETED",t.stateNode=e,t.return=n,e=n.deletions,e===null?(n.deletions=[t],n.flags|=16):e.push(t)}function Lm(n,e){switch(n.tag){case 5:var t=n.type;return e=e.nodeType!==1||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(n.stateNode=e,Si=n,bi=na(e.firstChild),!0):!1;case 6:return e=n.pendingProps===""||e.nodeType!==3?null:e,e!==null?(n.stateNode=e,Si=n,bi=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(t=ws!==null?{id:lr,overflow:cr}:null,n.memoizedState={dehydrated:e,treeContext:t,retryLane:1073741824},t=Gi(18,null,null,0),t.stateNode=e,t.return=n,n.child=t,Si=n,bi=null,!0):!1;default:return!1}}function X8(n){return(n.mode&1)!==0&&(n.flags&128)===0}function Y8(n){if(R1){var e=bi;if(e){var t=e;if(!Lm(n,e)){if(X8(n))throw Error(Ge(418));e=na(t.nextSibling);var i=Si;e&&Lm(n,e)?Q_(i,t):(n.flags=n.flags&-4097|2,R1=!1,Si=n)}}else{if(X8(n))throw Error(Ge(418));n.flags=n.flags&-4097|2,R1=!1,Si=n}}}function Cm(n){for(n=n.return;n!==null&&n.tag!==5&&n.tag!==3&&n.tag!==13;)n=n.return;Si=n}function K0(n){if(n!==Si)return!1;if(!R1)return Cm(n),R1=!0,!1;var e;if((e=n.tag!==3)&&!(e=n.tag!==5)&&(e=n.type,e=e!=="head"&&e!=="body"&&!H8(n.type,n.memoizedProps)),e&&(e=bi)){if(X8(n))throw ex(),Error(Ge(418));for(;e;)Q_(n,e),e=na(e.nextSibling)}if(Cm(n),n.tag===13){if(n=n.memoizedState,n=n!==null?n.dehydrated:null,!n)throw Error(Ge(317));e:{for(n=n.nextSibling,e=0;n;){if(n.nodeType===8){var t=n.data;if(t==="/$"){if(e===0){bi=na(n.nextSibling);break e}e--}else t!=="$"&&t!=="$!"&&t!=="$?"||e++}n=n.nextSibling}bi=null}}else bi=Si?na(n.stateNode.nextSibling):null;return!0}function ex(){for(var n=bi;n;)n=na(n.nextSibling)}function r3(){bi=Si=null,R1=!1}function H7(n){o2===null?o2=[n]:o2.push(n)}var dT=Sr.ReactCurrentBatchConfig;function i2(n,e){if(n&&n.defaultProps){e=U1({},e),n=n.defaultProps;for(var t in n)e[t]===void 0&&(e[t]=n[t]);return e}return e}var R5=ga(null),k5=null,Bo=null,V7=null;function G7(){V7=Bo=k5=null}function W7(n){var e=R5.current;T1(R5),n._currentValue=e}function q8(n,e,t){for(;n!==null;){var i=n.alternate;if((n.childLanes&e)!==e?(n.childLanes|=e,i!==null&&(i.childLanes|=e)):i!==null&&(i.childLanes&e)!==e&&(i.childLanes|=e),n===t)break;n=n.return}}function Qo(n,e){k5=n,V7=Bo=null,n=n.dependencies,n!==null&&n.firstContext!==null&&(n.lanes&e&&(li=!0),n.firstContext=null)}function Yi(n){var e=n._currentValue;if(V7!==n)if(n={context:n,memoizedValue:e,next:null},Bo===null){if(k5===null)throw Error(Ge(308));Bo=n,k5.dependencies={lanes:0,firstContext:n}}else Bo=Bo.next=n;return e}var is=null;function X7(n){is===null?is=[n]:is.push(n)}function tx(n,e,t,i){var r=e.interleaved;return r===null?(t.next=t,X7(e)):(t.next=r.next,r.next=t),e.interleaved=t,yr(n,i)}function yr(n,e){n.lanes|=e;var t=n.alternate;for(t!==null&&(t.lanes|=e),t=n,n=n.return;n!==null;)n.childLanes|=e,t=n.alternate,t!==null&&(t.childLanes|=e),t=n,n=n.return;return t.tag===3?t.stateNode:null}var Xr=!1;function Y7(n){n.updateQueue={baseState:n.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function nx(n,e){n=n.updateQueue,e.updateQueue===n&&(e.updateQueue={baseState:n.baseState,firstBaseUpdate:n.firstBaseUpdate,lastBaseUpdate:n.lastBaseUpdate,shared:n.shared,effects:n.effects})}function fr(n,e){return{eventTime:n,lane:e,tag:0,payload:null,callback:null,next:null}}function ia(n,e,t){var i=n.updateQueue;if(i===null)return null;if(i=i.shared,a1&2){var r=i.pending;return r===null?e.next=e:(e.next=r.next,r.next=e),i.pending=e,yr(n,t)}return r=i.interleaved,r===null?(e.next=e,X7(i)):(e.next=r.next,r.next=e),i.interleaved=e,yr(n,t)}function i5(n,e,t){if(e=e.updateQueue,e!==null&&(e=e.shared,(t&4194240)!==0)){var i=e.lanes;i&=n.pendingLanes,t|=i,e.lanes=t,k7(n,t)}}function Am(n,e){var t=n.updateQueue,i=n.alternate;if(i!==null&&(i=i.updateQueue,t===i)){var r=null,a=null;if(t=t.firstBaseUpdate,t!==null){do{var s={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};a===null?r=a=s:a=a.next=s,t=t.next}while(t!==null);a===null?r=a=e:a=a.next=e}else r=a=e;t={baseState:i.baseState,firstBaseUpdate:r,lastBaseUpdate:a,shared:i.shared,effects:i.effects},n.updateQueue=t;return}n=t.lastBaseUpdate,n===null?t.firstBaseUpdate=e:n.next=e,t.lastBaseUpdate=e}function I5(n,e,t,i){var r=n.updateQueue;Xr=!1;var a=r.firstBaseUpdate,s=r.lastBaseUpdate,o=r.shared.pending;if(o!==null){r.shared.pending=null;var l=o,d=l.next;l.next=null,s===null?a=d:s.next=d,s=l;var h=n.alternate;h!==null&&(h=h.updateQueue,o=h.lastBaseUpdate,o!==s&&(o===null?h.firstBaseUpdate=d:o.next=d,h.lastBaseUpdate=l))}if(a!==null){var f=r.baseState;s=0,h=d=l=null,o=a;do{var p=o.lane,m=o.eventTime;if((i&p)===p){h!==null&&(h=h.next={eventTime:m,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var y=n,b=o;switch(p=e,m=t,b.tag){case 1:if(y=b.payload,typeof y=="function"){f=y.call(m,f,p);break e}f=y;break e;case 3:y.flags=y.flags&-65537|128;case 0:if(y=b.payload,p=typeof y=="function"?y.call(m,f,p):y,p==null)break e;f=U1({},f,p);break e;case 2:Xr=!0}}o.callback!==null&&o.lane!==0&&(n.flags|=64,p=r.effects,p===null?r.effects=[o]:p.push(o))}else m={eventTime:m,lane:p,tag:o.tag,payload:o.payload,callback:o.callback,next:null},h===null?(d=h=m,l=f):h=h.next=m,s|=p;if(o=o.next,o===null){if(o=r.shared.pending,o===null)break;p=o,o=p.next,p.next=null,r.lastBaseUpdate=p,r.shared.pending=null}}while(!0);if(h===null&&(l=f),r.baseState=l,r.firstBaseUpdate=d,r.lastBaseUpdate=h,e=r.shared.interleaved,e!==null){r=e;do s|=r.lane,r=r.next;while(r!==e)}else a===null&&(r.shared.lanes=0);Ss|=s,n.lanes=s,n.memoizedState=f}}function Rm(n,e,t){if(n=e.effects,e.effects=null,n!==null)for(e=0;e<n.length;e++){var i=n[e],r=i.callback;if(r!==null){if(i.callback=null,i=t,typeof r!="function")throw Error(Ge(191,r));r.call(i)}}}var ix=new t_.Component().refs;function $8(n,e,t,i){e=n.memoizedState,t=t(i,e),t=t==null?e:U1({},e,t),n.memoizedState=t,n.lanes===0&&(n.updateQueue.baseState=t)}var cu={isMounted:function(n){return(n=n._reactInternals)?ks(n)===n:!1},enqueueSetState:function(n,e,t){n=n._reactInternals;var i=$n(),r=aa(n),a=fr(i,r);a.payload=e,t!=null&&(a.callback=t),e=ia(n,a,r),e!==null&&(u2(e,n,r,i),i5(e,n,r))},enqueueReplaceState:function(n,e,t){n=n._reactInternals;var i=$n(),r=aa(n),a=fr(i,r);a.tag=1,a.payload=e,t!=null&&(a.callback=t),e=ia(n,a,r),e!==null&&(u2(e,n,r,i),i5(e,n,r))},enqueueForceUpdate:function(n,e){n=n._reactInternals;var t=$n(),i=aa(n),r=fr(t,i);r.tag=2,e!=null&&(r.callback=e),e=ia(n,r,i),e!==null&&(u2(e,n,i,t),i5(e,n,i))}};function km(n,e,t,i,r,a,s){return n=n.stateNode,typeof n.shouldComponentUpdate=="function"?n.shouldComponentUpdate(i,a,s):e.prototype&&e.prototype.isPureReactComponent?!$l(t,i)||!$l(r,a):!0}function rx(n,e,t){var i=!1,r=ha,a=e.contextType;return typeof a=="object"&&a!==null?a=Yi(a):(r=ui(e)?xs:Fn.current,i=e.contextTypes,a=(i=i!=null)?i3(n,r):ha),e=new e(t,a),n.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=cu,n.stateNode=e,e._reactInternals=n,i&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=r,n.__reactInternalMemoizedMaskedChildContext=a),e}function Im(n,e,t,i){n=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(t,i),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(t,i),e.state!==n&&cu.enqueueReplaceState(e,e.state,null)}function K8(n,e,t,i){var r=n.stateNode;r.props=t,r.state=n.memoizedState,r.refs=ix,Y7(n);var a=e.contextType;typeof a=="object"&&a!==null?r.context=Yi(a):(a=ui(e)?xs:Fn.current,r.context=i3(n,a)),r.state=n.memoizedState,a=e.getDerivedStateFromProps,typeof a=="function"&&($8(n,e,a,t),r.state=n.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof r.getSnapshotBeforeUpdate=="function"||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(e=r.state,typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount(),e!==r.state&&cu.enqueueReplaceState(r,r.state,null),I5(n,t,r,i),r.state=n.memoizedState),typeof r.componentDidMount=="function"&&(n.flags|=4194308)}function $3(n,e,t){if(n=t.ref,n!==null&&typeof n!="function"&&typeof n!="object"){if(t._owner){if(t=t._owner,t){if(t.tag!==1)throw Error(Ge(309));var i=t.stateNode}if(!i)throw Error(Ge(147,n));var r=i,a=""+n;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===a?e.ref:(e=function(s){var o=r.refs;o===ix&&(o=r.refs={}),s===null?delete o[a]:o[a]=s},e._stringRef=a,e)}if(typeof n!="string")throw Error(Ge(284));if(!t._owner)throw Error(Ge(290,n))}return n}function Z0(n,e){throw n=Object.prototype.toString.call(e),Error(Ge(31,n==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":n))}function Nm(n){var e=n._init;return e(n._payload)}function ax(n){function e(g,x){if(n){var S=g.deletions;S===null?(g.deletions=[x],g.flags|=16):S.push(x)}}function t(g,x){if(!n)return null;for(;x!==null;)e(g,x),x=x.sibling;return null}function i(g,x){for(g=new Map;x!==null;)x.key!==null?g.set(x.key,x):g.set(x.index,x),x=x.sibling;return g}function r(g,x){return g=sa(g,x),g.index=0,g.sibling=null,g}function a(g,x,S){return g.index=S,n?(S=g.alternate,S!==null?(S=S.index,S<x?(g.flags|=2,x):S):(g.flags|=2,x)):(g.flags|=1048576,x)}function s(g){return n&&g.alternate===null&&(g.flags|=2),g}function o(g,x,S,E){return x===null||x.tag!==6?(x=xd(S,g.mode,E),x.return=g,x):(x=r(x,S),x.return=g,x)}function l(g,x,S,E){var A=S.type;return A===Co?h(g,x,S.props.children,E,S.key):x!==null&&(x.elementType===A||typeof A=="object"&&A!==null&&A.$$typeof===Wr&&Nm(A)===x.type)?(E=r(x,S.props),E.ref=$3(g,x,S),E.return=g,E):(E=c5(S.type,S.key,S.props,null,g.mode,E),E.ref=$3(g,x,S),E.return=g,E)}function d(g,x,S,E){return x===null||x.tag!==4||x.stateNode.containerInfo!==S.containerInfo||x.stateNode.implementation!==S.implementation?(x=wd(S,g.mode,E),x.return=g,x):(x=r(x,S.children||[]),x.return=g,x)}function h(g,x,S,E,A){return x===null||x.tag!==7?(x=fs(S,g.mode,E,A),x.return=g,x):(x=r(x,S),x.return=g,x)}function f(g,x,S){if(typeof x=="string"&&x!==""||typeof x=="number")return x=xd(""+x,g.mode,S),x.return=g,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case z0:return S=c5(x.type,x.key,x.props,null,g.mode,S),S.ref=$3(g,null,x),S.return=g,S;case Lo:return x=wd(x,g.mode,S),x.return=g,x;case Wr:var E=x._init;return f(g,E(x._payload),S)}if(xl(x)||G3(x))return x=fs(x,g.mode,S,null),x.return=g,x;Z0(g,x)}return null}function p(g,x,S,E){var A=x!==null?x.key:null;if(typeof S=="string"&&S!==""||typeof S=="number")return A!==null?null:o(g,x,""+S,E);if(typeof S=="object"&&S!==null){switch(S.$$typeof){case z0:return S.key===A?l(g,x,S,E):null;case Lo:return S.key===A?d(g,x,S,E):null;case Wr:return A=S._init,p(g,x,A(S._payload),E)}if(xl(S)||G3(S))return A!==null?null:h(g,x,S,E,null);Z0(g,S)}return null}function m(g,x,S,E,A){if(typeof E=="string"&&E!==""||typeof E=="number")return g=g.get(S)||null,o(x,g,""+E,A);if(typeof E=="object"&&E!==null){switch(E.$$typeof){case z0:return g=g.get(E.key===null?S:E.key)||null,l(x,g,E,A);case Lo:return g=g.get(E.key===null?S:E.key)||null,d(x,g,E,A);case Wr:var P=E._init;return m(g,x,S,P(E._payload),A)}if(xl(E)||G3(E))return g=g.get(S)||null,h(x,g,E,A,null);Z0(x,E)}return null}function y(g,x,S,E){for(var A=null,P=null,C=x,N=x=0,Y=null;C!==null&&N<S.length;N++){C.index>N?(Y=C,C=null):Y=C.sibling;var T=p(g,C,S[N],E);if(T===null){C===null&&(C=Y);break}n&&C&&T.alternate===null&&e(g,C),x=a(T,x,N),P===null?A=T:P.sibling=T,P=T,C=Y}if(N===S.length)return t(g,C),R1&&qa(g,N),A;if(C===null){for(;N<S.length;N++)C=f(g,S[N],E),C!==null&&(x=a(C,x,N),P===null?A=C:P.sibling=C,P=C);return R1&&qa(g,N),A}for(C=i(g,C);N<S.length;N++)Y=m(C,g,N,S[N],E),Y!==null&&(n&&Y.alternate!==null&&C.delete(Y.key===null?N:Y.key),x=a(Y,x,N),P===null?A=Y:P.sibling=Y,P=Y);return n&&C.forEach(function(R){return e(g,R)}),R1&&qa(g,N),A}function b(g,x,S,E){var A=G3(S);if(typeof A!="function")throw Error(Ge(150));if(S=A.call(S),S==null)throw Error(Ge(151));for(var P=A=null,C=x,N=x=0,Y=null,T=S.next();C!==null&&!T.done;N++,T=S.next()){C.index>N?(Y=C,C=null):Y=C.sibling;var R=p(g,C,T.value,E);if(R===null){C===null&&(C=Y);break}n&&C&&R.alternate===null&&e(g,C),x=a(R,x,N),P===null?A=R:P.sibling=R,P=R,C=Y}if(T.done)return t(g,C),R1&&qa(g,N),A;if(C===null){for(;!T.done;N++,T=S.next())T=f(g,T.value,E),T!==null&&(x=a(T,x,N),P===null?A=T:P.sibling=T,P=T);return R1&&qa(g,N),A}for(C=i(g,C);!T.done;N++,T=S.next())T=m(C,g,N,T.value,E),T!==null&&(n&&T.alternate!==null&&C.delete(T.key===null?N:T.key),x=a(T,x,N),P===null?A=T:P.sibling=T,P=T);return n&&C.forEach(function(ee){return e(g,ee)}),R1&&qa(g,N),A}function _(g,x,S,E){if(typeof S=="object"&&S!==null&&S.type===Co&&S.key===null&&(S=S.props.children),typeof S=="object"&&S!==null){switch(S.$$typeof){case z0:e:{for(var A=S.key,P=x;P!==null;){if(P.key===A){if(A=S.type,A===Co){if(P.tag===7){t(g,P.sibling),x=r(P,S.props.children),x.return=g,g=x;break e}}else if(P.elementType===A||typeof A=="object"&&A!==null&&A.$$typeof===Wr&&Nm(A)===P.type){t(g,P.sibling),x=r(P,S.props),x.ref=$3(g,P,S),x.return=g,g=x;break e}t(g,P);break}else e(g,P);P=P.sibling}S.type===Co?(x=fs(S.props.children,g.mode,E,S.key),x.return=g,g=x):(E=c5(S.type,S.key,S.props,null,g.mode,E),E.ref=$3(g,x,S),E.return=g,g=E)}return s(g);case Lo:e:{for(P=S.key;x!==null;){if(x.key===P)if(x.tag===4&&x.stateNode.containerInfo===S.containerInfo&&x.stateNode.implementation===S.implementation){t(g,x.sibling),x=r(x,S.children||[]),x.return=g,g=x;break e}else{t(g,x);break}else e(g,x);x=x.sibling}x=wd(S,g.mode,E),x.return=g,g=x}return s(g);case Wr:return P=S._init,_(g,x,P(S._payload),E)}if(xl(S))return y(g,x,S,E);if(G3(S))return b(g,x,S,E);Z0(g,S)}return typeof S=="string"&&S!==""||typeof S=="number"?(S=""+S,x!==null&&x.tag===6?(t(g,x.sibling),x=r(x,S),x.return=g,g=x):(t(g,x),x=xd(S,g.mode,E),x.return=g,g=x),s(g)):t(g,x)}return _}var a3=ax(!0),sx=ax(!1),U4={},k2=ga(U4),Ql=ga(U4),e4=ga(U4);function rs(n){if(n===U4)throw Error(Ge(174));return n}function q7(n,e){switch(E1(e4,e),E1(Ql,n),E1(k2,U4),n=e.nodeType,n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:L8(null,"");break;default:n=n===8?e.parentNode:e,e=n.namespaceURI||null,n=n.tagName,e=L8(e,n)}T1(k2),E1(k2,e)}function s3(){T1(k2),T1(Ql),T1(e4)}function ox(n){rs(e4.current);var e=rs(k2.current),t=L8(e,n.type);e!==t&&(E1(Ql,n),E1(k2,t))}function $7(n){Ql.current===n&&(T1(k2),T1(Ql))}var I1=ga(0);function N5(n){for(var e=n;e!==null;){if(e.tag===13){var t=e.memoizedState;if(t!==null&&(t=t.dehydrated,t===null||t.data==="$?"||t.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var pd=[];function K7(){for(var n=0;n<pd.length;n++)pd[n]._workInProgressVersionPrimary=null;pd.length=0}var r5=Sr.ReactCurrentDispatcher,md=Sr.ReactCurrentBatchConfig,bs=0,O1=null,cn=null,_n=null,D5=!1,Rl=!1,t4=0,hT=0;function An(){throw Error(Ge(321))}function Z7(n,e){if(e===null)return!1;for(var t=0;t<e.length&&t<n.length;t++)if(!d2(n[t],e[t]))return!1;return!0}function J7(n,e,t,i,r,a){if(bs=a,O1=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,r5.current=n===null||n.memoizedState===null?gT:vT,n=t(i,r),Rl){a=0;do{if(Rl=!1,t4=0,25<=a)throw Error(Ge(301));a+=1,_n=cn=null,e.updateQueue=null,r5.current=yT,n=t(i,r)}while(Rl)}if(r5.current=O5,e=cn!==null&&cn.next!==null,bs=0,_n=cn=O1=null,D5=!1,e)throw Error(Ge(300));return n}function Q7(){var n=t4!==0;return t4=0,n}function P2(){var n={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return _n===null?O1.memoizedState=_n=n:_n=_n.next=n,_n}function qi(){if(cn===null){var n=O1.alternate;n=n!==null?n.memoizedState:null}else n=cn.next;var e=_n===null?O1.memoizedState:_n.next;if(e!==null)_n=e,cn=n;else{if(n===null)throw Error(Ge(310));cn=n,n={memoizedState:cn.memoizedState,baseState:cn.baseState,baseQueue:cn.baseQueue,queue:cn.queue,next:null},_n===null?O1.memoizedState=_n=n:_n=_n.next=n}return _n}function n4(n,e){return typeof e=="function"?e(n):e}function gd(n){var e=qi(),t=e.queue;if(t===null)throw Error(Ge(311));t.lastRenderedReducer=n;var i=cn,r=i.baseQueue,a=t.pending;if(a!==null){if(r!==null){var s=r.next;r.next=a.next,a.next=s}i.baseQueue=r=a,t.pending=null}if(r!==null){a=r.next,i=i.baseState;var o=s=null,l=null,d=a;do{var h=d.lane;if((bs&h)===h)l!==null&&(l=l.next={lane:0,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null}),i=d.hasEagerState?d.eagerState:n(i,d.action);else{var f={lane:h,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null};l===null?(o=l=f,s=i):l=l.next=f,O1.lanes|=h,Ss|=h}d=d.next}while(d!==null&&d!==a);l===null?s=i:l.next=o,d2(i,e.memoizedState)||(li=!0),e.memoizedState=i,e.baseState=s,e.baseQueue=l,t.lastRenderedState=i}if(n=t.interleaved,n!==null){r=n;do a=r.lane,O1.lanes|=a,Ss|=a,r=r.next;while(r!==n)}else r===null&&(t.lanes=0);return[e.memoizedState,t.dispatch]}function vd(n){var e=qi(),t=e.queue;if(t===null)throw Error(Ge(311));t.lastRenderedReducer=n;var i=t.dispatch,r=t.pending,a=e.memoizedState;if(r!==null){t.pending=null;var s=r=r.next;do a=n(a,s.action),s=s.next;while(s!==r);d2(a,e.memoizedState)||(li=!0),e.memoizedState=a,e.baseQueue===null&&(e.baseState=a),t.lastRenderedState=a}return[a,i]}function lx(){}function cx(n,e){var t=O1,i=qi(),r=e(),a=!d2(i.memoizedState,r);if(a&&(i.memoizedState=r,li=!0),i=i.queue,e9(hx.bind(null,t,i,n),[n]),i.getSnapshot!==e||a||_n!==null&&_n.memoizedState.tag&1){if(t.flags|=2048,i4(9,dx.bind(null,t,i,r,e),void 0,null),xn===null)throw Error(Ge(349));bs&30||ux(t,e,r)}return r}function ux(n,e,t){n.flags|=16384,n={getSnapshot:e,value:t},e=O1.updateQueue,e===null?(e={lastEffect:null,stores:null},O1.updateQueue=e,e.stores=[n]):(t=e.stores,t===null?e.stores=[n]:t.push(n))}function dx(n,e,t,i){e.value=t,e.getSnapshot=i,fx(e)&&px(n)}function hx(n,e,t){return t(function(){fx(e)&&px(n)})}function fx(n){var e=n.getSnapshot;n=n.value;try{var t=e();return!d2(n,t)}catch{return!0}}function px(n){var e=yr(n,1);e!==null&&u2(e,n,1,-1)}function Dm(n){var e=P2();return typeof n=="function"&&(n=n()),e.memoizedState=e.baseState=n,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:n4,lastRenderedState:n},e.queue=n,n=n.dispatch=mT.bind(null,O1,n),[e.memoizedState,n]}function i4(n,e,t,i){return n={tag:n,create:e,destroy:t,deps:i,next:null},e=O1.updateQueue,e===null?(e={lastEffect:null,stores:null},O1.updateQueue=e,e.lastEffect=n.next=n):(t=e.lastEffect,t===null?e.lastEffect=n.next=n:(i=t.next,t.next=n,n.next=i,e.lastEffect=n)),n}function mx(){return qi().memoizedState}function a5(n,e,t,i){var r=P2();O1.flags|=n,r.memoizedState=i4(1|e,t,void 0,i===void 0?null:i)}function uu(n,e,t,i){var r=qi();i=i===void 0?null:i;var a=void 0;if(cn!==null){var s=cn.memoizedState;if(a=s.destroy,i!==null&&Z7(i,s.deps)){r.memoizedState=i4(e,t,a,i);return}}O1.flags|=n,r.memoizedState=i4(1|e,t,a,i)}function Om(n,e){return a5(8390656,8,n,e)}function e9(n,e){return uu(2048,8,n,e)}function gx(n,e){return uu(4,2,n,e)}function vx(n,e){return uu(4,4,n,e)}function yx(n,e){if(typeof e=="function")return n=n(),e(n),function(){e(null)};if(e!=null)return n=n(),e.current=n,function(){e.current=null}}function _x(n,e,t){return t=t!=null?t.concat([n]):null,uu(4,4,yx.bind(null,e,n),t)}function t9(){}function xx(n,e){var t=qi();e=e===void 0?null:e;var i=t.memoizedState;return i!==null&&e!==null&&Z7(e,i[1])?i[0]:(t.memoizedState=[n,e],n)}function wx(n,e){var t=qi();e=e===void 0?null:e;var i=t.memoizedState;return i!==null&&e!==null&&Z7(e,i[1])?i[0]:(n=n(),t.memoizedState=[n,e],n)}function bx(n,e,t){return bs&21?(d2(t,e)||(t=E_(),O1.lanes|=t,Ss|=t,n.baseState=!0),e):(n.baseState&&(n.baseState=!1,li=!0),n.memoizedState=t)}function fT(n,e){var t=f1;f1=t!==0&&4>t?t:4,n(!0);var i=md.transition;md.transition={};try{n(!1),e()}finally{f1=t,md.transition=i}}function Sx(){return qi().memoizedState}function pT(n,e,t){var i=aa(n);if(t={lane:i,action:t,hasEagerState:!1,eagerState:null,next:null},Mx(n))Ex(e,t);else if(t=tx(n,e,t,i),t!==null){var r=$n();u2(t,n,i,r),Px(t,e,i)}}function mT(n,e,t){var i=aa(n),r={lane:i,action:t,hasEagerState:!1,eagerState:null,next:null};if(Mx(n))Ex(e,r);else{var a=n.alternate;if(n.lanes===0&&(a===null||a.lanes===0)&&(a=e.lastRenderedReducer,a!==null))try{var s=e.lastRenderedState,o=a(s,t);if(r.hasEagerState=!0,r.eagerState=o,d2(o,s)){var l=e.interleaved;l===null?(r.next=r,X7(e)):(r.next=l.next,l.next=r),e.interleaved=r;return}}catch{}finally{}t=tx(n,e,r,i),t!==null&&(r=$n(),u2(t,n,i,r),Px(t,e,i))}}function Mx(n){var e=n.alternate;return n===O1||e!==null&&e===O1}function Ex(n,e){Rl=D5=!0;var t=n.pending;t===null?e.next=e:(e.next=t.next,t.next=e),n.pending=e}function Px(n,e,t){if(t&4194240){var i=e.lanes;i&=n.pendingLanes,t|=i,e.lanes=t,k7(n,t)}}var O5={readContext:Yi,useCallback:An,useContext:An,useEffect:An,useImperativeHandle:An,useInsertionEffect:An,useLayoutEffect:An,useMemo:An,useReducer:An,useRef:An,useState:An,useDebugValue:An,useDeferredValue:An,useTransition:An,useMutableSource:An,useSyncExternalStore:An,useId:An,unstable_isNewReconciler:!1},gT={readContext:Yi,useCallback:function(n,e){return P2().memoizedState=[n,e===void 0?null:e],n},useContext:Yi,useEffect:Om,useImperativeHandle:function(n,e,t){return t=t!=null?t.concat([n]):null,a5(4194308,4,yx.bind(null,e,n),t)},useLayoutEffect:function(n,e){return a5(4194308,4,n,e)},useInsertionEffect:function(n,e){return a5(4,2,n,e)},useMemo:function(n,e){var t=P2();return e=e===void 0?null:e,n=n(),t.memoizedState=[n,e],n},useReducer:function(n,e,t){var i=P2();return e=t!==void 0?t(e):e,i.memoizedState=i.baseState=e,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:n,lastRenderedState:e},i.queue=n,n=n.dispatch=pT.bind(null,O1,n),[i.memoizedState,n]},useRef:function(n){var e=P2();return n={current:n},e.memoizedState=n},useState:Dm,useDebugValue:t9,useDeferredValue:function(n){return P2().memoizedState=n},useTransition:function(){var n=Dm(!1),e=n[0];return n=fT.bind(null,n[1]),P2().memoizedState=n,[e,n]},useMutableSource:function(){},useSyncExternalStore:function(n,e,t){var i=O1,r=P2();if(R1){if(t===void 0)throw Error(Ge(407));t=t()}else{if(t=e(),xn===null)throw Error(Ge(349));bs&30||ux(i,e,t)}r.memoizedState=t;var a={value:t,getSnapshot:e};return r.queue=a,Om(hx.bind(null,i,a,n),[n]),i.flags|=2048,i4(9,dx.bind(null,i,a,t,e),void 0,null),t},useId:function(){var n=P2(),e=xn.identifierPrefix;if(R1){var t=cr,i=lr;t=(i&~(1<<32-c2(i)-1)).toString(32)+t,e=":"+e+"R"+t,t=t4++,0<t&&(e+="H"+t.toString(32)),e+=":"}else t=hT++,e=":"+e+"r"+t.toString(32)+":";return n.memoizedState=e},unstable_isNewReconciler:!1},vT={readContext:Yi,useCallback:xx,useContext:Yi,useEffect:e9,useImperativeHandle:_x,useInsertionEffect:gx,useLayoutEffect:vx,useMemo:wx,useReducer:gd,useRef:mx,useState:function(){return gd(n4)},useDebugValue:t9,useDeferredValue:function(n){var e=qi();return bx(e,cn.memoizedState,n)},useTransition:function(){var n=gd(n4)[0],e=qi().memoizedState;return[n,e]},useMutableSource:lx,useSyncExternalStore:cx,useId:Sx,unstable_isNewReconciler:!1},yT={readContext:Yi,useCallback:xx,useContext:Yi,useEffect:e9,useImperativeHandle:_x,useInsertionEffect:gx,useLayoutEffect:vx,useMemo:wx,useReducer:vd,useRef:mx,useState:function(){return vd(n4)},useDebugValue:t9,useDeferredValue:function(n){var e=qi();return cn===null?e.memoizedState=n:bx(e,cn.memoizedState,n)},useTransition:function(){var n=vd(n4)[0],e=qi().memoizedState;return[n,e]},useMutableSource:lx,useSyncExternalStore:cx,useId:Sx,unstable_isNewReconciler:!1};function o3(n,e){try{var t="",i=e;do t+=XE(i),i=i.return;while(i);var r=t}catch(a){r=`
Error generating stack: `+a.message+`
`+a.stack}return{value:n,source:e,stack:r,digest:null}}function yd(n,e,t){return{value:n,source:null,stack:t??null,digest:e??null}}function Z8(n,e){try{console.error(e.value)}catch(t){setTimeout(function(){throw t})}}var _T=typeof WeakMap=="function"?WeakMap:Map;function Tx(n,e,t){t=fr(-1,t),t.tag=3,t.payload={element:null};var i=e.value;return t.callback=function(){U5||(U5=!0,oh=i),Z8(n,e)},t}function Lx(n,e,t){t=fr(-1,t),t.tag=3;var i=n.type.getDerivedStateFromError;if(typeof i=="function"){var r=e.value;t.payload=function(){return i(r)},t.callback=function(){Z8(n,e)}}var a=n.stateNode;return a!==null&&typeof a.componentDidCatch=="function"&&(t.callback=function(){Z8(n,e),typeof i!="function"&&(ra===null?ra=new Set([this]):ra.add(this));var s=e.stack;this.componentDidCatch(e.value,{componentStack:s!==null?s:""})}),t}function Bm(n,e,t){var i=n.pingCache;if(i===null){i=n.pingCache=new _T;var r=new Set;i.set(e,r)}else r=i.get(e),r===void 0&&(r=new Set,i.set(e,r));r.has(t)||(r.add(t),n=IT.bind(null,n,e,t),e.then(n,n))}function Um(n){do{var e;if((e=n.tag===13)&&(e=n.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return n;n=n.return}while(n!==null);return null}function Fm(n,e,t,i,r){return n.mode&1?(n.flags|=65536,n.lanes=r,n):(n===e?n.flags|=65536:(n.flags|=128,t.flags|=131072,t.flags&=-52805,t.tag===1&&(t.alternate===null?t.tag=17:(e=fr(-1,1),e.tag=2,ia(t,e,1))),t.lanes|=1),n)}var xT=Sr.ReactCurrentOwner,li=!1;function Xn(n,e,t,i){e.child=n===null?sx(e,null,t,i):a3(e,n.child,t,i)}function zm(n,e,t,i,r){t=t.render;var a=e.ref;return Qo(e,r),i=J7(n,e,t,i,a,r),t=Q7(),n!==null&&!li?(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~r,_r(n,e,r)):(R1&&t&&z7(e),e.flags|=1,Xn(n,e,i,r),e.child)}function jm(n,e,t,i,r){if(n===null){var a=t.type;return typeof a=="function"&&!c9(a)&&a.defaultProps===void 0&&t.compare===null&&t.defaultProps===void 0?(e.tag=15,e.type=a,Cx(n,e,a,i,r)):(n=c5(t.type,null,i,e,e.mode,r),n.ref=e.ref,n.return=e,e.child=n)}if(a=n.child,!(n.lanes&r)){var s=a.memoizedProps;if(t=t.compare,t=t!==null?t:$l,t(s,i)&&n.ref===e.ref)return _r(n,e,r)}return e.flags|=1,n=sa(a,i),n.ref=e.ref,n.return=e,e.child=n}function Cx(n,e,t,i,r){if(n!==null){var a=n.memoizedProps;if($l(a,i)&&n.ref===e.ref)if(li=!1,e.pendingProps=i=a,(n.lanes&r)!==0)n.flags&131072&&(li=!0);else return e.lanes=n.lanes,_r(n,e,r)}return J8(n,e,t,i,r)}function Ax(n,e,t){var i=e.pendingProps,r=i.children,a=n!==null?n.memoizedState:null;if(i.mode==="hidden")if(!(e.mode&1))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},E1(Fo,_i),_i|=t;else{if(!(t&1073741824))return n=a!==null?a.baseLanes|t:t,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:n,cachePool:null,transitions:null},e.updateQueue=null,E1(Fo,_i),_i|=n,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=a!==null?a.baseLanes:t,E1(Fo,_i),_i|=i}else a!==null?(i=a.baseLanes|t,e.memoizedState=null):i=t,E1(Fo,_i),_i|=i;return Xn(n,e,r,t),e.child}function Rx(n,e){var t=e.ref;(n===null&&t!==null||n!==null&&n.ref!==t)&&(e.flags|=512,e.flags|=2097152)}function J8(n,e,t,i,r){var a=ui(t)?xs:Fn.current;return a=i3(e,a),Qo(e,r),t=J7(n,e,t,i,a,r),i=Q7(),n!==null&&!li?(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~r,_r(n,e,r)):(R1&&i&&z7(e),e.flags|=1,Xn(n,e,t,r),e.child)}function Hm(n,e,t,i,r){if(ui(t)){var a=!0;L5(e)}else a=!1;if(Qo(e,r),e.stateNode===null)s5(n,e),rx(e,t,i),K8(e,t,i,r),i=!0;else if(n===null){var s=e.stateNode,o=e.memoizedProps;s.props=o;var l=s.context,d=t.contextType;typeof d=="object"&&d!==null?d=Yi(d):(d=ui(t)?xs:Fn.current,d=i3(e,d));var h=t.getDerivedStateFromProps,f=typeof h=="function"||typeof s.getSnapshotBeforeUpdate=="function";f||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(o!==i||l!==d)&&Im(e,s,i,d),Xr=!1;var p=e.memoizedState;s.state=p,I5(e,i,s,r),l=e.memoizedState,o!==i||p!==l||ci.current||Xr?(typeof h=="function"&&($8(e,t,h,i),l=e.memoizedState),(o=Xr||km(e,t,o,i,p,l,d))?(f||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount()),typeof s.componentDidMount=="function"&&(e.flags|=4194308)):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=i,e.memoizedState=l),s.props=i,s.state=l,s.context=d,i=o):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),i=!1)}else{s=e.stateNode,nx(n,e),o=e.memoizedProps,d=e.type===e.elementType?o:i2(e.type,o),s.props=d,f=e.pendingProps,p=s.context,l=t.contextType,typeof l=="object"&&l!==null?l=Yi(l):(l=ui(t)?xs:Fn.current,l=i3(e,l));var m=t.getDerivedStateFromProps;(h=typeof m=="function"||typeof s.getSnapshotBeforeUpdate=="function")||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(o!==f||p!==l)&&Im(e,s,i,l),Xr=!1,p=e.memoizedState,s.state=p,I5(e,i,s,r);var y=e.memoizedState;o!==f||p!==y||ci.current||Xr?(typeof m=="function"&&($8(e,t,m,i),y=e.memoizedState),(d=Xr||km(e,t,d,i,p,y,l)||!1)?(h||typeof s.UNSAFE_componentWillUpdate!="function"&&typeof s.componentWillUpdate!="function"||(typeof s.componentWillUpdate=="function"&&s.componentWillUpdate(i,y,l),typeof s.UNSAFE_componentWillUpdate=="function"&&s.UNSAFE_componentWillUpdate(i,y,l)),typeof s.componentDidUpdate=="function"&&(e.flags|=4),typeof s.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof s.componentDidUpdate!="function"||o===n.memoizedProps&&p===n.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||o===n.memoizedProps&&p===n.memoizedState||(e.flags|=1024),e.memoizedProps=i,e.memoizedState=y),s.props=i,s.state=y,s.context=l,i=d):(typeof s.componentDidUpdate!="function"||o===n.memoizedProps&&p===n.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||o===n.memoizedProps&&p===n.memoizedState||(e.flags|=1024),i=!1)}return Q8(n,e,t,i,a,r)}function Q8(n,e,t,i,r,a){Rx(n,e);var s=(e.flags&128)!==0;if(!i&&!s)return r&&Tm(e,t,!1),_r(n,e,a);i=e.stateNode,xT.current=e;var o=s&&typeof t.getDerivedStateFromError!="function"?null:i.render();return e.flags|=1,n!==null&&s?(e.child=a3(e,n.child,null,a),e.child=a3(e,null,o,a)):Xn(n,e,o,a),e.memoizedState=i.state,r&&Tm(e,t,!0),e.child}function kx(n){var e=n.stateNode;e.pendingContext?Pm(n,e.pendingContext,e.pendingContext!==e.context):e.context&&Pm(n,e.context,!1),q7(n,e.containerInfo)}function Vm(n,e,t,i,r){return r3(),H7(r),e.flags|=256,Xn(n,e,t,i),e.child}var eh={dehydrated:null,treeContext:null,retryLane:0};function th(n){return{baseLanes:n,cachePool:null,transitions:null}}function Ix(n,e,t){var i=e.pendingProps,r=I1.current,a=!1,s=(e.flags&128)!==0,o;if((o=s)||(o=n!==null&&n.memoizedState===null?!1:(r&2)!==0),o?(a=!0,e.flags&=-129):(n===null||n.memoizedState!==null)&&(r|=1),E1(I1,r&1),n===null)return Y8(e),n=e.memoizedState,n!==null&&(n=n.dehydrated,n!==null)?(e.mode&1?n.data==="$!"?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(s=i.children,n=i.fallback,a?(i=e.mode,a=e.child,s={mode:"hidden",children:s},!(i&1)&&a!==null?(a.childLanes=0,a.pendingProps=s):a=fu(s,i,0,null),n=fs(n,i,t,null),a.return=e,n.return=e,a.sibling=n,e.child=a,e.child.memoizedState=th(t),e.memoizedState=eh,n):n9(e,s));if(r=n.memoizedState,r!==null&&(o=r.dehydrated,o!==null))return wT(n,e,s,i,o,r,t);if(a){a=i.fallback,s=e.mode,r=n.child,o=r.sibling;var l={mode:"hidden",children:i.children};return!(s&1)&&e.child!==r?(i=e.child,i.childLanes=0,i.pendingProps=l,e.deletions=null):(i=sa(r,l),i.subtreeFlags=r.subtreeFlags&14680064),o!==null?a=sa(o,a):(a=fs(a,s,t,null),a.flags|=2),a.return=e,i.return=e,i.sibling=a,e.child=i,i=a,a=e.child,s=n.child.memoizedState,s=s===null?th(t):{baseLanes:s.baseLanes|t,cachePool:null,transitions:s.transitions},a.memoizedState=s,a.childLanes=n.childLanes&~t,e.memoizedState=eh,i}return a=n.child,n=a.sibling,i=sa(a,{mode:"visible",children:i.children}),!(e.mode&1)&&(i.lanes=t),i.return=e,i.sibling=null,n!==null&&(t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)),e.child=i,e.memoizedState=null,i}function n9(n,e){return e=fu({mode:"visible",children:e},n.mode,0,null),e.return=n,n.child=e}function J0(n,e,t,i){return i!==null&&H7(i),a3(e,n.child,null,t),n=n9(e,e.pendingProps.children),n.flags|=2,e.memoizedState=null,n}function wT(n,e,t,i,r,a,s){if(t)return e.flags&256?(e.flags&=-257,i=yd(Error(Ge(422))),J0(n,e,s,i)):e.memoizedState!==null?(e.child=n.child,e.flags|=128,null):(a=i.fallback,r=e.mode,i=fu({mode:"visible",children:i.children},r,0,null),a=fs(a,r,s,null),a.flags|=2,i.return=e,a.return=e,i.sibling=a,e.child=i,e.mode&1&&a3(e,n.child,null,s),e.child.memoizedState=th(s),e.memoizedState=eh,a);if(!(e.mode&1))return J0(n,e,s,null);if(r.data==="$!"){if(i=r.nextSibling&&r.nextSibling.dataset,i)var o=i.dgst;return i=o,a=Error(Ge(419)),i=yd(a,i,void 0),J0(n,e,s,i)}if(o=(s&n.childLanes)!==0,li||o){if(i=xn,i!==null){switch(s&-s){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}r=r&(i.suspendedLanes|s)?0:r,r!==0&&r!==a.retryLane&&(a.retryLane=r,yr(n,r),u2(i,n,r,-1))}return l9(),i=yd(Error(Ge(421))),J0(n,e,s,i)}return r.data==="$?"?(e.flags|=128,e.child=n.child,e=NT.bind(null,n),r._reactRetry=e,null):(n=a.treeContext,bi=na(r.nextSibling),Si=e,R1=!0,o2=null,n!==null&&(zi[ji++]=lr,zi[ji++]=cr,zi[ji++]=ws,lr=n.id,cr=n.overflow,ws=e),e=n9(e,i.children),e.flags|=4096,e)}function Gm(n,e,t){n.lanes|=e;var i=n.alternate;i!==null&&(i.lanes|=e),q8(n.return,e,t)}function _d(n,e,t,i,r){var a=n.memoizedState;a===null?n.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:i,tail:t,tailMode:r}:(a.isBackwards=e,a.rendering=null,a.renderingStartTime=0,a.last=i,a.tail=t,a.tailMode=r)}function Nx(n,e,t){var i=e.pendingProps,r=i.revealOrder,a=i.tail;if(Xn(n,e,i.children,t),i=I1.current,i&2)i=i&1|2,e.flags|=128;else{if(n!==null&&n.flags&128)e:for(n=e.child;n!==null;){if(n.tag===13)n.memoizedState!==null&&Gm(n,t,e);else if(n.tag===19)Gm(n,t,e);else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break e;for(;n.sibling===null;){if(n.return===null||n.return===e)break e;n=n.return}n.sibling.return=n.return,n=n.sibling}i&=1}if(E1(I1,i),!(e.mode&1))e.memoizedState=null;else switch(r){case"forwards":for(t=e.child,r=null;t!==null;)n=t.alternate,n!==null&&N5(n)===null&&(r=t),t=t.sibling;t=r,t===null?(r=e.child,e.child=null):(r=t.sibling,t.sibling=null),_d(e,!1,r,t,a);break;case"backwards":for(t=null,r=e.child,e.child=null;r!==null;){if(n=r.alternate,n!==null&&N5(n)===null){e.child=r;break}n=r.sibling,r.sibling=t,t=r,r=n}_d(e,!0,t,null,a);break;case"together":_d(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function s5(n,e){!(e.mode&1)&&n!==null&&(n.alternate=null,e.alternate=null,e.flags|=2)}function _r(n,e,t){if(n!==null&&(e.dependencies=n.dependencies),Ss|=e.lanes,!(t&e.childLanes))return null;if(n!==null&&e.child!==n.child)throw Error(Ge(153));if(e.child!==null){for(n=e.child,t=sa(n,n.pendingProps),e.child=t,t.return=e;n.sibling!==null;)n=n.sibling,t=t.sibling=sa(n,n.pendingProps),t.return=e;t.sibling=null}return e.child}function bT(n,e,t){switch(e.tag){case 3:kx(e),r3();break;case 5:ox(e);break;case 1:ui(e.type)&&L5(e);break;case 4:q7(e,e.stateNode.containerInfo);break;case 10:var i=e.type._context,r=e.memoizedProps.value;E1(R5,i._currentValue),i._currentValue=r;break;case 13:if(i=e.memoizedState,i!==null)return i.dehydrated!==null?(E1(I1,I1.current&1),e.flags|=128,null):t&e.child.childLanes?Ix(n,e,t):(E1(I1,I1.current&1),n=_r(n,e,t),n!==null?n.sibling:null);E1(I1,I1.current&1);break;case 19:if(i=(t&e.childLanes)!==0,n.flags&128){if(i)return Nx(n,e,t);e.flags|=128}if(r=e.memoizedState,r!==null&&(r.rendering=null,r.tail=null,r.lastEffect=null),E1(I1,I1.current),i)break;return null;case 22:case 23:return e.lanes=0,Ax(n,e,t)}return _r(n,e,t)}var Dx,nh,Ox,Bx;Dx=function(n,e){for(var t=e.child;t!==null;){if(t.tag===5||t.tag===6)n.appendChild(t.stateNode);else if(t.tag!==4&&t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}};nh=function(){};Ox=function(n,e,t,i){var r=n.memoizedProps;if(r!==i){n=e.stateNode,rs(k2.current);var a=null;switch(t){case"input":r=M8(n,r),i=M8(n,i),a=[];break;case"select":r=U1({},r,{value:void 0}),i=U1({},i,{value:void 0}),a=[];break;case"textarea":r=T8(n,r),i=T8(n,i),a=[];break;default:typeof r.onClick!="function"&&typeof i.onClick=="function"&&(n.onclick=P5)}C8(t,i);var s;t=null;for(d in r)if(!i.hasOwnProperty(d)&&r.hasOwnProperty(d)&&r[d]!=null)if(d==="style"){var o=r[d];for(s in o)o.hasOwnProperty(s)&&(t||(t={}),t[s]="")}else d!=="dangerouslySetInnerHTML"&&d!=="children"&&d!=="suppressContentEditableWarning"&&d!=="suppressHydrationWarning"&&d!=="autoFocus"&&(Hl.hasOwnProperty(d)?a||(a=[]):(a=a||[]).push(d,null));for(d in i){var l=i[d];if(o=r!=null?r[d]:void 0,i.hasOwnProperty(d)&&l!==o&&(l!=null||o!=null))if(d==="style")if(o){for(s in o)!o.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(t||(t={}),t[s]="");for(s in l)l.hasOwnProperty(s)&&o[s]!==l[s]&&(t||(t={}),t[s]=l[s])}else t||(a||(a=[]),a.push(d,t)),t=l;else d==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,o=o?o.__html:void 0,l!=null&&o!==l&&(a=a||[]).push(d,l)):d==="children"?typeof l!="string"&&typeof l!="number"||(a=a||[]).push(d,""+l):d!=="suppressContentEditableWarning"&&d!=="suppressHydrationWarning"&&(Hl.hasOwnProperty(d)?(l!=null&&d==="onScroll"&&P1("scroll",n),a||o===l||(a=[])):(a=a||[]).push(d,l))}t&&(a=a||[]).push("style",t);var d=a;(e.updateQueue=d)&&(e.flags|=4)}};Bx=function(n,e,t,i){t!==i&&(e.flags|=4)};function K3(n,e){if(!R1)switch(n.tailMode){case"hidden":e=n.tail;for(var t=null;e!==null;)e.alternate!==null&&(t=e),e=e.sibling;t===null?n.tail=null:t.sibling=null;break;case"collapsed":t=n.tail;for(var i=null;t!==null;)t.alternate!==null&&(i=t),t=t.sibling;i===null?e||n.tail===null?n.tail=null:n.tail.sibling=null:i.sibling=null}}function Rn(n){var e=n.alternate!==null&&n.alternate.child===n.child,t=0,i=0;if(e)for(var r=n.child;r!==null;)t|=r.lanes|r.childLanes,i|=r.subtreeFlags&14680064,i|=r.flags&14680064,r.return=n,r=r.sibling;else for(r=n.child;r!==null;)t|=r.lanes|r.childLanes,i|=r.subtreeFlags,i|=r.flags,r.return=n,r=r.sibling;return n.subtreeFlags|=i,n.childLanes=t,e}function ST(n,e,t){var i=e.pendingProps;switch(j7(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Rn(e),null;case 1:return ui(e.type)&&T5(),Rn(e),null;case 3:return i=e.stateNode,s3(),T1(ci),T1(Fn),K7(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(n===null||n.child===null)&&(K0(e)?e.flags|=4:n===null||n.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,o2!==null&&(uh(o2),o2=null))),nh(n,e),Rn(e),null;case 5:$7(e);var r=rs(e4.current);if(t=e.type,n!==null&&e.stateNode!=null)Ox(n,e,t,i,r),n.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!i){if(e.stateNode===null)throw Error(Ge(166));return Rn(e),null}if(n=rs(k2.current),K0(e)){i=e.stateNode,t=e.type;var a=e.memoizedProps;switch(i[T2]=e,i[Jl]=a,n=(e.mode&1)!==0,t){case"dialog":P1("cancel",i),P1("close",i);break;case"iframe":case"object":case"embed":P1("load",i);break;case"video":case"audio":for(r=0;r<bl.length;r++)P1(bl[r],i);break;case"source":P1("error",i);break;case"img":case"image":case"link":P1("error",i),P1("load",i);break;case"details":P1("toggle",i);break;case"input":Qp(i,a),P1("invalid",i);break;case"select":i._wrapperState={wasMultiple:!!a.multiple},P1("invalid",i);break;case"textarea":tm(i,a),P1("invalid",i)}C8(t,a),r=null;for(var s in a)if(a.hasOwnProperty(s)){var o=a[s];s==="children"?typeof o=="string"?i.textContent!==o&&(a.suppressHydrationWarning!==!0&&$0(i.textContent,o,n),r=["children",o]):typeof o=="number"&&i.textContent!==""+o&&(a.suppressHydrationWarning!==!0&&$0(i.textContent,o,n),r=["children",""+o]):Hl.hasOwnProperty(s)&&o!=null&&s==="onScroll"&&P1("scroll",i)}switch(t){case"input":j0(i),em(i,a,!0);break;case"textarea":j0(i),nm(i);break;case"select":case"option":break;default:typeof a.onClick=="function"&&(i.onclick=P5)}i=r,e.updateQueue=i,i!==null&&(e.flags|=4)}else{s=r.nodeType===9?r:r.ownerDocument,n==="http://www.w3.org/1999/xhtml"&&(n=u_(t)),n==="http://www.w3.org/1999/xhtml"?t==="script"?(n=s.createElement("div"),n.innerHTML="<script><\/script>",n=n.removeChild(n.firstChild)):typeof i.is=="string"?n=s.createElement(t,{is:i.is}):(n=s.createElement(t),t==="select"&&(s=n,i.multiple?s.multiple=!0:i.size&&(s.size=i.size))):n=s.createElementNS(n,t),n[T2]=e,n[Jl]=i,Dx(n,e,!1,!1),e.stateNode=n;e:{switch(s=A8(t,i),t){case"dialog":P1("cancel",n),P1("close",n),r=i;break;case"iframe":case"object":case"embed":P1("load",n),r=i;break;case"video":case"audio":for(r=0;r<bl.length;r++)P1(bl[r],n);r=i;break;case"source":P1("error",n),r=i;break;case"img":case"image":case"link":P1("error",n),P1("load",n),r=i;break;case"details":P1("toggle",n),r=i;break;case"input":Qp(n,i),r=M8(n,i),P1("invalid",n);break;case"option":r=i;break;case"select":n._wrapperState={wasMultiple:!!i.multiple},r=U1({},i,{value:void 0}),P1("invalid",n);break;case"textarea":tm(n,i),r=T8(n,i),P1("invalid",n);break;default:r=i}C8(t,r),o=r;for(a in o)if(o.hasOwnProperty(a)){var l=o[a];a==="style"?f_(n,l):a==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&d_(n,l)):a==="children"?typeof l=="string"?(t!=="textarea"||l!=="")&&Vl(n,l):typeof l=="number"&&Vl(n,""+l):a!=="suppressContentEditableWarning"&&a!=="suppressHydrationWarning"&&a!=="autoFocus"&&(Hl.hasOwnProperty(a)?l!=null&&a==="onScroll"&&P1("scroll",n):l!=null&&P7(n,a,l,s))}switch(t){case"input":j0(n),em(n,i,!1);break;case"textarea":j0(n),nm(n);break;case"option":i.value!=null&&n.setAttribute("value",""+da(i.value));break;case"select":n.multiple=!!i.multiple,a=i.value,a!=null?$o(n,!!i.multiple,a,!1):i.defaultValue!=null&&$o(n,!!i.multiple,i.defaultValue,!0);break;default:typeof r.onClick=="function"&&(n.onclick=P5)}switch(t){case"button":case"input":case"select":case"textarea":i=!!i.autoFocus;break e;case"img":i=!0;break e;default:i=!1}}i&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return Rn(e),null;case 6:if(n&&e.stateNode!=null)Bx(n,e,n.memoizedProps,i);else{if(typeof i!="string"&&e.stateNode===null)throw Error(Ge(166));if(t=rs(e4.current),rs(k2.current),K0(e)){if(i=e.stateNode,t=e.memoizedProps,i[T2]=e,(a=i.nodeValue!==t)&&(n=Si,n!==null))switch(n.tag){case 3:$0(i.nodeValue,t,(n.mode&1)!==0);break;case 5:n.memoizedProps.suppressHydrationWarning!==!0&&$0(i.nodeValue,t,(n.mode&1)!==0)}a&&(e.flags|=4)}else i=(t.nodeType===9?t:t.ownerDocument).createTextNode(i),i[T2]=e,e.stateNode=i}return Rn(e),null;case 13:if(T1(I1),i=e.memoizedState,n===null||n.memoizedState!==null&&n.memoizedState.dehydrated!==null){if(R1&&bi!==null&&e.mode&1&&!(e.flags&128))ex(),r3(),e.flags|=98560,a=!1;else if(a=K0(e),i!==null&&i.dehydrated!==null){if(n===null){if(!a)throw Error(Ge(318));if(a=e.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(Ge(317));a[T2]=e}else r3(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;Rn(e),a=!1}else o2!==null&&(uh(o2),o2=null),a=!0;if(!a)return e.flags&65536?e:null}return e.flags&128?(e.lanes=t,e):(i=i!==null,i!==(n!==null&&n.memoizedState!==null)&&i&&(e.child.flags|=8192,e.mode&1&&(n===null||I1.current&1?dn===0&&(dn=3):l9())),e.updateQueue!==null&&(e.flags|=4),Rn(e),null);case 4:return s3(),nh(n,e),n===null&&Kl(e.stateNode.containerInfo),Rn(e),null;case 10:return W7(e.type._context),Rn(e),null;case 17:return ui(e.type)&&T5(),Rn(e),null;case 19:if(T1(I1),a=e.memoizedState,a===null)return Rn(e),null;if(i=(e.flags&128)!==0,s=a.rendering,s===null)if(i)K3(a,!1);else{if(dn!==0||n!==null&&n.flags&128)for(n=e.child;n!==null;){if(s=N5(n),s!==null){for(e.flags|=128,K3(a,!1),i=s.updateQueue,i!==null&&(e.updateQueue=i,e.flags|=4),e.subtreeFlags=0,i=t,t=e.child;t!==null;)a=t,n=i,a.flags&=14680066,s=a.alternate,s===null?(a.childLanes=0,a.lanes=n,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=s.childLanes,a.lanes=s.lanes,a.child=s.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=s.memoizedProps,a.memoizedState=s.memoizedState,a.updateQueue=s.updateQueue,a.type=s.type,n=s.dependencies,a.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext}),t=t.sibling;return E1(I1,I1.current&1|2),e.child}n=n.sibling}a.tail!==null&&Q1()>l3&&(e.flags|=128,i=!0,K3(a,!1),e.lanes=4194304)}else{if(!i)if(n=N5(s),n!==null){if(e.flags|=128,i=!0,t=n.updateQueue,t!==null&&(e.updateQueue=t,e.flags|=4),K3(a,!0),a.tail===null&&a.tailMode==="hidden"&&!s.alternate&&!R1)return Rn(e),null}else 2*Q1()-a.renderingStartTime>l3&&t!==1073741824&&(e.flags|=128,i=!0,K3(a,!1),e.lanes=4194304);a.isBackwards?(s.sibling=e.child,e.child=s):(t=a.last,t!==null?t.sibling=s:e.child=s,a.last=s)}return a.tail!==null?(e=a.tail,a.rendering=e,a.tail=e.sibling,a.renderingStartTime=Q1(),e.sibling=null,t=I1.current,E1(I1,i?t&1|2:t&1),e):(Rn(e),null);case 22:case 23:return o9(),i=e.memoizedState!==null,n!==null&&n.memoizedState!==null!==i&&(e.flags|=8192),i&&e.mode&1?_i&1073741824&&(Rn(e),e.subtreeFlags&6&&(e.flags|=8192)):Rn(e),null;case 24:return null;case 25:return null}throw Error(Ge(156,e.tag))}function MT(n,e){switch(j7(e),e.tag){case 1:return ui(e.type)&&T5(),n=e.flags,n&65536?(e.flags=n&-65537|128,e):null;case 3:return s3(),T1(ci),T1(Fn),K7(),n=e.flags,n&65536&&!(n&128)?(e.flags=n&-65537|128,e):null;case 5:return $7(e),null;case 13:if(T1(I1),n=e.memoizedState,n!==null&&n.dehydrated!==null){if(e.alternate===null)throw Error(Ge(340));r3()}return n=e.flags,n&65536?(e.flags=n&-65537|128,e):null;case 19:return T1(I1),null;case 4:return s3(),null;case 10:return W7(e.type._context),null;case 22:case 23:return o9(),null;case 24:return null;default:return null}}var Q0=!1,Dn=!1,ET=typeof WeakSet=="function"?WeakSet:Set,vt=null;function Uo(n,e){var t=n.ref;if(t!==null)if(typeof t=="function")try{t(null)}catch(i){G1(n,e,i)}else t.current=null}function ih(n,e,t){try{t()}catch(i){G1(n,e,i)}}var Wm=!1;function PT(n,e){if(z8=S5,n=j_(),F7(n)){if("selectionStart"in n)var t={start:n.selectionStart,end:n.selectionEnd};else e:{t=(t=n.ownerDocument)&&t.defaultView||window;var i=t.getSelection&&t.getSelection();if(i&&i.rangeCount!==0){t=i.anchorNode;var r=i.anchorOffset,a=i.focusNode;i=i.focusOffset;try{t.nodeType,a.nodeType}catch{t=null;break e}var s=0,o=-1,l=-1,d=0,h=0,f=n,p=null;t:for(;;){for(var m;f!==t||r!==0&&f.nodeType!==3||(o=s+r),f!==a||i!==0&&f.nodeType!==3||(l=s+i),f.nodeType===3&&(s+=f.nodeValue.length),(m=f.firstChild)!==null;)p=f,f=m;for(;;){if(f===n)break t;if(p===t&&++d===r&&(o=s),p===a&&++h===i&&(l=s),(m=f.nextSibling)!==null)break;f=p,p=f.parentNode}f=m}t=o===-1||l===-1?null:{start:o,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;for(j8={focusedElem:n,selectionRange:t},S5=!1,vt=e;vt!==null;)if(e=vt,n=e.child,(e.subtreeFlags&1028)!==0&&n!==null)n.return=e,vt=n;else for(;vt!==null;){e=vt;try{var y=e.alternate;if(e.flags&1024)switch(e.tag){case 0:case 11:case 15:break;case 1:if(y!==null){var b=y.memoizedProps,_=y.memoizedState,g=e.stateNode,x=g.getSnapshotBeforeUpdate(e.elementType===e.type?b:i2(e.type,b),_);g.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var S=e.stateNode.containerInfo;S.nodeType===1?S.textContent="":S.nodeType===9&&S.documentElement&&S.removeChild(S.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(Ge(163))}}catch(E){G1(e,e.return,E)}if(n=e.sibling,n!==null){n.return=e.return,vt=n;break}vt=e.return}return y=Wm,Wm=!1,y}function kl(n,e,t){var i=e.updateQueue;if(i=i!==null?i.lastEffect:null,i!==null){var r=i=i.next;do{if((r.tag&n)===n){var a=r.destroy;r.destroy=void 0,a!==void 0&&ih(e,t,a)}r=r.next}while(r!==i)}}function du(n,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var t=e=e.next;do{if((t.tag&n)===n){var i=t.create;t.destroy=i()}t=t.next}while(t!==e)}}function rh(n){var e=n.ref;if(e!==null){var t=n.stateNode;switch(n.tag){case 5:n=t;break;default:n=t}typeof e=="function"?e(n):e.current=n}}function Ux(n){var e=n.alternate;e!==null&&(n.alternate=null,Ux(e)),n.child=null,n.deletions=null,n.sibling=null,n.tag===5&&(e=n.stateNode,e!==null&&(delete e[T2],delete e[Jl],delete e[G8],delete e[lT],delete e[cT])),n.stateNode=null,n.return=null,n.dependencies=null,n.memoizedProps=null,n.memoizedState=null,n.pendingProps=null,n.stateNode=null,n.updateQueue=null}function Fx(n){return n.tag===5||n.tag===3||n.tag===4}function Xm(n){e:for(;;){for(;n.sibling===null;){if(n.return===null||Fx(n.return))return null;n=n.return}for(n.sibling.return=n.return,n=n.sibling;n.tag!==5&&n.tag!==6&&n.tag!==18;){if(n.flags&2||n.child===null||n.tag===4)continue e;n.child.return=n,n=n.child}if(!(n.flags&2))return n.stateNode}}function ah(n,e,t){var i=n.tag;if(i===5||i===6)n=n.stateNode,e?t.nodeType===8?t.parentNode.insertBefore(n,e):t.insertBefore(n,e):(t.nodeType===8?(e=t.parentNode,e.insertBefore(n,t)):(e=t,e.appendChild(n)),t=t._reactRootContainer,t!=null||e.onclick!==null||(e.onclick=P5));else if(i!==4&&(n=n.child,n!==null))for(ah(n,e,t),n=n.sibling;n!==null;)ah(n,e,t),n=n.sibling}function sh(n,e,t){var i=n.tag;if(i===5||i===6)n=n.stateNode,e?t.insertBefore(n,e):t.appendChild(n);else if(i!==4&&(n=n.child,n!==null))for(sh(n,e,t),n=n.sibling;n!==null;)sh(n,e,t),n=n.sibling}var bn=null,a2=!1;function Nr(n,e,t){for(t=t.child;t!==null;)zx(n,e,t),t=t.sibling}function zx(n,e,t){if(R2&&typeof R2.onCommitFiberUnmount=="function")try{R2.onCommitFiberUnmount(iu,t)}catch{}switch(t.tag){case 5:Dn||Uo(t,e);case 6:var i=bn,r=a2;bn=null,Nr(n,e,t),bn=i,a2=r,bn!==null&&(a2?(n=bn,t=t.stateNode,n.nodeType===8?n.parentNode.removeChild(t):n.removeChild(t)):bn.removeChild(t.stateNode));break;case 18:bn!==null&&(a2?(n=bn,t=t.stateNode,n.nodeType===8?hd(n.parentNode,t):n.nodeType===1&&hd(n,t),Yl(n)):hd(bn,t.stateNode));break;case 4:i=bn,r=a2,bn=t.stateNode.containerInfo,a2=!0,Nr(n,e,t),bn=i,a2=r;break;case 0:case 11:case 14:case 15:if(!Dn&&(i=t.updateQueue,i!==null&&(i=i.lastEffect,i!==null))){r=i=i.next;do{var a=r,s=a.destroy;a=a.tag,s!==void 0&&(a&2||a&4)&&ih(t,e,s),r=r.next}while(r!==i)}Nr(n,e,t);break;case 1:if(!Dn&&(Uo(t,e),i=t.stateNode,typeof i.componentWillUnmount=="function"))try{i.props=t.memoizedProps,i.state=t.memoizedState,i.componentWillUnmount()}catch(o){G1(t,e,o)}Nr(n,e,t);break;case 21:Nr(n,e,t);break;case 22:t.mode&1?(Dn=(i=Dn)||t.memoizedState!==null,Nr(n,e,t),Dn=i):Nr(n,e,t);break;default:Nr(n,e,t)}}function Ym(n){var e=n.updateQueue;if(e!==null){n.updateQueue=null;var t=n.stateNode;t===null&&(t=n.stateNode=new ET),e.forEach(function(i){var r=DT.bind(null,n,i);t.has(i)||(t.add(i),i.then(r,r))})}}function Qi(n,e){var t=e.deletions;if(t!==null)for(var i=0;i<t.length;i++){var r=t[i];try{var a=n,s=e,o=s;e:for(;o!==null;){switch(o.tag){case 5:bn=o.stateNode,a2=!1;break e;case 3:bn=o.stateNode.containerInfo,a2=!0;break e;case 4:bn=o.stateNode.containerInfo,a2=!0;break e}o=o.return}if(bn===null)throw Error(Ge(160));zx(a,s,r),bn=null,a2=!1;var l=r.alternate;l!==null&&(l.return=null),r.return=null}catch(d){G1(r,e,d)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)jx(e,n),e=e.sibling}function jx(n,e){var t=n.alternate,i=n.flags;switch(n.tag){case 0:case 11:case 14:case 15:if(Qi(e,n),E2(n),i&4){try{kl(3,n,n.return),du(3,n)}catch(b){G1(n,n.return,b)}try{kl(5,n,n.return)}catch(b){G1(n,n.return,b)}}break;case 1:Qi(e,n),E2(n),i&512&&t!==null&&Uo(t,t.return);break;case 5:if(Qi(e,n),E2(n),i&512&&t!==null&&Uo(t,t.return),n.flags&32){var r=n.stateNode;try{Vl(r,"")}catch(b){G1(n,n.return,b)}}if(i&4&&(r=n.stateNode,r!=null)){var a=n.memoizedProps,s=t!==null?t.memoizedProps:a,o=n.type,l=n.updateQueue;if(n.updateQueue=null,l!==null)try{o==="input"&&a.type==="radio"&&a.name!=null&&l_(r,a),A8(o,s);var d=A8(o,a);for(s=0;s<l.length;s+=2){var h=l[s],f=l[s+1];h==="style"?f_(r,f):h==="dangerouslySetInnerHTML"?d_(r,f):h==="children"?Vl(r,f):P7(r,h,f,d)}switch(o){case"input":E8(r,a);break;case"textarea":c_(r,a);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!a.multiple;var m=a.value;m!=null?$o(r,!!a.multiple,m,!1):p!==!!a.multiple&&(a.defaultValue!=null?$o(r,!!a.multiple,a.defaultValue,!0):$o(r,!!a.multiple,a.multiple?[]:"",!1))}r[Jl]=a}catch(b){G1(n,n.return,b)}}break;case 6:if(Qi(e,n),E2(n),i&4){if(n.stateNode===null)throw Error(Ge(162));r=n.stateNode,a=n.memoizedProps;try{r.nodeValue=a}catch(b){G1(n,n.return,b)}}break;case 3:if(Qi(e,n),E2(n),i&4&&t!==null&&t.memoizedState.isDehydrated)try{Yl(e.containerInfo)}catch(b){G1(n,n.return,b)}break;case 4:Qi(e,n),E2(n);break;case 13:Qi(e,n),E2(n),r=n.child,r.flags&8192&&(a=r.memoizedState!==null,r.stateNode.isHidden=a,!a||r.alternate!==null&&r.alternate.memoizedState!==null||(a9=Q1())),i&4&&Ym(n);break;case 22:if(h=t!==null&&t.memoizedState!==null,n.mode&1?(Dn=(d=Dn)||h,Qi(e,n),Dn=d):Qi(e,n),E2(n),i&8192){if(d=n.memoizedState!==null,(n.stateNode.isHidden=d)&&!h&&n.mode&1)for(vt=n,h=n.child;h!==null;){for(f=vt=h;vt!==null;){switch(p=vt,m=p.child,p.tag){case 0:case 11:case 14:case 15:kl(4,p,p.return);break;case 1:Uo(p,p.return);var y=p.stateNode;if(typeof y.componentWillUnmount=="function"){i=p,t=p.return;try{e=i,y.props=e.memoizedProps,y.state=e.memoizedState,y.componentWillUnmount()}catch(b){G1(i,t,b)}}break;case 5:Uo(p,p.return);break;case 22:if(p.memoizedState!==null){$m(f);continue}}m!==null?(m.return=p,vt=m):$m(f)}h=h.sibling}e:for(h=null,f=n;;){if(f.tag===5){if(h===null){h=f;try{r=f.stateNode,d?(a=r.style,typeof a.setProperty=="function"?a.setProperty("display","none","important"):a.display="none"):(o=f.stateNode,l=f.memoizedProps.style,s=l!=null&&l.hasOwnProperty("display")?l.display:null,o.style.display=h_("display",s))}catch(b){G1(n,n.return,b)}}}else if(f.tag===6){if(h===null)try{f.stateNode.nodeValue=d?"":f.memoizedProps}catch(b){G1(n,n.return,b)}}else if((f.tag!==22&&f.tag!==23||f.memoizedState===null||f===n)&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===n)break e;for(;f.sibling===null;){if(f.return===null||f.return===n)break e;h===f&&(h=null),f=f.return}h===f&&(h=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:Qi(e,n),E2(n),i&4&&Ym(n);break;case 21:break;default:Qi(e,n),E2(n)}}function E2(n){var e=n.flags;if(e&2){try{e:{for(var t=n.return;t!==null;){if(Fx(t)){var i=t;break e}t=t.return}throw Error(Ge(160))}switch(i.tag){case 5:var r=i.stateNode;i.flags&32&&(Vl(r,""),i.flags&=-33);var a=Xm(n);sh(n,a,r);break;case 3:case 4:var s=i.stateNode.containerInfo,o=Xm(n);ah(n,o,s);break;default:throw Error(Ge(161))}}catch(l){G1(n,n.return,l)}n.flags&=-3}e&4096&&(n.flags&=-4097)}function TT(n,e,t){vt=n,Hx(n)}function Hx(n,e,t){for(var i=(n.mode&1)!==0;vt!==null;){var r=vt,a=r.child;if(r.tag===22&&i){var s=r.memoizedState!==null||Q0;if(!s){var o=r.alternate,l=o!==null&&o.memoizedState!==null||Dn;o=Q0;var d=Dn;if(Q0=s,(Dn=l)&&!d)for(vt=r;vt!==null;)s=vt,l=s.child,s.tag===22&&s.memoizedState!==null?Km(r):l!==null?(l.return=s,vt=l):Km(r);for(;a!==null;)vt=a,Hx(a),a=a.sibling;vt=r,Q0=o,Dn=d}qm(n)}else r.subtreeFlags&8772&&a!==null?(a.return=r,vt=a):qm(n)}}function qm(n){for(;vt!==null;){var e=vt;if(e.flags&8772){var t=e.alternate;try{if(e.flags&8772)switch(e.tag){case 0:case 11:case 15:Dn||du(5,e);break;case 1:var i=e.stateNode;if(e.flags&4&&!Dn)if(t===null)i.componentDidMount();else{var r=e.elementType===e.type?t.memoizedProps:i2(e.type,t.memoizedProps);i.componentDidUpdate(r,t.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var a=e.updateQueue;a!==null&&Rm(e,a,i);break;case 3:var s=e.updateQueue;if(s!==null){if(t=null,e.child!==null)switch(e.child.tag){case 5:t=e.child.stateNode;break;case 1:t=e.child.stateNode}Rm(e,s,t)}break;case 5:var o=e.stateNode;if(t===null&&e.flags&4){t=o;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&t.focus();break;case"img":l.src&&(t.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var d=e.alternate;if(d!==null){var h=d.memoizedState;if(h!==null){var f=h.dehydrated;f!==null&&Yl(f)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(Ge(163))}Dn||e.flags&512&&rh(e)}catch(p){G1(e,e.return,p)}}if(e===n){vt=null;break}if(t=e.sibling,t!==null){t.return=e.return,vt=t;break}vt=e.return}}function $m(n){for(;vt!==null;){var e=vt;if(e===n){vt=null;break}var t=e.sibling;if(t!==null){t.return=e.return,vt=t;break}vt=e.return}}function Km(n){for(;vt!==null;){var e=vt;try{switch(e.tag){case 0:case 11:case 15:var t=e.return;try{du(4,e)}catch(l){G1(e,t,l)}break;case 1:var i=e.stateNode;if(typeof i.componentDidMount=="function"){var r=e.return;try{i.componentDidMount()}catch(l){G1(e,r,l)}}var a=e.return;try{rh(e)}catch(l){G1(e,a,l)}break;case 5:var s=e.return;try{rh(e)}catch(l){G1(e,s,l)}}}catch(l){G1(e,e.return,l)}if(e===n){vt=null;break}var o=e.sibling;if(o!==null){o.return=e.return,vt=o;break}vt=e.return}}var LT=Math.ceil,B5=Sr.ReactCurrentDispatcher,i9=Sr.ReactCurrentOwner,Xi=Sr.ReactCurrentBatchConfig,a1=0,xn=null,rn=null,Sn=0,_i=0,Fo=ga(0),dn=0,r4=null,Ss=0,hu=0,r9=0,Il=null,oi=null,a9=0,l3=1/0,nr=null,U5=!1,oh=null,ra=null,ec=!1,Jr=null,F5=0,Nl=0,lh=null,o5=-1,l5=0;function $n(){return a1&6?Q1():o5!==-1?o5:o5=Q1()}function aa(n){return n.mode&1?a1&2&&Sn!==0?Sn&-Sn:dT.transition!==null?(l5===0&&(l5=E_()),l5):(n=f1,n!==0||(n=window.event,n=n===void 0?16:k_(n.type)),n):1}function u2(n,e,t,i){if(50<Nl)throw Nl=0,lh=null,Error(Ge(185));D4(n,t,i),(!(a1&2)||n!==xn)&&(n===xn&&(!(a1&2)&&(hu|=t),dn===4&&$r(n,Sn)),di(n,i),t===1&&a1===0&&!(e.mode&1)&&(l3=Q1()+500,lu&&va()))}function di(n,e){var t=n.callbackNode;dP(n,e);var i=b5(n,n===xn?Sn:0);if(i===0)t!==null&&am(t),n.callbackNode=null,n.callbackPriority=0;else if(e=i&-i,n.callbackPriority!==e){if(t!=null&&am(t),e===1)n.tag===0?uT(Zm.bind(null,n)):Z_(Zm.bind(null,n)),sT(function(){!(a1&6)&&va()}),t=null;else{switch(P_(i)){case 1:t=R7;break;case 4:t=S_;break;case 16:t=w5;break;case 536870912:t=M_;break;default:t=w5}t=Kx(t,Vx.bind(null,n))}n.callbackPriority=e,n.callbackNode=t}}function Vx(n,e){if(o5=-1,l5=0,a1&6)throw Error(Ge(327));var t=n.callbackNode;if(e3()&&n.callbackNode!==t)return null;var i=b5(n,n===xn?Sn:0);if(i===0)return null;if(i&30||i&n.expiredLanes||e)e=z5(n,i);else{e=i;var r=a1;a1|=2;var a=Wx();(xn!==n||Sn!==e)&&(nr=null,l3=Q1()+500,hs(n,e));do try{RT();break}catch(o){Gx(n,o)}while(!0);G7(),B5.current=a,a1=r,rn!==null?e=0:(xn=null,Sn=0,e=dn)}if(e!==0){if(e===2&&(r=D8(n),r!==0&&(i=r,e=ch(n,r))),e===1)throw t=r4,hs(n,0),$r(n,i),di(n,Q1()),t;if(e===6)$r(n,i);else{if(r=n.current.alternate,!(i&30)&&!CT(r)&&(e=z5(n,i),e===2&&(a=D8(n),a!==0&&(i=a,e=ch(n,a))),e===1))throw t=r4,hs(n,0),$r(n,i),di(n,Q1()),t;switch(n.finishedWork=r,n.finishedLanes=i,e){case 0:case 1:throw Error(Ge(345));case 2:$a(n,oi,nr);break;case 3:if($r(n,i),(i&130023424)===i&&(e=a9+500-Q1(),10<e)){if(b5(n,0)!==0)break;if(r=n.suspendedLanes,(r&i)!==i){$n(),n.pingedLanes|=n.suspendedLanes&r;break}n.timeoutHandle=V8($a.bind(null,n,oi,nr),e);break}$a(n,oi,nr);break;case 4:if($r(n,i),(i&4194240)===i)break;for(e=n.eventTimes,r=-1;0<i;){var s=31-c2(i);a=1<<s,s=e[s],s>r&&(r=s),i&=~a}if(i=r,i=Q1()-i,i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*LT(i/1960))-i,10<i){n.timeoutHandle=V8($a.bind(null,n,oi,nr),i);break}$a(n,oi,nr);break;case 5:$a(n,oi,nr);break;default:throw Error(Ge(329))}}}return di(n,Q1()),n.callbackNode===t?Vx.bind(null,n):null}function ch(n,e){var t=Il;return n.current.memoizedState.isDehydrated&&(hs(n,e).flags|=256),n=z5(n,e),n!==2&&(e=oi,oi=t,e!==null&&uh(e)),n}function uh(n){oi===null?oi=n:oi.push.apply(oi,n)}function CT(n){for(var e=n;;){if(e.flags&16384){var t=e.updateQueue;if(t!==null&&(t=t.stores,t!==null))for(var i=0;i<t.length;i++){var r=t[i],a=r.getSnapshot;r=r.value;try{if(!d2(a(),r))return!1}catch{return!1}}}if(t=e.child,e.subtreeFlags&16384&&t!==null)t.return=e,e=t;else{if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function $r(n,e){for(e&=~r9,e&=~hu,n.suspendedLanes|=e,n.pingedLanes&=~e,n=n.expirationTimes;0<e;){var t=31-c2(e),i=1<<t;n[t]=-1,e&=~i}}function Zm(n){if(a1&6)throw Error(Ge(327));e3();var e=b5(n,0);if(!(e&1))return di(n,Q1()),null;var t=z5(n,e);if(n.tag!==0&&t===2){var i=D8(n);i!==0&&(e=i,t=ch(n,i))}if(t===1)throw t=r4,hs(n,0),$r(n,e),di(n,Q1()),t;if(t===6)throw Error(Ge(345));return n.finishedWork=n.current.alternate,n.finishedLanes=e,$a(n,oi,nr),di(n,Q1()),null}function s9(n,e){var t=a1;a1|=1;try{return n(e)}finally{a1=t,a1===0&&(l3=Q1()+500,lu&&va())}}function Ms(n){Jr!==null&&Jr.tag===0&&!(a1&6)&&e3();var e=a1;a1|=1;var t=Xi.transition,i=f1;try{if(Xi.transition=null,f1=1,n)return n()}finally{f1=i,Xi.transition=t,a1=e,!(a1&6)&&va()}}function o9(){_i=Fo.current,T1(Fo)}function hs(n,e){n.finishedWork=null,n.finishedLanes=0;var t=n.timeoutHandle;if(t!==-1&&(n.timeoutHandle=-1,aT(t)),rn!==null)for(t=rn.return;t!==null;){var i=t;switch(j7(i),i.tag){case 1:i=i.type.childContextTypes,i!=null&&T5();break;case 3:s3(),T1(ci),T1(Fn),K7();break;case 5:$7(i);break;case 4:s3();break;case 13:T1(I1);break;case 19:T1(I1);break;case 10:W7(i.type._context);break;case 22:case 23:o9()}t=t.return}if(xn=n,rn=n=sa(n.current,null),Sn=_i=e,dn=0,r4=null,r9=hu=Ss=0,oi=Il=null,is!==null){for(e=0;e<is.length;e++)if(t=is[e],i=t.interleaved,i!==null){t.interleaved=null;var r=i.next,a=t.pending;if(a!==null){var s=a.next;a.next=r,i.next=s}t.pending=i}is=null}return n}function Gx(n,e){do{var t=rn;try{if(G7(),r5.current=O5,D5){for(var i=O1.memoizedState;i!==null;){var r=i.queue;r!==null&&(r.pending=null),i=i.next}D5=!1}if(bs=0,_n=cn=O1=null,Rl=!1,t4=0,i9.current=null,t===null||t.return===null){dn=1,r4=e,rn=null;break}e:{var a=n,s=t.return,o=t,l=e;if(e=Sn,o.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var d=l,h=o,f=h.tag;if(!(h.mode&1)&&(f===0||f===11||f===15)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var m=Um(s);if(m!==null){m.flags&=-257,Fm(m,s,o,a,e),m.mode&1&&Bm(a,d,e),e=m,l=d;var y=e.updateQueue;if(y===null){var b=new Set;b.add(l),e.updateQueue=b}else y.add(l);break e}else{if(!(e&1)){Bm(a,d,e),l9();break e}l=Error(Ge(426))}}else if(R1&&o.mode&1){var _=Um(s);if(_!==null){!(_.flags&65536)&&(_.flags|=256),Fm(_,s,o,a,e),H7(o3(l,o));break e}}a=l=o3(l,o),dn!==4&&(dn=2),Il===null?Il=[a]:Il.push(a),a=s;do{switch(a.tag){case 3:a.flags|=65536,e&=-e,a.lanes|=e;var g=Tx(a,l,e);Am(a,g);break e;case 1:o=l;var x=a.type,S=a.stateNode;if(!(a.flags&128)&&(typeof x.getDerivedStateFromError=="function"||S!==null&&typeof S.componentDidCatch=="function"&&(ra===null||!ra.has(S)))){a.flags|=65536,e&=-e,a.lanes|=e;var E=Lx(a,o,e);Am(a,E);break e}}a=a.return}while(a!==null)}Yx(t)}catch(A){e=A,rn===t&&t!==null&&(rn=t=t.return);continue}break}while(!0)}function Wx(){var n=B5.current;return B5.current=O5,n===null?O5:n}function l9(){(dn===0||dn===3||dn===2)&&(dn=4),xn===null||!(Ss&268435455)&&!(hu&268435455)||$r(xn,Sn)}function z5(n,e){var t=a1;a1|=2;var i=Wx();(xn!==n||Sn!==e)&&(nr=null,hs(n,e));do try{AT();break}catch(r){Gx(n,r)}while(!0);if(G7(),a1=t,B5.current=i,rn!==null)throw Error(Ge(261));return xn=null,Sn=0,dn}function AT(){for(;rn!==null;)Xx(rn)}function RT(){for(;rn!==null&&!nP();)Xx(rn)}function Xx(n){var e=$x(n.alternate,n,_i);n.memoizedProps=n.pendingProps,e===null?Yx(n):rn=e,i9.current=null}function Yx(n){var e=n;do{var t=e.alternate;if(n=e.return,e.flags&32768){if(t=MT(t,e),t!==null){t.flags&=32767,rn=t;return}if(n!==null)n.flags|=32768,n.subtreeFlags=0,n.deletions=null;else{dn=6,rn=null;return}}else if(t=ST(t,e,_i),t!==null){rn=t;return}if(e=e.sibling,e!==null){rn=e;return}rn=e=n}while(e!==null);dn===0&&(dn=5)}function $a(n,e,t){var i=f1,r=Xi.transition;try{Xi.transition=null,f1=1,kT(n,e,t,i)}finally{Xi.transition=r,f1=i}return null}function kT(n,e,t,i){do e3();while(Jr!==null);if(a1&6)throw Error(Ge(327));t=n.finishedWork;var r=n.finishedLanes;if(t===null)return null;if(n.finishedWork=null,n.finishedLanes=0,t===n.current)throw Error(Ge(177));n.callbackNode=null,n.callbackPriority=0;var a=t.lanes|t.childLanes;if(hP(n,a),n===xn&&(rn=xn=null,Sn=0),!(t.subtreeFlags&2064)&&!(t.flags&2064)||ec||(ec=!0,Kx(w5,function(){return e3(),null})),a=(t.flags&15990)!==0,t.subtreeFlags&15990||a){a=Xi.transition,Xi.transition=null;var s=f1;f1=1;var o=a1;a1|=4,i9.current=null,PT(n,t),jx(t,n),JP(j8),S5=!!z8,j8=z8=null,n.current=t,TT(t),iP(),a1=o,f1=s,Xi.transition=a}else n.current=t;if(ec&&(ec=!1,Jr=n,F5=r),a=n.pendingLanes,a===0&&(ra=null),sP(t.stateNode),di(n,Q1()),e!==null)for(i=n.onRecoverableError,t=0;t<e.length;t++)r=e[t],i(r.value,{componentStack:r.stack,digest:r.digest});if(U5)throw U5=!1,n=oh,oh=null,n;return F5&1&&n.tag!==0&&e3(),a=n.pendingLanes,a&1?n===lh?Nl++:(Nl=0,lh=n):Nl=0,va(),null}function e3(){if(Jr!==null){var n=P_(F5),e=Xi.transition,t=f1;try{if(Xi.transition=null,f1=16>n?16:n,Jr===null)var i=!1;else{if(n=Jr,Jr=null,F5=0,a1&6)throw Error(Ge(331));var r=a1;for(a1|=4,vt=n.current;vt!==null;){var a=vt,s=a.child;if(vt.flags&16){var o=a.deletions;if(o!==null){for(var l=0;l<o.length;l++){var d=o[l];for(vt=d;vt!==null;){var h=vt;switch(h.tag){case 0:case 11:case 15:kl(8,h,a)}var f=h.child;if(f!==null)f.return=h,vt=f;else for(;vt!==null;){h=vt;var p=h.sibling,m=h.return;if(Ux(h),h===d){vt=null;break}if(p!==null){p.return=m,vt=p;break}vt=m}}}var y=a.alternate;if(y!==null){var b=y.child;if(b!==null){y.child=null;do{var _=b.sibling;b.sibling=null,b=_}while(b!==null)}}vt=a}}if(a.subtreeFlags&2064&&s!==null)s.return=a,vt=s;else e:for(;vt!==null;){if(a=vt,a.flags&2048)switch(a.tag){case 0:case 11:case 15:kl(9,a,a.return)}var g=a.sibling;if(g!==null){g.return=a.return,vt=g;break e}vt=a.return}}var x=n.current;for(vt=x;vt!==null;){s=vt;var S=s.child;if(s.subtreeFlags&2064&&S!==null)S.return=s,vt=S;else e:for(s=x;vt!==null;){if(o=vt,o.flags&2048)try{switch(o.tag){case 0:case 11:case 15:du(9,o)}}catch(A){G1(o,o.return,A)}if(o===s){vt=null;break e}var E=o.sibling;if(E!==null){E.return=o.return,vt=E;break e}vt=o.return}}if(a1=r,va(),R2&&typeof R2.onPostCommitFiberRoot=="function")try{R2.onPostCommitFiberRoot(iu,n)}catch{}i=!0}return i}finally{f1=t,Xi.transition=e}}return!1}function Jm(n,e,t){e=o3(t,e),e=Tx(n,e,1),n=ia(n,e,1),e=$n(),n!==null&&(D4(n,1,e),di(n,e))}function G1(n,e,t){if(n.tag===3)Jm(n,n,t);else for(;e!==null;){if(e.tag===3){Jm(e,n,t);break}else if(e.tag===1){var i=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof i.componentDidCatch=="function"&&(ra===null||!ra.has(i))){n=o3(t,n),n=Lx(e,n,1),e=ia(e,n,1),n=$n(),e!==null&&(D4(e,1,n),di(e,n));break}}e=e.return}}function IT(n,e,t){var i=n.pingCache;i!==null&&i.delete(e),e=$n(),n.pingedLanes|=n.suspendedLanes&t,xn===n&&(Sn&t)===t&&(dn===4||dn===3&&(Sn&130023424)===Sn&&500>Q1()-a9?hs(n,0):r9|=t),di(n,e)}function qx(n,e){e===0&&(n.mode&1?(e=G0,G0<<=1,!(G0&130023424)&&(G0=4194304)):e=1);var t=$n();n=yr(n,e),n!==null&&(D4(n,e,t),di(n,t))}function NT(n){var e=n.memoizedState,t=0;e!==null&&(t=e.retryLane),qx(n,t)}function DT(n,e){var t=0;switch(n.tag){case 13:var i=n.stateNode,r=n.memoizedState;r!==null&&(t=r.retryLane);break;case 19:i=n.stateNode;break;default:throw Error(Ge(314))}i!==null&&i.delete(e),qx(n,t)}var $x;$x=function(n,e,t){if(n!==null)if(n.memoizedProps!==e.pendingProps||ci.current)li=!0;else{if(!(n.lanes&t)&&!(e.flags&128))return li=!1,bT(n,e,t);li=!!(n.flags&131072)}else li=!1,R1&&e.flags&1048576&&J_(e,A5,e.index);switch(e.lanes=0,e.tag){case 2:var i=e.type;s5(n,e),n=e.pendingProps;var r=i3(e,Fn.current);Qo(e,t),r=J7(null,e,i,n,r,t);var a=Q7();return e.flags|=1,typeof r=="object"&&r!==null&&typeof r.render=="function"&&r.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,ui(i)?(a=!0,L5(e)):a=!1,e.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,Y7(e),r.updater=cu,e.stateNode=r,r._reactInternals=e,K8(e,i,n,t),e=Q8(null,e,i,!0,a,t)):(e.tag=0,R1&&a&&z7(e),Xn(null,e,r,t),e=e.child),e;case 16:i=e.elementType;e:{switch(s5(n,e),n=e.pendingProps,r=i._init,i=r(i._payload),e.type=i,r=e.tag=BT(i),n=i2(i,n),r){case 0:e=J8(null,e,i,n,t);break e;case 1:e=Hm(null,e,i,n,t);break e;case 11:e=zm(null,e,i,n,t);break e;case 14:e=jm(null,e,i,i2(i.type,n),t);break e}throw Error(Ge(306,i,""))}return e;case 0:return i=e.type,r=e.pendingProps,r=e.elementType===i?r:i2(i,r),J8(n,e,i,r,t);case 1:return i=e.type,r=e.pendingProps,r=e.elementType===i?r:i2(i,r),Hm(n,e,i,r,t);case 3:e:{if(kx(e),n===null)throw Error(Ge(387));i=e.pendingProps,a=e.memoizedState,r=a.element,nx(n,e),I5(e,i,null,t);var s=e.memoizedState;if(i=s.element,a.isDehydrated)if(a={element:i,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},e.updateQueue.baseState=a,e.memoizedState=a,e.flags&256){r=o3(Error(Ge(423)),e),e=Vm(n,e,i,t,r);break e}else if(i!==r){r=o3(Error(Ge(424)),e),e=Vm(n,e,i,t,r);break e}else for(bi=na(e.stateNode.containerInfo.firstChild),Si=e,R1=!0,o2=null,t=sx(e,null,i,t),e.child=t;t;)t.flags=t.flags&-3|4096,t=t.sibling;else{if(r3(),i===r){e=_r(n,e,t);break e}Xn(n,e,i,t)}e=e.child}return e;case 5:return ox(e),n===null&&Y8(e),i=e.type,r=e.pendingProps,a=n!==null?n.memoizedProps:null,s=r.children,H8(i,r)?s=null:a!==null&&H8(i,a)&&(e.flags|=32),Rx(n,e),Xn(n,e,s,t),e.child;case 6:return n===null&&Y8(e),null;case 13:return Ix(n,e,t);case 4:return q7(e,e.stateNode.containerInfo),i=e.pendingProps,n===null?e.child=a3(e,null,i,t):Xn(n,e,i,t),e.child;case 11:return i=e.type,r=e.pendingProps,r=e.elementType===i?r:i2(i,r),zm(n,e,i,r,t);case 7:return Xn(n,e,e.pendingProps,t),e.child;case 8:return Xn(n,e,e.pendingProps.children,t),e.child;case 12:return Xn(n,e,e.pendingProps.children,t),e.child;case 10:e:{if(i=e.type._context,r=e.pendingProps,a=e.memoizedProps,s=r.value,E1(R5,i._currentValue),i._currentValue=s,a!==null)if(d2(a.value,s)){if(a.children===r.children&&!ci.current){e=_r(n,e,t);break e}}else for(a=e.child,a!==null&&(a.return=e);a!==null;){var o=a.dependencies;if(o!==null){s=a.child;for(var l=o.firstContext;l!==null;){if(l.context===i){if(a.tag===1){l=fr(-1,t&-t),l.tag=2;var d=a.updateQueue;if(d!==null){d=d.shared;var h=d.pending;h===null?l.next=l:(l.next=h.next,h.next=l),d.pending=l}}a.lanes|=t,l=a.alternate,l!==null&&(l.lanes|=t),q8(a.return,t,e),o.lanes|=t;break}l=l.next}}else if(a.tag===10)s=a.type===e.type?null:a.child;else if(a.tag===18){if(s=a.return,s===null)throw Error(Ge(341));s.lanes|=t,o=s.alternate,o!==null&&(o.lanes|=t),q8(s,t,e),s=a.sibling}else s=a.child;if(s!==null)s.return=a;else for(s=a;s!==null;){if(s===e){s=null;break}if(a=s.sibling,a!==null){a.return=s.return,s=a;break}s=s.return}a=s}Xn(n,e,r.children,t),e=e.child}return e;case 9:return r=e.type,i=e.pendingProps.children,Qo(e,t),r=Yi(r),i=i(r),e.flags|=1,Xn(n,e,i,t),e.child;case 14:return i=e.type,r=i2(i,e.pendingProps),r=i2(i.type,r),jm(n,e,i,r,t);case 15:return Cx(n,e,e.type,e.pendingProps,t);case 17:return i=e.type,r=e.pendingProps,r=e.elementType===i?r:i2(i,r),s5(n,e),e.tag=1,ui(i)?(n=!0,L5(e)):n=!1,Qo(e,t),rx(e,i,r),K8(e,i,r,t),Q8(null,e,i,!0,n,t);case 19:return Nx(n,e,t);case 22:return Ax(n,e,t)}throw Error(Ge(156,e.tag))};function Kx(n,e){return b_(n,e)}function OT(n,e,t,i){this.tag=n,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Gi(n,e,t,i){return new OT(n,e,t,i)}function c9(n){return n=n.prototype,!(!n||!n.isReactComponent)}function BT(n){if(typeof n=="function")return c9(n)?1:0;if(n!=null){if(n=n.$$typeof,n===L7)return 11;if(n===C7)return 14}return 2}function sa(n,e){var t=n.alternate;return t===null?(t=Gi(n.tag,e,n.key,n.mode),t.elementType=n.elementType,t.type=n.type,t.stateNode=n.stateNode,t.alternate=n,n.alternate=t):(t.pendingProps=e,t.type=n.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=n.flags&14680064,t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,e=n.dependencies,t.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},t.sibling=n.sibling,t.index=n.index,t.ref=n.ref,t}function c5(n,e,t,i,r,a){var s=2;if(i=n,typeof n=="function")c9(n)&&(s=1);else if(typeof n=="string")s=5;else e:switch(n){case Co:return fs(t.children,r,a,e);case T7:s=8,r|=8;break;case x8:return n=Gi(12,t,e,r|2),n.elementType=x8,n.lanes=a,n;case w8:return n=Gi(13,t,e,r),n.elementType=w8,n.lanes=a,n;case b8:return n=Gi(19,t,e,r),n.elementType=b8,n.lanes=a,n;case a_:return fu(t,r,a,e);default:if(typeof n=="object"&&n!==null)switch(n.$$typeof){case i_:s=10;break e;case r_:s=9;break e;case L7:s=11;break e;case C7:s=14;break e;case Wr:s=16,i=null;break e}throw Error(Ge(130,n==null?n:typeof n,""))}return e=Gi(s,t,e,r),e.elementType=n,e.type=i,e.lanes=a,e}function fs(n,e,t,i){return n=Gi(7,n,i,e),n.lanes=t,n}function fu(n,e,t,i){return n=Gi(22,n,i,e),n.elementType=a_,n.lanes=t,n.stateNode={isHidden:!1},n}function xd(n,e,t){return n=Gi(6,n,null,e),n.lanes=t,n}function wd(n,e,t){return e=Gi(4,n.children!==null?n.children:[],n.key,e),e.lanes=t,e.stateNode={containerInfo:n.containerInfo,pendingChildren:null,implementation:n.implementation},e}function UT(n,e,t,i,r){this.tag=e,this.containerInfo=n,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=td(0),this.expirationTimes=td(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=td(0),this.identifierPrefix=i,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function u9(n,e,t,i,r,a,s,o,l){return n=new UT(n,e,t,o,l),e===1?(e=1,a===!0&&(e|=8)):e=0,a=Gi(3,null,null,e),n.current=a,a.stateNode=n,a.memoizedState={element:i,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Y7(a),n}function FT(n,e,t){var i=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Lo,key:i==null?null:""+i,children:n,containerInfo:e,implementation:t}}function Zx(n){if(!n)return ha;n=n._reactInternals;e:{if(ks(n)!==n||n.tag!==1)throw Error(Ge(170));var e=n;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(ui(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(Ge(171))}if(n.tag===1){var t=n.type;if(ui(t))return K_(n,t,e)}return e}function Jx(n,e,t,i,r,a,s,o,l){return n=u9(t,i,!0,n,r,a,s,o,l),n.context=Zx(null),t=n.current,i=$n(),r=aa(t),a=fr(i,r),a.callback=e??null,ia(t,a,r),n.current.lanes=r,D4(n,r,i),di(n,i),n}function pu(n,e,t,i){var r=e.current,a=$n(),s=aa(r);return t=Zx(t),e.context===null?e.context=t:e.pendingContext=t,e=fr(a,s),e.payload={element:n},i=i===void 0?null:i,i!==null&&(e.callback=i),n=ia(r,e,s),n!==null&&(u2(n,r,s,a),i5(n,r,s)),s}function j5(n){if(n=n.current,!n.child)return null;switch(n.child.tag){case 5:return n.child.stateNode;default:return n.child.stateNode}}function Qm(n,e){if(n=n.memoizedState,n!==null&&n.dehydrated!==null){var t=n.retryLane;n.retryLane=t!==0&&t<e?t:e}}function d9(n,e){Qm(n,e),(n=n.alternate)&&Qm(n,e)}function zT(){return null}var Qx=typeof reportError=="function"?reportError:function(n){console.error(n)};function h9(n){this._internalRoot=n}mu.prototype.render=h9.prototype.render=function(n){var e=this._internalRoot;if(e===null)throw Error(Ge(409));pu(n,e,null,null)};mu.prototype.unmount=h9.prototype.unmount=function(){var n=this._internalRoot;if(n!==null){this._internalRoot=null;var e=n.containerInfo;Ms(function(){pu(null,n,null,null)}),e[vr]=null}};function mu(n){this._internalRoot=n}mu.prototype.unstable_scheduleHydration=function(n){if(n){var e=C_();n={blockedOn:null,target:n,priority:e};for(var t=0;t<qr.length&&e!==0&&e<qr[t].priority;t++);qr.splice(t,0,n),t===0&&R_(n)}};function f9(n){return!(!n||n.nodeType!==1&&n.nodeType!==9&&n.nodeType!==11)}function gu(n){return!(!n||n.nodeType!==1&&n.nodeType!==9&&n.nodeType!==11&&(n.nodeType!==8||n.nodeValue!==" react-mount-point-unstable "))}function eg(){}function jT(n,e,t,i,r){if(r){if(typeof i=="function"){var a=i;i=function(){var d=j5(s);a.call(d)}}var s=Jx(e,i,n,0,null,!1,!1,"",eg);return n._reactRootContainer=s,n[vr]=s.current,Kl(n.nodeType===8?n.parentNode:n),Ms(),s}for(;r=n.lastChild;)n.removeChild(r);if(typeof i=="function"){var o=i;i=function(){var d=j5(l);o.call(d)}}var l=u9(n,0,!1,null,null,!1,!1,"",eg);return n._reactRootContainer=l,n[vr]=l.current,Kl(n.nodeType===8?n.parentNode:n),Ms(function(){pu(e,l,t,i)}),l}function vu(n,e,t,i,r){var a=t._reactRootContainer;if(a){var s=a;if(typeof r=="function"){var o=r;r=function(){var l=j5(s);o.call(l)}}pu(e,s,n,r)}else s=jT(t,e,n,r,i);return j5(s)}T_=function(n){switch(n.tag){case 3:var e=n.stateNode;if(e.current.memoizedState.isDehydrated){var t=wl(e.pendingLanes);t!==0&&(k7(e,t|1),di(e,Q1()),!(a1&6)&&(l3=Q1()+500,va()))}break;case 13:Ms(function(){var i=yr(n,1);if(i!==null){var r=$n();u2(i,n,1,r)}}),d9(n,1)}};I7=function(n){if(n.tag===13){var e=yr(n,134217728);if(e!==null){var t=$n();u2(e,n,134217728,t)}d9(n,134217728)}};L_=function(n){if(n.tag===13){var e=aa(n),t=yr(n,e);if(t!==null){var i=$n();u2(t,n,e,i)}d9(n,e)}};C_=function(){return f1};A_=function(n,e){var t=f1;try{return f1=n,e()}finally{f1=t}};k8=function(n,e,t){switch(e){case"input":if(E8(n,t),e=t.name,t.type==="radio"&&e!=null){for(t=n;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<t.length;e++){var i=t[e];if(i!==n&&i.form===n.form){var r=ou(i);if(!r)throw Error(Ge(90));o_(i),E8(i,r)}}}break;case"textarea":c_(n,t);break;case"select":e=t.value,e!=null&&$o(n,!!t.multiple,e,!1)}};g_=s9;v_=Ms;var HT={usingClientEntryPoint:!1,Events:[B4,Io,ou,p_,m_,s9]},Z3={findFiberByHostInstance:ns,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},VT={bundleType:Z3.bundleType,version:Z3.version,rendererPackageName:Z3.rendererPackageName,rendererConfig:Z3.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Sr.ReactCurrentDispatcher,findHostInstanceByFiber:function(n){return n=x_(n),n===null?null:n.stateNode},findFiberByHostInstance:Z3.findFiberByHostInstance||zT,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var tc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!tc.isDisabled&&tc.supportsFiber)try{iu=tc.inject(VT),R2=tc}catch{}}Pi.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=HT;Pi.createPortal=function(n,e){var t=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!f9(e))throw Error(Ge(200));return FT(n,e,null,t)};Pi.createRoot=function(n,e){if(!f9(n))throw Error(Ge(299));var t=!1,i="",r=Qx;return e!=null&&(e.unstable_strictMode===!0&&(t=!0),e.identifierPrefix!==void 0&&(i=e.identifierPrefix),e.onRecoverableError!==void 0&&(r=e.onRecoverableError)),e=u9(n,1,!1,null,null,t,!1,i,r),n[vr]=e.current,Kl(n.nodeType===8?n.parentNode:n),new h9(e)};Pi.findDOMNode=function(n){if(n==null)return null;if(n.nodeType===1)return n;var e=n._reactInternals;if(e===void 0)throw typeof n.render=="function"?Error(Ge(188)):(n=Object.keys(n).join(","),Error(Ge(268,n)));return n=x_(e),n=n===null?null:n.stateNode,n};Pi.flushSync=function(n){return Ms(n)};Pi.hydrate=function(n,e,t){if(!gu(e))throw Error(Ge(200));return vu(null,n,e,!0,t)};Pi.hydrateRoot=function(n,e,t){if(!f9(n))throw Error(Ge(405));var i=t!=null&&t.hydratedSources||null,r=!1,a="",s=Qx;if(t!=null&&(t.unstable_strictMode===!0&&(r=!0),t.identifierPrefix!==void 0&&(a=t.identifierPrefix),t.onRecoverableError!==void 0&&(s=t.onRecoverableError)),e=Jx(e,null,n,1,t??null,r,!1,a,s),n[vr]=e.current,Kl(n),i)for(n=0;n<i.length;n++)t=i[n],r=t._getVersion,r=r(t._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[t,r]:e.mutableSourceEagerHydrationData.push(t,r);return new mu(e)};Pi.render=function(n,e,t){if(!gu(e))throw Error(Ge(200));return vu(null,n,e,!1,t)};Pi.unmountComponentAtNode=function(n){if(!gu(n))throw Error(Ge(40));return n._reactRootContainer?(Ms(function(){vu(null,null,n,!1,function(){n._reactRootContainer=null,n[vr]=null})}),!0):!1};Pi.unstable_batchedUpdates=s9;Pi.unstable_renderSubtreeIntoContainer=function(n,e,t,i){if(!gu(t))throw Error(Ge(200));if(n==null||n._reactInternals===void 0)throw Error(Ge(38));return vu(n,e,t,!1,i)};Pi.version="18.2.0-next-9e3b772b8-20220608";function ew(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(ew)}catch(n){console.error(n)}}ew(),Jy.exports=Pi;var p9=Jy.exports;const Sl=I4(p9),GT=jy({__proto__:null,default:Sl},[p9]);var tg=p9;y8.createRoot=tg.createRoot,y8.hydrateRoot=tg.hydrateRoot;const tw=n=>I.createElement("svg",{fill:"#000000",width:"800px",height:"800px",viewBox:"0 -64 640 640",xmlns:"http://www.w3.org/2000/svg",...n},I.createElement("path",{d:"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM44.81 205.66l88.74 80a62.607 62.607 0 0 0 25.47 13.93l287.6 78.35c26.48 7.21 54.56 8.72 81 1.36 29.67-8.27 43.44-21.21 47.25-35.71 3.83-14.5-1.73-32.71-23.37-54.96-19.28-19.82-44.35-32.79-70.83-40l-97.51-26.56L282.8 30.22c-1.51-5.81-5.95-10.35-11.66-11.91L206.05.58c-10.56-2.88-20.9 5.32-20.71 16.44l47.92 164.21-102.2-27.84-27.59-67.88c-1.93-4.89-6.01-8.57-11.02-9.93L52.72 64.75c-10.34-2.82-20.53 5-20.72 15.88l.23 101.78c.19 8.91 6.03 17.34 12.58 23.25z"})),WT=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",...n},I.createElement("path",{d:"M15 6L9 12L15 18",stroke:"#000000",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"})),XT=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg",...n},I.createElement("path",{fill:"#000000",d:"M195.2 195.2a64 64 0 0 1 90.496 0L512 421.504 738.304 195.2a64 64 0 0 1 90.496 90.496L602.496 512 828.8 738.304a64 64 0 0 1-90.496 90.496L512 602.496 285.696 828.8a64 64 0 0 1-90.496-90.496L421.504 512 195.2 285.696a64 64 0 0 1 0-90.496z"})),nw=n=>I.createElement("svg",{fill:"#000000",width:"800px",height:"800px",viewBox:"0 -64 640 640",xmlns:"http://www.w3.org/2000/svg",...n},I.createElement("path",{d:"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM80.55 341.27c6.28 6.84 15.1 10.72 24.33 10.71l130.54-.18a65.62 65.62 0 0 0 29.64-7.12l290.96-147.65c26.74-13.57 50.71-32.94 67.02-58.31 18.31-28.48 20.3-49.09 13.07-63.65-7.21-14.57-24.74-25.27-58.25-27.45-29.85-1.94-59.54 5.92-86.28 19.48l-98.51 49.99-218.7-82.06a17.799 17.799 0 0 0-18-1.11L90.62 67.29c-10.67 5.41-13.25 19.65-5.17 28.53l156.22 98.1-103.21 52.38-72.35-36.47a17.804 17.804 0 0 0-16.07.02L9.91 230.22c-10.44 5.3-13.19 19.12-5.57 28.08l76.21 82.97z"})),ng=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 -0.5 15 15",id:"meteor-icon-kit__regular-double-chevron-right-s",fill:"none",xmlns:"http://www.w3.org/2000/svg",...n},I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M0.29289 12.2929L5.5858 7L0.29289 1.70711C-0.09763 1.31658 -0.09763 0.68342 0.29289 0.29289C0.68342 -0.09763 1.31658 -0.09763 1.70711 0.29289L7.7071 6.2929C8.0976 6.6834 8.0976 7.3166 7.7071 7.7071L1.70711 13.7071C1.31658 14.0976 0.68342 14.0976 0.29289 13.7071C-0.09763 13.3166 -0.09763 12.6834 0.29289 12.2929zM7.2929 12.2929L12.5858 7L7.2929 1.70711C6.9024 1.31658 6.9024 0.68342 7.2929 0.29289C7.6834 -0.09763 8.3166 -0.09763 8.7071 0.29289L14.7071 6.2929C15.0976 6.6834 15.0976 7.3166 14.7071 7.7071L8.7071 13.7071C8.3166 14.0976 7.6834 14.0976 7.2929 13.7071C6.9024 13.3166 6.9024 12.6834 7.2929 12.2929z",fill:"#758CA3"})),YT=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",id:"fullscreen-enter",...n},I.createElement("path",{d:"M4 2C2.89543 2 2 2.89543 2 4V8C2 8.55228 2.44772 9 3 9C3.55228 9 4 8.55228 4 8V4H8C8.55228 4 9 3.55228 9 3C9 2.44772 8.55228 2 8 2H4Z",fill:"#000000"}),I.createElement("path",{d:"M20 2C21.1046 2 22 2.89543 22 4V8C22 8.55228 21.5523 9 21 9C20.4477 9 20 8.55228 20 8V4H16C15.4477 4 15 3.55228 15 3C15 2.44772 15.4477 2 16 2H20Z",fill:"#000000"}),I.createElement("path",{d:"M20 22C21.1046 22 22 21.1046 22 20V16C22 15.4477 21.5523 15 21 15C20.4477 15 20 15.4477 20 16V20H16C15.4477 20 15 20.4477 15 21C15 21.5523 15.4477 22 16 22H20Z",fill:"#000000"}),I.createElement("path",{d:"M2 20C2 21.1046 2.89543 22 4 22H8C8.55228 22 9 21.5523 9 21C9 20.4477 8.55228 20 8 20H4V16C4 15.4477 3.55228 15 3 15C2.44772 15 2 15.4477 2 16V20Z",fill:"#000000"})),qT=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",id:"fullscreen-exit",...n},I.createElement("path",{d:"M7 9C8.10457 9 9 8.10457 9 7V3C9 2.44772 8.55228 2 8 2C7.44772 2 7 2.44772 7 3V7H3C2.44772 7 2 7.44772 2 8C2 8.55228 2.44772 9 3 9H7Z",fill:"#000000"}),I.createElement("path",{d:"M17 9C15.8954 9 15 8.10457 15 7V3C15 2.44772 15.4477 2 16 2C16.5523 2 17 2.44772 17 3V7H21C21.5523 7 22 7.44772 22 8C22 8.55228 21.5523 9 21 9H17Z",fill:"#000000"}),I.createElement("path",{d:"M17 15C15.8954 15 15 15.8954 15 17V21C15 21.5523 15.4477 22 16 22C16.5523 22 17 21.5523 17 21V17H21C21.5523 17 22 16.5523 22 16C22 15.4477 21.5523 15 21 15H17Z",fill:"#000000"}),I.createElement("path",{d:"M9 17C9 15.8954 8.10457 15 7 15H3C2.44772 15 2 15.4477 2 16C2 16.5523 2.44772 17 3 17H7V21C7 21.5523 7.44772 22 8 22C8.55228 22 9 21.5523 9 21V17Z",fill:"#000000"})),$T=n=>I.createElement("svg",{id:"Layer_1","data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1025.27 1025.27",...n},I.createElement("defs",null,I.createElement("style",null,`\r
            .future-1 {\r
                fill-rule: evenodd;\r
            }\r
\r
            .future-2 {\r
                fill: none;\r
                stroke: #000;\r
                stroke-linecap: round;\r
                stroke-linejoin: round;\r
                stroke-width: 90px;\r
            }\r
        `)),I.createElement("path",{className:"future-1",d:"M385.85,840.92c-.07-12.61,6.93-25,18.44-38.92l-67.88-42c-4.29-1.8-4.18-4.41-1.75-7.5l14.15-12.33a10.19,10.19,0,0,1,8.29-1.56l83.45,13.17L509.12,676,346,568.1c-4.12-2.34-4.52-5.08-.3-8.29l23.15-18.9,211.77,57.16,61.67-67.33c20.75-18.36,41-26.67,56.64-22.95,8.6,2,11.7,4.56,14.42,12.61,5.34,15.74-2.47,37.11-21.17,59.21l-66.07,63.06,61.53,210.55-18.38,23.56c-3.11,4.21-5.86,3.9-8.28-.13L549.74,715.86,475.33,786l14.94,83.14a10.17,10.17,0,0,1-1.36,8.33l-12.07,14.43c-3,2.51-5.65,2.61-7.53-1.61l-43.37-67.13c-13.74,11.87-26,19.13-38.65,19.24-1.15,0-1.43-.42-1.44-1.5Z",transform:"translate(-25.77 -25.77)"}),I.createElement("path",{className:"future-2",d:"M70.77,382.52H1006M278.6,70.77V174.68M798.2,70.77V174.68M237,1006H839.76c58.2,0,87.31,0,109.53-11.32a103.85,103.85,0,0,0,45.42-45.42C1006,927.07,1006,898,1006,839.76V341c0-58.2,0-87.3-11.32-109.52A103.85,103.85,0,0,0,949.29,186c-22.22-11.33-51.33-11.33-109.53-11.33H237c-58.2,0-87.3,0-109.53,11.33a103.9,103.9,0,0,0-45.42,45.42C70.77,253.65,70.77,282.75,70.77,341V839.76c0,58.2,0,87.31,11.32,109.53a103.9,103.9,0,0,0,45.42,45.42C149.74,1006,178.84,1006,237,1006Z",transform:"translate(-25.77 -25.77)"})),KT=n=>I.createElement("svg",{id:"Layer_1",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",x:"0px",y:"0px",viewBox:"0 0 800 800",style:{enableBackground:"new 0 0 800 800"},xmlSpace:"preserve",...n},I.createElement("style",{type:"text/css"},`\r
		.language-0 {\r
			fill: none;\r
		}\r
	`),I.createElement("path",{className:"language-0",d:"M794.7,738.5L657.3,354.3c-9.7-25.3-31.3-40.9-56.1-40.9c-24.8,0-46,15.6-56.5,41.8l-137,383.4 c-6.4,17.9,2.8,37.7,20.7,44.1c17.9,6.4,37.7-2.8,44.1-20.7l28.5-79.5h200l28.5,79.5c5.1,14.2,18.4,23,32.6,23 c3.7,0,7.8-0.5,11.5-1.8c17.9-6.4,27.1-26.2,20.7-44.1L794.7,738.5z M526.3,613.1l75.4-211l75.4,211H526.3z M409.1,209 C305.2,373.1,211.4,472.4,97.4,538.6c-5.5,3.2-11.5,4.6-17,4.6c-12,0-23.4-6-29.9-17c-9.7-16.5-4.1-37.7,12.4-46.9 c96.5-56.1,175.6-136.5,264.3-269.8H38.1c-18.8,0-34.5-15.6-34.5-34.5c0-18.8,15.6-34.5,34.5-34.5h172.4v-91 c0-18.8,15.6-34.5,34.5-34.5c18.8,0,34.5,15.6,34.5,34.5v91h172.4c18.8,0,34.5,15.6,34.5,34.5c0,18.8-15.6,34.5-34.5,34.5h-43.2 L409.1,209z M410.9,543.2c-6,0-12-1.4-17.5-4.6c-29.9-17.5-58.8-36.8-86-57c-15.2-11.5-18.4-33.1-6.9-48.3 c11.5-15.2,33.1-18.4,48.3-6.9c24.8,18.8,51.9,36.3,79.5,52.4c16.5,9.7,22.1,30.8,12.4,47.3C434.4,537.2,422.9,543.2,410.9,543.2z"})),ZT=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 -0.5 21 21",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",...n},I.createElement("g",{id:"Page-1",stroke:"none",strokeWidth:1,fill:"none",fillRule:"evenodd"},I.createElement("g",{id:"Dribbble-Light-Preview",transform:"translate(-339.000000, -680.000000)",fill:"#000000"},I.createElement("g",{id:"icons",transform:"translate(56.000000, 160.000000)"},I.createElement("path",{id:"gallery-1",d:"M301.9,537 C301.9,537.552 301.4296,538 300.85,538 L297.7,538 C297.1204,538 296.65,537.552 296.65,537 L296.65,534 C296.65,533.448 297.1204,533 297.7,533 L300.85,533 C301.4296,533 301.9,533.448 301.9,534 L301.9,537 Z M301.9,531 L296.65,531 C295.48975,531 294.55,531.895 294.55,533 L294.55,538 C294.55,539.105 295.48975,540 296.65,540 L301.9,540 C303.06025,540 304,539.105 304,538 L304,533 C304,531.895 303.06025,531 301.9,531 L301.9,531 Z M301.9,526 C301.9,526.552 301.4296,527 300.85,527 L297.7,527 C297.1204,527 296.65,526.552 296.65,526 L296.65,523 C296.65,522.448 297.1204,522 297.7,522 L300.85,522 C301.4296,522 301.9,522.448 301.9,523 L301.9,526 Z M301.9,520 L296.65,520 C295.48975,520 294.55,520.895 294.55,522 L294.55,527 C294.55,528.105 295.48975,529 296.65,529 L301.9,529 C303.06025,529 304,528.105 304,527 L304,522 C304,520.895 303.06025,520 301.9,520 L301.9,520 Z M290.35,537 C290.35,537.552 289.8796,538 289.3,538 L286.15,538 C285.5704,538 285.1,537.552 285.1,537 L285.1,523 C285.1,522.448 285.5704,522 286.15,522 L289.3,522 C289.8796,522 290.35,522.448 290.35,523 L290.35,537 Z M290.35,520 L285.1,520 C283.93975,520 283,520.895 283,522 L283,538 C283,539.105 283.93975,540 285.1,540 L290.35,540 C291.51025,540 292.45,539.105 292.45,538 L292.45,522 C292.45,520.895 291.51025,520 290.35,520 L290.35,520 Z"}))))),JT=n=>I.createElement("svg",{id:"Layer_4","data-name":"Layer 4",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1920 1920",...n},I.createElement("defs",null,I.createElement("style",null,".cls-1{fill:#5d9cec;}.cls-2{fill:#a0d468;}.cls-3{fill:#fff;}.cls-4{fill:#ea4335;}")),I.createElement("path",{className:"cls-1",d:"M1920,960c0,530.21-429.79,960-960,960S0,1490.21,0,960,429.79,0,960,0,1920,429.8,1920,960Z"}),I.createElement("path",{className:"cls-2",d:"M1735.3,858.1c-189,14.37-249.63-96.42-224.72-130.26,43.08-58.63,248.14,83.81,261.69-21.74,2.42-18.52,48.8-66.85,89.61-75.86-93.06-254.33-290.6-458.26-540.62-559.9-8.54,28.79-16.06,52.56-20.21,54.6C1156.92,195,986.63,227.55,884.41,362.24c-14.33,18.91-33.29,54.63-12.77,77.19,25.38,28,93.22-.78,126.5,1.65,92.59,6.65,353.66,67.44,362.12,109.73s-99.09,122.27-204.2,64.27c-30.94-17.07-154.55-38.34-196.53-45.9C930.16,563.93,676.76,595.73,688,897c4.54,122.19,81,200.79,204.2,202.2,102.23,1.17,205.7-10.77,239.14,110.21,28.36,102.53,17.55,208.67,42.85,310.73,10.18,41,31.88,98.7,83.89,103.16,78.88,6.82,131.91-46.21,179.3-101.2,37.75-43.95,85.45-82.09,113.65-133.48,44.65-81.58,32.35-178.71,79.58-260.4C1668.72,1062.3,1795.06,853.52,1735.3,858.1Z"}),I.createElement("path",{className:"cls-2",d:"M308.07,1147c-30.08-43.67-64.55-86-95.4-129C183.84,977.82,71.44,795.31,19.35,767.27A964.22,964.22,0,0,0,0,960c0,233.65,83.5,447.81,222.23,614.26,3.52,4.31,86.94-57.65,94.3-63.92,30.79-26.16,56.56-58.12,68.15-97.36C411.54,1321.45,358.67,1220.6,308.07,1147Z"}),I.createElement("ellipse",{className:"cls-3",cx:960.5,cy:731.5,rx:308.5,ry:320.5}),I.createElement("path",{className:"cls-4",d:"M861.52,211.55c-204.65,37.66-361.82,185-415.85,390.2-11.46,42.57-13.64,64.94-14.18,122.79,0,111.33,25.1,190.46,100.41,313.8,15.28,25.64,44.2,73.12,63.85,106.41,79.68,133.16,197.56,299.61,335.63,473.7,32.74,40.93,61.66,73.13,64.94,71.49,3.27-2.18,28.92-38.75,57.3-82.41l51.3-78.58L1004.5,1391.42c-55.11-75.85-101.5-140.25-103.14-143-2.18-3.27,18.56-5.45,57.85-5.45,78-.55,132.07-13.1,203.56-46.39,161.53-75.86,269-214.48,298.51-385.84,35.48-201.92-56.75-410.39-232.48-523.9C1122.93,218.1,981.58,189.18,861.52,211.55Zm168.09,272.87c73.13,21.28,143,88.95,167,162.63,32.2,97.68,6,201.37-67.67,270.68-55.66,51.84-105.32,71.49-180.64,71.49-110.78,0-209.56-74.22-245-184.46-7.09-22.37-8.73-42.57-7.09-84.59,1.63-50.75,3.82-59.48,22.37-98.77,34.93-73.13,104.78-128.8,181.18-144.62C934.65,469.68,990.86,473,1029.61,484.42Z"})),QT=n=>I.createElement("svg",{viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",...n},I.createElement("path",{d:"M21.5287 15.9294C21.3687 15.6594 20.9187 15.2394 19.7987 15.4394C19.1787 15.5494 18.5487 15.5994 17.9187 15.5694C15.5887 15.4694 13.4787 14.3994 12.0087 12.7494C10.7087 11.2994 9.90873 9.40938 9.89873 7.36938C9.89873 6.22938 10.1187 5.12938 10.5687 4.08938C11.0087 3.07938 10.6987 2.54938 10.4787 2.32938C10.2487 2.09938 9.70873 1.77938 8.64873 2.21938C4.55873 3.93938 2.02873 8.03938 2.32873 12.4294C2.62873 16.5594 5.52873 20.0894 9.36873 21.4194C10.2887 21.7394 11.2587 21.9294 12.2587 21.9694C12.4187 21.9794 12.5787 21.9894 12.7387 21.9894C16.0887 21.9894 19.2287 20.4094 21.2087 17.7194C21.8787 16.7894 21.6987 16.1994 21.5287 15.9294Z",fill:"#292D32"})),eL=n=>I.createElement("svg",{id:"Layer_1",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",viewBox:"0 0 64 64",enableBackground:"new 0 0 64 64",xmlSpace:"preserve",...n},I.createElement("g",null,I.createElement("circle",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",cx:32.003,cy:32.005,r:16.001}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M12.001,31.997c0-2.211-1.789-4-4-4H4c-2.211,0-4,1.789-4,4 s1.789,4,4,4h4C10.212,35.997,12.001,34.208,12.001,31.997z"}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M12.204,46.139l-2.832,2.833c-1.563,1.562-1.563,4.094,0,5.656 c1.562,1.562,4.094,1.562,5.657,0l2.833-2.832c1.562-1.562,1.562-4.095,0-5.657C16.298,44.576,13.767,44.576,12.204,46.139z"}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M32.003,51.999c-2.211,0-4,1.789-4,4V60c0,2.211,1.789,4,4,4 s4-1.789,4-4l-0.004-4.001C36.003,53.788,34.21,51.999,32.003,51.999z"}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M51.798,46.143c-1.559-1.566-4.091-1.566-5.653-0.004 s-1.562,4.095,0,5.657l2.829,2.828c1.562,1.57,4.094,1.562,5.656,0s1.566-4.09,0-5.656L51.798,46.143z"}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M60.006,27.997l-4.009,0.008 c-2.203-0.008-3.992,1.781-3.992,3.992c-0.008,2.211,1.789,4,3.992,4h4.001c2.219,0.008,4-1.789,4-4 C64.002,29.79,62.217,27.997,60.006,27.997z"}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M51.798,17.859l2.828-2.829c1.574-1.566,1.562-4.094,0-5.657 c-1.559-1.567-4.09-1.567-5.652-0.004l-2.829,2.836c-1.562,1.555-1.562,4.086,0,5.649C47.699,19.426,50.239,19.418,51.798,17.859z"}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M32.003,11.995c2.207,0.016,4-1.789,4-3.992v-4 c0-2.219-1.789-4-4-4c-2.211-0.008-4,1.781-4,3.993l0.008,4.008C28.003,10.206,29.792,11.995,32.003,11.995z"}),I.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",fill:"#231F20",d:"M12.212,17.855c1.555,1.562,4.079,1.562,5.646-0.004 c1.574-1.551,1.566-4.09,0.008-5.649l-2.829-2.828c-1.57-1.571-4.094-1.559-5.657,0c-1.575,1.559-1.575,4.09-0.012,5.653 L12.212,17.855z"}))),tL=n=>I.createElement("svg",{id:"Layer_1","data-name":"Layer 1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 550.38 800",...n},I.createElement("defs",null,I.createElement("style",null,`\r
            .visited-1 {\r
                fill: none !important;\r
                stroke-linecap: round;\r
                stroke-linejoin: round;\r
                stroke-width: 65px;\r
            }\r
        `)),I.createElement("path",{d:"M400,0C248,0,124.81,123.21,124.81,275.2c0,115.86,160,382.81,236,503.14a46.37,46.37,0,0,0,78.45,0c76-120.33,236-387.32,236-503.18C675.19,123.21,552,0,400,0Zm0,490.57c-111.44,0-203-91.8-203-203,.05-112.14,93.32-203.9,205-202.79C512.21,85.86,603,177,603,287.57,603.05,398.74,511.46,490.57,400,490.57Z",transform:"translate(-124.81)"}),I.createElement("g",{id:"Interface_Check","data-name":"Interface / Check"},I.createElement("path",{id:"Vector",className:"visited-1",d:"M309.15,287.67l60.57,60.57L490.85,227.1",transform:"translate(-124.81)"}))),iw=n=>I.createElement("svg",{height:"800px",width:"800px",id:"Layer_1",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",viewBox:"0 0 512 512",xmlSpace:"preserve",...n},I.createElement("path",{style:{fill:"#41479B"},d:"M473.655,88.276H38.345C17.167,88.276,0,105.443,0,126.621V385.38 c0,21.177,17.167,38.345,38.345,38.345h435.31c21.177,0,38.345-17.167,38.345-38.345V126.621 C512,105.443,494.833,88.276,473.655,88.276z"}),I.createElement("path",{style:{fill:"#F5F5F5"},d:"M511.469,120.282c-3.022-18.159-18.797-32.007-37.814-32.007h-9.977l-163.54,107.147V88.276h-88.276 v107.147L48.322,88.276h-9.977c-19.017,0-34.792,13.847-37.814,32.007l139.778,91.58H0v88.276h140.309L0.531,391.717 c3.022,18.159,18.797,32.007,37.814,32.007h9.977l163.54-107.147v107.147h88.276V316.577l163.54,107.147h9.977 c19.017,0,34.792-13.847,37.814-32.007l-139.778-91.58H512v-88.276H371.691L511.469,120.282z"}),I.createElement("g",null,I.createElement("polygon",{style:{fill:"#FF4B55"},points:"282.483,88.276 229.517,88.276 229.517,229.517 0,229.517 0,282.483 229.517,282.483  229.517,423.724 282.483,423.724 282.483,282.483 512,282.483 512,229.517 282.483,229.517  "}),I.createElement("path",{style:{fill:"#FF4B55"},d:"M24.793,421.252l186.583-121.114h-32.428L9.224,410.31 C13.377,415.157,18.714,418.955,24.793,421.252z"}),I.createElement("path",{style:{fill:"#FF4B55"},d:"M346.388,300.138H313.96l180.716,117.305c5.057-3.321,9.277-7.807,12.287-13.075L346.388,300.138z"}),I.createElement("path",{style:{fill:"#FF4B55"},d:"M4.049,109.475l157.73,102.387h32.428L15.475,95.842C10.676,99.414,6.749,104.084,4.049,109.475z"}),I.createElement("path",{style:{fill:"#FF4B55"},d:"M332.566,211.862l170.035-110.375c-4.199-4.831-9.578-8.607-15.699-10.86L300.138,211.862H332.566z"}))),rw=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"iconify iconify--twemoji",preserveAspectRatio:"xMidYMid meet",...n},I.createElement("path",{fill:"#FFCD05",d:"M0 27a4 4 0 0 0 4 4h28a4 4 0 0 0 4-4v-4H0v4z"}),I.createElement("path",{fill:"#ED1F24",d:"M0 14h36v9H0z"}),I.createElement("path",{fill:"#141414",d:"M32 5H4a4 4 0 0 0-4 4v5h36V9a4 4 0 0 0-4-4z"})),aw=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"iconify iconify--twemoji",preserveAspectRatio:"xMidYMid meet",...n},I.createElement("path",{fill:"#CE2B37",d:"M36 27a4 4 0 0 1-4 4h-8V5h8a4 4 0 0 1 4 4v18z"}),I.createElement("path",{fill:"#009246",d:"M4 5a4 4 0 0 0-4 4v18a4 4 0 0 0 4 4h8V5H4z"}),I.createElement("path",{fill:"#EEE",d:"M12 5h12v26H12z"})),nL=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"iconify iconify--twemoji",preserveAspectRatio:"xMidYMid meet",...n},I.createElement("path",{fill:"#141414",d:"M4 5a4 4 0 0 0-4 4v18a4 4 0 0 0 4 4h8V5H4z"}),I.createElement("path",{fill:"#FEE833",d:"M12 5h12v26H12z"}),I.createElement("path",{fill:"#EE232C",d:"M32 5h-8v26h8a4 4 0 0 0 4-4V9a4 4 0 0 0-4-4z"})),sw=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"iconify iconify--twemoji",preserveAspectRatio:"xMidYMid meet",...n},I.createElement("path",{fill:"#C60A1D",d:"M36 27a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V9a4 4 0 0 1 4-4h28a4 4 0 0 1 4 4v18z"}),I.createElement("path",{fill:"#FFC400",d:"M0 12h36v12H0z"}),I.createElement("path",{fill:"#EA596E",d:"M9 17v3a3 3 0 1 0 6 0v-3H9z"}),I.createElement("path",{fill:"#F4A2B2",d:"M12 16h3v3h-3z"}),I.createElement("path",{fill:"#DD2E44",d:"M9 16h3v3H9z"}),I.createElement("ellipse",{fill:"#EA596E",cx:12,cy:14.5,rx:3,ry:1.5}),I.createElement("ellipse",{fill:"#FFAC33",cx:12,cy:13.75,rx:3,ry:.75}),I.createElement("path",{fill:"#99AAB5",d:"M7 16h1v7H7zm9 0h1v7h-1z"}),I.createElement("path",{fill:"#66757F",d:"M6 22h3v1H6zm9 0h3v1h-3zm-8-7h1v1H7zm9 0h1v1h-1z"})),ow=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"iconify iconify--twemoji",preserveAspectRatio:"xMidYMid meet",...n},I.createElement("path",{fill:"#EEE",d:"M0 14h36v8H0z"}),I.createElement("path",{fill:"#CD2A3E",d:"M32 5H4a4 4 0 0 0-4 4v5h36V9a4 4 0 0 0-4-4z"}),I.createElement("path",{fill:"#436F4D",d:"M4 31h28a4 4 0 0 0 4-4v-5H0v5a4 4 0 0 0 4 4z"})),lw=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"iconify iconify--twemoji",preserveAspectRatio:"xMidYMid meet",...n},I.createElement("path",{fill:"#060",d:"M36 27a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V9a4 4 0 0 1 4-4h28a4 4 0 0 1 4 4v18z"}),I.createElement("path",{fill:"#D52B1E",d:"M32 5H15v26h17a4 4 0 0 0 4-4V9a4 4 0 0 0-4-4z"}),I.createElement("path",{fill:"#FFCC4D",d:"M15 10a8 8 0 0 0-8 8a8 8 0 1 0 16 0a8 8 0 0 0-8-8zm-6.113 4.594l1.602 1.602l-2.46 1.23a6.95 6.95 0 0 1 .858-2.832zm-.858 3.979l4.4 2.207l-2.706 1.804l.014.021a6.963 6.963 0 0 1-1.708-4.032zM14 24.92a6.945 6.945 0 0 1-2.592-.92H14v.92zM14 23h-3.099L14 20.934V23zm0-3.268l-.607.405L9.118 18l2.116-1.058L14 19.707v.025zm0-1.439l-3.543-3.543l3.543.59v2.953zm0-3.992l-4.432-.713A6.983 6.983 0 0 1 14 11.08v3.221zm7.113.293a6.95 6.95 0 0 1 .858 2.833l-2.46-1.23l1.602-1.603zM16 11.08a6.987 6.987 0 0 1 4.432 2.508L16 14.301V11.08zm0 4.26l3.543-.591L16 18.293V15.34zm0 4.367l2.765-2.765L20.882 18l-4.274 2.137l-.608-.405v-.025zm0 5.213V24h2.592a6.945 6.945 0 0 1-2.592.92zM16 23v-2.066L19.099 23H16zm4.264-.395l.014-.021l-2.706-1.804l4.4-2.207a6.976 6.976 0 0 1-1.708 4.032z"}),I.createElement("path",{fill:"#D52B1E",d:"M11 13v7a4 4 0 0 0 8 0v-7h-8z"}),I.createElement("path",{fill:"#FFF",d:"M12 14v6a3 3 0 0 0 6 0v-6h-6z"}),I.createElement("path",{fill:"#829ACD",d:"M13 17h4v2h-4z"}),I.createElement("path",{fill:"#829ACD",d:"M14 16h2v4h-2z"}),I.createElement("path",{fill:"#039",d:"M12 17h1v2h-1zm2 0h2v2h-2zm3 0h1v2h-1zm-3 3h2v2h-2zm0-6h2v2h-2z"})),cw=n=>I.createElement("svg",{width:"800px",height:"800px",viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"iconify iconify--twemoji",preserveAspectRatio:"xMidYMid meet",...n},I.createElement("path",{fill:"#EEE",d:"M36 27a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V9a4 4 0 0 1 4-4h28a4 4 0 0 1 4 4v18z"}),I.createElement("circle",{fill:"#ED1B2F",cx:18,cy:18,r:7})),iL="Topology",rL={countries:{type:"GeometryCollection",geometries:[{type:"Polygon",arcs:[[0,1,2,3]],id:"716",properties:{name:"Zimbabwe"}},{type:"Polygon",arcs:[[-3,4,5,6,7,8,9]],id:"894",properties:{name:"Zambia"}},{type:"MultiPolygon",arcs:[[[10,11,12]],[[13]],[[14]],[[15]],[[16]]],id:"887",properties:{name:"Yemen"}},{type:"MultiPolygon",arcs:[[[17]],[[18,19,20,21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]]],id:"704",properties:{name:"Vietnam"}},{type:"MultiPolygon",arcs:[[[28]],[[29]],[[30]],[[31]],[[32,33,34,35]]],id:"862",properties:{name:"Venezuela"}},{type:"Polygon",arcs:[[36]],id:"336",properties:{name:"Vatican"}},{type:"MultiPolygon",arcs:[[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]]],id:"548",properties:{name:"Vanuatu"}},{type:"MultiPolygon",arcs:[[[51,52,53,54,55],[56]],[[57]],[[58]]],id:"860",properties:{name:"Uzbekistan"}},{type:"Polygon",arcs:[[59,60,61]],id:"858",properties:{name:"Uruguay"}},{type:"MultiPolygon",arcs:[[[62]],[[63]],[[64]],[[65]],[[66]]],id:"583",properties:{name:"Micronesia"}},{type:"MultiPolygon",arcs:[[[67]],[[68]],[[69]],[[70]],[[71]]],id:"584",properties:{name:"Marshall Is."}},{type:"MultiPolygon",arcs:[[[72]],[[73]],[[74]],[[75]],[[76]],[[77]]],id:"580",properties:{name:"N. Mariana Is."}},{type:"MultiPolygon",arcs:[[[78]],[[79]],[[80]]],id:"850",properties:{name:"U.S. Virgin Is."}},{type:"Polygon",arcs:[[81]],id:"316",properties:{name:"Guam"}},{type:"Polygon",arcs:[[82]],id:"016",properties:{name:"American Samoa"}},{type:"MultiPolygon",arcs:[[[83]],[[84]],[[85]]],id:"630",properties:{name:"Puerto Rico"}},{type:"MultiPolygon",arcs:[[[86]],[[87]],[[88]],[[89]],[[90]],[[91]],[[92]],[[93]],[[94]],[[95]],[[96]],[[97]],[[98]],[[99]],[[100]],[[101]],[[102,103,104,105]],[[106]],[[107]],[[108]],[[109]],[[110]],[[111]],[[112]],[[113]],[[114]],[[115]],[[116]],[[117]],[[118]],[[119]],[[120]],[[121]],[[122]],[[123]],[[124]],[[125]],[[126]],[[127]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138]],[[139]],[[140]],[[141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[161]],[[162]],[[163]],[[164,165,166,167,168]],[[169]],[[170]],[[171]],[[172]],[[173]],[[174]],[[175]],[[176]],[[177]],[[178]],[[179]],[[180]],[[181]],[[182]],[[183]],[[184]],[[185]],[[186]],[[187]],[[188]],[[189]],[[190]],[[191]],[[192]],[[193]],[[194]],[[195]],[[196]],[[197]],[[198]],[[199]],[[200]],[[201]],[[202]],[[203]],[[204]],[[205]],[[206]],[[207]],[[208]],[[209]],[[210]],[[211]],[[212]],[[213]],[[214]],[[215]],[[216]],[[217]],[[218]],[[219]]],id:"840",properties:{name:"United States of America"}},{type:"MultiPolygon",arcs:[[[220]],[[221]]],id:"239",properties:{name:"S. Geo. and the Is."}},{type:"Polygon",arcs:[[222]],id:"086",properties:{name:"Br. Indian Ocean Ter."}},{type:"MultiPolygon",arcs:[[[223]],[[224]]],id:"654",properties:{name:"Saint Helena"}},{type:"Polygon",arcs:[[225]],id:"612",properties:{name:"Pitcairn Is."}},{type:"Polygon",arcs:[[226]],id:"660",properties:{name:"Anguilla"}},{type:"MultiPolygon",arcs:[[[227]],[[228]],[[229]],[[230]],[[231]],[[232]]],id:"238",properties:{name:"Falkland Is."}},{type:"MultiPolygon",arcs:[[[233]],[[234]],[[235]]],id:"136",properties:{name:"Cayman Is."}},{type:"Polygon",arcs:[[236]],id:"060",properties:{name:"Bermuda"}},{type:"MultiPolygon",arcs:[[[237]],[[238]],[[239]]],id:"092",properties:{name:"British Virgin Is."}},{type:"MultiPolygon",arcs:[[[240]],[[241]],[[242]]],id:"796",properties:{name:"Turks and Caicos Is."}},{type:"Polygon",arcs:[[243]],id:"500",properties:{name:"Montserrat"}},{type:"Polygon",arcs:[[244]],id:"832",properties:{name:"Jersey"}},{type:"Polygon",arcs:[[245]],id:"831",properties:{name:"Guernsey"}},{type:"Polygon",arcs:[[246]],id:"833",properties:{name:"Isle of Man"}},{type:"MultiPolygon",arcs:[[[247]],[[248]],[[249]],[[250]],[[251]],[[252]],[[253]],[[254]],[[255]],[[256]],[[257]],[[258]],[[259]],[[260]],[[261]],[[262]],[[263]],[[264]],[[265]],[[266]],[[267]],[[268,269]],[[270]]],id:"826",properties:{name:"United Kingdom"}},{type:"MultiPolygon",arcs:[[[271,272,273,274,275],[276]],[[277]],[[278]],[[279]],[[280]]],id:"784",properties:{name:"United Arab Emirates"}},{type:"MultiPolygon",arcs:[[[281,282,283,284,285,286,287,288,289,290,291]],[[292]]],id:"804",properties:{name:"Ukraine"}},{type:"Polygon",arcs:[[293,294,295,296,297]],id:"800",properties:{name:"Uganda"}},{type:"MultiPolygon",arcs:[[[298]],[[-55,299,300,301,302]]],id:"795",properties:{name:"Turkmenistan"}},{type:"MultiPolygon",arcs:[[[303]],[[304,305,306,307,308,309,310]],[[311,312,313]]],id:"792",properties:{name:"Turkey"}},{type:"MultiPolygon",arcs:[[[314,315,316]],[[317]],[[318]]],id:"788",properties:{name:"Tunisia"}},{type:"MultiPolygon",arcs:[[[319]],[[320]]],id:"780",properties:{name:"Trinidad and Tobago"}},{type:"MultiPolygon",arcs:[[[321]],[[322]],[[323]]],id:"776",properties:{name:"Tonga"}},{type:"Polygon",arcs:[[324,325,326,327]],id:"768",properties:{name:"Togo"}},{type:"MultiPolygon",arcs:[[[328]],[[329,330]],[[331,332]]],id:"626",properties:{name:"Timor-Leste"}},{type:"MultiPolygon",arcs:[[[333]],[[334]],[[335]],[[336,337,338,339,340,341]],[[342]],[[343]],[[344]],[[345]],[[346]],[[347]]],id:"764",properties:{name:"Thailand"}},{type:"MultiPolygon",arcs:[[[348]],[[349]],[[-8,350,351,352,-294,353,354,355,356]],[[357]]],id:"834",properties:{name:"Tanzania"}},{type:"MultiPolygon",arcs:[[[-53,358,359,360]],[[-57]],[[361]]],id:"762",properties:{name:"Tajikistan"}},{type:"MultiPolygon",arcs:[[[362]],[[363]]],id:"158",properties:{name:"Taiwan"}},{type:"Polygon",arcs:[[-310,364,365,366,367,368]],id:"760",properties:{name:"Syria"}},{type:"Polygon",arcs:[[369,370,371,372,373,374]],id:"756",properties:{name:"Switzerland"}},{type:"MultiPolygon",arcs:[[[375]],[[376]],[[377,378,379]],[[380]],[[381]],[[382]]],id:"752",properties:{name:"Sweden"}},{type:"Polygon",arcs:[[383,384]],id:"748",properties:{name:"eSwatini"}},{type:"Polygon",arcs:[[385,386,387,388]],id:"740",properties:{name:"Suriname"}},{type:"Polygon",arcs:[[-297,389,390,391,392,393]],id:"728",properties:{name:"S. Sudan"}},{type:"Polygon",arcs:[[-392,394,395,396,397,398,399,400]],id:"729",properties:{name:"Sudan"}},{type:"MultiPolygon",arcs:[[[401]],[[402]],[[403]]],id:"144",properties:{name:"Sri Lanka"}},{type:"MultiPolygon",arcs:[[[404]],[[405]],[[406]],[[407]],[[408,409,410,411,412,413]],[[414]],[[415]],[[416]],[[417]],[[418]],[[419]],[[420]]],id:"724",properties:{name:"Spain"}},{type:"MultiPolygon",arcs:[[[421,422]],[[423]],[[424]],[[425]],[[426]],[[427]],[[428]],[[429]],[[430]],[[431]],[[432]]],id:"410",properties:{name:"South Korea"}},{type:"MultiPolygon",arcs:[[[-1,433,-385,434,435,436,437],[438]],[[439]]],id:"710",properties:{name:"South Africa"}},{type:"Polygon",arcs:[[440,441,442,443]],id:"706",properties:{name:"Somalia"}},{type:"Polygon",arcs:[[-443,444,445,446]],properties:{name:"Somaliland"}},{type:"MultiPolygon",arcs:[[[447]],[[448]],[[449]],[[450]],[[451]],[[452]],[[453]],[[454]],[[455]],[[456]],[[457]],[[458]],[[459]],[[460]],[[461]],[[462]],[[463]],[[464]],[[465]],[[466]],[[467]]],id:"090",properties:{name:"Solomon Is."}},{type:"Polygon",arcs:[[-289,468,469,470,471]],id:"703",properties:{name:"Slovakia"}},{type:"Polygon",arcs:[[472,473,474,475,476]],id:"705",properties:{name:"Slovenia"}},{type:"Polygon",arcs:[[477]],id:"702",properties:{name:"Singapore"}},{type:"MultiPolygon",arcs:[[[478,479,480]],[[481]]],id:"694",properties:{name:"Sierra Leone"}},{type:"Polygon",arcs:[[482]],id:"690",properties:{name:"Seychelles"}},{type:"Polygon",arcs:[[483,484,485,486,487,488,489,490]],id:"688",properties:{name:"Serbia"}},{type:"Polygon",arcs:[[491,492,493,494,495,496,497]],id:"686",properties:{name:"Senegal"}},{type:"MultiPolygon",arcs:[[[498]],[[499]],[[-12,500,501,502,503,504,505,506,-274,507]],[[508]]],id:"682",properties:{name:"Saudi Arabia"}},{type:"MultiPolygon",arcs:[[[509]],[[510]]],id:"678",properties:{name:"São Tomé and Principe"}},{type:"Polygon",arcs:[[511]],id:"674",properties:{name:"San Marino"}},{type:"MultiPolygon",arcs:[[[512]],[[513]]],id:"882",properties:{name:"Samoa"}},{type:"MultiPolygon",arcs:[[[514]],[[515]],[[516]]],id:"670",properties:{name:"St. Vin. and Gren."}},{type:"Polygon",arcs:[[517]],id:"662",properties:{name:"Saint Lucia"}},{type:"MultiPolygon",arcs:[[[518]],[[519]]],id:"659",properties:{name:"St. Kitts and Nevis"}},{type:"Polygon",arcs:[[-295,-353,520,521]],id:"646",properties:{name:"Rwanda"}},{type:"MultiPolygon",arcs:[[[522]],[[523]],[[524]],[[525]],[[526]],[[527]],[[528]],[[529]],[[530]],[[531]],[[532]],[[533]],[[534]],[[535]],[[536]],[[537]],[[538]],[[539,540,541,542,543,544,545,546,547,-292,548,549,550,551,552,553,554]],[[555]],[[556]],[[557]],[[558]],[[559]],[[560]],[[561]],[[562]],[[563]],[[564]],[[565]],[[566]],[[567]],[[568]],[[569]],[[570]],[[571]],[[572]],[[573]],[[574]],[[575]],[[576]],[[577]],[[578]],[[579]],[[580]],[[581]],[[582]],[[583]],[[584]],[[585]],[[586]],[[587]],[[588]],[[589]],[[590]],[[591]],[[592]],[[593]],[[594]],[[595]],[[596]],[[597]],[[598]],[[599]],[[600]],[[601]],[[602]],[[603]],[[604]],[[605]],[[606]],[[607]],[[608]],[[609]],[[610]],[[611]],[[612]],[[613]],[[614]],[[615]],[[616]],[[617]],[[618]],[[619]],[[620]],[[621]],[[622]],[[623]],[[624]],[[625]],[[626]],[[627]],[[628]],[[629]],[[630]],[[631]],[[632]],[[633]],[[634,635,636,637,638]],[[-283,639]]],id:"643",properties:{name:"Russia"}},{type:"Polygon",arcs:[[-285,640,641,-491,642,-287,643]],id:"642",properties:{name:"Romania"}},{type:"Polygon",arcs:[[-506,644]],id:"634",properties:{name:"Qatar"}},{type:"MultiPolygon",arcs:[[[645]],[[-413,646]],[[647]],[[648]],[[649]],[[650]],[[651]],[[652]],[[653]]],id:"620",properties:{name:"Portugal"}},{type:"Polygon",arcs:[[-290,-472,654,655,656,657,658,-637,659,660]],id:"616",properties:{name:"Poland"}},{type:"MultiPolygon",arcs:[[[661]],[[662]],[[663]],[[664]],[[665]],[[666]],[[667]],[[668]],[[669]],[[670]],[[671]],[[672]],[[673]],[[674]],[[675]],[[676]],[[677]],[[678]],[[679]],[[680]],[[681]],[[682]],[[683]],[[684]],[[685]],[[686]],[[687]],[[688]],[[689]],[[690]],[[691]],[[692]],[[693]],[[694]],[[695]],[[696]],[[697]],[[698]],[[699]],[[700]],[[701]],[[702]],[[703]],[[704]],[[705]],[[706]],[[707]],[[708]]],id:"608",properties:{name:"Philippines"}},{type:"Polygon",arcs:[[709,710,711,712,713,714]],id:"604",properties:{name:"Peru"}},{type:"Polygon",arcs:[[715,716,717]],id:"600",properties:{name:"Paraguay"}},{type:"MultiPolygon",arcs:[[[718]],[[719]],[[720,721]],[[722]],[[723]],[[724]],[[725]],[[726]],[[727]],[[728]],[[729]],[[730]],[[731]],[[732]],[[733]],[[734]],[[735]],[[736]],[[737]],[[738]],[[739]],[[740]],[[741]],[[742]],[[743]],[[744]]],id:"598",properties:{name:"Papua New Guinea"}},{type:"MultiPolygon",arcs:[[[745,746,747,748]],[[749]],[[750]],[[751]],[[752]]],id:"591",properties:{name:"Panama"}},{type:"MultiPolygon",arcs:[[[753]],[[754]]],id:"585",properties:{name:"Palau"}},{type:"Polygon",arcs:[[755,756,757,758,759,760]],id:"586",properties:{name:"Pakistan"}},{type:"MultiPolygon",arcs:[[[761]],[[-13,-508,-273,762]],[[-276,763]],[[-277]]],id:"512",properties:{name:"Oman"}},{type:"MultiPolygon",arcs:[[[-378,764,-554,765]],[[766]],[[767]],[[768]],[[769]],[[770]],[[771]],[[772]],[[773]],[[774]],[[775]],[[776]],[[777]],[[778]],[[779]],[[780]],[[781]],[[782]],[[783]],[[784]],[[785]],[[786]],[[787]],[[788]],[[789]],[[790]],[[791]],[[792]],[[793]],[[794]],[[795]],[[796]]],id:"578",properties:{name:"Norway"}},{type:"MultiPolygon",arcs:[[[-422,797,798,-540,799]],[[800]]],id:"408",properties:{name:"North Korea"}},{type:"MultiPolygon",arcs:[[[801]],[[802,803,804,805,806]]],id:"566",properties:{name:"Nigeria"}},{type:"Polygon",arcs:[[-807,807,808,809,810,811,812]],id:"562",properties:{name:"Niger"}},{type:"Polygon",arcs:[[813,814,815,816]],id:"558",properties:{name:"Nicaragua"}},{type:"MultiPolygon",arcs:[[[817]],[[818]],[[819]],[[820]],[[821]],[[822]],[[823]],[[824]],[[825]],[[826]],[[827]],[[828]],[[829]]],id:"554",properties:{name:"New Zealand"}},{type:"Polygon",arcs:[[830]],id:"570",properties:{name:"Niue"}},{type:"Polygon",arcs:[[831]],id:"184",properties:{name:"Cook Is."}},{type:"MultiPolygon",arcs:[[[832,833,834]],[[835,836]],[[837]],[[838]],[[839]],[[840]],[[841]],[[842]],[[843]],[[844]],[[845]],[[846]]],id:"528",properties:{name:"Netherlands"}},{type:"Polygon",arcs:[[847]],id:"533",properties:{name:"Aruba"}},{type:"Polygon",arcs:[[848]],id:"531",properties:{name:"Curaçao"}},{type:"Polygon",arcs:[[849,850]],id:"524",properties:{name:"Nepal"}},{type:"Polygon",arcs:[[851]],id:"520",properties:{name:"Nauru"}},{type:"Polygon",arcs:[[-5,852,-437,853,854]],id:"516",properties:{name:"Namibia"}},{type:"Polygon",arcs:[[-4,-10,855,-356,856,-435,-384,-434],[857],[858]],id:"508",properties:{name:"Mozambique"}},{type:"Polygon",arcs:[[859,860,861]],id:"504",properties:{name:"Morocco"}},{type:"Polygon",arcs:[[862,863,864,-861]],id:"732",properties:{name:"W. Sahara"}},{type:"Polygon",arcs:[[-487,865,866,867,868,869]],id:"499",properties:{name:"Montenegro"}},{type:"Polygon",arcs:[[-542,870]],id:"496",properties:{name:"Mongolia"}},{type:"Polygon",arcs:[[-286,-644]],id:"498",properties:{name:"Moldova"}},{type:"Polygon",arcs:[[871,872]],id:"492",properties:{name:"Monaco"}},{type:"MultiPolygon",arcs:[[[-167,873,874,875,876]],[[877]],[[878]],[[879]],[[880]],[[881]],[[882]],[[883]],[[884]],[[885]],[[886]],[[887]],[[888]],[[889]],[[890]],[[891]]],id:"484",properties:{name:"Mexico"}},{type:"Polygon",arcs:[[892]],id:"480",properties:{name:"Mauritius"}},{type:"MultiPolygon",arcs:[[[893]],[[-498,894,-864,895,896]]],id:"478",properties:{name:"Mauritania"}},{type:"MultiPolygon",arcs:[[[897]],[[898]]],id:"470",properties:{name:"Malta"}},{type:"Polygon",arcs:[[-492,-897,899,-810,900,901,902]],id:"466",properties:{name:"Mali"}},{type:"MultiPolygon",arcs:[[[903]],[[904]]],id:"462",properties:{name:"Maldives"}},{type:"MultiPolygon",arcs:[[[-340,905]],[[906,907,908,909,910]],[[911]],[[912]],[[913]],[[914]],[[915]],[[916]],[[917,918]]],id:"458",properties:{name:"Malaysia"}},{type:"MultiPolygon",arcs:[[[-859]],[[-858]],[[-9,-357,-856]]],id:"454",properties:{name:"Malawi"}},{type:"MultiPolygon",arcs:[[[919]],[[920]],[[921]]],id:"450",properties:{name:"Madagascar"}},{type:"Polygon",arcs:[[-485,922,923,924,925]],id:"807",properties:{name:"Macedonia"}},{type:"Polygon",arcs:[[926,927,928]],id:"442",properties:{name:"Luxembourg"}},{type:"MultiPolygon",arcs:[[[-639,929]],[[-636,930,931,932,-660]]],id:"440",properties:{name:"Lithuania"}},{type:"Polygon",arcs:[[-371,933]],id:"438",properties:{name:"Liechtenstein"}},{type:"Polygon",arcs:[[-315,934,935,-397,936,-812,937]],id:"434",properties:{name:"Libya"}},{type:"Polygon",arcs:[[-479,938,939,940]],id:"430",properties:{name:"Liberia"}},{type:"Polygon",arcs:[[-439]],id:"426",properties:{name:"Lesotho"}},{type:"Polygon",arcs:[[-368,941,942]],id:"422",properties:{name:"Lebanon"}},{type:"Polygon",arcs:[[-932,943,944,-550,945]],id:"428",properties:{name:"Latvia"}},{type:"Polygon",arcs:[[-21,946,-337,947,948]],id:"418",properties:{name:"Laos"}},{type:"Polygon",arcs:[[-52,949,950,-359],[-58],[-59],[-362]],id:"417",properties:{name:"Kyrgyzstan"}},{type:"MultiPolygon",arcs:[[[951]],[[-504,952,953]]],id:"414",properties:{name:"Kuwait"}},{type:"Polygon",arcs:[[-486,-926,954,-866]],properties:{name:"Kosovo"}},{type:"MultiPolygon",arcs:[[[955]],[[956]],[[957]],[[958]],[[959]],[[960]],[[961]],[[962]],[[963]],[[964]],[[965]],[[966]],[[967]],[[968]],[[969]],[[970]],[[971]],[[972]],[[973]]],id:"296",properties:{name:"Kiribati"}},{type:"MultiPolygon",arcs:[[[974]],[[-298,-394,975,-441,976,-354]]],id:"404",properties:{name:"Kenya"}},{type:"MultiPolygon",arcs:[[[977]],[[978]],[[979]],[[-56,-303,980,-544,981,-950]]],id:"398",properties:{name:"Kazakhstan"}},{type:"Polygon",arcs:[[-366,982,-502,983,984,985,986]],id:"400",properties:{name:"Jordan"}},{type:"MultiPolygon",arcs:[[[987]],[[988]],[[989]],[[990]],[[991]],[[992]],[[993]],[[994]],[[995]],[[996]],[[997]],[[998]],[[999]],[[1e3]],[[1001]],[[1002]],[[1003]],[[1004]],[[1005]],[[1006]],[[1007]],[[1008]],[[1009]],[[1010]],[[1011]],[[1012]],[[1013]],[[1014]],[[1015]],[[1016]],[[1017]],[[1018]],[[1019]],[[1020]]],id:"392",properties:{name:"Japan"}},{type:"Polygon",arcs:[[1021]],id:"388",properties:{name:"Jamaica"}},{type:"MultiPolygon",arcs:[[[-373,1022,-475,1023,1024],[-37],[-512]],[[1025]],[[1026]],[[1027]],[[1028]],[[1029]],[[1030]],[[1031]]],id:"380",properties:{name:"Italy"}},{type:"Polygon",arcs:[[-367,-987,1032,-985,1033,1034,1035,1036,-942]],id:"376",properties:{name:"Israel"}},{type:"MultiPolygon",arcs:[[[-1036,1037,1038]],[[-986,-1033]]],id:"275",properties:{name:"Palestine"}},{type:"MultiPolygon",arcs:[[[1039]],[[-269,1040]]],id:"372",properties:{name:"Ireland"}},{type:"Polygon",arcs:[[-309,1041,1042,-953,-503,-983,-365]],id:"368",properties:{name:"Iraq"}},{type:"MultiPolygon",arcs:[[[1043]],[[-301,1044,-759,1045,-1042,-308,1046,1047,1048,1049]]],id:"364",properties:{name:"Iran"}},{type:"MultiPolygon",arcs:[[[1050]],[[1051]],[[1052]],[[1053]],[[1054]],[[1055]],[[1056]],[[1057]],[[1058]],[[1059]],[[1060]],[[1061]],[[1062]],[[1063]],[[1064]],[[1065]],[[1066]],[[1067]],[[1068]],[[1069]],[[1070]],[[1071]],[[1072]],[[1073]],[[1074]],[[1075]],[[1076]],[[-907,1077]],[[1078]],[[1079]],[[1080]],[[-330,1081,-333,1082]],[[1083]],[[1084]],[[1085]],[[-721,1086]],[[1087]],[[1088]],[[1089]],[[1090]],[[1091]],[[1092]],[[1093]],[[1094]],[[1095]],[[1096]],[[1097]],[[1098]],[[1099]],[[1100]],[[1101]],[[1102]],[[1103]],[[1104]],[[1105]],[[1106]],[[1107]],[[1108]],[[1109]],[[1110]],[[1111]],[[1112]],[[1113]],[[1114]],[[1115]],[[1116]],[[1117]],[[1118]],[[1119]],[[1120]],[[1121]],[[1122]],[[1123]],[[1124]],[[1125]],[[1126]],[[1127]],[[1128]],[[1129]],[[1130]],[[1131]],[[1132]],[[1133]],[[1134]],[[1135]],[[1136]],[[1137]],[[1138]],[[1139]],[[1140]],[[1141]],[[1142]],[[1143]],[[1144]],[[1145]],[[1146]],[[1147]],[[1148]],[[1149]],[[1150]],[[1151]],[[1152]],[[-918,1153]],[[1154]],[[1155]],[[1156]],[[1157]],[[1158]],[[1159]],[[1160]],[[1161]],[[1162]],[[1163]],[[1164]],[[1165]],[[1166]],[[1167]],[[1168]],[[1169]],[[1170]],[[1171]],[[1172]],[[1173]],[[1174]],[[1175]],[[1176]],[[1177]],[[1178]],[[1179]],[[1180]],[[1181]],[[1182]],[[1183]]],id:"360",properties:{name:"Indonesia"}},{type:"MultiPolygon",arcs:[[[-757,1184,1185,-850,1186,1187,1188,1189,1190,1191]],[[1192]],[[1193]],[[1194]],[[1195]],[[1196]],[[1197]],[[1198]],[[1199]],[[1200]],[[1201]],[[1202]],[[1203]],[[1204]]],id:"356",properties:{name:"India"}},{type:"Polygon",arcs:[[1205]],id:"352",properties:{name:"Iceland"}},{type:"Polygon",arcs:[[-288,-643,-490,1206,-477,1207,-469]],id:"348",properties:{name:"Hungary"}},{type:"MultiPolygon",arcs:[[[-817,1208,1209,1210,1211]],[[1212]],[[1213]]],id:"340",properties:{name:"Honduras"}},{type:"MultiPolygon",arcs:[[[1214,1215]],[[1216]],[[1217]]],id:"332",properties:{name:"Haiti"}},{type:"Polygon",arcs:[[-33,1218,-388,1219]],id:"328",properties:{name:"Guyana"}},{type:"MultiPolygon",arcs:[[[-494,1220,1221]],[[1222]],[[1223]],[[1224]],[[1225]],[[1226]],[[1227]]],id:"624",properties:{name:"Guinea-Bissau"}},{type:"Polygon",arcs:[[-481,1228,-1221,-493,-903,1229,-939]],id:"324",properties:{name:"Guinea"}},{type:"Polygon",arcs:[[-876,1230,1231,-1211,1232,1233]],id:"320",properties:{name:"Guatemala"}},{type:"Polygon",arcs:[[1234]],id:"308",properties:{name:"Grenada"}},{type:"MultiPolygon",arcs:[[[1235]],[[1236]],[[1237]],[[1238]],[[1239]],[[1240]],[[1241]],[[1242]],[[1243]],[[1244]],[[1245]],[[1246]],[[1247]],[[1248]],[[1249]],[[1250]],[[1251]],[[1252]],[[1253]],[[1254]],[[1255]],[[1256]],[[1257]],[[1258]],[[1259]],[[1260]],[[1261]],[[1262]],[[1263]],[[1264]],[[1265]],[[1266]],[[1267]],[[1268]],[[1269]],[[1270]],[[1271]],[[1272]],[[1273]],[[-313,1274,1275,-924,1276]]],id:"300",properties:{name:"Greece"}},{type:"Polygon",arcs:[[-327,1277,1278,1279,1280,1281]],id:"288",properties:{name:"Ghana"}},{type:"MultiPolygon",arcs:[[[-375,1282,-927,1283,-835,1284,1285,1286,-656,1287,1288]],[[1289]],[[-658,1290]],[[1291]],[[1292]],[[1293]]],id:"276",properties:{name:"Germany"}},{type:"Polygon",arcs:[[-305,1294,-547,1295,1296]],id:"268",properties:{name:"Georgia"}},{type:"Polygon",arcs:[[-496,1297]],id:"270",properties:{name:"Gambia"}},{type:"Polygon",arcs:[[1298,1299,1300,1301]],id:"266",properties:{name:"Gabon"}},{type:"MultiPolygon",arcs:[[[1302]],[[-374,-1025,1303,-873,1304,-411,1305,-409,1306,1307,-928,-1283]],[[1308]],[[1309]],[[1310]],[[1311]],[[1312]],[[1313]],[[1314]],[[-386,1315,1316]]],id:"250",properties:{name:"France"}},{type:"MultiPolygon",arcs:[[[1317]],[[1318]]],id:"666",properties:{name:"St. Pierre and Miquelon"}},{type:"MultiPolygon",arcs:[[[1319]],[[1320]]],id:"876",properties:{name:"Wallis and Futuna Is."}},{type:"Polygon",arcs:[[1321,1322]],id:"663",properties:{name:"St-Martin"}},{type:"Polygon",arcs:[[1323]],id:"652",properties:{name:"St-Barthélemy"}},{type:"MultiPolygon",arcs:[[[1324]],[[1325]],[[1326]],[[1327]],[[1328]],[[1329]],[[1330]],[[1331]],[[1332]],[[1333]],[[1334]],[[1335]],[[1336]],[[1337]],[[1338]],[[1339]],[[1340]],[[1341]],[[1342]],[[1343]],[[1344]]],id:"258",properties:{name:"Fr. Polynesia"}},{type:"MultiPolygon",arcs:[[[1345]],[[1346]],[[1347]],[[1348]],[[1349]],[[1350]]],id:"540",properties:{name:"New Caledonia"}},{type:"MultiPolygon",arcs:[[[1351]],[[1352]],[[1353]]],id:"260",properties:{name:"Fr. S. Antarctic Lands"}},{type:"MultiPolygon",arcs:[[[1354]],[[1355]],[[1356]]],id:"248",properties:{name:"Åland"}},{type:"MultiPolygon",arcs:[[[-379,-766,-553,1357]],[[1358]],[[1359]],[[1360]],[[1361]],[[1362]],[[1363]],[[1364]]],id:"246",properties:{name:"Finland"}},{type:"MultiPolygon",arcs:[[[1365]],[[1366]],[[1367]],[[1368]],[[1369]],[[1370]],[[1371]],[[1372]],[[1373]],[[1374]],[[1375]],[[1376]],[[1377]],[[1378]],[[1379]],[[1380]],[[1381]],[[1382]],[[1383]],[[1384]]],id:"242",properties:{name:"Fiji"}},{type:"Polygon",arcs:[[-393,-401,1385,1386,-445,-442,-976]],id:"231",properties:{name:"Ethiopia"}},{type:"MultiPolygon",arcs:[[[-945,1387,-551]],[[1388]],[[1389]],[[1390]]],id:"233",properties:{name:"Estonia"}},{type:"MultiPolygon",arcs:[[[-400,1391,1392,-1386]],[[1393]],[[1394]]],id:"232",properties:{name:"Eritrea"}},{type:"MultiPolygon",arcs:[[[1395]],[[-1301,1396,1397]]],id:"226",properties:{name:"Eq. Guinea"}},{type:"Polygon",arcs:[[-1210,1398,-1233]],id:"222",properties:{name:"El Salvador"}},{type:"Polygon",arcs:[[-398,-936,1399,-1038,-1035,1400]],id:"818",properties:{name:"Egypt"}},{type:"MultiPolygon",arcs:[[[-714,1401,1402]],[[1403]],[[1404]],[[1405]],[[1406]],[[1407]],[[1408]],[[1409]],[[1410]]],id:"218",properties:{name:"Ecuador"}},{type:"Polygon",arcs:[[-1215,1411]],id:"214",properties:{name:"Dominican Rep."}},{type:"Polygon",arcs:[[1412]],id:"212",properties:{name:"Dominica"}},{type:"Polygon",arcs:[[-446,-1387,-1393,1413]],id:"262",properties:{name:"Djibouti"}},{type:"MultiPolygon",arcs:[[[1414]],[[1415]],[[1416]],[[1417]],[[1418]],[[1419]],[[1420]],[[1421]],[[1422]],[[1423]],[[1424]],[[1425]],[[1426]],[[1427]],[[1428]],[[1429]],[[1430]]],id:"304",properties:{name:"Greenland"}},{type:"MultiPolygon",arcs:[[[1431]],[[1432]],[[1433]],[[1434]],[[1435]]],id:"234",properties:{name:"Faeroe Is."}},{type:"MultiPolygon",arcs:[[[1436]],[[-1286,1437]],[[1438]],[[1439]],[[1440]],[[1441]],[[1442]],[[1443]],[[1444]],[[1445]],[[1446]],[[1447]]],id:"208",properties:{name:"Denmark"}},{type:"Polygon",arcs:[[-471,1448,-1288,-655]],id:"203",properties:{name:"Czechia"}},{type:"Polygon",arcs:[[1449,1450]],properties:{name:"N. Cyprus"}},{type:"Polygon",arcs:[[-1450,1451]],id:"196",properties:{name:"Cyprus"}},{type:"MultiPolygon",arcs:[[[1452]],[[1453]],[[1454]],[[1455]],[[1456]],[[1457]],[[1458]]],id:"192",properties:{name:"Cuba"}},{type:"MultiPolygon",arcs:[[[-473,-1207,-489,1459,1460]],[[1461]],[[1462]],[[1463]],[[1464]],[[1465]],[[1466]],[[1467]],[[1468]],[[1469]],[[1470]],[[1471]],[[-869,1472,1473]]],id:"191",properties:{name:"Croatia"}},{type:"MultiPolygon",arcs:[[[-1279,1474]],[[-902,1475,-1281,1476,-940,-1230]]],id:"384",properties:{name:"Côte d'Ivoire"}},{type:"Polygon",arcs:[[-748,1477,-815,1478]],id:"188",properties:{name:"Costa Rica"}},{type:"Polygon",arcs:[[-7,1479,1480,1481,1482,1483,-390,-296,-522,1484,-351]],id:"180",properties:{name:"Dem. Rep. Congo"}},{type:"Polygon",arcs:[[-1299,1485,1486,-1483,1487,1488]],id:"178",properties:{name:"Congo"}},{type:"MultiPolygon",arcs:[[[1489]],[[1490]],[[1491]]],id:"174",properties:{name:"Comoros"}},{type:"MultiPolygon",arcs:[[[-35,1492,-715,-1403,1493,-746,1494]],[[1495]]],id:"170",properties:{name:"Colombia"}},{type:"MultiPolygon",arcs:[[[1496]],[[1497]],[[1498]],[[1499]],[[1500]],[[1501]],[[1502]],[[1503]],[[1504]],[[1505]],[[1506]],[[-22,-949,1507,-1189,1508,-1187,-851,-1186,1509,-761,1510,-360,-951,-982,-543,-871,-541,-799,1511,1512,1513,1514,1515]],[[1516]]],id:"156",properties:{name:"China"}},{type:"Polygon",arcs:[[-1515,1517]],id:"446",properties:{name:"Macao"}},{type:"MultiPolygon",arcs:[[[-1513,1518]],[[1519]],[[1520]]],id:"344",properties:{name:"Hong Kong"}},{type:"MultiPolygon",arcs:[[[1521]],[[1522]],[[-712,1523,1524,1525]],[[1526,1527]],[[1528]],[[1529]],[[1530]],[[1531]],[[1532]],[[1533]],[[1534]],[[1535]],[[1536]],[[1537]],[[1538]],[[1539]],[[1540]],[[1541]],[[1542]],[[1543]],[[1544]],[[1545]],[[1546]],[[1547]],[[1548]],[[1549]],[[1550]],[[1551]],[[1552]],[[1553]],[[1554]]],id:"152",properties:{name:"Chile"}},{type:"Polygon",arcs:[[-396,1555,1556,-803,-813,-937]],id:"148",properties:{name:"Chad"}},{type:"Polygon",arcs:[[-391,-1484,-1487,1557,-1556,-395]],id:"140",properties:{name:"Central African Rep."}},{type:"MultiPolygon",arcs:[[[1558]],[[1559]],[[1560]],[[1561]],[[1562]],[[1563]],[[1564]],[[1565]]],id:"132",properties:{name:"Cabo Verde"}},{type:"MultiPolygon",arcs:[[[1566]],[[1567]],[[1568]],[[-106,1569,-169,1570]],[[1571]],[[1572]],[[1573]],[[1574]],[[1575]],[[1576]],[[1577]],[[1578]],[[1579]],[[1580]],[[1581]],[[1582]],[[1583]],[[1584]],[[1585]],[[1586]],[[1587]],[[1588]],[[1589]],[[-165,1590]],[[1591]],[[1592]],[[1593]],[[1594]],[[1595]],[[1596]],[[1597]],[[1598]],[[1599]],[[1600]],[[1601]],[[1602]],[[1603]],[[1604]],[[1605]],[[1606]],[[1607]],[[1608]],[[1609]],[[1610]],[[1611]],[[1612]],[[1613]],[[1614]],[[-104,1615]],[[1616]],[[1617]],[[1618]],[[1619]],[[1620]],[[1621]],[[1622]],[[1623]],[[1624]],[[1625]],[[1626]],[[1627]],[[1628]],[[1629]],[[1630]],[[1631]],[[1632]],[[1633]],[[1634]],[[1635]],[[1636]],[[1637]],[[1638]],[[1639]],[[1640]],[[1641]],[[1642]],[[1643]],[[1644]],[[1645]],[[1646]],[[1647]],[[1648]],[[1649]],[[1650]],[[1651]],[[1652]],[[1653]],[[1654]],[[1655]],[[1656]],[[1657]],[[1658]],[[1659]],[[1660]],[[1661]],[[1662]],[[1663]],[[1664]],[[1665]],[[1666]],[[1667]],[[1668]],[[1669]],[[1670]],[[1671]],[[1672]],[[1673]],[[1674]],[[1675]],[[1676]],[[1677]],[[1678]],[[1679]],[[1680]],[[1681]],[[1682]],[[1683]],[[1684]],[[1685]],[[1686]],[[1687]],[[1688]],[[1689]],[[1690]],[[1691]],[[1692]],[[1693]],[[1694]],[[1695]],[[1696]],[[1697]],[[1698]],[[1699]],[[1700]],[[1701]],[[1702]],[[1703]],[[1704]],[[1705]],[[1706]],[[1707]]],id:"124",properties:{name:"Canada"}},{type:"Polygon",arcs:[[-804,-1557,-1558,-1486,-1302,-1398,1708]],id:"120",properties:{name:"Cameroon"}},{type:"MultiPolygon",arcs:[[[1709]],[[1710]],[[-20,1711,-338,-947]]],id:"116",properties:{name:"Cambodia"}},{type:"MultiPolygon",arcs:[[[-342,1712,1713,-1190,-1508,-948]],[[1714]],[[1715]],[[1716]],[[1717]],[[1718]],[[1719]],[[1720]],[[1721]],[[1722]],[[1723]],[[1724]],[[1725]],[[1726]],[[1727]],[[1728]],[[1729]],[[1730]],[[1731]]],id:"104",properties:{name:"Myanmar"}},{type:"Polygon",arcs:[[-352,-1485,-521]],id:"108",properties:{name:"Burundi"}},{type:"Polygon",arcs:[[-328,-1282,-1476,-901,-809,1732]],id:"854",properties:{name:"Burkina Faso"}},{type:"Polygon",arcs:[[-314,-1277,-923,-484,-642,1733]],id:"100",properties:{name:"Bulgaria"}},{type:"MultiPolygon",arcs:[[[-910,1734]],[[-909,1735]]],id:"096",properties:{name:"Brunei"}},{type:"MultiPolygon",arcs:[[[-34,-1220,-387,-1317,1736,-62,1737,-716,1738,-710,-1493]],[[1739]],[[1740]],[[1741]],[[1742]],[[1743]],[[1744]],[[1745]],[[1746]],[[1747]],[[1748]],[[1749]],[[1750]],[[1751]],[[1752]],[[1753]],[[1754]]],id:"076",properties:{name:"Brazil"}},{type:"Polygon",arcs:[[-2,-438,-853]],id:"072",properties:{name:"Botswana"}},{type:"Polygon",arcs:[[-870,-1474,1755,-1460,-488]],id:"070",properties:{name:"Bosnia and Herz."}},{type:"Polygon",arcs:[[-711,-1739,-718,1756,-1524]],id:"068",properties:{name:"Bolivia"}},{type:"Polygon",arcs:[[-1188,-1509]],id:"064",properties:{name:"Bhutan"}},{type:"Polygon",arcs:[[-325,-1733,-808,-806,1757]],id:"204",properties:{name:"Benin"}},{type:"MultiPolygon",arcs:[[[-875,1758,-1231]],[[1759]],[[1760]]],id:"084",properties:{name:"Belize"}},{type:"Polygon",arcs:[[-833,-1284,-929,-1308,1761,-836]],id:"056",properties:{name:"Belgium"}},{type:"Polygon",arcs:[[-291,-661,-933,-946,-549]],id:"112",properties:{name:"Belarus"}},{type:"Polygon",arcs:[[1762]],id:"052",properties:{name:"Barbados"}},{type:"MultiPolygon",arcs:[[[-1191,-1714,1763]],[[1764]],[[1765]],[[1766]],[[1767]],[[1768]],[[1769]]],id:"050",properties:{name:"Bangladesh"}},{type:"Polygon",arcs:[[1770]],id:"048",properties:{name:"Bahrain"}},{type:"MultiPolygon",arcs:[[[1771]],[[1772]],[[1773]],[[1774]],[[1775]],[[1776]],[[1777]],[[1778]],[[1779]],[[1780]],[[1781]],[[1782]],[[1783]],[[1784]],[[1785]]],id:"044",properties:{name:"Bahamas"}},{type:"MultiPolygon",arcs:[[[-307,1786,-1047]],[[-1049,1787,-1296,-546,1788],[1789]],[[1790]]],id:"031",properties:{name:"Azerbaijan"}},{type:"Polygon",arcs:[[-370,-1289,-1449,-470,-1208,-476,-1023,-372,-934]],id:"040",properties:{name:"Austria"}},{type:"MultiPolygon",arcs:[[[1791]],[[1792]],[[1793]],[[1794]],[[1795]],[[1796]],[[1797]],[[1798]],[[1799]],[[1800]],[[1801]],[[1802]],[[1803]],[[1804]],[[1805]],[[1806]],[[1807]],[[1808]],[[1809]],[[1810]],[[1811]],[[1812]],[[1813]],[[1814]],[[1815]],[[1816]],[[1817]],[[1818]],[[1819]],[[1820]],[[1821]],[[1822]],[[1823]],[[1824]],[[1825]],[[1826]],[[1827]],[[1828]],[[1829]],[[1830]],[[1831]],[[1832]]],id:"036",properties:{name:"Australia"}},{type:"MultiPolygon",arcs:[[[1833]],[[1834]],[[1835]]],properties:{name:"Indian Ocean Ter."}},{type:"Polygon",arcs:[[1836]],id:"334",properties:{name:"Heard I. and McDonald Is."}},{type:"Polygon",arcs:[[1837]],id:"574",properties:{name:"Norfolk Island"}},{type:"Polygon",arcs:[[1838]],id:"036",properties:{name:"Ashmore and Cartier Is."}},{type:"MultiPolygon",arcs:[[[-306,-1297,-1788,-1048,-1787],[-1791]],[[-1790]]],id:"051",properties:{name:"Armenia"}},{type:"MultiPolygon",arcs:[[[-61,1839,-1525,-1757,-717,-1738]],[[-1527,1840]],[[1841]],[[1842]]],id:"032",properties:{name:"Argentina"}},{type:"MultiPolygon",arcs:[[[1843]],[[1844]]],id:"028",properties:{name:"Antigua and Barb."}},{type:"MultiPolygon",arcs:[[[-1482,1845,-1488]],[[-6,-855,1846,-1480]]],id:"024",properties:{name:"Angola"}},{type:"Polygon",arcs:[[-410,-1306]],id:"020",properties:{name:"Andorra"}},{type:"Polygon",arcs:[[-316,-938,-811,-900,-896,-863,-860,1847]],id:"012",properties:{name:"Algeria"}},{type:"Polygon",arcs:[[-867,-955,-925,-1276,1848]],id:"008",properties:{name:"Albania"}},{type:"Polygon",arcs:[[-54,-361,-1511,-760,-1045,-300]],id:"004",properties:{name:"Afghanistan"}},{type:"Polygon",arcs:[[-756,-1510,-1185]],properties:{name:"Siachen Glacier"}},{type:"MultiPolygon",arcs:[[[1849]],[[1850]],[[1851],[1852]],[[1853]],[[1854]],[[1855]],[[1856]],[[1857]],[[1858]],[[1859]],[[1860]],[[1861]],[[1862]],[[1863]],[[1864]],[[1865]],[[1866]],[[1867]],[[1868]],[[1869]],[[1870]],[[1871]],[[1872]],[[1873]],[[1874]],[[1875]],[[1876]],[[1877]],[[1878]],[[1879]],[[1880]],[[1881]],[[1882]],[[1883]],[[1884]],[[1885]],[[1886]],[[1887]],[[1888]],[[1889]],[[1890]],[[1891]],[[1892]],[[1893]],[[1894]],[[1895]],[[1896]],[[1897]],[[1898]],[[1899]],[[1900]],[[1901]],[[1902]],[[1903]],[[1904]],[[1905]],[[1906]],[[1907]],[[1908]],[[1909]],[[1910]],[[1911]],[[1912]],[[1913]],[[1914]],[[1915]],[[1916]],[[1917]],[[1918]],[[1919]],[[1920]],[[1921]],[[1922]],[[1923]],[[1924]],[[1925]],[[1926]],[[1927]],[[1928]],[[1929]],[[1930]],[[1931]],[[1932]],[[1933]],[[1934]],[[1935]],[[1936]],[[1937]],[[1938]],[[1939]],[[1940]],[[1941]],[[1942]],[[1943]],[[1944]],[[1945]],[[1946]],[[1947]],[[1948]],[[1949]],[[1950]],[[1951]],[[1952]],[[1953]],[[1954]],[[1955]],[[1956]],[[1957]]],id:"010",properties:{name:"Antarctica"}},{type:"Polygon",arcs:[[-1322,1958]],id:"534",properties:{name:"Sint Maarten"}}]},land:{type:"GeometryCollection",geometries:[{type:"MultiPolygon",arcs:[[[853,1846,1480,1845,1488,1299,1396,1708,804,1757,325,1277,1474,1279,1476,940,479,1228,1221,494,1297,496,894,864,861,1847,316,934,1399,1038,1036,942,368,310,1294,547,281,639,283,640,1733,311,1274,1848,867,1472,1755,1460,473,1023,1303,871,1304,411,646,413,1306,1761,836,833,1284,1437,1286,656,1290,658,637,929,634,930,943,1387,551,1357,379,764,554,799,422,797,1511,1518,1513,1517,1515,18,1711,338,905,340,1712,1763,1191,757,1045,1042,953,504,644,506,274,763,271,762,10,500,983,1033,1400,398,1391,1413,446,443,976,354,856,435],[980,544,1788,1049,301]],[[13]],[[14]],[[15]],[[16]],[[17]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[388,1315,1736,59,1839,1525,712,1401,1493,746,1477,815,1208,1398,1233,876,167,1570,102,1615,104,1569,1590,165,873,1758,1231,1211,813,1478,748,1494,35,1218]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]],[[62]],[[63]],[[64]],[[65]],[[66]],[[67]],[[68]],[[69]],[[70]],[[71]],[[72]],[[73]],[[74]],[[75]],[[76]],[[77]],[[78]],[[79]],[[80]],[[81]],[[82]],[[83]],[[84]],[[85]],[[86]],[[87]],[[88]],[[89]],[[90]],[[91]],[[92]],[[93]],[[94]],[[95]],[[96]],[[97]],[[98]],[[99]],[[100]],[[101]],[[106]],[[107]],[[108]],[[109]],[[110]],[[111]],[[112]],[[113]],[[114]],[[115]],[[116]],[[117]],[[118]],[[119]],[[120]],[[121]],[[122]],[[123]],[[124]],[[125]],[[126]],[[127]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138]],[[139]],[[140]],[[141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[161]],[[162]],[[163]],[[169]],[[170]],[[171]],[[172]],[[173]],[[174]],[[175]],[[176]],[[177]],[[178]],[[179]],[[180]],[[181]],[[182]],[[183]],[[184]],[[185]],[[186]],[[187]],[[188]],[[189]],[[190]],[[191]],[[192]],[[193]],[[194]],[[195]],[[196]],[[197]],[[198]],[[199]],[[200]],[[201]],[[202]],[[203]],[[204]],[[205]],[[206]],[[207]],[[208]],[[209]],[[210]],[[211]],[[212]],[[213]],[[214]],[[215]],[[216]],[[217]],[[218]],[[219]],[[220]],[[221]],[[222]],[[223]],[[224]],[[225]],[[226]],[[227]],[[228]],[[229]],[[230]],[[231]],[[232]],[[233]],[[234]],[[235]],[[236]],[[237]],[[238]],[[239]],[[240]],[[241]],[[242]],[[243]],[[244]],[[245]],[[246]],[[247]],[[248]],[[249]],[[250]],[[251]],[[252]],[[253]],[[254]],[[255]],[[256]],[[257]],[[258]],[[259]],[[260]],[[261]],[[262]],[[263]],[[264]],[[265]],[[266]],[[267]],[[269,1040]],[[270]],[[277]],[[278]],[[279]],[[280]],[[292]],[[298]],[[303]],[[317]],[[318]],[[319]],[[320]],[[321]],[[322]],[[323]],[[328]],[[1082,330,1081,331]],[[333]],[[334]],[[335]],[[342]],[[343]],[[344]],[[345]],[[346]],[[347]],[[348]],[[349]],[[357]],[[362]],[[363]],[[375]],[[376]],[[380]],[[381]],[[382]],[[401]],[[402]],[[403]],[[404]],[[405]],[[406]],[[407]],[[414]],[[415]],[[416]],[[417]],[[418]],[[419]],[[420]],[[423]],[[424]],[[425]],[[426]],[[427]],[[428]],[[429]],[[430]],[[431]],[[432]],[[439]],[[447]],[[448]],[[449]],[[450]],[[451]],[[452]],[[453]],[[454]],[[455]],[[456]],[[457]],[[458]],[[459]],[[460]],[[461]],[[462]],[[463]],[[464]],[[465]],[[466]],[[467]],[[477]],[[481]],[[482]],[[498]],[[499]],[[508]],[[509]],[[510]],[[512]],[[513]],[[514]],[[515]],[[516]],[[517]],[[518]],[[519]],[[522]],[[523]],[[524]],[[525]],[[526]],[[527]],[[528]],[[529]],[[530]],[[531]],[[532]],[[533]],[[534]],[[535]],[[536]],[[537]],[[538]],[[555]],[[556]],[[557]],[[558]],[[559]],[[560]],[[561]],[[562]],[[563]],[[564]],[[565]],[[566]],[[567]],[[568]],[[569]],[[570]],[[571]],[[572]],[[573]],[[574]],[[575]],[[576]],[[577]],[[578]],[[579]],[[580]],[[581]],[[582]],[[583]],[[584]],[[585]],[[586]],[[587]],[[588]],[[589]],[[590]],[[591]],[[592]],[[593]],[[594]],[[595]],[[596]],[[597]],[[598]],[[599]],[[600]],[[601]],[[602]],[[603]],[[604]],[[605]],[[606]],[[607]],[[608]],[[609]],[[610]],[[611]],[[612]],[[613]],[[614]],[[615]],[[616]],[[617]],[[618]],[[619]],[[620]],[[621]],[[622]],[[623]],[[624]],[[625]],[[626]],[[627]],[[628]],[[629]],[[630]],[[631]],[[632]],[[633]],[[645]],[[647]],[[648]],[[649]],[[650]],[[651]],[[652]],[[653]],[[661]],[[662]],[[663]],[[664]],[[665]],[[666]],[[667]],[[668]],[[669]],[[670]],[[671]],[[672]],[[673]],[[674]],[[675]],[[676]],[[677]],[[678]],[[679]],[[680]],[[681]],[[682]],[[683]],[[684]],[[685]],[[686]],[[687]],[[688]],[[689]],[[690]],[[691]],[[692]],[[693]],[[694]],[[695]],[[696]],[[697]],[[698]],[[699]],[[700]],[[701]],[[702]],[[703]],[[704]],[[705]],[[706]],[[707]],[[708]],[[718]],[[719]],[[721,1086]],[[722]],[[723]],[[724]],[[725]],[[726]],[[727]],[[728]],[[729]],[[730]],[[731]],[[732]],[[733]],[[734]],[[735]],[[736]],[[737]],[[738]],[[739]],[[740]],[[741]],[[742]],[[743]],[[744]],[[749]],[[750]],[[751]],[[752]],[[753]],[[754]],[[761]],[[766]],[[767]],[[768]],[[769]],[[770]],[[771]],[[772]],[[773]],[[774]],[[775]],[[776]],[[777]],[[778]],[[779]],[[780]],[[781]],[[782]],[[783]],[[784]],[[785]],[[786]],[[787]],[[788]],[[789]],[[790]],[[791]],[[792]],[[793]],[[794]],[[795]],[[796]],[[800]],[[801]],[[817]],[[818]],[[819]],[[820]],[[821]],[[822]],[[823]],[[824]],[[825]],[[826]],[[827]],[[828]],[[829]],[[830]],[[831]],[[837]],[[838]],[[839]],[[840]],[[841]],[[842]],[[843]],[[844]],[[845]],[[846]],[[847]],[[848]],[[851]],[[877]],[[878]],[[879]],[[880]],[[881]],[[882]],[[883]],[[884]],[[885]],[[886]],[[887]],[[888]],[[889]],[[890]],[[891]],[[892]],[[893]],[[897]],[[898]],[[903]],[[904]],[[907,1735,1734,910,1077]],[[911]],[[912]],[[913]],[[914]],[[915]],[[916]],[[918,1153]],[[919]],[[920]],[[921]],[[951]],[[955]],[[956]],[[957]],[[958]],[[959]],[[960]],[[961]],[[962]],[[963]],[[964]],[[965]],[[966]],[[967]],[[968]],[[969]],[[970]],[[971]],[[972]],[[973]],[[974]],[[977]],[[978]],[[979]],[[987]],[[988]],[[989]],[[990]],[[991]],[[992]],[[993]],[[994]],[[995]],[[996]],[[997]],[[998]],[[999]],[[1e3]],[[1001]],[[1002]],[[1003]],[[1004]],[[1005]],[[1006]],[[1007]],[[1008]],[[1009]],[[1010]],[[1011]],[[1012]],[[1013]],[[1014]],[[1015]],[[1016]],[[1017]],[[1018]],[[1019]],[[1020]],[[1021]],[[1025]],[[1026]],[[1027]],[[1028]],[[1029]],[[1030]],[[1031]],[[1039]],[[1043]],[[1050]],[[1051]],[[1052]],[[1053]],[[1054]],[[1055]],[[1056]],[[1057]],[[1058]],[[1059]],[[1060]],[[1061]],[[1062]],[[1063]],[[1064]],[[1065]],[[1066]],[[1067]],[[1068]],[[1069]],[[1070]],[[1071]],[[1072]],[[1073]],[[1074]],[[1075]],[[1076]],[[1078]],[[1079]],[[1080]],[[1083]],[[1084]],[[1085]],[[1087]],[[1088]],[[1089]],[[1090]],[[1091]],[[1092]],[[1093]],[[1094]],[[1095]],[[1096]],[[1097]],[[1098]],[[1099]],[[1100]],[[1101]],[[1102]],[[1103]],[[1104]],[[1105]],[[1106]],[[1107]],[[1108]],[[1109]],[[1110]],[[1111]],[[1112]],[[1113]],[[1114]],[[1115]],[[1116]],[[1117]],[[1118]],[[1119]],[[1120]],[[1121]],[[1122]],[[1123]],[[1124]],[[1125]],[[1126]],[[1127]],[[1128]],[[1129]],[[1130]],[[1131]],[[1132]],[[1133]],[[1134]],[[1135]],[[1136]],[[1137]],[[1138]],[[1139]],[[1140]],[[1141]],[[1142]],[[1143]],[[1144]],[[1145]],[[1146]],[[1147]],[[1148]],[[1149]],[[1150]],[[1151]],[[1152]],[[1154]],[[1155]],[[1156]],[[1157]],[[1158]],[[1159]],[[1160]],[[1161]],[[1162]],[[1163]],[[1164]],[[1165]],[[1166]],[[1167]],[[1168]],[[1169]],[[1170]],[[1171]],[[1172]],[[1173]],[[1174]],[[1175]],[[1176]],[[1177]],[[1178]],[[1179]],[[1180]],[[1181]],[[1182]],[[1183]],[[1192]],[[1193]],[[1194]],[[1195]],[[1196]],[[1197]],[[1198]],[[1199]],[[1200]],[[1201]],[[1202]],[[1203]],[[1204]],[[1205]],[[1212]],[[1213]],[[1215,1411]],[[1216]],[[1217]],[[1222]],[[1223]],[[1224]],[[1225]],[[1226]],[[1227]],[[1234]],[[1235]],[[1236]],[[1237]],[[1238]],[[1239]],[[1240]],[[1241]],[[1242]],[[1243]],[[1244]],[[1245]],[[1246]],[[1247]],[[1248]],[[1249]],[[1250]],[[1251]],[[1252]],[[1253]],[[1254]],[[1255]],[[1256]],[[1257]],[[1258]],[[1259]],[[1260]],[[1261]],[[1262]],[[1263]],[[1264]],[[1265]],[[1266]],[[1267]],[[1268]],[[1269]],[[1270]],[[1271]],[[1272]],[[1273]],[[1289]],[[1291]],[[1292]],[[1293]],[[1302]],[[1308]],[[1309]],[[1310]],[[1311]],[[1312]],[[1313]],[[1314]],[[1317]],[[1318]],[[1319]],[[1320]],[[1322,1958]],[[1323]],[[1324]],[[1325]],[[1326]],[[1327]],[[1328]],[[1329]],[[1330]],[[1331]],[[1332]],[[1333]],[[1334]],[[1335]],[[1336]],[[1337]],[[1338]],[[1339]],[[1340]],[[1341]],[[1342]],[[1343]],[[1344]],[[1345]],[[1346]],[[1347]],[[1348]],[[1349]],[[1350]],[[1351]],[[1352]],[[1353]],[[1354]],[[1355]],[[1356]],[[1358]],[[1359]],[[1360]],[[1361]],[[1362]],[[1363]],[[1364]],[[1365]],[[1366]],[[1367]],[[1368]],[[1369]],[[1370]],[[1371]],[[1372]],[[1373]],[[1374]],[[1375]],[[1376]],[[1377]],[[1378]],[[1379]],[[1380]],[[1381]],[[1382]],[[1383]],[[1384]],[[1388]],[[1389]],[[1390]],[[1393]],[[1394]],[[1395]],[[1403]],[[1404]],[[1405]],[[1406]],[[1407]],[[1408]],[[1409]],[[1410]],[[1412]],[[1414]],[[1415]],[[1416]],[[1417]],[[1418]],[[1419]],[[1420]],[[1421]],[[1422]],[[1423]],[[1424]],[[1425]],[[1426]],[[1427]],[[1428]],[[1429]],[[1430]],[[1431]],[[1432]],[[1433]],[[1434]],[[1435]],[[1436]],[[1438]],[[1439]],[[1440]],[[1441]],[[1442]],[[1443]],[[1444]],[[1445]],[[1446]],[[1447]],[[1450,1451]],[[1452]],[[1453]],[[1454]],[[1455]],[[1456]],[[1457]],[[1458]],[[1461]],[[1462]],[[1463]],[[1464]],[[1465]],[[1466]],[[1467]],[[1468]],[[1469]],[[1470]],[[1471]],[[1489]],[[1490]],[[1491]],[[1495]],[[1496]],[[1497]],[[1498]],[[1499]],[[1500]],[[1501]],[[1502]],[[1503]],[[1504]],[[1505]],[[1506]],[[1516]],[[1519]],[[1520]],[[1521]],[[1522]],[[1527,1840]],[[1528]],[[1529]],[[1530]],[[1531]],[[1532]],[[1533]],[[1534]],[[1535]],[[1536]],[[1537]],[[1538]],[[1539]],[[1540]],[[1541]],[[1542]],[[1543]],[[1544]],[[1545]],[[1546]],[[1547]],[[1548]],[[1549]],[[1550]],[[1551]],[[1552]],[[1553]],[[1554]],[[1558]],[[1559]],[[1560]],[[1561]],[[1562]],[[1563]],[[1564]],[[1565]],[[1566]],[[1567]],[[1568]],[[1571]],[[1572]],[[1573]],[[1574]],[[1575]],[[1576]],[[1577]],[[1578]],[[1579]],[[1580]],[[1581]],[[1582]],[[1583]],[[1584]],[[1585]],[[1586]],[[1587]],[[1588]],[[1589]],[[1591]],[[1592]],[[1593]],[[1594]],[[1595]],[[1596]],[[1597]],[[1598]],[[1599]],[[1600]],[[1601]],[[1602]],[[1603]],[[1604]],[[1605]],[[1606]],[[1607]],[[1608]],[[1609]],[[1610]],[[1611]],[[1612]],[[1613]],[[1614]],[[1616]],[[1617]],[[1618]],[[1619]],[[1620]],[[1621]],[[1622]],[[1623]],[[1624]],[[1625]],[[1626]],[[1627]],[[1628]],[[1629]],[[1630]],[[1631]],[[1632]],[[1633]],[[1634]],[[1635]],[[1636]],[[1637]],[[1638]],[[1639]],[[1640]],[[1641]],[[1642]],[[1643]],[[1644]],[[1645]],[[1646]],[[1647]],[[1648]],[[1649]],[[1650]],[[1651]],[[1652]],[[1653]],[[1654]],[[1655]],[[1656]],[[1657]],[[1658]],[[1659]],[[1660]],[[1661]],[[1662]],[[1663]],[[1664]],[[1665]],[[1666]],[[1667]],[[1668]],[[1669]],[[1670]],[[1671]],[[1672]],[[1673]],[[1674]],[[1675]],[[1676]],[[1677]],[[1678]],[[1679]],[[1680]],[[1681]],[[1682]],[[1683]],[[1684]],[[1685]],[[1686]],[[1687]],[[1688]],[[1689]],[[1690]],[[1691]],[[1692]],[[1693]],[[1694]],[[1695]],[[1696]],[[1697]],[[1698]],[[1699]],[[1700]],[[1701]],[[1702]],[[1703]],[[1704]],[[1705]],[[1706]],[[1707]],[[1709]],[[1710]],[[1714]],[[1715]],[[1716]],[[1717]],[[1718]],[[1719]],[[1720]],[[1721]],[[1722]],[[1723]],[[1724]],[[1725]],[[1726]],[[1727]],[[1728]],[[1729]],[[1730]],[[1731]],[[1739]],[[1740]],[[1741]],[[1742]],[[1743]],[[1744]],[[1745]],[[1746]],[[1747]],[[1748]],[[1749]],[[1750]],[[1751]],[[1752]],[[1753]],[[1754]],[[1759]],[[1760]],[[1762]],[[1764]],[[1765]],[[1766]],[[1767]],[[1768]],[[1769]],[[1770]],[[1771]],[[1772]],[[1773]],[[1774]],[[1775]],[[1776]],[[1777]],[[1778]],[[1779]],[[1780]],[[1781]],[[1782]],[[1783]],[[1784]],[[1785]],[[1791]],[[1792]],[[1793]],[[1794]],[[1795]],[[1796]],[[1797]],[[1798]],[[1799]],[[1800]],[[1801]],[[1802]],[[1803]],[[1804]],[[1805]],[[1806]],[[1807]],[[1808]],[[1809]],[[1810]],[[1811]],[[1812]],[[1813]],[[1814]],[[1815]],[[1816]],[[1817]],[[1818]],[[1819]],[[1820]],[[1821]],[[1822]],[[1823]],[[1824]],[[1825]],[[1826]],[[1827]],[[1828]],[[1829]],[[1830]],[[1831]],[[1832]],[[1833]],[[1834]],[[1835]],[[1836]],[[1837]],[[1838]],[[1841]],[[1842]],[[1843]],[[1844]],[[1849]],[[1850]],[[1852],[1851]],[[1853]],[[1854]],[[1855]],[[1856]],[[1857]],[[1858]],[[1859]],[[1860]],[[1861]],[[1862]],[[1863]],[[1864]],[[1865]],[[1866]],[[1867]],[[1868]],[[1869]],[[1870]],[[1871]],[[1872]],[[1873]],[[1874]],[[1875]],[[1876]],[[1877]],[[1878]],[[1879]],[[1880]],[[1881]],[[1882]],[[1883]],[[1884]],[[1885]],[[1886]],[[1887]],[[1888]],[[1889]],[[1890]],[[1891]],[[1892]],[[1893]],[[1894]],[[1895]],[[1896]],[[1897]],[[1898]],[[1899]],[[1900]],[[1901]],[[1902]],[[1903]],[[1904]],[[1905]],[[1906]],[[1907]],[[1908]],[[1909]],[[1910]],[[1911]],[[1912]],[[1913]],[[1914]],[[1915]],[[1916]],[[1917]],[[1918]],[[1919]],[[1920]],[[1921]],[[1922]],[[1923]],[[1924]],[[1925]],[[1926]],[[1927]],[[1928]],[[1929]],[[1930]],[[1931]],[[1932]],[[1933]],[[1934]],[[1935]],[[1936]],[[1937]],[[1938]],[[1939]],[[1940]],[[1941]],[[1942]],[[1943]],[[1944]],[[1945]],[[1946]],[[1947]],[[1948]],[[1949]],[[1950]],[[1951]],[[1952]],[[1953]],[[1954]],[[1955]],[[1956]],[[1957]]]}]}},aL=[[[58690,38938],[-25,33],[-34,22],[-44,9],[-57,-4],[-69,-18],[-75,22],[-80,62],[-67,22],[-79,-27],[-4,-1]],[[58156,39058],[-13,21],[-22,45],[-36,8],[-10,11],[-8,16],[-6,22],[-2,23],[6,75],[-3,8],[-10,9],[-19,9],[-48,33],[-60,33],[-97,35],[-38,10],[-9,11],[-11,27],[-19,85],[-17,56],[-42,87],[-7,27],[2,69],[4,55],[4,47],[-2,45],[-1,54],[2,37],[-6,16],[-15,11],[-43,5],[-53,-2],[-1,56],[-5,86],[-10,50],[-12,26],[-24,27],[-49,37],[-66,56],[-57,83],[-64,103],[-21,18],[-24,97],[-36,166],[2,55],[-5,27],[-36,82],[-7,42],[-7,43],[-56,120],[-19,52],[-15,67],[-14,53],[-13,22],[-16,36],[-11,42],[-5,31],[4,41],[6,29]],[[57016,41593],[53,-30],[30,-2],[23,14],[28,-19],[34,-54],[37,-11],[39,34],[54,-10],[68,-54],[56,-11],[67,48],[60,132],[56,125],[55,144],[34,116],[48,95],[65,73],[65,61],[100,76],[21,62],[6,68],[0,94],[5,61],[11,28],[16,22],[22,28],[66,72],[55,46],[68,30],[73,0],[71,0],[41,1]],[[58443,42832],[0,-91],[3,-102],[8,-10],[54,-2],[86,-8],[82,-7],[53,-74],[18,-15],[55,-20],[70,-124],[84,-11],[58,-39],[51,-42],[29,-51],[19,-12],[26,-4],[13,-4],[-3,-37],[-17,-62],[2,-89],[24,-123],[3,-107],[-8,-189],[1,-183],[2,-65],[4,-43],[5,-24],[-1,-27],[-14,-77],[-11,-81],[-1,-32],[-4,-23],[-8,-20],[-37,-37],[-6,-23],[0,-42],[4,-35],[14,-13],[17,-20],[6,-26],[0,-28],[-5,-51],[-15,-85],[15,-98],[17,-63],[22,-73],[10,-45],[-1,-33],[-3,-31],[-34,-134],[-25,-83],[-30,-89],[-40,-56],[-10,-27],[-4,-31],[1,-67],[-1,-69],[-34,-108],[21,-92],[-5,-9],[-12,-13],[-49,-104],[-49,-105],[-36,-77],[-42,-88],[-46,-98],[-39,-83],[-40,-60]],[[57016,41593],[-47,92],[-25,38],[-19,14],[-55,15],[-128,21],[-13,-5],[-53,-18],[-66,-23],[-56,-22],[-60,-24]],[[56494,41681],[-55,96],[-63,108],[-65,122],[-49,95],[-24,55],[-43,72],[-31,35],[-12,18],[-30,193],[-17,177],[0,133],[0,185],[0,185],[0,185],[0,184],[0,185],[0,185],[0,185],[0,185],[0,90],[64,0],[72,0],[76,0],[83,0],[82,0],[83,0],[58,0],[15,1],[18,6],[1,18],[-24,91],[2,32],[6,62],[10,53],[13,70],[1,41],[-10,134],[1,75],[3,78],[3,74],[-4,51],[4,28],[8,40],[4,45],[5,20],[-1,18],[-5,33],[-4,76],[-6,105],[-6,75]],[[56657,45580],[10,-4],[21,-7],[10,-37],[6,-41],[14,-2],[37,-24],[13,-34],[8,-72],[-5,-37],[-12,-30],[12,-26],[25,-18],[14,6],[42,49],[16,9],[22,9],[20,13],[55,22],[30,10],[17,18],[12,0],[9,-14],[-8,-51],[-3,-46],[11,-86],[8,-40],[18,-29],[13,-15],[14,-31],[30,6],[65,-44],[20,-20],[28,-21],[19,-7],[68,-15],[25,-11],[46,-14],[37,-2],[27,6],[18,13],[11,14],[5,11],[8,43],[14,93],[5,27],[14,13],[18,9],[10,-15],[12,-103],[51,-93],[18,-78],[13,-66],[11,-19],[19,-22],[32,-9],[28,-2],[58,-48],[47,-38],[34,-27],[15,-21],[11,-34],[6,-27],[10,-68],[11,-54],[18,-11],[16,-4],[16,-37],[12,-32],[24,-80],[17,-54],[6,-54],[20,-35],[27,-15],[25,-2],[14,16],[36,27],[28,32],[20,11],[12,-7],[9,-22],[5,-43],[1,-24],[20,-22],[14,9],[6,26],[0,13],[0,117],[0,101],[0,95],[0,116],[0,101],[0,83],[0,87],[-13,-5],[-16,-20],[-37,-2],[-14,-15],[-4,-23],[2,-29],[1,-39],[-5,-19],[-16,-7],[-24,15],[-42,20],[-35,12],[-25,53],[-35,79],[-22,40],[-54,82],[-9,17],[-17,38],[-14,66],[-7,43],[-6,33],[-8,48],[13,74],[19,141],[13,102],[7,75],[27,77],[2,68],[-11,88],[3,49],[1,123],[2,104],[0,50],[-7,88],[-18,98],[-39,135],[0,29],[24,32],[36,56],[18,33],[22,47],[10,24],[21,61],[13,49],[5,63],[-10,61],[20,12],[68,21],[74,23],[79,25],[79,25],[77,25],[69,22],[48,15]],[[58541,47123],[8,-42],[14,-69],[18,-51],[21,-44],[18,-27],[12,-8],[76,3],[27,-27],[24,-35],[6,-53],[16,-33],[17,-26],[7,-3],[12,6],[21,1],[19,-12],[9,-11],[1,-45],[5,-20],[26,-7],[26,-4],[26,-30],[27,-5],[32,-13],[15,-32],[33,-34],[41,-29],[30,-34],[16,-15]],[[59144,46424],[1,-16],[7,-29],[8,-20],[1,-31],[4,-28],[12,-7],[9,-2],[9,20],[12,0],[13,-13],[5,-33],[11,-44],[16,-30],[12,-29],[-4,-53],[-7,-49],[22,-47],[30,-46],[8,-20],[2,-67],[5,-23],[20,-56],[10,-37],[-1,-22],[-54,-111],[-17,-11],[-16,-6],[-15,-23],[-8,-23],[3,-13],[6,-38],[12,-60],[12,-42],[-10,-52],[-21,-89],[-10,-8],[-2,-68],[7,-24],[10,-20],[4,-46],[1,-63],[-1,-50],[-14,-130],[25,-112],[8,-13],[34,0],[5,-10],[-8,-32],[-14,-33],[-9,-17],[-43,-38],[-62,-43],[-13,-41],[-8,-59],[7,-35],[8,-20],[-3,-52],[-5,-54],[2,-43],[-3,-38],[-8,-19],[-11,-57],[-13,-58],[-11,-26],[-15,-28],[-24,-23],[0,-11],[28,-27],[7,-18],[2,-13],[-6,-12],[-5,-17],[13,-18],[15,-15],[15,-38],[13,-54],[4,-18],[3,-8],[5,-1],[9,8],[17,30],[12,10],[15,-42]],[[59222,43770],[-60,-41],[-31,-21],[-89,-62],[-78,-54],[-20,-10],[-41,-27],[-20,-16],[-70,-47],[-29,-23],[-24,-23],[-58,-35],[-55,-33],[-60,-34],[-67,-38],[-38,-27],[-25,-24],[-60,-47],[-3,-12],[1,-32],[8,-67],[15,-61],[12,-35],[8,-90],[5,-79]],[[64745,61433],[-140,-103],[-37,-45],[-33,-57],[-25,-70],[-18,-124],[13,-113],[-1,-60],[-36,-40],[-34,-29],[-37,-44],[-23,-11],[-19,-35],[-21,-25],[-78,-63],[-86,-50],[-135,-59],[-53,-64],[-47,-44],[-73,-13],[-99,-61],[-55,-48],[-69,-80],[-15,-25],[-12,-58],[-21,-51],[-42,-83],[-31,-42],[-20,-2],[-41,-23],[-47,-5],[-80,29],[-21,-20],[-17,-33],[-61,-56],[-63,-114],[-46,-30],[-74,-36],[-52,-47],[-35,-19],[-44,-10],[-83,5],[-79,-17],[-73,-32],[-34,-60],[-39,-96],[-64,-40],[-15,-34],[-20,-71],[-41,-18],[-38,-12],[-38,31],[-72,-85],[-27,-15],[-41,-3],[-30,-18],[-21,5],[-26,34],[-56,40],[-41,-26],[-3,80],[-68,247],[14,215],[0,30],[-13,96],[-40,87],[1,111],[-14,80],[-10,81],[3,22],[1,20],[-21,125],[-7,26],[-2,26],[6,20],[0,24],[-11,38],[-11,74],[-55,57],[11,54],[11,-19],[14,-16],[3,35],[0,26],[-23,163],[34,218],[-11,195]],[[61888,61273],[52,79],[13,24],[8,21],[12,45],[17,14],[6,47],[-1,24],[-11,20],[-8,55],[3,69],[3,29],[5,53],[18,20],[5,16],[-14,33],[1,20],[31,56],[12,17],[20,18],[16,-1],[18,-9],[16,-16],[15,-29],[17,-32],[25,-13],[17,4],[15,-15],[11,8],[14,17],[21,-1],[20,19],[55,9],[53,-6],[56,16],[56,-1],[55,-2],[13,-2],[12,-10],[47,-50],[36,-10],[72,-13],[77,-15],[66,-13],[57,12],[47,10],[12,-2],[14,-31],[29,-76],[26,-73],[47,-3],[30,27],[33,38],[20,30],[23,117],[15,77],[34,85],[29,72],[39,95],[21,52],[42,104],[39,40],[77,78],[76,77],[49,49],[42,23],[70,20],[83,23],[82,23],[88,24],[98,28],[67,18],[86,24],[71,20],[63,18],[66,18]],[[64438,62785],[12,-57],[12,-58],[12,-58],[13,-57],[12,-58],[12,-57],[13,-58],[12,-57],[12,-58],[13,-57],[12,-58],[12,-57],[12,-58],[13,-57],[12,-58],[12,-58],[12,-56],[20,-18],[12,-54],[17,-75],[17,-76],[17,-76],[16,-76]],[[61830,60658],[-9,-13],[-2,23],[5,50],[9,14],[7,-37],[-4,-20],[-6,-17]],[[61876,59737],[-18,-18],[12,46],[13,9],[4,-2],[-11,-35]],[[61885,59891],[-4,-13],[-5,3],[-17,31],[19,34],[10,-32],[-3,-23]],[[64934,59122],[17,-7],[26,20],[74,3],[90,-65],[-17,-16],[-10,-24],[-39,-21],[-40,-49],[-114,-24],[-33,13],[-28,48],[-51,62],[20,40],[5,18],[7,17],[29,30],[29,-4],[35,-41]],[[78906,57828],[5,-29],[-2,-66],[-11,-66],[4,-29],[-9,-18],[-18,123],[-24,53],[-5,21],[14,-2],[24,34],[12,1],[10,-22]],[[79992,64232],[-13,-5],[-33,-1],[-28,-53],[-20,-22],[-30,-18],[-33,-30],[-9,-52],[-1,-38],[-5,-42],[-53,-61],[-15,6],[-10,23],[-15,-5],[-11,-11],[-12,1],[-14,-13],[-18,4],[-17,19],[-10,5],[-12,1],[-2,-23],[17,-89],[5,-41],[-56,-120],[6,-78],[-15,-59],[-34,-48],[-64,-123],[-29,-3],[-22,-28],[-47,-202],[-1,-70],[-7,-50],[2,-49],[-21,-96],[-22,-41],[-4,-52],[30,-108],[4,-19],[17,-58],[9,-41],[14,-41],[49,-107],[22,-33],[26,-23],[48,-96],[24,-62],[-11,-41],[6,-89],[-35,26],[5,-11],[40,-48],[61,-170],[53,-84],[54,-96],[17,-91],[48,-60],[54,-87],[-2,-19],[14,-24],[37,-46],[22,-49],[8,-46],[13,-7],[16,11],[15,4],[10,-3],[17,-51],[22,-46],[11,-41],[9,5],[7,-6],[2,-35],[4,-23],[30,-67],[14,-63],[37,-103],[26,-58],[20,-33],[21,-28],[22,-114],[11,-103],[23,-114],[18,-50],[0,-95],[14,-97],[15,-65],[5,-67],[4,-33],[6,-25],[16,-114],[-4,-52],[-11,51],[1,-152],[10,-80],[-5,-99],[11,-35],[19,-111],[13,-40],[-1,-137],[7,-69],[-18,41],[-13,47],[-17,-25],[-15,-36],[24,-147],[-28,14],[3,-197],[11,-46],[1,-22],[-3,-27],[-8,29],[-1,30],[-5,-6],[1,-16],[-10,-35],[-2,-43],[9,-36],[2,-28],[-7,-35],[-11,-37],[-26,-5],[-6,-71],[-9,-76],[-46,-12],[-33,-67],[-42,-25],[-37,-67],[-40,-61],[-27,-8],[-22,-13],[-26,-102],[-44,-12],[-78,-83],[-26,-40],[-24,-16],[-34,-35],[-7,13],[-12,30],[-29,15],[-15,33],[-4,43],[-4,17],[-6,-24],[-5,-102],[-5,-23],[-13,-10],[-25,29],[-23,59],[-34,-41],[10,-5],[16,3],[12,-10],[10,-39],[-1,-22],[-5,-25],[-32,-4],[-42,9],[-7,-3],[38,-39],[35,-22],[16,-24],[0,-20],[-20,-32],[-15,-40],[-1,-25],[0,-27],[-17,-24],[-11,5],[-30,41],[-86,163],[13,-46],[90,-185],[15,-61],[3,-43],[-10,-21],[-15,-26],[-29,-2],[-49,69],[-77,165],[-26,22],[78,-188],[13,-46],[13,-53],[-4,-31],[-7,-30],[-185,-174],[-28,-76],[-22,-93],[-36,-51],[-21,-48],[-62,-26],[-34,8],[35,86],[-22,32],[-1,221],[9,242],[16,121],[23,30],[30,19],[0,25],[-3,30],[-15,41],[-18,19],[-25,8],[-20,51],[-15,-2],[-24,-17],[-14,22],[-5,34],[-22,42],[-24,41]],[[79007,57840],[11,6],[13,24],[14,30],[35,4],[35,-1],[9,8],[14,32],[23,41],[18,23],[4,19],[-7,43],[-4,45],[7,14],[31,-8],[35,-21],[8,-9],[20,55],[6,6],[13,0],[34,10],[34,15],[16,-3],[15,-37],[12,-36],[6,-2],[17,15],[15,-19],[30,-32],[18,-1],[-9,73],[10,52],[-2,14],[-17,24],[-57,96],[-10,29],[1,45],[-2,66],[-5,41],[1,24],[3,20],[11,8],[10,2],[8,17],[14,44],[27,-4],[38,-25],[28,-15],[17,3],[3,6],[0,23],[2,100],[-1,21],[23,10],[37,2],[19,6],[18,42],[46,15],[34,56],[30,59],[14,15],[19,10],[14,-1],[18,-34],[14,20],[17,40],[9,39],[5,62],[-4,96],[-8,74],[-9,57],[-2,56],[20,112],[17,122],[-4,49],[-18,76],[-18,93],[-20,102],[-8,15],[-5,29],[-4,33],[9,104],[1,36],[23,47],[12,55],[12,60],[-4,31]],[[79866,60313],[-2,65],[3,31],[-5,26],[-7,37],[4,24],[17,20],[9,35],[12,42],[6,37],[-9,32],[-16,47],[-29,43],[-33,54],[-17,34],[-13,34],[-12,40],[-6,31],[6,21],[48,48],[8,17],[5,27],[-3,26],[-13,14],[-15,10],[-22,30],[-41,82],[-19,19],[-20,24],[-10,25],[-12,68],[-5,6],[-11,-20],[-15,-22],[-12,4],[-11,19],[-5,26],[-12,36],[-14,29],[-3,98],[-2,32],[-7,45],[-10,16],[-11,12],[-26,81],[-17,42],[-74,114],[-9,19],[-19,47],[-35,66],[-24,54],[-18,56],[-8,48],[-3,38],[-19,54],[-17,44],[-16,15],[-18,6],[-17,26],[-31,59],[-13,39],[-8,26],[0,26],[7,44],[9,26],[1,19],[-9,16],[-34,29],[-77,43],[-29,33],[-26,42],[-20,29],[-94,122],[-28,20],[-25,22],[-7,21],[1,20],[10,15],[27,32],[10,35],[-4,47],[-10,48],[5,16],[9,2],[17,2],[37,2],[80,-43],[11,5],[44,78],[16,47],[4,39],[8,25],[23,41],[0,37],[-11,50],[-11,19],[-10,8],[-32,-6],[-6,11],[-4,37],[-2,23],[-10,26],[-34,23],[-29,6],[-7,10],[11,25],[20,25],[15,15],[12,26],[2,27],[-15,24],[-19,26],[-31,50],[-43,54],[-26,18],[-13,-2],[-48,-46],[-25,-30],[-21,-54],[-22,-11],[-23,23],[-25,25],[-70,35],[-30,29],[-61,179],[-9,37],[6,41],[4,59],[6,38],[11,37],[3,32],[-3,32],[-9,18],[-11,5],[-9,8],[-8,41],[-5,-5],[-7,-51],[-9,-18],[-12,-9],[-10,8],[-5,20],[-3,35],[-6,46],[-8,30],[-26,31],[-12,40],[-40,87],[-33,61],[-15,55]],[[78368,64734],[13,20],[17,30],[19,46],[20,58],[8,35],[6,15],[12,10],[13,-6],[23,-23],[34,-30],[30,-35],[12,-36],[17,-34],[13,-10],[7,2],[19,26],[17,26],[1,29],[15,26],[20,43],[10,30],[7,3],[8,-9],[32,-90],[6,-6],[9,14],[13,70],[14,28],[4,-7],[77,-134],[8,2],[8,6],[6,20],[6,46],[11,50],[25,27],[19,6],[7,-24],[17,-32],[20,-5],[43,58],[15,9],[15,-1],[15,2],[15,22],[15,29],[5,58],[4,51],[10,21],[13,14],[24,19],[53,50],[14,24],[10,13],[21,-21],[25,-42],[15,-31],[10,-34],[5,-29],[40,-24],[25,-35],[17,-27],[17,1],[16,7],[11,22],[19,0],[22,-3],[10,-8],[18,-50],[8,-7],[17,4],[31,17],[25,9],[23,-20],[43,-55],[-12,-39],[-9,-42],[-19,-30],[-15,-7],[-8,-42],[-4,-61],[4,-31],[11,-10],[12,-20],[5,-27],[2,-61],[-1,-68],[2,-23],[9,4],[9,9],[18,-11],[23,-18],[14,-18],[12,3],[10,-18],[4,-34],[12,-23],[32,-45],[26,-3],[22,-59],[23,19],[10,-25],[47,9],[33,24],[12,-6],[30,-49],[18,-30]],[[79615,56844],[-8,-1],[-6,12],[26,37],[-3,-25],[1,-12],[-10,-11]],[[79768,57832],[-23,-35],[-2,29],[20,19],[7,15],[6,0],[-8,-28]],[[79684,63833],[-3,-11],[-14,27],[-10,12],[8,37],[16,-40],[3,-25]],[[79889,64064],[-40,-72],[-15,1],[13,82],[7,19],[24,-28],[11,-2]],[[79866,63897],[-15,-15],[-19,2],[22,28],[12,35],[9,12],[-1,-30],[-8,-32]],[[79730,63794],[-11,-3],[-22,47],[11,25],[26,-18],[5,-11],[0,-10],[-6,-22],[-3,-8]],[[33105,57107],[-33,-19],[0,15],[9,27],[17,7],[7,10],[11,6],[6,-1],[7,-8],[-16,-15],[-8,-22]],[[32264,58254],[9,-75],[-3,-14],[-25,-51],[-21,-3],[-17,1],[-13,10],[-17,33],[-16,-10],[-40,12],[-11,11],[15,41],[28,16],[10,4],[8,-25],[20,-22],[23,-2],[6,38],[32,57],[12,-21]],[[31885,58125],[-15,-13],[-27,13],[-14,18],[9,21],[22,0],[21,-25],[4,-14]],[[33056,56951],[-17,-12],[-3,58],[5,15],[30,47],[8,8],[6,-9],[-2,-13],[14,-21],[-3,-26],[-16,-29],[-22,-18]],[[33328,56767],[52,-140],[1,-15],[-6,-18],[-32,-33],[-7,-17],[-12,-62],[-40,-35],[-28,-42],[-19,-38],[-10,-15],[-37,-9],[-12,-23],[-14,-72],[-11,-29],[-20,-35],[0,-22],[27,-78],[5,-24],[-9,-37],[1,-27],[14,-31],[17,-7],[16,13],[20,-1],[13,-9],[6,-9],[1,-24],[-9,-51],[-12,-34],[-53,-50],[-23,-30],[-13,-22],[-29,12],[-15,-1],[-11,-17],[-7,-14],[-19,-4],[-27,-8],[-11,-10],[-9,-25],[-7,-36],[6,-43],[8,-39],[0,-35],[6,-99],[-8,-23],[-18,-26],[-22,-46],[-24,-63],[4,-19],[58,-134],[59,-136],[59,-136]],[[33127,54839],[8,-6],[11,-16],[11,-47],[8,-50],[0,-26],[-6,-33],[-15,-38],[-17,-30],[-25,-26],[-21,-25],[-16,-64],[-11,-23],[-9,-9],[-18,-9],[-30,2],[-20,6],[-24,-49],[-31,-18],[-21,-65],[-74,-53],[-72,-40],[-20,-17],[-72,34],[-17,-10],[-20,-32],[-18,-24],[-15,-1],[-13,-13],[-8,-45],[-7,-154],[-26,-45],[-31,0],[-21,53],[-25,40],[-44,96],[-12,12],[-12,0],[-41,-28],[-19,12],[-16,15],[-26,-5],[-46,-1],[-30,-1],[-14,26],[-14,53],[-9,19],[-11,16],[-17,8],[-75,-1],[-14,0],[-11,11],[-14,45],[-16,22],[-18,1],[-8,-25],[32,-83],[9,-44],[28,-65],[81,-137],[15,-43],[-1,-55],[-1,-85],[3,-80],[21,-115],[29,-118],[8,-74],[-5,-55],[-6,-30],[1,-13],[6,-12],[28,-17],[59,-10],[35,0],[55,-13],[4,-41],[-6,-68],[-10,-39],[-9,-11],[-30,-9],[-31,-42],[-45,-41],[-26,-5],[-10,-8],[-9,-13],[-8,-15],[-9,-77],[-13,-88],[-25,-51],[-28,-43],[-28,-5],[-22,3],[-11,-12],[-16,-35],[-23,-44],[-18,-23],[-24,2],[-26,-22],[-32,-35],[-22,-29],[-18,-50],[-26,-52],[-27,-36],[-13,-45],[-18,-57],[-23,-2],[-2,34],[11,55],[-12,48],[-22,26],[-10,7],[-10,-3],[-26,-23],[-32,-43],[-20,-31],[-17,-14],[-37,-13],[-30,-6],[-13,9],[-23,31],[-53,98],[-71,133]],[[31423,52547],[-5,39],[3,39],[-13,58],[-8,61],[-6,21],[-2,45],[-16,83],[-12,67],[-12,35],[5,29],[-5,29],[-9,24],[-14,76],[5,33],[-4,33],[-12,23],[-16,24],[-22,51],[-27,48],[-13,20],[-9,7],[-8,46],[-6,14],[-14,4],[-27,19],[-26,-23],[-1,35],[8,22],[89,170],[44,78],[5,11],[4,18],[3,24],[-10,28],[-42,131],[-15,24],[-14,21],[-16,55],[-20,128],[-14,64],[-4,49],[1,56],[-6,43],[-11,30],[0,91],[11,153],[3,116],[-6,80],[11,60],[26,42],[14,64],[3,86],[16,72],[28,56],[10,55],[-9,54],[-3,35],[-24,35],[-44,25],[-37,3],[-22,-28],[-57,-25],[-91,-24],[-74,0],[-56,24],[-42,-8],[-29,-40],[-20,-9],[-12,22],[-13,6],[-20,-14],[-3,7],[-43,107],[-40,100],[-46,118],[-53,137],[-10,9],[-16,-1],[-22,-2],[-33,14],[-23,20],[-19,19],[-33,25],[-23,4],[-20,-7],[-56,-48],[-32,-5],[-25,-1],[-67,24],[-45,4],[-53,-16],[-22,-9],[-32,25],[-22,37],[-20,88],[-14,69],[-25,14],[-27,12],[-13,23],[-8,40],[-2,51],[2,84],[3,29],[4,90],[15,47],[9,23],[-1,38],[-8,77],[-7,55],[-30,62],[-39,79],[-17,128],[-20,150],[-15,15],[-15,-8],[-15,8],[-14,60],[-13,11],[-22,-21],[-16,-16],[-40,-15],[-8,15],[3,19],[17,54],[20,70],[23,64],[21,66],[16,70],[11,138],[7,96],[20,170],[36,136],[14,62],[33,82],[15,44],[20,35],[55,47],[65,234],[15,37],[67,35],[51,27],[37,28],[13,16],[10,7]],[[30189,58676],[-9,-28],[-18,-34],[-20,-21],[-106,-53],[-11,-11],[-13,-22],[0,-50],[2,-39],[32,-129],[12,-32],[41,-70],[-9,-10],[-16,-1],[12,-92],[25,-63],[1,-39],[-19,-123],[-36,-74],[-25,-86],[-20,-34],[-44,-168],[34,-101],[4,-50],[29,-73],[19,-23],[12,-30],[-6,-49],[12,-67],[15,-35],[18,-14],[23,0],[67,44],[15,20],[10,36],[34,73],[2,93],[7,113],[-8,73],[-35,104],[-15,75],[-35,69],[-21,118],[-9,37],[-6,51],[-8,91],[23,32],[-2,74],[57,21],[123,120],[77,31],[87,64],[20,32],[17,52],[14,7],[45,-50],[22,17],[9,39],[-12,75],[-26,0],[-78,-27],[-8,32],[0,29],[-18,89],[11,68],[12,55],[22,22],[33,24],[25,-37],[15,-35],[8,-33],[6,-92],[13,-93],[14,-64],[23,-49],[17,4],[12,8],[81,11],[50,-33],[63,-17],[59,-71],[60,-85],[15,-63],[6,-59],[14,-40],[-14,-41],[7,-69],[18,-69],[26,-44],[74,-12],[81,30],[125,27],[40,23],[206,12],[39,-33],[4,-33],[0,-26],[67,-124],[54,-16],[46,-40],[48,-22],[52,-30],[30,4],[22,11],[26,2],[184,207],[98,-6],[15,14],[13,18],[-36,32],[-82,12],[-25,-21],[-14,53],[27,-2],[91,18],[105,-11],[85,38],[43,6],[24,-8],[68,25],[128,-29],[101,24],[-12,-34],[-33,-21],[-53,-7],[-41,-50],[-87,9],[-61,-18],[19,-14],[0,-51],[9,-11],[8,0],[21,-38],[6,-25],[7,-53],[-10,-56],[-12,-26],[25,9],[14,26],[-2,27],[2,31],[14,-10],[9,-14],[32,-148],[22,-78],[6,3],[5,3],[7,15],[10,36],[9,-23],[5,-9],[5,-3],[-5,34],[6,42],[-2,15],[10,3],[12,-5],[17,-12],[30,-49],[20,-51],[1,-28],[8,-16],[12,-16],[7,-26],[1,41],[-8,30],[-2,34],[40,1],[10,45],[21,-27],[56,-123],[21,-21],[62,-24],[38,-59],[23,-53],[-14,-56],[-36,-28],[-14,-35],[-9,-34],[0,-35],[-11,-40],[-1,-14],[-7,-56],[-15,-68],[-19,-72],[-104,-2],[26,-29],[23,-22],[39,-57],[30,45],[44,3],[48,49],[18,8],[88,-26],[22,36],[17,11],[48,-7],[42,-39]],[[53455,75978],[-3,-1],[0,2],[0,3],[3,0],[0,-4]],[[96317,43302],[18,-191],[21,1],[11,10],[12,45],[5,70],[11,10],[14,-8],[-6,-22],[4,-56],[10,-31],[7,-6],[14,-146],[6,-31],[-1,-25],[-29,-54],[-44,1],[-30,-33],[-19,3],[0,37],[-17,29],[-19,63],[5,112],[-33,208],[-1,52],[12,68],[11,3],[15,-56],[23,-53]],[[96503,42571],[12,-13],[7,0],[4,-28],[40,-56],[11,2],[9,-31],[17,-15],[5,-31],[12,-32],[-21,-38],[-41,10],[-24,-44],[-21,11],[-4,23],[3,8],[-13,58],[-5,90],[-9,52],[-9,23],[-20,-20],[-8,-3],[-18,43],[9,87],[4,25],[15,5],[23,-23],[22,-103]],[[96790,42177],[8,-8],[-4,-24],[-39,27],[-30,-10],[-9,1],[-9,22],[-7,44],[3,30],[13,22],[5,3],[10,-26],[8,-18],[9,-8],[19,-43],[23,-12]],[[96748,42432],[-32,-6],[-44,18],[-18,25],[-8,25],[15,19],[23,9],[27,57],[10,-22],[10,-64],[11,-20],[6,-19],[0,-22]],[[96790,41738],[27,-82],[11,-7],[-17,-59],[-34,-5],[-41,15],[15,20],[-8,23],[-13,5],[-14,-11],[-6,4],[9,38],[23,53],[6,4],[6,1],[6,-5],[30,6]],[[96641,42951],[-19,-26],[-34,2],[-13,15],[42,80],[49,17],[-25,-88]],[[96725,42643],[-5,-1],[-4,27],[-16,141],[10,126],[7,-27],[23,-221],[-3,-36],[-12,-9]],[[96718,43013],[-5,-36],[-11,41],[-7,175],[3,16],[6,1],[14,-121],[0,-76]],[[96449,42785],[-5,-15],[-30,37],[7,36],[32,-12],[-4,-46]],[[96550,43628],[-11,-29],[-32,9],[-7,8],[2,48],[8,17],[19,15],[25,-24],[-4,-44]],[[96524,43832],[-4,-6],[-7,4],[-16,70],[4,23],[21,22],[18,-38],[2,-22],[0,-18],[-3,-16],[-13,-6],[-2,-13]],[[97192,40214],[-9,-31],[-15,0],[-20,22],[4,29],[22,5],[6,-2],[12,-23]],[[97080,40587],[-15,-63],[-25,15],[-24,45],[-12,40],[8,75],[12,14],[13,-5],[6,-74],[37,-47]],[[97036,40932],[-12,-27],[-12,3],[-72,64],[3,27],[-3,67],[8,37],[20,15],[15,-8],[10,-54],[22,-22],[-16,-18],[27,-41],[10,-43]],[[69707,76179],[9,11],[16,10],[26,-20],[23,-25],[5,-12],[-1,-13],[-55,-49],[-33,-23],[-15,-4],[-4,-7],[-11,-55],[-21,-10],[-27,-18],[-19,-25],[-30,-61],[-76,-89],[-1,-18],[7,-15],[24,-10],[33,-27],[18,-21],[48,27],[12,-6],[13,-28],[13,-80],[22,-21],[28,-17],[18,-5],[23,-20],[32,-7],[21,7],[26,-17],[4,7],[3,119],[22,-20],[13,1],[11,14],[6,20],[4,39],[-5,39],[10,18],[7,4],[6,-5],[3,-10],[1,-35],[16,-15],[10,-9],[9,-30],[9,-29],[6,-67],[22,-4],[26,-13],[17,13],[14,-8],[5,-32],[-1,-29],[2,-24],[7,-7],[23,15],[19,2],[18,-14],[22,-21],[32,-57],[10,-8],[48,-4],[10,-12],[17,0],[17,11],[40,-19],[1,-10],[-7,-14],[-94,-78],[-7,-24],[-19,-31],[-21,-17],[-10,-1],[-46,31],[-5,-7],[-4,-13],[0,-14],[10,-32],[-5,-21],[-8,-15],[-29,13],[-6,9],[0,9],[-11,0],[-17,-9],[-33,-57],[-12,-29],[-4,-18],[-15,-10],[-16,-4],[-20,-27],[-22,-20],[-7,15],[-5,17],[-6,5],[-13,-4],[-17,-1],[-17,19],[-23,20],[-20,6],[-58,-9],[-29,-9],[-9,-9]],[[69710,75022],[-16,-3],[-69,-19],[-14,7],[-10,31],[-9,33],[-18,12],[-20,9],[-7,13],[-1,16],[3,16],[1,8],[46,63],[42,57],[4,4],[3,11],[7,20],[0,10],[-31,23],[-1,10],[6,11],[0,14],[-22,41],[-38,65],[-11,6],[-8,-4],[-15,-62],[-7,-16],[-43,-41],[-37,-29],[-64,-50],[-17,-15],[-12,2],[-11,10],[-37,51],[-23,17],[-16,-17],[-13,-25],[1,-51],[-15,-27],[-15,-13],[27,-137],[-2,-18],[-21,-5],[15,-52],[-13,-6],[-32,12],[-44,8],[-84,-23],[-6,-9],[-2,-11],[5,-11],[40,-1],[40,6],[11,-10],[1,-17],[-4,-11],[-13,-2],[-29,-10],[-4,-11],[-1,-10],[10,-31],[11,-19],[2,-11],[-5,-10],[-6,-4],[-9,15],[-6,-3],[-2,-13],[-3,-15],[-7,-11],[-13,6],[-13,-5],[-8,-55],[-7,-62],[-22,-42],[-12,-15],[-18,-4],[-27,5],[-16,6],[-46,9],[-47,17],[-53,16],[-49,-37],[-14,-22],[-9,-21],[-9,-10],[-21,-129],[2,-14],[12,-12],[60,-26],[9,-11],[5,-13],[2,-58],[5,-8],[21,-7],[30,0],[23,6],[24,-5],[16,-13],[8,-20],[4,-21],[-28,-127],[3,-47],[8,-66],[16,-52],[30,-51],[23,-33],[5,-15],[1,-24],[-4,-31],[-13,-48],[-16,-42],[-17,-18],[-24,-54],[-22,-66],[-41,-86],[-13,-49],[-5,-139],[-11,-42]],[[68821,73255],[-1,16],[-15,16],[-26,-3],[-17,8],[-8,18],[-21,-5],[-34,-28],[-34,14],[-35,58],[-67,21],[-85,-13]],[[68478,73357],[-4,63],[1,81],[4,108],[28,84],[0,16],[-6,15],[-9,14],[-51,23],[-15,13],[-20,26],[-25,28],[-22,19],[-34,26],[-32,14],[-19,-11],[-17,-14],[-16,0],[-16,7],[-59,64],[-90,110],[-71,76],[-45,37],[-10,12],[-25,34],[-62,93],[-41,-14],[-58,61],[-53,59],[-11,15],[-60,109],[-60,71],[-65,77],[-42,48],[-71,82],[-34,49],[-12,18],[-12,35],[-18,170],[-22,78],[-30,43],[-26,82],[-22,121],[-17,79],[-14,36],[-29,40],[-43,44],[-41,21],[-15,-1],[-7,-5],[-9,-8],[-16,-33],[-24,-3],[-17,1],[-17,12],[-52,10],[-18,11],[-31,-1],[-67,-17],[-17,3],[-70,73],[-31,29],[-6,16],[0,28],[10,40],[9,28],[-4,30],[-13,32],[0,34],[9,19],[19,-6],[7,12],[-3,18],[-10,13],[-13,29],[-40,27],[-6,11],[2,12],[7,14],[1,28],[1,37],[5,19],[2,15],[-6,12],[-14,14],[-21,34],[-27,4],[-86,-1],[-27,13],[-22,19],[-21,73],[-11,17],[-11,7],[-24,2],[-29,7],[-15,13],[-41,66],[-39,59],[-16,-56],[-15,-11],[-34,5],[-26,10],[-15,-13],[-15,-22],[2,-15],[12,-15],[24,-28],[36,-70],[16,-38],[2,-13],[-3,-10],[-5,-5],[-7,0],[-9,1],[-6,11],[-2,20],[-12,30],[-12,17],[-14,11],[-19,8],[-25,14],[-13,1],[-12,-17],[-11,-22],[-6,-49],[-19,-60],[-11,-24],[-36,-14],[-84,-5],[-26,-19],[-17,-22],[-32,-74],[-22,-24],[-19,-33],[5,-108],[10,-126],[16,-35],[10,-11],[2,-12],[-7,-11],[-8,-14],[-13,-25],[-15,1],[-29,6],[-24,7],[-82,7],[-66,6],[-73,7]],[[65549,75646],[0,132],[0,132],[0,132],[-1,133],[0,132],[0,132],[0,132],[0,133],[0,132],[0,132],[0,132],[0,132],[0,133],[0,132],[0,132],[0,132],[35,17],[44,20],[42,20],[49,24],[57,27],[48,22],[57,27],[44,21],[41,20],[53,23],[82,36],[45,19],[46,21],[44,19],[30,7],[31,-27],[39,-38],[38,-38],[38,-38],[39,-38],[38,-38],[39,-38],[38,-38],[38,-38],[39,-37],[38,-38],[38,-38],[39,-38],[38,-38],[38,-38],[39,-38],[38,-38],[36,-35],[16,-26],[9,-58],[17,-46],[31,-49],[32,-51],[39,-68],[27,-46],[28,-48],[45,-78],[29,-49],[23,-2],[46,12],[61,15],[49,13],[59,15],[56,14],[44,11],[66,-9],[65,-8],[47,-6],[46,-6],[54,-7],[30,-4],[35,-4],[15,11],[30,25],[28,22],[30,24],[26,12],[27,-38],[22,-43],[24,-46],[28,-44],[27,-27],[36,-35],[20,-61],[28,-81],[18,-53],[19,-55],[27,22],[29,23],[27,21],[-4,-68],[-3,-61],[-4,-93],[-4,-77],[-9,-91],[-1,-69],[0,-61],[-1,-48],[51,-2],[38,-2],[47,-2],[5,-61],[6,-85],[10,-77],[8,-65],[12,-84],[6,-45],[12,-53],[11,-12],[18,-9],[62,6],[52,6],[41,4],[43,4],[58,6],[19,-13],[17,9],[19,9],[16,-38],[8,-19],[11,-21],[15,-18],[-7,-40],[-9,-57],[-3,-30],[18,-32],[14,-18],[36,-38],[34,-21],[23,-6],[21,8],[8,21],[-2,30],[-10,31],[1,37],[6,27],[22,49],[21,46],[32,47],[37,47],[16,34],[6,59],[25,34],[26,20],[33,18],[9,29],[46,50],[27,25],[35,15],[48,32],[37,39],[36,72],[29,47],[24,29],[21,1],[14,-23],[12,-2],[8,11],[14,30],[14,35],[14,15],[27,8],[24,23]],[[69625,75424],[-1,14],[-8,23],[-13,13],[-6,-5],[5,-19],[15,-28],[8,2]],[[69779,74822],[-14,-5],[-26,1],[-14,6],[9,46],[0,10],[-1,1],[-7,6],[-12,19],[-3,29],[4,26],[8,11],[5,-2],[16,-40],[14,-12],[27,-6],[-14,-40],[10,-42],[-2,-8]],[[69938,74855],[-7,-24],[-13,6],[-11,16],[4,13],[15,7],[8,7],[7,1],[-3,-26]],[[35174,32406],[-13,-21],[-15,-41],[-17,-97],[-58,-133],[-12,-76],[-62,-78],[-44,-89],[-29,2],[-26,-38],[-149,-115],[-54,22],[-39,-1],[-37,51],[-84,19],[-53,-21],[-71,-56],[-21,1],[-15,3],[-39,23],[-21,50],[-108,57],[-88,129],[-104,2],[-79,-17],[-12,18],[-8,33],[-17,48],[-68,114],[-54,113],[-10,111],[7,121],[16,144],[-2,44],[19,26],[20,5],[19,37],[17,56],[3,43],[-13,78],[-10,110],[-10,55]],[[33833,33138],[21,86],[1,42],[-12,37],[-4,38],[6,39],[-1,37],[-8,36],[6,30],[20,23],[15,36],[10,49],[5,37],[0,26],[-6,24],[-12,22],[5,46],[24,67],[15,60],[7,52],[0,43],[-8,32],[3,22],[15,11],[6,34],[-2,84],[-15,70],[11,55],[33,64],[18,52],[1,39],[10,22]],[[33997,34453],[16,-42],[47,-11],[47,-2],[7,11],[19,69],[24,20],[27,5],[29,-3],[31,-46],[87,-150],[64,-104],[20,-50],[17,-36],[12,-35],[-5,-89],[1,-39],[3,-11],[14,-1],[22,6],[18,19],[15,29],[14,23],[11,13],[4,19],[7,19],[6,4],[13,-14],[30,-51],[23,-47],[6,-27],[9,-28],[9,-25],[7,-23],[23,-32],[23,-19],[15,20],[39,-65],[85,-54],[16,-33],[15,-46],[30,-71],[41,-63],[34,-27],[32,-15],[18,-14],[12,-24],[20,-27],[12,-9],[4,-24],[13,-51],[13,-65],[14,-60],[31,-57],[36,-45],[36,-26],[21,-31],[9,-33],[-25,-48],[-27,-62],[-23,-48],[-25,-33],[-8,-23],[-5,-36],[0,-190],[-2,-70],[2,-19],[3,-13],[16,-18],[18,-16],[7,-3]],[[95272,54910],[3,-27],[-18,13],[-2,10],[10,10],[7,-6]],[[88372,57315],[-21,-47],[-1,16],[6,28],[9,32],[8,19],[11,6],[8,-27],[-9,-23],[-11,-4]],[[92123,56074],[-2,-7],[-17,3],[-2,4],[1,3],[8,4],[1,10],[-4,2],[4,6],[6,1],[4,-7],[2,-9],[-1,-10]],[[92188,56124],[-4,-3],[-3,3],[1,14],[2,5],[4,1],[8,-4],[1,-4],[-9,-12]],[[93975,55768],[-16,-13],[-20,5],[-6,47],[-10,13],[2,23],[15,19],[30,-15],[11,-34],[-7,-22],[1,-23]],[[97120,55201],[-6,-17],[-6,1],[6,13],[4,18],[6,51],[14,19],[10,21],[-3,-22],[-15,-23],[-10,-61]],[[96896,56053],[-4,-9],[-27,5],[-12,11],[1,9],[22,-8],[20,-8]],[[97659,55903],[11,-13],[20,1],[19,-32],[-7,2],[-10,14],[-10,6],[-12,-2],[-6,5],[-5,19]],[[97527,55955],[35,-30],[46,14],[-7,-9],[-17,-8],[-12,-8],[-8,0],[-9,3],[-29,21],[-17,27],[4,9],[14,-19]],[[96357,58267],[-7,-4],[-5,4],[4,8],[8,1],[3,-2],[-3,-7]],[[90474,62651],[-9,-22],[-7,16],[-2,31],[13,-3],[4,-6],[1,-16]],[[90475,61255],[-6,-4],[-9,2],[-6,9],[-2,15],[18,1],[7,-12],[-2,-11]],[[90350,59998],[-13,-27],[-10,6],[-6,9],[-2,15],[22,15],[10,-5],[-1,-13]],[[90493,62257],[-14,-13],[17,57],[5,10],[8,-21],[-16,-33]],[[90486,60560],[-1,-15],[-14,4],[-4,6],[8,52],[20,24],[10,5],[-9,-25],[-2,-27],[-8,-24]],[[90461,60466],[-12,-29],[-8,45],[-1,19],[10,17],[7,-1],[4,-51]],[[31987,62401],[-21,-5],[-28,27],[22,10],[15,-6],[12,-26]],[[32039,62415],[-19,-15],[-12,2],[-5,6],[10,18],[26,-11]],[[32009,62093],[24,-26],[28,0],[-30,-25],[-56,-3],[1,41],[33,13]],[[90205,59480],[-12,-1],[-10,20],[-3,13],[-1,66],[40,57],[13,55],[10,-5],[10,-9],[8,-16],[-44,-92],[-11,-88]],[[2576,43576],[-12,-5],[-14,27],[28,21],[8,11],[34,-6],[-20,-8],[-24,-40]],[[31630,62468],[9,-12],[8,2],[-6,23],[6,0],[53,-14],[34,-24],[35,-12],[3,-80],[-27,-32],[-18,-34],[-15,-41],[-38,-47],[-45,-15],[-31,-1],[-11,1],[-11,9],[-23,-8],[-29,21],[-24,-5],[-48,5],[-18,-19],[-18,-4],[-17,4],[-14,8],[-36,-1],[-15,16],[6,91],[1,41],[-9,35],[-10,21],[-7,25],[14,17],[12,24],[4,37],[12,9],[15,4],[69,-17],[173,-10],[10,-3],[6,-14]],[[31826,62272],[-22,-3],[-14,4],[-5,17],[27,16],[30,-2],[18,-10],[2,-6],[-36,-16]],[[31146,62246],[-2,-1],[-3,1],[-1,1],[-2,6],[-8,8],[-2,8],[2,9],[3,3],[16,1],[2,-1],[3,-6],[0,-4],[-1,-4],[-3,-10],[-1,-2],[-1,-3],[-1,-5],[-1,-1]],[[13126,84403],[-3,-8],[-36,1],[-12,7],[-5,24],[3,23],[8,18],[10,34],[8,56],[52,-63],[16,-28],[8,-35],[-18,-13],[-22,-6],[-9,-10]],[[13117,84243],[-15,-2],[-16,9],[-40,47],[-1,14],[6,15],[22,29],[10,7],[54,-3],[17,-8],[4,-13],[0,-14],[-6,-13],[-1,-15],[3,-15],[-7,-15],[-30,-23]],[[12691,85385],[-2,-15],[-38,2],[-38,21],[-19,27],[4,13],[35,11],[34,-26],[24,-33]],[[9689,86599],[-9,-14],[-24,5],[-13,9],[44,37],[7,-8],[-5,-29]],[[9843,86300],[-14,-3],[20,38],[27,41],[26,27],[32,11],[-3,-20],[-43,-35],[-45,-59]],[[8883,86442],[-15,-17],[-55,10],[12,35],[42,22],[46,-34],[-30,-16]],[[7772,86613],[-13,-2],[17,28],[13,56],[17,-8],[3,-10],[-28,-57],[-9,-7]],[[5464,83719],[-4,-45],[-38,29],[-10,14],[7,11],[36,2],[9,-11]],[[5733,83509],[-9,-3],[-8,6],[-10,33],[-1,13],[20,-10],[7,-24],[1,-15]],[[5690,83612],[-1,-46],[-4,-7],[-8,12],[-15,-13],[-9,10],[4,16],[-1,12],[11,1],[3,23],[-2,9],[6,21],[8,5],[8,-43]],[[3831,82789],[-4,-1],[-7,14],[-1,13],[5,9],[13,22],[9,8],[11,4],[3,-6],[-10,-26],[-12,-17],[-7,-20]],[[1109,81688],[-24,-12],[-31,25],[3,30],[34,-25],[18,-18]],[[3858,89992],[-10,-3],[0,9],[32,23],[58,29],[-2,-6],[-31,-23],[-47,-29]],[[2371,88502],[5,-14],[29,2],[40,-6],[45,-14],[45,5],[56,43],[33,11],[34,6],[37,-10],[35,-23],[14,-13],[11,-24],[7,-28],[11,-21],[67,-25],[42,-10],[10,-14],[9,-19],[36,-14],[37,5],[20,-5],[63,-1],[77,-21],[-12,-56],[-25,-24],[-72,7],[-71,-8],[-29,-28],[-25,-37],[-3,-35],[-14,-16],[-15,-7],[-12,19],[-17,60],[-11,16],[-12,11],[-35,19],[-35,12],[-21,1],[-15,21],[-8,30],[-14,15],[-28,22],[-29,17],[-89,38],[-29,5],[-30,-4],[-32,-17],[-31,-26],[-31,-19],[-33,-4],[-32,11],[-29,25],[-15,18],[-8,30],[1,30],[4,29],[16,71],[27,14],[51,-50]],[[3851,86626],[26,-29],[13,-1],[43,8],[16,-6],[15,-12],[9,-19],[2,-33],[-7,-30],[2,-41],[-1,-18],[22,-24],[8,-32],[3,-34],[-49,-12],[-49,-2],[-43,-23],[-9,-17],[7,-26],[-11,-6],[-11,5],[-21,24],[-22,11],[-79,18],[-100,69],[-42,14],[-44,50],[-39,64],[25,10],[26,5],[116,-9],[14,46],[15,11],[36,13],[35,25],[15,0],[16,-10],[32,15],[17,3],[14,-7]],[[7528,85151],[2,-31],[12,3],[42,33],[23,10],[29,1],[23,-15],[4,-11],[-2,-14],[-18,-27],[1,-18],[19,-33],[49,-18],[6,-10],[0,-12],[-34,-55],[-12,-12],[-9,-3],[-61,9],[-55,18],[-23,3],[-8,-5],[-15,-17],[11,-5],[49,-4],[17,-25],[7,-18],[4,-20],[-10,-8],[-20,-6],[-25,0],[-31,-22],[-17,-25],[-62,-7],[-47,-34],[-17,-17],[-6,-20],[-17,-15],[-41,-14],[24,-13],[4,-11],[1,-16],[-4,-13],[-31,-59],[-60,-48],[-15,2],[-7,6],[-5,9],[-1,9],[78,98],[-3,4],[-21,4],[-34,26],[-23,-17],[-5,1],[6,23],[15,27],[-3,8],[-8,7],[-19,4],[-31,1],[-22,-6],[-15,-15],[-1,-6],[31,2],[9,-7],[8,-14],[5,-16],[2,-17],[-7,-24],[-14,-30],[-22,5],[-44,67],[-20,97],[-38,75],[-2,18],[11,46],[38,65],[42,18],[29,27],[28,9],[18,-1],[24,-12],[10,-25],[-6,-12],[2,-6],[17,-15],[18,-52],[21,-47],[14,-19],[19,-12],[-19,36],[-12,44],[-5,88],[-6,23],[11,6],[30,-3],[-1,13],[-32,29],[-19,25],[-8,19],[1,17],[17,25],[10,7],[10,3],[21,-5],[9,-8],[26,-56],[12,-17],[10,0],[10,9],[9,18],[8,12],[10,3],[29,-8],[10,3],[4,14],[0,25],[7,9],[2,18],[-16,27],[18,9],[61,-21],[25,-23],[-13,-42]],[[13882,84036],[-14,-30],[-10,-32],[-7,-35],[-3,-37],[2,-40],[5,-35],[17,-65],[6,-39],[1,-27],[-38,-92],[-13,-45],[1,-19]],[[13829,83540],[-27,-47],[-50,-64],[-23,-37]],[[13729,83392],[-11,12],[-65,10],[-24,82],[-12,64],[-19,55],[0,13],[17,37],[65,31],[1,12],[-24,8],[-6,13],[-7,60],[2,53],[-2,35],[-10,72],[-17,43],[-41,86],[-4,21],[18,27],[12,25],[-71,-43],[-96,-46],[-42,-32],[-9,-13],[-3,-11],[8,-30],[-1,-10],[-9,-18],[-10,-51],[-21,-53],[-10,-11],[-38,20],[-10,17],[-19,70],[5,19],[13,15],[19,34],[24,52],[45,133],[29,1],[52,26],[-82,13],[-12,7],[-11,18],[-9,29],[-17,33],[-31,11],[-13,12],[-21,39],[-14,18],[-7,22],[-1,26],[-6,13],[-21,5],[-12,9],[-3,67],[-42,17],[-18,15],[-28,42],[-7,21],[-3,17],[7,46],[-3,9],[-25,-5],[-153,72],[8,95],[-28,125],[-31,51],[6,19],[7,11],[13,0],[59,-37],[56,-44],[7,7],[-89,92],[-22,28],[-5,33],[-1,18],[7,10],[84,-9],[4,7],[-84,27],[-17,0],[-18,-39],[-9,-9],[-18,2],[-6,6],[-22,47],[-20,33],[-38,45],[-7,33],[-2,47],[5,45],[31,103],[13,18],[3,11],[-10,-1],[-9,-10],[-25,-48],[-27,-78],[-21,-27],[-14,6],[-20,32],[-43,39],[-50,10],[-31,40],[-46,111],[-6,55],[-6,14],[-25,18],[-16,26],[-24,135],[-31,93],[-8,50],[3,49],[-4,5],[-11,-38],[-3,-20],[-20,-5],[19,-39],[5,-19],[-10,1],[-19,-5],[33,-66],[14,-102],[21,-76],[14,-62],[7,-47],[9,-44],[25,-99],[3,-20],[-3,-16],[-8,-19],[-14,-7],[-45,13],[-17,25],[-24,44],[-34,21],[-84,-10],[-6,3],[0,37],[10,65],[-8,26],[-44,96],[1,19],[60,44],[-29,3],[-24,-17],[-9,11],[-14,62],[-9,23],[-5,4],[-2,-58],[10,-31],[1,-17],[-1,-25],[-7,-18],[-11,-11],[-11,-2],[-20,12],[-23,23],[-19,11],[-8,10],[-9,25],[-15,20],[-74,24],[-44,30],[-3,-8],[13,-31],[2,-19],[-11,-5],[-20,-30],[6,-4],[21,10],[23,-1],[39,-19],[35,-23],[12,-13],[6,-20],[4,-7],[34,-23],[2,-12],[-22,-35],[45,3],[27,-12],[34,-56],[11,-30],[2,-40],[-7,-11],[-14,-8],[-92,-13],[-34,-48],[-7,-1],[-25,13],[-46,38],[-58,36],[-131,108],[-3,5],[-3,20],[-9,11],[-17,9],[-25,27],[-32,45],[-19,36],[-8,25],[-18,29],[-59,61],[-31,23],[-28,13],[-24,3],[-6,8],[11,13],[2,8],[-53,13],[-50,28],[-127,80],[-65,50],[-39,24],[-16,13],[-7,11],[9,12],[26,12],[17,13],[27,51],[2,16],[-14,37],[-7,33],[0,19],[4,18],[4,12],[11,12],[9,6],[10,-4],[32,-46],[4,-17],[-1,-63],[9,-73],[3,5],[3,24],[2,47],[4,22],[6,22],[12,12],[36,-7],[17,4],[-71,33],[-44,62],[-8,7],[-24,3],[-26,-26],[-66,-82],[-19,-14],[-83,-46],[-57,-9],[-63,7],[-54,15],[-136,72],[-21,17],[31,44],[2,14],[-11,45],[-9,13],[-13,8],[-4,-6],[0,-13],[3,-25],[-10,-13],[-23,-14],[-39,-15],[-120,37],[-124,30],[-110,7],[-156,-25],[-83,-24],[-48,-2],[-47,4],[-4,17],[21,10],[-1,12],[-27,39],[-40,23],[-55,8],[-32,11],[-8,14],[-19,14],[-31,13],[-13,23],[10,71],[11,43],[10,30],[27,48],[-9,-3],[-39,-36],[-33,-37],[-32,-48],[-18,-22],[-24,-20],[-37,5],[-50,30],[-43,15],[-36,1],[-15,5],[25,27],[14,22],[19,34],[5,17],[-132,5],[-5,19],[0,13],[-4,11],[-19,8],[-27,-6],[-43,-22],[-19,17],[7,9],[14,7],[28,31],[-38,16],[-20,18],[-10,16],[1,55],[10,35],[87,34],[-27,13],[-56,-5],[-37,-29],[-43,-41],[-30,-16],[-15,11],[-20,3],[-25,-3],[-16,-11],[-9,-18],[-10,-12],[-11,-6],[-8,2],[-12,18],[-25,12],[-12,14],[-7,-9],[-9,-27],[-9,-13],[-42,-14],[-23,2],[-28,34],[-4,12],[10,29],[61,115],[-6,-1],[-20,-18],[-39,-46],[-18,-14],[-30,-1],[-14,5],[-17,-4],[-20,-12],[-13,-14],[-6,-15],[4,-2],[30,17],[17,4],[5,-8],[-24,-52],[-14,-50],[-13,-12],[-22,2],[-24,-5],[0,-14],[44,-39],[16,-6],[20,-14],[3,-14],[-7,-38],[-6,-15],[-9,-8],[-36,1],[-12,-4],[-24,-24],[-12,-19],[4,-2],[21,16],[31,9],[39,1],[30,9],[20,16],[19,-4],[18,-26],[6,-22],[-8,-19],[-15,-13],[-23,-9],[-15,-12],[-6,-16],[-3,-24],[-1,-32],[6,-58],[-5,-7],[-8,-5],[-13,0],[-12,-14],[-27,-76],[-9,-9],[-12,8],[-10,0],[-9,-10],[-19,-8],[-30,-5],[-25,2],[-45,16],[-18,12],[-15,19],[-40,-20],[-11,9],[-25,53],[-5,-3],[-5,-58],[-8,-20],[-25,-41],[-13,-71],[-4,-3],[-5,11],[-15,63],[-8,14],[-23,-36],[-2,-14],[6,-47],[-6,-7],[-45,25],[-11,2],[-3,-5],[15,-37],[-1,-13],[-65,-71],[-17,3],[-10,7],[-12,-1],[-41,-27],[-11,1],[-15,16],[-7,-1],[-4,-16],[-1,-32],[-15,-30],[-49,-49],[-13,-23],[-9,-31],[-8,-3],[-28,20],[-33,13],[-5,-6],[10,-19],[-2,-12],[-14,-4],[-18,2],[-22,7],[-31,-8],[-40,-25],[-33,0],[-46,41],[-12,3],[-4,12],[9,33],[13,25],[9,12],[44,32],[50,12],[31,19],[39,40],[20,30],[40,77],[-3,6],[-9,4],[-88,-73],[-13,-7],[-17,1],[-70,28],[-14,12],[-11,35],[20,80],[13,39],[35,60],[44,64],[15,41],[24,110],[-2,51],[-10,61],[-1,36],[10,12],[102,56],[49,43],[94,62],[25,0],[19,-22],[22,-17],[25,-13],[32,1],[39,16],[62,-6],[128,-41],[27,-2],[1,5],[-19,29],[-89,17],[-37,16],[-104,74],[-24,28],[10,14],[26,11],[8,10],[4,19],[15,25],[25,32],[39,31],[75,46],[-29,2],[-54,-8],[-19,-9],[-36,-33],[-14,-23],[-20,-46],[-8,-8],[-37,-7],[-101,-4],[-17,23],[-9,4],[-13,-4],[-92,-59],[-34,-30],[-23,-35],[-37,-25],[-49,-16],[-37,-20],[-39,-40],[-14,-30],[0,-14],[9,-45],[-10,-9],[-22,-3],[-36,-30],[-76,-89],[-10,-32],[0,-11],[12,-25],[-8,-17],[-22,-25],[-48,-41],[-31,-16],[-20,-1],[-20,6],[-35,26],[-28,2],[-2,-4],[39,-28],[39,-36],[24,-30],[10,-24],[0,-25],[-9,-25],[-27,-44],[-27,-13],[-70,-13],[-22,-11],[-7,-8],[48,-18],[4,-10],[-6,-37],[-13,-12],[-40,-22],[-35,-6],[-6,4],[7,29],[-2,7],[-13,6],[-19,-11],[-47,-43],[-5,-7],[17,-11],[-4,-10],[-26,-30],[-10,-21],[-17,-20],[-76,-64],[5,-15],[-19,-56],[-11,-49],[13,-20],[64,-24],[31,-6],[37,-17],[66,-45],[22,-30],[3,-14],[-2,-15],[-8,-21],[-21,-38],[-50,-58],[-22,-16],[-34,-13],[-12,-10],[-43,-54],[-12,-30],[2,-26],[-9,-18],[-56,-35],[2,-6],[20,-3],[-7,-31],[-3,-43],[-10,-8],[-36,1],[-44,-17],[-3,-5],[-1,-31],[-118,-23],[-25,-59],[-14,-18],[-45,-43],[-29,-18],[-32,-10],[-17,-15],[-1,-18],[-9,-17],[-28,-26],[-14,-34],[-10,-5],[-51,-8],[-11,-11],[-5,-46],[-9,-1],[-19,11],[-24,-9],[-53,-51],[-12,-18],[1,-10],[8,-10],[13,-31],[-1,-20],[-20,-58],[-8,-9],[-25,-14],[-10,-32],[-23,4],[-19,-6],[-12,-21],[-14,-12],[-14,-4],[-18,-16],[-22,-31],[-20,-19],[-18,-9],[-18,-2],[-18,5],[-16,-4],[-14,-11],[-13,-18],[-11,-50],[-14,-22],[-9,-4],[-17,4],[-27,10],[-28,-4],[-44,-30],[-14,-23],[28,-5],[14,-7],[-1,-7],[-14,-6],[-25,1],[-14,-6],[-19,-13],[-45,-14],[-17,-10],[-34,-58],[-4,-13],[4,-3],[19,6],[23,-10],[11,-12],[8,-15],[7,-29],[4,-4],[-43,-49],[-12,-21],[-8,-8],[-5,6],[-6,55],[-3,9],[-10,1],[-10,-17],[-22,-65],[-23,-32],[-178,-83],[-26,-19],[-5,-35],[-7,-31],[-12,-24],[-14,-16],[-3,11],[1,86],[-3,18],[-18,11],[-8,-2],[-11,-5],[-18,-18],[-10,-5],[-14,1],[-23,-18],[-55,-59],[-36,-15],[-10,-12],[-15,-32],[-10,-12],[-15,-1],[-20,10],[-16,-7],[-12,-24],[-13,-9],[-35,17],[-15,-11],[-20,-31],[-21,-20],[-22,-9],[-56,-11],[-23,7],[-5,9],[1,38],[9,28],[9,13],[11,12],[17,1],[31,-8],[-4,9],[-11,11],[-29,19],[-28,10],[-16,-6],[-23,-15],[-15,-17],[-8,-19],[-10,-63],[-6,-17],[-67,-111],[-26,-34],[-25,2],[-13,-13],[-17,-27],[-17,-13],[-14,1],[-12,5],[-8,9],[1,9],[11,8],[-4,22],[-19,37],[-13,19],[-24,3],[-4,-17],[8,-84],[-1,-19],[-15,-24],[-41,-27],[-12,2],[-37,53],[-34,11],[-2,-17],[7,-36],[-8,-32],[-25,-31],[-19,-15],[-13,1],[-1,21],[12,42],[3,35],[-6,28],[1,22],[7,15],[45,41],[20,7],[10,-11],[13,-1],[15,6],[10,14],[4,19],[20,26],[35,31],[40,57],[46,83],[53,72],[62,60],[66,48],[134,66],[10,-4],[-12,-21],[8,-14],[13,-1],[49,10],[20,14],[6,-13],[-7,-17],[-30,-17],[1,-14],[43,-67],[13,-10],[12,1],[4,9],[-3,48],[14,9],[30,2],[19,-6],[9,-15],[17,-12],[25,-10],[15,3],[6,16],[-10,19],[-48,40],[-13,18],[-3,23],[7,31],[14,45],[24,60],[21,42],[42,47],[29,23],[72,72],[140,73],[34,47],[47,52],[20,13],[0,-20],[6,-18],[32,-12],[20,-4],[10,4],[2,19],[-4,34],[-1,33],[2,30],[4,24],[21,43],[31,49],[43,57],[27,26],[25,14],[24,25],[42,58],[14,10],[30,11],[11,-5],[7,-14],[8,-10],[30,-8],[21,13],[-4,7],[-16,5],[-11,8],[-10,35],[-20,21],[-5,24],[4,37],[17,87],[3,90],[16,51],[31,19],[69,13],[-40,23],[-16,0],[-26,11],[-10,56],[0,40],[18,47],[64,80],[71,55],[-10,4],[-8,17],[32,110],[32,98],[-43,-84],[-50,-64],[-145,-74],[-99,-63],[-47,-14],[-31,15],[-24,60],[-14,22],[-18,39],[8,50],[14,35],[31,6],[34,-17],[31,-1],[-39,34],[-56,30],[-26,-9],[-19,-49],[-26,-34],[-23,12],[-14,14],[10,-41],[-18,-63],[-6,-43],[25,-115],[-5,-45],[-45,-21],[-37,37],[-76,145],[-27,41],[-60,69],[-20,-10],[-25,-34],[-24,-9],[-65,50],[-30,37],[-28,46],[-44,-25],[-38,-30],[-44,-48],[-30,0],[-81,-41],[-9,-1],[-11,-22],[-11,-10],[-10,-43],[-109,-33],[-108,19],[38,23],[42,19],[37,44],[-16,60],[-3,30],[1,38],[40,54],[-42,0],[-27,-19],[-25,40],[-12,79],[29,47],[13,36],[12,50],[1,43],[-23,72],[-63,153],[-29,115],[-50,60],[37,100],[41,91],[54,40],[-4,6],[-30,0],[-19,-5],[-18,-30],[-18,-22],[-56,-116],[-37,-56],[-23,-16],[38,-22],[6,-19],[7,-41],[-10,-51],[-10,-28],[-45,2],[-40,-41],[-95,-44],[-128,-26],[-63,3],[-65,52],[0,30],[3,26],[-94,90],[-54,89],[-38,2],[-33,23],[-39,37],[3,30],[6,21],[-24,15],[-31,-2],[-36,11],[94,114],[32,77],[27,11],[34,-12],[47,-30],[40,-14],[14,-14],[15,-27],[-16,-45],[-14,-31],[17,8],[50,49],[37,43],[17,-4],[12,-8],[20,-44],[25,-45],[56,43],[30,53],[-25,24],[-31,13],[-79,19],[20,15],[50,-2],[19,15],[-20,20],[-25,18],[-68,-60],[-124,3],[-87,35],[-87,-6],[-13,7],[-17,19],[49,45],[34,25],[2,14],[-20,2],[-38,-12],[-17,21],[3,36],[-6,-4],[-15,-19],[-21,10],[-18,16],[9,17],[19,24],[-8,3],[-17,-5],[-16,-31],[3,-25],[0,-36],[-28,-7],[-24,5],[-17,36],[-17,78],[-48,20],[-12,39],[30,51],[-13,26],[-32,8],[-37,-25],[-17,22],[-3,25],[-1,36],[10,3],[9,-7],[74,20],[7,10],[-59,30],[-16,31],[24,18],[44,2],[61,19],[-25,33],[-6,18],[-5,31],[10,51],[72,117],[71,98],[22,22],[32,12],[30,-9],[31,-21],[6,9],[-11,9],[-13,40],[43,15],[26,45],[2,13],[-28,-18],[-29,-31],[-7,31],[-7,71],[12,68],[10,30],[24,29],[69,11],[13,-6],[2,14],[-41,42],[17,34],[15,17],[84,27],[45,-9],[58,-31],[33,-39],[-5,-20],[-8,-12],[-17,-13],[-7,-10],[3,-8],[25,24],[40,28],[23,-12],[17,-23],[20,1],[63,19],[32,20],[39,53],[51,34],[73,108],[21,44],[25,7],[23,-4],[15,-37],[23,-10],[130,9],[67,16],[46,35],[48,59],[28,40],[13,52],[-17,66],[-18,56],[-23,127],[-64,83],[-46,25],[-30,-3],[22,53],[61,-6],[40,11],[33,26],[10,19],[16,40],[-5,42],[-9,23],[-22,26],[-27,37],[-18,12],[-16,-1],[-78,-74],[-46,-2],[-35,14],[-30,-42],[-85,-37],[-45,-38],[-84,-93],[-21,-43],[-26,-2],[-19,82],[-91,79],[-28,-27],[15,-25],[21,-17],[34,-8],[-15,-23],[-11,-32],[-34,30],[-61,43],[-63,22],[-164,-3],[-108,-44],[-10,9],[-10,4],[-18,-11],[-8,-17],[-11,-12],[-22,-4],[-45,7],[-85,27],[-194,41],[-50,24],[-44,59],[1,40],[19,17],[-1,58],[-38,15],[-77,82],[-28,35],[6,4],[14,-9],[26,-7],[64,11],[22,53],[48,16],[44,-8],[-10,15],[-11,11],[-114,27],[-16,-8],[-205,48],[-162,84],[-13,16],[-15,36],[22,35],[22,17],[1,-20],[3,-19],[93,45],[48,58],[92,10],[22,16],[28,31],[41,54],[58,28],[39,25],[51,15],[44,-25],[13,-3],[80,-5],[26,11],[11,8],[8,12],[-78,45],[8,25],[10,18],[91,52],[70,17],[37,-1],[108,68],[59,19],[112,13],[92,3],[25,-24],[-49,5],[-22,-4],[15,-9],[18,-17],[-5,-22],[-31,-66],[3,-53],[-20,-17],[-19,-24],[94,-76],[146,-5],[79,14],[45,-23],[38,-5],[103,12],[78,-16],[33,6],[72,113],[28,18],[31,-20],[40,-16],[25,12],[21,-29],[-10,61],[-14,23],[-118,41],[-78,-20],[-25,23],[8,47],[-84,115],[-35,24],[-42,1],[-21,40],[-18,51],[36,21],[33,10],[30,-17],[33,-67],[32,-10],[-9,-68],[39,-62],[89,-57],[70,21],[50,-1],[30,-12],[74,-52],[37,-6],[116,27],[1,51],[-9,37],[-28,23],[-78,-5],[-62,38],[-52,-10],[-96,-58],[-48,23],[-30,31],[-49,31],[-6,60],[41,69],[30,32],[-27,24],[-68,17],[-119,-18],[-5,24],[0,25],[-48,-49],[-50,10],[-66,-5],[-148,43],[-52,54],[-22,43],[-40,119],[-50,75],[-351,252],[-159,64],[-77,70],[-48,17],[-46,8],[-59,22],[40,28],[27,10],[-28,-30],[21,-7],[35,17],[18,20],[27,85],[28,129],[-7,51],[194,-10],[129,8],[43,12],[163,20],[43,14],[78,43],[92,77],[80,101],[12,27],[5,-7],[7,5],[9,38],[10,90],[39,85],[168,193],[77,77],[26,35],[27,25],[19,-24],[9,-7],[5,-11],[-16,-6],[-26,-25],[-36,-16],[-9,-9],[22,2],[63,18],[36,22],[179,41],[97,66],[3,15],[144,84],[20,-4],[23,-10],[-40,-55],[28,-14],[-25,-66],[52,-1],[12,-30],[3,26],[-1,37],[4,37],[8,25],[36,-11],[83,27],[-100,4],[-60,59],[-33,1],[111,87],[102,53],[23,-1],[11,-10],[2,-16],[-22,-10],[-21,-19],[10,-16],[15,-3],[48,14],[22,17],[105,-2],[30,13],[8,12],[134,2],[25,9],[85,46],[78,57],[36,31],[61,79],[53,51],[87,51],[21,-6],[-28,-10],[-20,-22],[27,-29],[183,-59],[46,-4],[18,-35],[-15,-34],[-47,-38],[-95,-39],[29,-15],[19,-35],[28,-4],[46,13],[35,21],[74,70],[24,39],[17,9],[62,-9],[35,-20],[40,-35],[-15,-34],[-16,-20],[52,-26],[57,-6],[55,-21],[77,44],[60,9],[57,-2],[73,24],[125,-32],[31,8],[50,-5],[53,-20],[19,-21],[-57,-44],[-9,-46],[20,-19],[36,-4],[4,-27],[23,-6],[112,2],[-9,-13],[-5,-15],[-35,-34],[200,-20],[27,19],[41,8],[88,26],[33,-12],[39,-26],[36,-6],[34,6],[78,38],[91,2],[37,-13],[39,6],[118,-44],[44,-5],[58,-57],[30,-1],[34,24],[29,-1],[29,-23],[47,-7],[22,-37],[24,-13],[178,-27],[88,13],[129,-4],[62,-17],[65,2],[107,-63],[56,-9],[11,-15],[161,-15],[56,33],[98,8],[88,28],[50,0],[59,-7],[22,3],[16,12],[142,-47],[79,-55],[35,-40],[166,-57],[48,-32],[33,-36],[19,-3],[14,10],[58,-3],[22,-5]],[[10833,91964],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[66,-24],[66,-23],[20,46],[71,-35],[62,-32],[40,40],[43,44],[58,3],[65,3],[43,3],[0,-37],[-16,-62],[-14,-51],[40,-52],[48,-27],[46,-26],[20,-71],[50,-55],[37,-41],[36,-40],[52,-57],[37,-40],[48,-53],[29,-32],[13,-61],[17,-74],[-10,-44],[23,-7],[44,49],[42,30],[52,38],[35,25],[65,1],[31,74],[1,103],[32,-2],[20,14],[8,31],[-20,41],[62,19],[45,14],[65,39],[63,37],[30,-29],[29,-28],[59,-67],[4,-16],[-4,-32],[-6,-31],[35,-88],[11,-10],[29,-12],[35,-29],[15,-26],[50,-40],[9,-17],[4,-27],[9,-23],[9,-17],[9,-24],[22,-28],[41,-31],[29,-22],[40,-30],[41,-62],[36,-54],[40,-54],[-6,-42],[41,-66],[43,-84],[33,-74],[24,-41],[28,-60],[34,-74],[39,-83],[30,-54],[39,-75],[20,-45],[-13,-31],[-17,-38],[51,-18],[34,-12],[-8,-42],[-12,-56],[40,-22],[26,-15],[-5,-29],[15,-33],[2,-55],[48,4],[21,2],[29,-25],[38,-32],[38,-30],[32,-25],[42,-15],[53,-22],[25,-44],[48,-20],[18,-62],[55,-23],[33,16],[11,-26],[9,-29],[3,-37],[-3,-36]],[[4590,83513],[27,-95],[12,-18],[17,-10],[24,-11],[15,-14],[12,-21],[2,-10],[-76,38],[-48,-56],[-15,-7],[-136,-3],[-27,-10],[-18,-18],[-31,-52],[-16,-19],[-16,-12],[-36,-14],[-42,2],[-22,7],[-12,24],[-11,48],[0,14],[5,23],[38,31],[12,17],[49,109],[14,15],[16,4],[41,-8],[36,32],[77,48],[17,6],[55,1],[16,-8],[11,-13],[10,-20]],[[12971,83838],[6,-16],[0,-11],[-40,-38],[-1,-8],[-9,-23],[-9,-9],[-15,-26],[-28,-27],[4,83],[-28,48],[28,24],[19,-7],[31,-3],[30,22],[12,-9]],[[13517,83571],[28,-75],[2,-27],[-28,-9],[-21,4],[-11,8],[-3,13],[7,38],[-14,22],[-16,8],[-15,-14],[0,38],[11,27],[-7,36],[0,28],[4,9],[15,-1],[30,-29],[18,-76]],[[13302,84164],[-6,-96],[-11,5],[-10,1],[-22,-14],[-22,6],[-11,11],[-4,12],[4,28],[-12,16],[-42,6],[-16,7],[-9,30],[-2,39],[7,14],[21,11],[16,47],[10,7],[35,94],[17,-7],[31,-57],[39,-83],[-13,-77]],[[13617,83806],[-10,-63],[-19,-65],[-29,-35],[-21,8],[-15,28],[-14,-1],[-15,6],[-8,23],[8,30],[-7,23],[-8,-20],[-13,-19],[-33,-24],[-23,-47],[-11,-30],[-13,33],[-9,78],[-1,33],[24,50],[31,48],[6,142],[99,71],[9,-4],[32,-53],[35,-74],[8,-34],[1,-58],[-4,-46]],[[12954,84679],[18,-18],[10,19],[19,-1],[35,-17],[20,-25],[12,-29],[1,-17],[-3,-40],[2,-40],[-1,-20],[-5,-18],[-8,-13],[-8,-2],[-27,36],[-31,65],[-24,20],[-1,-7],[7,-18],[19,-35],[3,-21],[14,-26],[6,-19],[3,-26],[0,-22],[-4,-19],[-6,-12],[-9,-6],[-47,6],[-28,-13],[-33,7],[-8,11],[-5,19],[-2,46],[-9,66],[2,50],[-21,46],[-18,27],[-26,25],[-18,24],[5,20],[27,14],[44,-3],[95,-34]],[[13094,83464],[6,-8],[7,5],[12,21],[20,-4],[14,-7],[9,-8],[-5,-30],[-4,-49],[-8,-17],[-8,-24],[-28,14],[-23,31],[-33,53],[-19,38],[-1,16],[-12,12],[-22,66],[-13,52],[-21,6],[-26,15],[-10,29],[7,25],[37,12],[55,-64],[9,-28],[20,-32],[3,-44],[10,-18],[24,-62]],[[9335,86664],[6,-16],[53,4],[16,-3],[6,-7],[-7,-11],[-21,-14],[-60,-25],[-49,-33],[-6,3],[-9,36],[-9,15],[-6,20],[0,7],[9,14],[18,20],[13,8],[46,-18]],[[8962,86297],[-31,-8],[-7,17],[16,42],[13,24],[10,6],[35,48],[39,35],[36,51],[37,72],[6,27],[17,3],[28,-18],[17,-25],[-8,-20],[-92,-103],[-8,-13],[-8,-35],[-8,-13],[-12,-5],[-9,-15],[-5,-25],[-11,-14],[-18,-1],[-12,-7],[-6,-12],[-19,-11]],[[8984,86664],[0,-15],[-9,-14],[8,-27],[-14,-46],[-6,-29],[-8,-19],[-7,-7],[-8,4],[-2,11],[5,16],[-18,-1],[-6,40],[10,13],[4,17],[1,12],[12,51],[4,3],[2,-12],[3,-3],[7,5],[9,22],[4,3],[9,-24]],[[8908,86881],[-35,-5],[-16,7],[-3,8],[7,29],[0,12],[17,5],[21,-14],[6,-14],[3,-28]],[[7498,84749],[-35,-19],[-7,1],[-21,-38],[-17,-16],[-22,30],[5,46],[20,30],[97,-10],[7,-9],[1,-7],[-8,-6],[-20,-2]],[[7643,85532],[-9,-4],[-20,18],[-13,19],[9,14],[39,30],[19,0],[8,-4],[3,-10],[-2,-13],[-8,-18],[-26,-32]],[[7433,85166],[-8,-16],[-7,4],[-16,19],[-31,28],[-15,18],[-1,8],[11,9],[38,-22],[15,-20],[14,-28]],[[6787,83998],[-11,-19],[-21,2],[-12,6],[-3,16],[32,48],[7,6],[6,-2],[3,-20],[-1,-37]],[[7032,84352],[-19,-14],[-6,5],[-1,11],[5,18],[9,18],[29,34],[29,23],[15,-2],[6,-14],[-19,-30],[-48,-49]],[[7164,84397],[-13,-1],[-21,15],[3,18],[29,22],[29,-3],[3,-12],[-2,-14],[-2,-8],[-9,-8],[-17,-9]],[[5365,83706],[4,0],[9,4],[18,33],[6,1],[0,-10],[-8,-32],[14,-43],[13,-21],[-1,-7],[-34,-15],[-25,11],[-14,-4],[-12,-15],[-9,17],[-6,79],[2,14],[14,27],[18,13],[8,-4],[7,-11],[1,-11],[-5,-26]],[[4917,83436],[-6,-2],[-20,17],[-7,14],[-5,20],[39,30],[8,0],[8,-16],[1,-14],[-11,-37],[-7,-12]],[[4846,83180],[-24,-13],[-26,13],[-22,25],[-2,28],[49,-18],[10,-9],[15,-26]],[[5591,83599],[-17,-13],[-5,-16],[-13,-7],[-11,-13],[-37,-59],[-16,-11],[18,51],[3,16],[0,10],[-5,38],[10,-1],[9,8],[18,34],[16,3],[17,40],[9,3],[4,-6],[-7,-24],[16,-22],[-4,-22],[-5,-9]],[[3933,82989],[-11,-10],[-8,-2],[-7,6],[-28,-7],[-6,4],[-13,34],[-1,18],[5,14],[13,13],[21,11],[21,-2],[35,-32],[17,-18],[3,-12],[-12,-11],[-29,-6]],[[4011,83027],[-12,-4],[-3,6],[-2,25],[-9,40],[18,15],[11,3],[4,-6],[13,-30],[13,-8],[9,-6],[-16,-9],[-26,-26]],[[5300,85585],[-20,-9],[-22,5],[-17,57],[13,1],[28,38],[60,30],[15,4],[-57,-126]],[[2016,86668],[60,-38],[39,4],[30,-31],[13,-26],[-46,19],[-66,-2],[-90,77],[-32,18],[7,43],[35,22],[17,-58],[33,-28]],[[2733,84783],[-29,-28],[-26,10],[-7,20],[-1,9],[75,22],[-12,-33]],[[2863,82285],[-4,-24],[-4,-8],[-43,12],[-29,-4],[-3,14],[3,12],[45,18],[18,1],[12,-10],[5,-11]],[[2574,82131],[-18,-18],[-5,7],[-3,23],[10,17],[30,38],[21,-7],[6,-10],[0,-14],[-8,-19],[-10,-10],[-12,0],[-11,-7]],[[2093,81953],[-21,-8],[-22,9],[10,30],[11,16],[21,20],[24,-9],[19,-25],[-42,-33]],[[2846,84466],[36,-11],[21,7],[18,-6],[3,-13],[-31,-30],[-13,2],[-37,36],[3,15]],[[1031,81677],[-17,-34],[-13,15],[-5,47],[10,12],[27,-34],[-2,-6]],[[1105,81798],[-6,-17],[-28,18],[-9,15],[-2,15],[8,25],[22,0],[12,-10],[12,-19],[4,-12],[-13,-15]],[[792,81633],[-8,-7],[-15,-6],[-42,6],[-26,-2],[-28,-4],[-22,-10],[-4,14],[1,12],[92,32],[22,16],[13,21],[12,39],[10,12],[6,-1],[13,-15],[-5,-20],[-11,-18],[-4,-17],[-4,-52]],[[99603,81748],[-17,-10],[-10,25],[-1,15],[10,15],[17,-9],[10,-15],[-9,-21]],[[99847,81435],[-49,0],[-97,94],[-50,29],[-28,33],[13,7],[60,-23],[49,-51],[27,-33],[31,-28],[34,-12],[10,-16]],[[98255,82004],[-18,-2],[-11,20],[-60,8],[6,19],[26,8],[39,30],[33,-5],[-9,-28],[-6,-50]],[[12508,84879],[24,-63],[17,-49],[15,-59],[26,-122],[12,-46],[3,-26],[3,-66],[-4,-14],[-7,-13],[-2,-19],[7,-50],[1,-77],[-7,-43],[-8,-7],[-19,14],[-15,24],[-12,24],[-28,77],[-9,36],[0,25],[4,19],[9,12],[17,31],[-3,5],[-12,-7],[-25,-4],[-22,24],[-17,13],[3,45],[-4,12],[-34,-13],[-13,12],[-3,17],[1,25],[6,21],[32,55],[-3,11],[-15,2],[-21,19],[-9,61],[-22,35],[-14,-3],[-29,-99],[-15,-22],[-42,-14],[9,28],[4,25],[-15,74],[-1,29],[10,21],[30,9],[15,13],[13,20],[3,20],[23,53],[10,10],[29,0],[60,-59],[18,-8],[26,-38]],[[12589,85346],[70,-13],[52,3],[47,-86],[29,-70],[17,-49],[10,-47],[13,-45],[-1,-7],[-28,31],[-19,62],[-10,24],[-10,11],[-10,23],[-21,59],[0,17],[-9,16],[-11,6],[-12,-3],[-4,-5],[2,-41],[9,-46],[51,-99],[34,-57],[7,-18],[5,-52],[-15,-23],[18,-48],[-1,-9],[-4,-9],[-48,-21],[-45,-89],[-48,-52],[-23,-8],[-10,9],[-11,20],[-6,26],[-1,33],[12,21],[24,109],[0,35],[-30,50],[-18,40],[-9,57],[-17,149],[-7,48],[-11,39],[-14,32],[-10,35],[-8,38],[3,15],[24,-20],[29,-55],[15,-36]],[[12297,85393],[40,-56],[0,-13],[-8,-38],[-22,-11],[6,-15],[17,-12],[11,10],[42,54],[13,11],[8,1],[51,-16],[44,-26],[13,-20],[8,-36],[-12,-79],[-37,-13],[-17,1],[-18,12],[-30,-28],[25,-20],[75,-5],[23,-44],[6,-34],[-16,-62],[-43,17],[-37,36],[-77,51],[-19,3],[-12,-9],[-4,-31],[1,-68],[-20,-34],[-61,15],[-24,51],[-22,80],[-84,96],[-23,19],[-30,57],[12,45],[4,26],[16,7],[23,20],[14,44],[21,-36],[28,-34],[1,32],[13,26],[28,-1],[13,5],[18,24],[26,12],[16,-14]],[[12898,84296],[53,-12],[48,1],[17,-24],[10,-25],[7,-24],[1,-22],[-1,-15],[-6,-17],[2,-5],[94,-55],[44,-58],[18,-30],[10,-26],[19,-64],[39,-74],[21,-23],[11,-22],[-6,0],[-28,16],[-60,50],[-5,-2],[-5,-27],[-9,-24],[-14,-17],[11,-5],[48,11],[41,-49],[15,-8],[16,-35],[0,-14],[-9,-26],[-6,-10],[2,-7],[11,-4],[45,7],[8,-12],[-7,-101],[6,-37],[0,-17],[-5,-22],[0,-19],[4,-19],[1,-18],[-12,-45],[-12,-8],[-19,0],[-15,13],[-22,39],[-21,60],[-8,9],[-27,9],[-5,7],[-17,1],[-13,25],[2,33],[-11,33],[1,15],[-12,6],[-10,-9],[6,-33],[-6,-25],[-22,11],[-36,80],[-41,65],[-17,15],[5,19],[20,10],[17,-1],[3,11],[-34,63],[1,18],[12,31],[-15,13],[-43,-9],[-15,6],[-13,26],[-7,21],[-37,4],[-14,-2],[-24,33],[-12,21],[5,11],[22,18],[13,-2],[25,-20],[10,0],[25,27],[4,24],[18,20],[-3,21],[-10,35],[-23,10],[-46,-21],[-41,-32],[-16,12],[-3,20],[43,55],[19,30],[-4,17],[-14,23],[-1,58],[9,13]],[[12781,84587],[18,-40],[26,4],[14,-30],[11,-46],[-8,-29],[-11,7],[-13,-17],[-8,-56],[4,-55],[-4,-56],[-15,-57],[-3,-38],[-6,-11],[-7,-4],[-8,10],[-12,8],[-15,-32],[-19,0],[-15,73],[13,121],[31,25],[-18,32],[-39,39],[3,21],[-29,62],[-2,14],[5,52],[27,46],[37,8],[25,-20],[14,-17],[4,-14]],[[7662,85460],[10,-4],[10,34],[8,1],[33,-29],[20,6],[13,-35],[12,-4],[10,5],[7,-3],[-2,-38],[-24,-38],[-12,-9],[-15,9],[-6,4],[-10,17],[-8,21],[-5,1],[-18,-25],[0,-13],[8,-19],[-1,-11],[-20,-6],[-20,3],[-24,-16],[-5,10],[-4,29],[-7,-4],[-12,-35],[-12,-22],[-22,-18],[-5,-9],[-17,-1],[-24,-12],[-15,2],[-90,38],[-21,14],[74,87],[39,34],[22,-2],[22,-11],[12,2],[1,39],[-21,29],[1,12],[46,19],[18,-3],[19,-10],[18,-16],[17,-23]],[[3343,82571],[-85,-61],[-28,-45],[-21,-44],[-16,-24],[-12,-4],[-14,-11],[-28,-31],[-12,-3],[-90,-71],[-6,-1],[4,18],[28,26],[18,24],[20,40],[11,14],[4,20],[1,40],[5,15],[20,30],[14,17],[18,6],[38,-5],[16,15],[4,11],[-9,11],[-2,18],[2,32],[11,28],[19,25],[27,19],[33,13],[24,1],[44,-29],[7,-13],[-11,-29],[-6,-27],[-28,-25]],[[3718,82891],[12,-27],[21,17],[15,24],[12,31],[7,12],[11,-16],[29,-22],[-25,-34],[-47,-51],[-16,-34],[-1,-15],[46,12],[13,-2],[8,-12],[-13,-13],[-25,-13],[-21,-24],[-50,-42],[-19,-35],[-23,-14],[-30,-3],[-54,-23],[-32,-21],[-8,-12],[-11,-5],[-12,1],[-13,-10],[-14,-19],[-12,-9],[-19,-2],[-11,-8],[-11,0],[-31,23],[-8,14],[28,27],[20,9],[30,4],[29,25],[61,34],[19,18],[12,63],[14,11],[8,25],[33,-1],[16,-28],[5,-4],[3,3],[2,22],[17,16],[-10,12],[-31,15],[-23,6],[-15,0],[-13,8],[-9,17],[-5,17],[1,17],[8,19],[14,21],[17,12],[36,9],[32,14],[17,2],[13,-6],[3,-55]],[[1791,81875],[54,-23],[68,2],[25,-5],[0,-7],[-43,-10],[-15,4],[-38,-13],[-26,-3],[-58,13],[-46,-9],[-12,3],[-14,11],[-16,18],[-1,12],[15,4],[40,-15],[4,8],[34,14],[29,-4]],[[1478,81817],[-149,-24],[-22,16],[22,10],[27,5],[56,27],[69,23],[54,29],[47,18],[13,30],[-41,16],[-8,12],[19,14],[16,21],[39,25],[34,-31],[8,-20],[-4,-25],[-7,-25],[-30,-13],[-4,-13],[16,-38],[-62,-33],[-93,-24]],[[946,81720],[2,-20],[32,3],[10,-10],[0,-38],[-5,-11],[-4,-2],[-12,8],[-13,-19],[-59,-48],[-18,27],[-35,-42],[24,108],[28,16],[11,12],[-3,32],[13,52],[28,-2],[13,-22],[0,-14],[-12,-30]],[[589,81595],[-6,-19],[-7,0],[-37,32],[-5,11],[22,15],[6,11],[-3,16],[-16,21],[-30,27],[-11,20],[7,12],[14,7],[45,2],[25,-34],[18,-12],[43,-8],[-22,-14],[-13,-13],[-15,-53],[-15,-21]],[[99923,81742],[-23,-14],[-26,7],[-15,23],[2,27],[34,29],[43,-37],[-15,-35]],[[99281,81729],[-24,-24],[-19,24],[-3,12],[36,42],[28,9],[11,15],[12,53],[20,2],[10,-6],[-5,-25],[-16,-38],[0,-27],[-50,-37]],[[98002,82380],[48,-19],[33,9],[41,-30],[52,-53],[-12,-10],[-13,-5],[-12,0],[-40,-8],[-22,2],[-40,-36],[-45,26],[-15,51],[-35,12],[-28,18],[51,40],[37,3]],[[6783,62794],[-12,-27],[-16,2],[-55,59],[-7,32],[4,148],[-21,120],[-23,91],[17,47],[22,37],[25,69],[-21,88],[6,53],[11,9],[59,-65],[117,-97],[31,-68],[6,-74],[21,-9],[11,-50],[30,-44],[11,-26],[-13,-40],[-56,-78],[-72,-34],[-62,-87],[-13,-56]],[[6329,64063],[59,-15],[14,6],[10,-12],[48,-8],[9,-5],[-10,-30],[-31,-27],[-45,24],[-75,8],[3,23],[7,16],[1,29],[10,-9]],[[6531,63901],[8,-11],[29,16],[22,5],[35,-38],[13,-26],[23,-27],[8,-21],[-6,-24],[-26,-40],[-36,-10],[-20,-17],[-28,4],[-8,7],[-3,51],[-9,55],[-17,-7],[-20,19],[-21,46],[-2,27],[11,44],[20,5],[15,-24],[12,-34]],[[6167,64202],[9,-3],[13,4],[4,-46],[14,-25],[5,-15],[-15,-16],[-30,-7],[-14,13],[-15,29],[-15,-8],[-3,23],[-3,6],[-11,-6],[10,-30],[-27,-2],[-9,4],[-7,34],[-28,64],[0,25],[-10,31],[42,8],[28,53],[16,5],[31,-85],[0,-24],[6,-23],[9,-9]],[[5730,64476],[-25,-32],[-14,14],[-27,5],[-10,25],[-29,22],[-11,30],[17,56],[41,48],[63,-2],[14,-38],[1,-28],[-8,-31],[-4,-45],[-8,-24]],[[5505,64424],[-5,-26],[-10,4],[-2,23],[6,31],[16,27],[18,41],[14,-6],[-8,-27],[-1,-29],[-20,-16],[-8,-22]],[[6431,63808],[-17,-16],[-18,8],[-4,39],[-17,50],[30,10],[17,-14],[9,-16],[11,-27],[-11,-34]],[[29247,77766],[13,0],[65,1],[115,0],[116,0],[115,0],[116,1],[116,0],[115,0],[116,1],[27,111],[26,51],[34,-17],[19,2],[21,26],[17,17],[11,-3],[9,-24],[8,-17],[9,5],[8,23],[0,32],[10,22],[13,4],[12,-1],[6,11],[-1,16],[-4,25],[1,30],[30,53],[36,36],[12,18],[4,37],[21,38],[10,22],[2,19],[-5,24],[1,44],[7,54],[8,58],[19,52],[32,57],[8,75],[8,80],[38,77],[43,87],[24,50],[44,91],[31,64],[16,30],[17,35],[26,-10],[27,-11],[-4,-51],[5,-37],[12,-21],[18,-15],[14,-5],[17,0],[44,29],[52,19],[29,17],[5,17],[13,6],[21,-5],[39,-41],[45,-62],[35,-49],[2,-85],[0,-89],[1,-95],[1,-68],[0,-92],[1,-74],[1,-96],[1,-52],[5,-15],[-3,-20],[-2,-10],[1,-8],[2,-10],[-1,-15],[-4,-12],[-3,-15],[0,-25],[5,-15],[8,-8],[7,0],[8,-9],[12,-16],[17,-13],[18,-5],[12,3],[15,-8],[6,-22],[-3,-20],[-9,-10],[-9,-7],[-2,-16],[5,-16],[7,-14],[7,-25],[-3,-22],[-7,-18],[-3,-19],[6,-16],[15,-22],[9,-21],[14,-11],[7,8],[5,11],[6,8],[10,-5],[12,-6],[13,-7]],[[31354,77862],[-2,-18],[8,-29],[6,-57],[-9,-26],[2,-34],[26,-10],[6,-10],[1,-13],[-57,-88],[-48,13],[-26,-24],[-27,-6],[-12,-40],[-15,-8],[-20,3],[-18,11],[-13,-6],[-19,-70],[-16,6],[-6,-26],[-8,-11],[-12,-9],[-10,31],[-7,30],[-9,6],[-13,8],[-13,0],[-9,-5],[-11,-19],[-16,-16],[-12,13],[-9,23],[-8,-36],[-12,-38],[2,-44],[-5,-26],[-11,7],[-11,23],[-31,18],[-25,-1],[5,24],[24,35],[-8,7],[-11,-5],[-5,5],[8,32],[1,35],[-10,-12],[-14,-37],[-31,-30],[1,-49],[-30,-102],[-1,-43],[-19,-34],[-25,-30],[-33,9],[-25,-26],[-13,-29],[-11,-5],[-5,38],[-5,11],[-9,-55],[-9,-4],[-4,40],[-4,26],[-13,-23],[-9,-59],[-9,5],[-2,22],[-7,7],[-2,-25],[3,-36],[-5,-19],[-8,10],[-9,17],[-15,-13],[-14,-5],[0,17],[3,22],[-27,-12],[-32,-39],[-26,-55],[9,-9],[10,-17],[-44,-84],[-44,-76],[-34,-123],[-14,-15],[-11,-22],[-13,-75],[-14,-66],[8,-30],[5,-30],[13,-30],[11,-3],[11,5],[9,-1],[5,-13],[-2,-15],[-13,-4],[-26,-26],[-22,-11],[-11,-32],[-16,-37],[-32,-58],[13,-18],[50,-20],[22,-21],[34,-109],[-8,-10],[-3,-20],[30,-28],[9,-78],[25,-27],[36,-16],[45,24],[37,32],[-1,27],[-24,61],[-5,29],[-18,19],[-6,-16],[-11,21],[-2,12],[11,5],[12,-2],[14,-11],[36,-67],[10,-89],[3,-56],[-4,-19],[-11,4],[-20,-4],[-96,-29],[-21,-25],[-49,-28],[-3,14],[3,28],[-3,59],[-10,3],[-75,-96],[-30,-6],[-24,-28],[-6,16],[-4,71],[15,61],[-8,-1],[-26,-36],[-11,22],[-5,24],[-8,14],[-9,5],[7,-53],[-17,-40],[-5,-104],[-22,-43],[-68,-27],[-45,6],[-40,-9],[-53,-20],[-29,12],[-30,-21],[-103,-6],[-21,11],[-28,-39],[-44,-24],[-111,-88],[-25,-33],[-29,-50],[-21,-27],[-16,-9],[-10,-22],[-11,-15],[10,50],[12,43],[10,82],[-3,66],[-12,28],[-12,18],[14,-66],[2,-80],[-5,-47],[-27,-91],[-12,-21],[-13,-19],[-10,-8],[-10,-15],[-11,-23],[-10,-45],[6,-42],[53,-15],[15,13],[7,-30],[4,-42],[-4,-45],[-9,-45],[-7,-57],[-5,-86],[-9,-78],[-1,24],[5,94],[-9,-10],[-6,-22],[-16,-121],[-22,-65],[-21,-45],[-21,7],[5,-36],[-6,-18],[-5,-39],[-13,-26],[-12,3],[-17,-18],[-6,-13],[-1,-26],[-11,-23],[-42,-119],[-35,-35],[-9,5],[10,56],[6,57],[-22,24],[-21,13],[-23,-1],[-27,44],[-34,32],[-47,86],[1,24],[-1,41],[14,63],[14,45],[19,23],[56,23],[14,36],[8,30],[-28,-52],[-41,-17],[-22,-19],[-18,-29],[-10,-37],[-24,-44],[2,-29],[4,-21],[-2,-44],[15,-43],[30,-70],[5,-109],[23,-72],[35,-85],[27,-24],[1,-32],[-12,-52],[-17,-24],[22,5],[10,-12],[10,-43],[0,-44],[-4,-25],[-6,-10],[0,25],[-5,9],[-7,-11],[-5,-13],[-2,-49],[-5,-25],[-18,-7],[-19,-66],[-17,-37],[-67,-249],[2,-42],[-12,-14],[-19,-11],[-19,-25],[-12,-27],[-12,-74],[-22,-84],[-14,35],[-4,30],[7,77],[24,128],[26,79],[21,37],[16,76],[-21,12],[-32,-1],[6,35],[9,31],[-16,31],[-10,4],[-10,12],[12,26],[5,27],[-3,34],[5,25],[-9,-4],[-13,-27],[-8,-10],[-5,23],[-6,-5],[-4,-16],[-9,-9],[-18,22],[-26,25],[-15,43],[-8,34],[8,61],[18,10],[24,-9],[31,0],[-4,13],[-11,-2],[-33,49],[-11,30],[-18,8],[-8,-29],[-9,-7],[11,62],[15,3],[22,17],[-6,36],[-14,16],[-25,-20],[0,26],[5,32],[19,0],[16,-10],[14,52],[1,24],[-24,-34],[-5,73],[23,72],[22,31],[27,-1],[28,5],[-17,13],[-18,7],[13,28],[12,5],[11,24],[-27,-3],[3,46],[-13,-9],[-16,-5],[-6,-19],[1,-33],[-4,-21],[-13,-18],[-20,-13],[-2,23],[-7,11],[-3,-50],[-5,-17],[-15,47],[-5,-10],[1,-13],[-4,-23],[-13,-12],[1,-29],[-5,-16],[-42,25],[-1,-8],[24,-56],[17,-18],[2,-30],[-15,-25],[-20,21],[-4,-1],[11,-37],[7,-33],[-7,-27],[1,-33],[-1,-30],[-5,-26],[10,-121],[12,-33],[12,-32],[6,-29],[-12,-5],[-20,25],[-17,18],[-21,59],[-4,24],[-5,19],[3,-43],[7,-48],[65,-107],[12,-42],[9,-32],[-2,-31],[-17,22],[-15,28],[-38,32],[-49,19],[-28,74],[1,-31],[-7,-26],[-16,32],[-11,27],[-4,29],[-20,-2],[-22,-25],[-22,6],[-2,50],[5,27],[24,62],[23,33],[10,41],[-4,64],[-4,-65],[-13,-33],[-20,-24],[-27,-44],[-6,-41],[-8,-77],[11,-25],[11,-7],[34,17],[18,-8],[39,-91],[72,-37],[27,-23],[22,-48],[32,-27],[25,-40],[1,-27],[-9,-30],[-3,-42],[-11,-27],[-26,-3],[-15,7],[-84,147],[-10,14],[-31,77],[-36,41],[-11,-1],[52,-76],[21,-53],[37,-75],[26,-32],[20,-50],[18,-23],[50,-33],[-18,-24],[28,-20],[4,-37],[-3,-42],[-38,16],[-1,-31],[3,-18],[-16,-15],[-24,20],[-61,113],[1,-15],[5,-18],[35,-72],[31,-44],[27,-20],[21,-36],[7,-22],[5,-34],[-15,-22],[-18,-13],[-17,23],[-12,24],[-27,40],[-8,46],[-20,-3],[-84,58],[-68,7],[7,-12],[8,-8],[54,-14],[22,-26],[44,-24],[26,-6],[11,-73],[35,-49],[5,-37],[25,-4],[43,36],[28,-13],[40,-10],[9,-30],[7,-55],[14,-63],[37,-246],[55,-202],[7,-34],[-13,30],[-41,134],[-23,96],[-23,170],[-7,38],[-8,16],[-5,-13],[-2,-21],[4,-17],[-9,-56],[4,-26],[14,-26],[17,-67],[13,-89],[-18,36],[-19,19],[-29,15],[-25,26],[1,-37],[-2,-40],[-20,12],[-14,13],[12,-42],[-26,13],[-17,-3],[-11,-38],[-15,-23],[-23,-7],[-33,34],[-11,42],[-4,47],[-2,-55],[6,-58],[-2,-43],[32,-9],[30,8],[40,-2],[26,8],[16,14],[38,-12],[3,-53],[-4,-52],[-3,-56],[11,0],[12,18],[6,100],[35,37],[12,-3],[11,-32],[4,-32],[4,-45],[-9,-68],[-53,-80],[-38,-74],[-20,-15],[-28,8],[-32,19],[-15,4],[-12,-6],[-8,22],[-4,42],[-13,14],[-9,-2],[-7,-44],[-29,-13],[-41,19],[-42,37],[18,-40],[105,-74],[12,-14],[11,-20],[-15,-32],[-11,-36],[-2,-28],[-4,-18],[-42,-48],[-23,9],[-58,86],[27,-75],[21,-31],[43,-17],[80,28],[26,-31],[-22,-54],[-21,-37],[-28,-5],[-25,-10],[-7,-26],[-18,-2],[-27,-1],[-43,-2],[-23,6],[-33,-54],[-12,-7],[-18,10],[-7,43],[-8,21],[0,-80],[3,-22],[6,-16],[-38,-43],[-37,-54],[-13,-15],[-15,-27],[-30,-78],[-8,-57],[-11,-64],[-1,29],[2,48],[-8,55],[-5,-101],[-12,-47],[-109,3],[-47,-25],[-74,-86],[-22,-38],[-60,-145],[-16,-94],[-12,40],[3,29],[0,24],[-15,-51],[15,-76],[-13,-28],[-40,-54],[-22,-8],[-25,-16],[-8,-52],[-33,-49],[-19,-22],[-36,13],[11,-46],[-13,-36],[-23,-27],[-28,-18],[-16,2],[-13,-9],[-11,-23],[-26,-21],[-28,12],[-30,7],[-18,-12],[29,-21],[16,-31],[-3,-41],[-8,-15],[-18,-22],[-8,3],[-5,20],[-6,40],[-9,-9],[-1,-18],[-8,-7],[-25,64],[1,-49],[9,-37],[9,-19],[8,-12],[3,-17],[-18,-42],[-9,-10],[-16,-7],[-10,-26],[3,-22],[-14,-49],[-34,-30],[-10,1],[-9,-9],[5,-22],[9,-16],[-1,-14],[-9,-20],[-17,-6],[-10,-23],[3,-21],[6,-12],[-1,-21],[-21,-20],[-4,-21],[10,-6],[7,6],[6,-4],[-12,-34],[-11,-21],[-10,-37],[-24,-11],[1,-12],[13,-11],[12,-28],[-22,-53],[-13,4],[-8,12],[-5,-42],[2,-22],[-5,-46],[-8,-55],[-6,-22],[1,-42],[4,-41],[13,-52],[20,-214],[13,-74],[24,-200],[41,-194],[57,-235],[93,-284],[11,-40],[-12,-35],[-4,-35],[-1,-54],[3,-52],[11,-64],[22,-98],[-12,20],[-31,140],[-4,82],[5,117],[-7,-3],[-6,-38],[-3,-44],[-8,-18],[-11,68],[1,31],[11,36],[-3,13],[-18,18],[-4,29],[2,29],[-10,15],[-8,-1],[5,-70],[9,-43],[11,-104],[17,-63],[10,-52],[118,-561],[28,-72],[10,-51],[11,-107],[2,-138],[-19,-252],[-5,-171],[-2,5],[-2,18],[-5,2],[-16,-78],[-23,-71],[-8,-110],[-10,-56],[-33,-58],[-20,1],[-50,-43],[-35,11],[-42,-25],[-27,3],[-16,52],[3,23],[6,24],[11,5],[36,-54],[7,23],[-11,27],[-21,15],[-16,17],[-31,125],[-33,85],[-6,57],[-56,35],[-41,53],[-27,94],[-15,166],[-18,19],[-8,13],[18,62],[19,51],[-15,-13],[-11,-19],[-14,-45],[-10,-7],[-9,7],[-11,87],[3,108],[15,40],[-23,2],[-23,-16],[3,-36],[-3,-20],[-18,6],[-13,12],[-17,38],[-25,71],[-49,197],[-10,27],[-17,29],[8,9],[14,6],[32,88],[25,54],[9,37],[-2,16],[-11,23],[-14,-20],[-7,5],[-16,47],[-16,13],[-11,-10],[12,-38],[10,-14],[-4,-56],[-4,-18],[-10,-16],[-15,9],[-7,-14],[-9,15],[-9,24],[-10,40],[26,225],[24,144],[3,163],[2,24],[-2,44],[-33,94],[-145,231],[-112,273],[-97,103],[-74,-23],[-12,-21],[-6,-26],[5,-31],[-7,-13],[-20,2],[-26,-7],[-70,-72],[-25,3],[-22,-19],[-17,-14],[-43,-8],[-37,-15],[-16,8],[-10,42],[0,43],[8,-33],[13,-26],[6,10],[2,23],[-13,45],[-41,58],[-48,84],[14,-3],[4,18],[-15,24],[7,27],[10,29],[-20,-4],[-18,-21],[-1,-24],[-3,-20],[-10,3],[-18,24],[-89,68],[-77,39],[59,17],[32,-14],[-3,21],[-8,13],[-26,17],[-32,-7],[-21,8],[-21,-16],[-22,-25],[-21,-12],[-80,-18],[-65,-19],[11,20],[11,13],[38,20],[6,41],[-9,39],[-10,-9],[-11,-31],[-13,22],[-14,0],[-4,-49],[-19,-33],[-8,-33],[-54,-26],[-7,9],[16,31],[-1,18],[-19,-15],[-30,-60],[-106,-19],[5,13],[23,3],[32,19],[-7,32],[-12,34],[-11,4],[-8,21],[1,64],[-7,38],[-18,39],[-6,-8],[-12,-66],[-11,-87],[-5,-28],[-32,-2],[-28,6],[-95,-11],[-35,30],[-15,6],[-9,-1],[-41,-27],[-48,-21],[-11,7],[-16,1],[-34,-71],[-40,-33],[-102,60],[-25,47],[-22,10],[-28,6],[-29,-58],[-23,-79],[36,-44],[30,-21],[50,18],[28,38],[23,-1],[11,8],[10,20],[19,-16],[1,-16],[-14,-22],[-17,-19],[-11,-22],[20,-45],[31,-15],[12,7],[7,50],[19,32],[26,-7],[-3,-20],[3,-19],[12,-33],[-1,-47],[2,-11],[-28,-20],[-21,-8],[-17,-27],[9,-15],[-17,-14],[-11,6],[-6,-6],[-2,-16],[-9,-16],[13,-46],[26,-30],[19,-38],[74,-50],[18,1],[18,-50],[14,-18],[14,-8],[-1,-35],[-25,-25],[-7,-31],[-6,-17],[-11,22],[-11,15],[-26,-47],[-13,-10],[6,51],[-10,20],[-15,52],[-21,31],[-16,11],[-12,20],[-14,8],[-13,-2],[-21,12],[-1,27],[-6,20],[-16,25],[-78,45],[-1,-19],[6,-14],[11,-9],[13,-19],[0,-54],[-6,-23],[-2,-33],[-5,-34],[-10,-26],[-21,-18],[-10,15],[-15,72],[-22,23],[-34,2],[-23,-16],[-25,-70],[-21,-11],[-70,36],[-80,55],[2,18],[13,6],[24,-7],[-1,19],[-25,61],[-4,28],[3,34],[-8,-1],[-15,-28],[-51,24],[-14,28],[-30,81],[-42,3],[-19,49],[-35,-20],[-17,-23],[-15,-35],[6,-19],[15,-29],[-7,-14],[-49,-21],[-114,24],[-34,21],[-44,46],[-62,37],[-30,6],[-29,-7],[-86,-4],[-19,-10],[-17,-16],[-11,18],[-5,31],[10,5],[11,19],[10,36],[1,22],[-7,15],[-13,1],[-29,-95],[16,-53],[-1,-19],[-58,-11],[-132,-107],[-51,-58],[2,19],[62,75],[-21,12],[-36,-19],[-13,7],[15,62],[-4,55],[-26,1],[-16,-43],[-11,1],[-14,19],[-11,-6],[8,-98],[16,-41],[13,-52],[-36,-64],[-34,-53],[-3,-51],[-34,-66],[-32,-38],[-74,-88],[-22,-19],[-33,-42],[-47,-30],[-44,-49],[-15,-8],[28,42],[34,41],[-29,-6],[-44,19],[-28,1],[0,-15],[-21,-21],[-21,31],[-9,21],[-5,18],[-9,4],[-9,-8],[32,-127],[14,-5],[15,-13],[-19,-29],[-20,-23],[-32,-15],[-27,47],[-6,-59],[-3,-58],[-9,-14],[-15,-22],[-7,16],[-4,23],[-9,-20],[-14,-15],[-22,-3],[-17,-8],[0,-24],[4,-24],[30,19],[-11,-62],[-27,-62],[-23,-14],[-34,9],[-8,-6],[-8,-13],[40,-96],[-25,-145],[-17,-52],[-11,-7],[-12,-2],[-44,47],[-24,36],[21,-98],[58,-29],[3,-37],[-1,-31],[-11,-38],[-11,-49],[8,-35],[9,-85],[8,-39],[8,-119],[10,-51],[52,-189],[18,-2],[2,-20],[-1,-40]],[[23015,66797],[-38,-11],[-16,-18],[-3,-15],[-2,-8],[-5,1],[-18,11],[-41,53],[-59,34],[-78,13],[-54,27],[-28,41],[-30,24],[-32,8],[-26,22],[-20,37],[-30,23],[-39,10],[-26,28],[-18,68],[0,1],[-16,112],[-20,71],[-39,88],[-4,11],[0,15],[4,51],[-4,36],[-12,30],[-3,32],[7,33],[0,40],[-6,46],[-25,51],[-44,54],[-37,79],[-31,104],[-31,72],[-30,40],[-21,49],[-11,58],[-4,34],[5,9],[-19,64],[-42,120],[-24,87],[-6,55],[-27,66],[-47,76],[-25,49],[-7,35],[-73,100],[-21,62],[-17,20],[-19,-2],[-10,6],[-1,14],[-6,1],[-12,-13],[-39,-3],[-66,8],[-48,17],[-29,27],[-21,-4],[-12,-34],[-25,-21],[-38,-10],[-33,-62],[-28,-116],[-12,-74],[3,-33],[-7,-24],[-18,-15],[-19,-33],[-18,-52],[-22,-25],[-25,1],[-46,40],[-67,79],[-52,48],[-38,19],[-34,36],[-29,54],[-27,36],[-24,18],[-29,60],[-33,102],[-16,78],[0,83],[-43,181],[-23,78],[-17,36],[-33,43],[-49,50],[-67,100],[-83,150],[-58,90],[-35,30],[-30,54],[-25,78],[-25,49],[-2,2],[-3,1],[-61,1],[-61,1],[-61,0],[-61,1],[-61,1],[-61,0],[-61,1],[-61,1],[0,-65],[0,-65],[-1,-65],[0,-64],[-98,-1],[-98,0],[-98,-1],[-98,0],[-99,0],[-98,-1],[-98,0],[-98,0],[-132,85],[-132,85],[-131,85],[-132,86],[-132,85],[-132,85],[-131,85],[-132,86],[13,32],[18,87],[-32,-6],[-79,-13],[-80,-12],[-79,-12],[-80,-13],[-79,-12],[-80,-12],[-79,-13],[-80,-12]],[[17464,70583],[0,4],[-2,63],[-13,22],[-17,-14],[-7,82],[4,39],[-2,38],[-16,92],[-41,113],[-89,140],[-46,47],[-35,59],[-23,16],[-28,5],[-9,-27],[-32,18],[5,66],[-32,92],[-25,10],[-65,-6],[-87,50],[-25,30],[-9,54],[-41,47],[-53,46],[-30,-11],[-39,7],[-55,33],[-33,4],[-63,-9],[-23,7],[-22,41],[-24,21],[5,51],[-3,47],[4,36],[-11,79],[9,73],[-8,26],[-13,21],[-42,30],[-7,37],[7,52],[-11,35],[-35,32],[-32,73],[-40,39],[-17,67],[-25,42],[-8,36],[-56,131],[-59,102],[-9,58],[-2,81],[23,49],[12,43],[-1,39],[-4,29],[-20,51],[-79,30],[-64,124],[-4,96],[-25,98],[0,63],[-4,69],[19,15],[17,-6],[-1,-27],[5,-49],[20,-37],[19,-16],[18,-36],[13,-11],[13,-3],[-7,23],[-8,15],[-9,48],[-18,61],[-20,33],[-11,61],[-9,15],[-5,22],[20,27],[27,19],[36,6],[103,-9],[21,15],[19,-5],[13,2],[-28,16],[-16,-5],[-18,3],[-37,-3],[-15,7],[-16,19],[-11,2],[-34,-33],[-15,4],[-36,36],[-15,5],[-25,-20],[-4,-90],[8,-66],[-15,-7],[-17,27],[-27,17],[-22,25],[-32,46],[-16,17],[-18,-39],[-1,18],[9,45],[-3,75],[28,-60],[-8,42],[-22,47],[-17,16],[-20,83],[-47,50],[-38,80],[-77,134],[-5,117],[-28,148],[12,85],[-1,59],[-14,91],[-15,49],[-62,135],[-60,90],[-9,69],[-4,69],[13,62],[12,64],[8,17],[3,-7],[-2,-13],[8,-5],[3,29],[6,15],[-9,2],[1,9],[5,18],[18,85],[-1,107],[19,131],[-1,44],[-12,93],[-13,56],[-23,40],[10,58],[0,55],[-40,80],[-15,104],[-3,45],[4,116],[-11,50],[-27,82],[12,72],[12,43],[30,190],[7,15],[13,0],[22,32],[-10,8],[-16,-16],[14,75],[15,64],[10,24],[5,209],[9,160],[14,53],[-5,55],[6,74],[-4,74],[31,359],[-4,43],[9,59],[-9,153],[4,171],[-8,22],[-4,24],[8,3],[14,-25],[66,0],[42,24],[16,-8],[17,-31],[23,-7],[28,6],[-9,8],[-13,2],[-29,29],[-17,28],[-51,-1],[-11,18],[-58,-18],[-17,19],[-32,-13],[8,54],[-2,68],[2,66],[8,-48],[19,-52],[10,59],[6,72],[-19,29],[-32,20],[-11,68],[75,58],[-40,12],[-15,26],[-20,4],[-1,-20],[-6,-27],[-7,35],[-2,41],[-8,70],[-31,113],[-18,147],[-23,72],[-45,69],[-12,40],[-11,103],[7,77],[-9,54],[22,-3],[56,-42],[71,-34],[21,-24],[34,-19],[189,-28],[13,3],[24,17],[11,-2],[27,-40],[14,-4],[18,2],[14,7],[23,28],[3,-11],[-1,-25],[8,-36],[17,-47],[7,-29],[-34,-82],[-7,-2],[-1,28],[-4,5],[-64,-139],[-22,-66],[-2,-29],[0,-18],[9,-4],[21,7],[30,27],[1,6],[-28,-10],[-13,0],[1,31],[4,14],[18,47],[19,27],[28,30],[16,24],[11,35],[30,43],[6,11],[-2,35],[2,7],[15,-5],[6,-60],[-4,-27],[-26,-32],[-3,-12],[5,-44],[-5,-4],[-10,5],[-3,-3],[25,-48],[8,-38],[1,-33],[-7,-65],[-7,-10],[-12,3],[-17,21],[-3,-7],[-13,-50],[-5,4],[-8,60],[-4,4],[-25,-27],[-11,-26],[-8,-41],[-11,-20],[31,-4],[28,8],[23,-19],[8,-1],[21,19],[6,14],[17,62],[9,11],[13,1],[12,9],[19,34],[0,14],[-6,77],[2,43],[-4,14],[-8,14],[1,14],[6,23],[1,21],[-6,18],[3,21],[17,45],[3,20],[22,45],[-6,18],[-15,22],[-10,19],[-10,30],[-8,10],[-2,-4],[11,-50],[-3,-3],[-27,27],[-7,16],[-3,23],[2,17],[15,17],[18,6],[-2,15],[-22,46],[-15,21],[-11,10],[-15,3],[-7,7],[-2,11],[3,15],[9,4],[23,-6],[13,11],[-1,18],[-4,10],[1,66],[-9,53],[-5,9],[-5,1],[-6,-7],[-14,-2],[-10,18],[-10,34],[-18,80]],[[15892,80064],[28,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[66,0],[1,121],[1,96],[60,-11],[18,-18],[5,-8],[-1,-27],[5,-80],[10,-67],[26,-80],[0,-1],[2,-31],[8,-20],[15,-18],[58,-22],[99,-26],[57,-30],[13,-33],[27,-14],[40,7],[28,14],[23,32],[34,7],[28,-2],[29,-4],[15,-4],[45,-26],[29,-20],[41,-39],[23,-17],[11,-40],[13,-51],[18,0],[14,30],[35,5],[47,-21],[41,-60],[58,-53],[36,-27],[36,0],[47,27],[49,51],[35,9],[21,-5],[12,-40],[15,-15],[38,4],[80,-8],[63,11],[15,-23],[13,-36],[25,-11],[35,11],[63,-9],[26,-2],[51,14],[24,16],[34,26],[46,36],[79,62],[65,23],[61,-45],[48,-39],[18,-16],[49,-40],[70,-57],[79,-65],[80,-65],[69,-57],[49,-40],[19,-16],[54,-46],[54,-46],[54,-46],[53,-46],[54,-46],[54,-46],[54,-46],[54,-46],[14,-77],[13,-75],[31,-54],[29,-49],[17,2],[17,21],[11,10],[18,2],[40,18],[12,-4],[7,-9],[0,-14],[-1,-11],[-6,-23],[9,-42],[2,-47],[6,-36],[16,-46],[15,-36],[18,-7],[41,21],[26,8],[15,-3],[25,-34],[13,-20],[3,-17],[-34,-102],[54,-51],[60,-55],[73,-66],[44,-41],[58,-58],[10,-82],[8,-70],[11,-96],[11,-99],[11,-99],[11,-104],[13,-115],[11,-102],[12,-111],[17,-145],[-15,-56],[-32,-121],[-28,-110],[-3,-32],[-20,-160],[-16,-66],[-27,-38],[-28,-38],[-34,-62],[-38,-31],[-19,-18],[-10,-28],[-11,-63],[2,-96],[31,-82],[45,-46],[49,-45],[70,0],[63,60],[66,63],[59,57],[71,67],[64,61],[69,22],[96,30],[121,38],[59,43],[76,57],[87,64],[76,56],[38,31],[27,36],[7,26],[-2,15],[-7,15],[-9,11],[-9,9],[-4,12],[-1,26],[-5,14],[-5,11],[2,99],[-7,31],[-24,78],[47,35],[43,32],[35,24],[73,4],[67,-1],[94,0],[78,-1],[92,0],[53,-1],[71,1],[34,90],[31,81],[34,76],[60,91],[17,16],[10,35],[36,34],[40,31],[16,30],[7,17],[109,158],[62,73],[50,41],[39,19],[26,-2],[15,2]],[[29858,75452],[-20,-37],[18,-4],[16,11],[14,22],[34,30],[29,13],[9,3],[13,-21],[28,17],[28,9],[-121,-96],[-25,-11],[-36,-28],[-33,-21],[-24,-7],[-120,-71],[-10,-2],[-10,7],[-99,-36],[-40,-5],[-37,-12],[27,29],[1,11],[-7,9],[-14,-3],[-15,-30],[-24,-10],[-5,33],[8,26],[11,24],[24,38],[34,24],[17,21],[12,-18],[2,25],[10,14],[10,8],[24,0],[12,4],[10,8],[9,2],[27,-12],[25,4],[21,15],[22,5],[56,4],[57,11],[23,21],[47,56],[28,16],[-43,-66],[-23,-30]],[[31059,77380],[-16,-11],[-18,4],[0,-30],[-2,-11],[-19,16],[-8,10],[1,40],[17,38],[14,15],[17,-10],[13,-43],[1,-18]],[[29392,75185],[-13,-2],[13,55],[24,25],[9,-5],[0,-19],[-3,-17],[-16,-26],[-14,-11]],[[30414,75677],[-77,-28],[-12,18],[19,8],[24,43],[16,5],[25,-24],[5,-22]],[[30210,75743],[-13,-15],[-16,2],[8,22],[3,31],[8,34],[4,11],[9,9],[-3,-94]],[[30561,75613],[-21,-9],[-49,21],[40,18],[7,6],[5,27],[1,13],[15,-57],[2,-19]],[[28990,72497],[-4,-12],[-19,64],[19,-21],[4,-17],[0,-14]],[[29015,72142],[-37,-16],[-3,6],[42,32],[14,116],[2,53],[-7,95],[1,19],[6,-30],[7,-88],[-3,-67],[-12,-97],[-10,-23]],[[28949,72113],[-50,-41],[-6,3],[33,29],[23,9]],[[28749,71798],[-7,-6],[25,72],[50,91],[14,14],[-42,-78],[-40,-93]],[[27212,67081],[-10,-15],[-20,11],[-11,20],[-5,38],[17,-41],[7,-9],[22,-4]],[[27199,67138],[-1,-34],[-14,57],[-9,62],[13,-20],[11,-65]],[[27671,66325],[-55,-108],[6,27],[22,58],[7,28],[14,17],[14,31],[1,37],[20,25],[6,4],[-35,-119]],[[24502,68836],[-11,-8],[-46,50],[-3,21],[23,20],[14,-2],[22,-25],[8,-8],[3,-10],[-2,-16],[-8,-22]],[[23051,67915],[-6,-1],[14,47],[2,19],[22,59],[12,9],[5,-25],[-23,-42],[-26,-66]],[[23121,68060],[-10,-3],[12,31],[21,16],[45,60],[18,4],[10,20],[4,3],[-3,-25],[-36,-36],[-61,-70]],[[22957,67568],[-9,-33],[3,50],[22,112],[46,147],[20,25],[-53,-162],[-29,-139]],[[23600,68632],[-14,-6],[61,89],[12,29],[16,-1],[-27,-50],[-48,-61]],[[23008,66911],[-4,-26],[-23,125],[-37,282],[-2,161],[6,56],[10,-228],[41,-289],[9,-81]],[[16581,71442],[-14,-1],[-23,6],[8,13],[12,10],[4,-7],[13,-21]],[[16823,70977],[-13,-1],[-17,5],[-8,31],[13,2],[13,-4],[10,-24],[2,-9]],[[17125,70753],[-16,-6],[-18,12],[-16,56],[-17,43],[9,13],[14,-42],[35,-64],[9,-12]],[[16654,71381],[-19,-8],[-15,8],[-23,55],[50,7],[21,-24],[3,-7],[-17,-31]],[[16699,71474],[57,-30],[30,14],[6,-14],[-4,-12],[-69,-23],[-21,16],[-2,21],[-7,21],[10,7]],[[17125,71074],[14,-42],[-20,5],[-21,-3],[-6,24],[-7,32],[-4,8],[-14,3],[-1,3],[-2,15],[4,8],[45,-36],[12,-17]],[[15894,79880],[3,-13],[-11,-12],[-8,-2],[-12,20],[-6,2],[5,-30],[-2,-10],[-26,18],[-5,15],[8,16],[16,16],[6,2],[32,-22]],[[15830,79781],[7,-19],[-30,12],[-13,11],[-3,11],[-5,34],[2,12],[13,4],[25,-43],[4,-22]],[[15952,79583],[13,-76],[6,31],[38,-54],[0,-27],[-4,-9],[-8,-3],[-8,8],[-6,19],[-9,10],[-18,6],[-9,21],[-4,15],[0,42],[-5,14],[-10,2],[-9,11],[-14,29],[-2,8],[7,24],[15,41],[11,19],[7,-2],[9,-13],[10,-22],[-2,-15],[-41,-31],[-2,-7],[21,-9],[7,-7],[7,-25]],[[30176,75740],[-8,-11],[-3,28],[6,32],[5,0],[3,-17],[-3,-32]],[[29407,74700],[-32,-87],[-1,17],[41,108],[-8,-38]],[[29074,73668],[-13,-10],[43,116],[24,96],[11,34],[-10,-68],[-19,-62],[-36,-106]],[[28737,71805],[-6,-1],[-11,6],[-15,12],[-4,9],[15,-3],[21,-23]],[[27407,66042],[-9,-12],[-4,4],[0,17],[-11,39],[0,10],[27,-38],[1,-10],[-4,-10]],[[27547,66130],[-5,0],[2,9],[11,16],[4,-6],[0,-9],[-12,-10]],[[27600,66188],[-7,-3],[11,25],[3,-2],[-7,-20]],[[27487,66080],[-12,-13],[-13,10],[14,13],[43,15],[-16,-18],[-16,-7]],[[27383,69683],[-12,-140],[-5,50],[-1,48],[9,28],[9,14]],[[27342,66013],[-18,-6],[15,23],[5,34],[8,-26],[0,-17],[-10,-8]],[[27726,67556],[4,-42],[-25,98],[-32,154],[-17,120],[12,-33],[11,-66],[47,-231]],[[27282,65981],[-7,-1],[-1,9],[12,11],[9,-1],[-1,-12],[-12,-6]],[[25308,68958],[-15,-30],[1,12],[11,30],[8,11],[-5,-23]],[[25400,69248],[-3,-6],[-25,12],[-15,11],[-2,11],[41,-20],[4,-8]],[[25535,69269],[-24,-12],[-36,1],[-8,4],[15,8],[43,11],[10,-12]],[[25215,69172],[1,-27],[-13,14],[-20,1],[8,9],[7,9],[3,10],[25,33],[-7,-25],[-4,-24]],[[25325,69013],[-7,-18],[7,87],[-11,74],[12,-32],[4,-39],[-5,-72]],[[26414,68918],[-28,-21],[-30,15],[19,3],[13,-6],[35,30],[18,22],[21,9],[-48,-52]],[[15874,79034],[-3,-11],[-4,1],[-8,23],[-1,16],[7,12],[10,-34],[-1,-7]],[[16001,79144],[-1,-13],[-10,-10],[-6,2],[0,16],[-3,2],[-12,-18],[1,36],[6,39],[5,1],[7,-26],[13,-29]],[[15973,79259],[-2,-11],[-15,13],[-5,12],[1,27],[3,18],[3,4],[9,-8],[3,-4],[3,-51]],[[15883,79741],[-4,-6],[-15,8],[-9,13],[-3,16],[6,30],[7,8],[5,-2],[2,-27],[13,-28],[-2,-12]],[[30938,77301],[-11,-11],[-11,3],[0,29],[3,9],[4,5],[6,-8],[9,-27]],[[42704,18182],[1,-33],[-43,30],[-10,14],[14,19],[27,0],[7,-11],[4,-19]],[[39693,20699],[27,-28],[22,19],[22,-2],[12,-10],[12,-3],[16,-1],[27,-47],[-11,-41],[29,8],[26,-35],[12,3],[5,14],[17,16],[11,-22],[14,-41],[18,-12],[15,-44],[12,-55],[11,-8],[19,-1],[20,8],[-8,-48],[3,-42],[32,-30],[-19,-17],[-20,-24],[-41,-19],[-11,8],[-35,42],[-17,50],[-37,71],[-8,21],[-9,13],[-34,9],[-30,17],[-24,36],[-8,22],[-10,15],[-33,-1],[-21,17],[-21,23],[-94,67],[-37,-7],[-17,19],[0,33],[20,20],[-82,8],[-29,12],[20,7],[114,1],[43,6],[3,-15],[38,-29],[36,-3]],[[70136,47593],[-6,-23],[-12,-10],[-5,58],[-17,41],[7,0],[15,-21],[6,-56],[5,17],[-1,17],[3,16],[-2,18],[-9,28],[3,5],[13,-23],[2,-19],[-2,-48]],[[48418,42627],[-25,-3],[2,27],[19,29],[13,-4],[0,-33],[-9,-16]],[[46009,47249],[-9,-1],[-3,5],[-2,14],[5,22],[4,13],[7,-2],[8,-15],[8,-13],[-4,-12],[-14,-11]],[[14364,37789],[-3,-9],[-6,8],[-6,16],[-2,18],[6,10],[7,-6],[4,-18],[0,-19]],[[32499,62339],[-44,-29],[2,17],[35,40],[13,-3],[-6,-25]],[[33652,22309],[43,-33],[53,11],[22,-9],[13,-28],[-7,-26],[-17,4],[-15,-7],[3,-35],[10,-14],[56,-38],[10,-2],[-1,15],[-10,26],[-4,28],[9,24],[14,7],[64,11],[15,-11],[32,-66],[-30,-9],[-12,-28],[26,-12],[20,-19],[-11,-28],[-2,-14],[-46,-19],[-40,-13],[-19,-33],[-33,-24],[-96,-41],[11,-34],[1,-16],[-4,-44],[-133,52],[-18,-5],[36,-90],[-26,-16],[-26,10],[-24,-7],[-15,-65],[-38,42],[-32,58],[-1,33],[32,62],[-10,26],[73,83],[13,25],[23,14],[23,5],[10,11],[-1,20],[-10,35],[1,57],[58,77],[-8,49],[18,1]],[[33253,22199],[41,-11],[37,40],[25,13],[21,-9],[15,-24],[21,4],[61,25],[8,-9],[21,29],[19,-13],[14,-25],[-7,-30],[-17,-19],[-10,-26],[-13,-21],[-21,-19],[-16,-31],[-40,-73],[-57,-94],[-19,-8],[-40,-6],[-17,7],[-14,-2],[-12,-51],[-18,-38],[-9,-8],[-19,-4],[-8,-5],[-7,-14],[-50,3],[-35,24],[-41,52],[55,64],[48,-3],[39,43],[32,21],[13,22],[14,17],[0,22],[-11,10],[-14,-1],[-14,-10],[-34,-12],[-23,25],[15,10],[17,-1],[52,24],[10,10],[-16,33],[-31,21],[-26,34],[-4,13],[1,20],[-14,41],[15,2],[19,-26],[44,-36]],[[33050,22012],[20,-8],[20,3],[-11,-59],[-9,-28],[-24,2],[-23,39],[-8,20],[26,15],[9,16]],[[33767,21882],[1,-50],[-22,16],[-8,24],[12,17],[11,-1],[6,-6]],[[33302,22237],[-38,0],[-8,19],[1,47],[28,4],[29,-20],[-2,-20],[-10,-30]],[[33421,21755],[-18,-11],[-5,5],[-5,22],[-1,28],[-2,12],[12,-4],[20,-22],[-1,-30]],[[27397,62988],[9,-11],[11,7],[4,12],[42,-9],[7,-24],[-33,-1],[-14,-15],[-8,-3],[-28,4],[-4,55],[8,6],[6,-21]],[[27783,63195],[-2,-3],[-9,2],[-21,-23],[-8,1],[2,9],[4,7],[5,6],[5,2],[14,5],[7,1],[4,-6],[-1,-1]],[[27827,63197],[-13,-8],[-10,3],[22,24],[6,8],[5,4],[5,0],[7,-5],[0,-3],[-22,-23]],[[32019,70445],[-25,-20],[-7,2],[-5,7],[26,19],[21,46],[7,-3],[-17,-51]],[[32112,62479],[-7,-4],[-5,1],[-1,8],[5,23],[28,2],[-20,-30]],[[32057,62443],[-22,-2],[-6,7],[12,18],[23,2],[6,-4],[-13,-21]],[[32142,62638],[4,-19],[-3,0],[-15,13],[-13,1],[-5,4],[-2,7],[24,1],[10,-7]],[[30094,64380],[-1,-8],[-16,23],[-30,0],[-5,30],[12,5],[38,-11],[9,-26],[-7,-13]],[[30033,64424],[-5,-7],[-16,20],[-2,16],[-6,1],[-10,14],[3,19],[22,1],[9,-52],[5,-12]],[[29907,64430],[32,-32],[19,5],[2,-7],[-11,-7],[-2,-6],[-31,-9],[-9,2],[-2,22],[2,32]],[[32736,61486],[-1,-34],[-19,10],[-1,30],[9,31],[5,3],[7,-40]],[[49439,80202],[2,-29],[-12,-7],[-10,10],[-21,0],[-20,-6],[5,52],[38,-7],[18,-13]],[[49302,80353],[-10,-38],[-26,13],[-2,10],[29,22],[6,0],[3,-7]],[[48774,83055],[-56,-73],[-23,13],[-19,-6],[-6,2],[11,26],[13,61],[24,24],[29,64],[23,17],[9,-2],[5,-6],[11,-71],[-16,-26],[-5,-23]],[[49258,81579],[-20,-24],[-66,-24],[-28,-25],[-50,-56],[-9,-5],[-75,14],[-56,72],[-35,30],[-15,4],[-15,-9],[-33,-9],[-33,1],[17,34],[23,19],[-51,13],[-15,10],[-16,23],[-40,4],[-19,-6],[-33,-31],[-51,-33],[-62,46],[-12,20],[0,39],[-9,31],[-17,10],[22,40],[26,27],[58,27],[89,62],[49,27],[46,46],[19,28],[14,39],[13,47],[20,39],[-19,9],[-9,29],[3,29],[8,26],[-7,33],[-14,34],[1,26],[3,29],[-35,-2],[-36,-9],[-32,-20],[-31,-27],[-27,-5],[0,22],[12,27],[31,38],[34,32],[12,25],[9,28],[17,23],[44,43],[83,48],[13,3],[33,-6],[32,7],[28,18],[29,4],[63,-51],[-19,78],[28,18],[41,-70],[15,-7],[32,10],[-13,12],[-14,1],[-19,10],[-15,23],[-27,71],[2,42],[17,44],[20,41],[-16,8],[-14,15],[-3,41],[5,35],[35,32],[10,48],[5,53],[-6,24],[-35,-4],[-17,-10],[-15,-16],[-16,1],[-43,59],[-25,44],[-44,93],[-6,56],[35,120],[55,77],[64,27],[-12,5],[-98,1],[-33,-10],[-30,-31],[-17,-10],[-17,-3],[-17,-16],[-15,-22],[-17,-14],[-33,4],[-16,-5],[-11,13],[-9,21],[-13,5],[-14,-6],[-29,-28],[-30,-17],[-36,18],[-48,33],[-9,-12],[-11,-31],[-6,-47],[-33,41],[-29,56],[-10,34],[0,39],[15,16],[17,-14],[25,93],[50,121],[18,35],[12,46],[-2,31],[-11,25],[-46,58],[0,48],[5,53],[13,32],[5,6],[62,-1],[-24,17],[-48,48],[1,17],[11,45],[-5,-5],[-10,-20],[-20,-50],[-12,-12],[-34,-12],[-6,-24],[-6,-7],[-17,-2],[-5,-23],[-4,-2],[-5,25],[0,41],[7,38],[13,29],[49,67],[-24,-21],[-55,-62],[-28,-40],[-7,-14],[-3,-12],[0,-13],[13,-72],[-4,-33],[-47,-219],[-9,-22],[-8,-11],[-8,-3],[-23,4],[-11,17],[0,18],[5,28],[19,104],[9,29],[13,27],[27,47],[0,3],[-19,-9],[-8,3],[-5,9],[3,139],[15,46],[6,67],[13,57],[15,42],[12,53],[17,24],[5,36],[19,39],[15,41],[-8,-4],[-96,-106],[-25,-20],[-33,5],[-26,12],[-20,26],[-9,48],[-24,1],[-21,9],[0,6],[27,27],[44,9],[41,42],[-37,29],[3,9],[32,24],[40,82],[9,75],[-20,35],[-7,23],[-38,26],[-7,33],[5,18],[12,18],[19,14],[30,14],[-27,14],[-10,17],[-8,24],[0,15],[14,63],[8,26],[16,33],[72,-2],[8,15],[8,1],[37,-14],[-6,15],[-60,79],[-5,15],[17,42],[1,19],[-2,21],[5,15],[19,8],[58,-1],[14,7],[-6,21],[-14,27],[-2,22],[3,20],[1,41],[2,17],[14,27],[11,8],[15,5],[32,-9],[12,-11],[14,-26],[10,3],[40,27],[12,4],[16,-32],[68,26],[91,11],[55,17],[58,6],[54,19],[57,-9],[2,-11],[-3,-15],[-14,-42],[2,-47],[-3,-15],[-7,-17],[-21,-33],[-55,-47],[-101,-108],[-60,-54],[-8,-26],[-4,-36],[35,-7],[14,-12],[-8,-18],[-53,-63],[-16,-58],[41,2],[33,11],[67,36],[62,27],[30,1],[59,-21],[13,-1],[25,10],[25,1],[170,-6],[47,12],[32,-15],[26,-37],[25,-68],[-1,-11],[-15,-31],[-28,-39],[-24,-54],[-7,-29],[-4,-32],[-8,-29],[-47,-138],[-47,-76],[-20,-55],[-26,-43],[-24,-27],[-26,-18],[-76,-20],[-21,-13],[-25,-24],[-27,-12],[31,2],[31,13],[56,5],[65,-46],[-6,-37],[-26,-30],[-59,-5],[-55,-65],[-25,-20],[-26,-10],[-33,3],[-60,17],[-26,18],[24,-29],[26,-16],[156,-37],[9,4],[49,39],[66,0],[126,-71],[36,-55],[52,-78],[28,-31],[21,-28],[12,-41],[25,-138],[27,-134],[37,-146],[16,-40],[22,-28],[110,-66],[24,-21],[43,-63],[41,-67],[38,-51],[41,-41],[-20,-22],[-14,-34],[11,-46],[16,-44],[33,-71],[30,-77],[-11,12],[-11,6],[-16,-1],[-15,3],[-28,24],[-27,30],[-53,-12],[-29,5],[-26,0],[49,-17],[53,-2],[117,-129],[40,-76],[23,-101],[-16,-46],[-25,-29],[-23,-34],[-22,-38],[65,-56],[14,2],[15,8],[13,19],[24,46],[12,16],[40,6],[34,-3],[34,-10],[30,3],[60,-20],[30,-18],[77,-80],[16,-44],[8,-57],[1,-63],[-13,-58],[-15,-52],[-9,-67],[-6,-25],[-9,-18],[-41,-54],[-27,-21],[-11,9],[-12,-1],[-1,-13],[12,-27],[1,-33],[-24,-24],[-25,-10],[-40,13],[-57,-45],[41,-23],[8,-25],[-10,-43],[-25,-20],[-29,-8],[-29,-2],[-24,-11],[-23,-20],[29,11],[20,-10],[13,-36],[11,-11],[57,-15],[34,0],[68,9],[32,-1],[12,-6],[0,-30],[-5,-75],[-9,-15],[-89,-62],[-19,-44],[-5,-26],[-52,4],[-24,-27],[-43,-19],[-32,-20],[-32,-25],[-27,-7],[-113,30],[-69,-3],[-93,-26],[-24,5],[-35,24],[-37,17],[-42,7],[-37,23],[23,-44],[-51,-42],[-23,-8],[-24,1],[-50,-12],[-46,6],[7,-30],[12,-26],[-9,-11],[-11,-3],[-87,20],[-13,-4],[-10,-18],[-32,9],[-31,31],[-33,21],[-34,10],[-28,-4],[-112,-48],[-23,-49],[-11,-69],[-16,-61],[-27,-47],[-31,-7],[-30,33],[-56,36],[-20,25],[-6,1],[-6,-9],[-22,-11],[-23,0],[-35,-10],[-62,-29],[-25,-20],[-53,-55],[-11,-15],[-19,-55],[-30,-10],[-27,35],[-31,13],[-32,-13],[-20,-18],[-9,15],[-1,31],[24,38],[64,28],[55,74],[28,45],[10,25],[14,16],[17,6],[9,28],[77,112],[7,25],[4,46],[6,44],[63,29],[30,93],[8,7],[88,17],[65,-1],[65,-18],[33,-2],[33,7],[26,25],[45,90],[25,40],[29,36],[27,41],[44,76],[-30,-26],[-36,-42]],[[48834,82558],[11,-11],[30,2],[-10,-24],[-32,-27],[-22,-26],[-26,-22],[-13,25],[-15,-1],[-22,49],[-4,72],[29,19],[41,-1],[33,-55]],[[49291,85962],[-31,-1],[16,34],[19,9],[36,-4],[-6,-15],[-34,-23]],[[49710,86701],[-7,-7],[-27,59],[20,67],[24,-2],[4,-18],[-2,-16],[-13,-2],[-1,-5],[4,-31],[0,-36],[-2,-9]],[[49636,86714],[6,-40],[14,10],[22,-39],[11,0],[18,16],[-4,-36],[-18,-101],[-6,-17],[-3,-31],[-4,-6],[-6,-61],[-12,-21],[-11,-48],[-4,-5],[-16,19],[16,74],[6,43],[-4,22],[-9,20],[-24,1],[-20,-9],[-4,12],[-1,16],[-5,5],[-27,-1],[-7,4],[-6,15],[-1,12],[25,9],[22,-4],[34,24],[-21,78],[-28,7],[-6,8],[5,13],[15,7],[24,40],[14,6],[17,-1],[-2,-41]],[[49784,86873],[0,-7],[-14,-49],[0,-18],[-23,2],[-4,5],[-4,28],[3,30],[3,8],[7,3],[7,-6],[12,15],[6,0],[7,-11]],[[49120,85710],[-16,-7],[-15,0],[-25,33],[-9,25],[2,16],[10,5],[24,-8],[12,-28],[1,-18],[3,-7],[15,-7],[-2,-4]],[[49186,85680],[-3,-2],[-10,11],[-17,38],[27,7],[12,-5],[-5,-16],[-4,-33]],[[49150,85846],[-3,-14],[21,0],[30,-12],[19,-2],[15,-15],[-8,-28],[-10,-8],[-10,-1],[-36,28],[-48,-12],[-10,4],[-6,7],[-2,10],[0,20],[-3,6],[-17,-19],[-8,2],[-4,9],[-2,19],[2,26],[10,38],[17,8],[26,-5],[29,-21],[9,-13],[0,-11],[-11,-16]],[[49241,85936],[-24,-14],[-10,12],[-2,37],[-29,16],[-14,10],[-10,18],[2,6],[19,8],[32,-34],[13,-28],[23,-8],[3,-4],[-3,-19]],[[48164,84438],[-16,-4],[-1,9],[28,39],[17,6],[6,-4],[-12,-22],[-22,-24]],[[48581,83783],[-35,0],[-12,5],[-15,14],[-17,79],[6,28],[7,13],[7,11],[19,5],[18,-15],[7,-14],[15,-54],[3,-46],[-3,-26]],[[48395,84299],[-111,-32],[-38,3],[-4,16],[8,10],[31,10],[13,77],[-47,36],[-3,10],[4,17],[5,7],[29,18],[12,4],[10,-2],[21,-21],[23,-43],[30,-7],[21,-19],[-4,-84]],[[48297,84061],[10,-74],[10,-46],[0,-16],[-9,-22],[-45,-29],[-15,0],[0,7],[10,30],[-9,33],[4,26],[-4,4],[-9,-3],[-33,-41],[-11,-4],[-1,8],[8,34],[1,22],[5,14],[9,13],[11,10],[8,1],[9,-10],[27,28],[24,15]],[[48341,83994],[-6,-6],[-14,1],[-5,10],[-3,14],[0,26],[8,19],[36,28],[-16,10],[-1,7],[10,24],[39,36],[10,7],[10,-1],[-20,-65],[-48,-110]],[[48278,85462],[-36,-100],[-13,-3],[-13,-25],[-37,-28],[33,0],[9,-10],[0,-19],[-6,-12],[-43,-46],[-29,-18],[-31,-48],[-16,0],[-16,-31],[-13,-13],[-7,0],[-9,6],[-19,30],[35,30],[4,16],[24,18],[-2,5],[-39,24],[-15,17],[2,8],[18,19],[-9,2],[-6,10],[-10,4],[-4,10],[-1,24],[2,26],[12,11],[4,12],[5,3],[17,-6],[18,-20],[20,8],[24,-4],[1,5],[-18,49],[3,10],[10,12],[55,35],[68,60],[17,9],[5,-8],[7,-31],[-1,-41]],[[48255,84656],[-8,-7],[-10,1],[-11,10],[-13,27],[30,19],[13,-11],[4,-13],[0,-14],[-5,-12]],[[48293,84968],[-1,-26],[-5,-30],[7,-32],[1,-22],[12,-8],[7,-10],[52,-12],[49,4],[9,-10],[1,-15],[-8,-16],[-27,-30],[-33,-48],[-10,-10],[-11,-1],[-7,5],[-6,86],[-35,-11],[-29,1],[-16,10],[-11,20],[-22,52],[-65,21],[-18,28],[-6,18],[3,9],[13,21],[17,-7],[11,4],[6,10],[0,8],[-9,18],[0,6],[66,23],[5,37],[15,3],[16,-12],[23,-38],[6,-46]],[[47998,85070],[31,-32],[-25,-54],[-38,0],[-54,39],[0,8],[4,12],[8,10],[9,2],[13,-7],[19,11],[15,-4],[18,15]],[[47986,84743],[-12,-3],[-15,3],[-10,9],[-9,35],[-2,22],[4,40],[-1,47],[32,2],[8,-7],[5,-142],[0,-6]],[[47939,84657],[-24,-8],[-9,4],[-2,8],[6,20],[19,7],[13,-11],[2,-10],[-5,-10]],[[48272,83e3],[-23,3],[-17,-10],[-11,-9],[-10,1],[-30,-3],[-29,0],[-4,15],[5,46],[-6,12],[-27,6],[-10,11],[-16,31],[-3,15],[-2,20],[-16,26],[-20,19],[-12,1],[-23,-31],[-19,-31],[7,-15],[6,-20],[-11,-15],[-31,-34],[-5,-13],[-9,-7],[-15,10],[-37,-2],[-17,5],[-20,25],[-49,17],[-9,39],[-9,7],[-56,68],[-7,23],[7,13],[21,21],[70,34],[11,13],[2,12],[-21,14],[-18,15],[-6,10],[-1,9],[11,11],[21,1],[16,-5],[13,10],[24,10],[15,13],[14,33],[14,30],[1,16],[13,57],[6,14],[44,37]],[[47994,83578],[11,-21],[22,-5],[20,19],[23,59],[16,3],[18,-4],[35,7],[62,27],[28,1],[39,-14],[29,0],[26,-42],[14,-66],[32,-66],[43,-57],[1,-34],[-15,-19],[-32,-23],[1,-25],[20,13],[18,5],[44,-5],[15,-26],[10,-37],[6,-31],[-4,-34],[-11,11],[-12,30],[-13,14],[-16,7],[7,-41],[-3,-56],[7,-5],[21,-1],[-14,-56],[-28,-16],[-33,-6],[-8,-20],[-6,-26],[-17,-38],[-22,-22],[-28,4],[-28,18]],[[49704,81042],[-24,-20],[-7,-23],[-6,-9],[-15,-6],[-15,-1],[-58,47],[-14,-2],[13,22],[37,17],[20,23],[47,-22],[22,-26]],[[65638,66618],[18,-46],[2,-318],[5,-22]],[[65663,66232],[-10,-4],[-11,-24],[-13,-37],[-17,-19],[-14,-22],[-14,-27],[-11,-6],[-16,34],[-10,35],[2,8],[8,2],[3,18],[-5,27],[-10,9],[-13,1],[-13,-11],[-13,-24],[-8,-24],[-1,-50],[4,-57],[-1,-27],[-7,-34],[-2,-50],[5,-39],[4,-23],[1,-19],[-13,-62],[11,-11],[36,-5],[11,-41],[7,-29],[-2,-17],[-26,-13],[-31,-14],[-23,4],[-42,-18],[-22,-29],[7,-19],[7,-13],[4,-39],[-7,-54],[-11,-53],[-15,-66],[-17,-75],[-23,-114],[-19,-90],[-2,-64],[0,-42],[-2,-84]],[[65329,64921],[-19,-46],[-4,-2],[-22,6],[-7,2],[-21,5],[-33,8],[-42,11],[-51,13],[-56,14],[-59,15],[-62,16],[-62,16],[-60,15],[-56,14],[-50,13],[-43,10],[-32,9],[-21,5],[-8,2],[-23,6],[-13,31],[-15,38],[-15,37],[-15,38],[-16,38],[-15,38],[-15,37],[-16,38],[-15,38],[-15,38],[-15,37],[-16,38],[-15,38],[-15,37],[-16,38],[-15,38],[-15,38],[-10,25],[-6,28],[-1,75],[0,16]],[[64324,65832],[10,30],[5,-21],[12,-29],[19,7],[9,-5],[7,-103],[14,-37],[18,-15],[59,-8],[36,14],[73,67],[38,25],[105,-5],[84,-28],[131,-16],[26,4],[70,54],[44,48],[26,14],[17,46],[11,60],[10,39],[13,19],[12,33],[9,55],[25,54],[97,133],[57,113],[5,36],[32,55],[24,59],[117,171],[23,70],[14,79],[1,6]],[[65577,66856],[10,3],[14,-12],[2,-59],[-5,-56],[-1,-59],[-2,-32],[11,-26],[18,-11],[8,1],[6,13]],[[65633,66379],[2,25],[-3,13],[-12,2],[-5,-22],[-2,-31],[9,-2],[11,15]],[[64814,65816],[-21,-3],[-18,22],[39,29],[11,13],[11,27],[9,-23],[-10,-36],[-7,-16],[-14,-13]],[[64615,65834],[-5,-4],[-4,31],[0,9],[13,15],[7,-26],[-11,-25]],[[64979,65770],[0,-20],[-28,6],[-7,-10],[-24,5],[-22,14],[15,24],[40,28],[17,-26],[9,-21]],[[65129,65923],[-3,-12],[-8,1],[-19,11],[-7,16],[13,19],[5,1],[8,-20],[11,-16]],[[60614,78969],[-10,-6],[-97,9],[-18,-3],[-61,-10],[-56,-91],[-34,1],[-48,-24],[-32,-29],[-38,-64],[-29,28],[-36,0],[-36,-18],[-42,-42],[-24,-8],[-47,12],[-55,-24],[-118,-140],[-40,-102],[-15,-20],[-20,-25],[-21,-13],[-11,1],[56,73],[17,27],[3,20],[1,33],[-17,40],[-47,-100],[-26,-14],[-33,-30],[-2,-67],[4,-50],[14,-63],[26,-83]],[[59722,78187],[-15,-3],[-41,36],[-2,58],[-29,49],[-46,0],[-20,-6],[-27,55],[-36,23],[-27,-7],[-28,10],[-61,58],[-41,7],[-1,-42],[-17,-29]],[[59331,78396],[-26,-10],[-20,-13],[-46,40],[-17,29],[-72,-30],[-40,4],[-89,-28],[-41,27],[-82,76],[-30,15],[-27,-3],[-14,24],[18,13],[20,1],[21,9],[6,13],[-1,25],[-43,19],[-39,5],[-25,22],[-19,26],[44,0],[45,-19],[71,-7],[64,-20],[16,25],[37,42],[7,14],[-62,-29],[-63,18],[-23,26],[-20,39],[-8,43],[5,41],[-6,73],[-21,65],[-8,36],[-22,32],[22,-73],[8,-48],[13,-44],[-3,-118],[-8,-41],[-26,-11],[-34,6],[-35,13],[9,65],[-18,-22],[-27,-64],[-23,-9],[-50,7],[-95,-42],[-7,-45],[-14,-62],[-14,-36],[-4,-21],[-40,-93],[-5,-9],[-76,-128],[-10,-10],[-49,-30],[-30,-26],[-22,-12],[-38,13],[-15,-19],[-8,-23],[0,-47],[19,-34],[16,-114],[-6,-48]],[[58251,77914],[-15,31],[-23,33],[-46,28],[-50,-10],[-54,-47],[-37,-18],[-20,12],[-12,0],[-4,-14],[1,-11],[6,-9],[-1,-6],[-7,-4],[-86,34],[-38,31],[-29,60]],[[57836,78024],[15,19],[12,8],[45,5],[8,6],[1,14],[3,18],[-1,26],[-5,28],[19,40],[30,34],[17,33],[2,49],[31,24],[27,41],[7,45],[10,28],[-18,64],[-3,43],[-1,36],[8,19],[26,23],[27,17],[11,-2],[4,-11],[1,-72],[5,-2],[9,9],[14,43],[9,-12],[15,-5],[11,11],[7,-1],[9,-11],[18,-16],[17,-5],[14,10],[11,19],[13,-7],[24,-50],[11,6],[55,10],[9,14],[6,12],[-57,67],[3,49],[2,57],[-7,34],[-11,27],[-44,31],[-34,32],[-7,15],[-1,18],[-2,30],[-13,25],[-1,21],[8,33],[3,35],[-3,14],[-8,12],[-15,1],[-21,20],[-13,28],[-37,39],[-12,7],[-7,19],[-3,24],[8,29],[10,45],[7,42],[0,25],[-5,62],[-19,47],[-9,6],[-16,-13],[-17,-11],[-14,10],[-16,26],[-26,71],[-48,15],[-19,3],[-19,-34],[-6,10],[-5,22],[-10,9],[-13,-10],[-4,9],[6,30],[-16,15],[-37,-1],[-19,11],[-3,23],[-11,14],[-21,7],[-20,19],[-20,29],[-29,19],[-39,9],[-3,3],[-4,5],[-25,-20],[-15,-16],[-19,10],[-30,-36],[-61,-2],[-30,3],[-15,8],[-57,-53],[-6,-20]],[[57394,79642],[-13,-7],[-36,-10],[-38,-15],[-8,-52],[-12,-29],[-20,-41],[-71,-14],[-61,-21],[-62,-12],[-82,-51],[-27,-44],[-26,-13],[-24,-3],[-15,25],[-52,66],[-20,32],[-26,9],[-29,-5],[-28,-16],[-29,-3],[-32,23],[-4,-3],[-12,-3],[-82,27],[-7,5],[-4,1],[-11,2],[-61,-3],[-57,54],[-18,2],[-13,-22],[-10,-25],[-40,-24],[-10,-10]],[[56354,79462],[-6,7],[-2,22],[3,18],[-6,18],[-15,20],[-4,8],[-19,-1],[-5,-2],[-2,0],[-26,18],[-17,41],[-27,22],[-20,7],[-9,17],[-6,24],[-7,18],[-1,1],[-4,27],[-6,3],[-1,1],[-27,-5]],[[56147,79726],[3,94],[43,67],[10,35],[16,74],[12,34],[14,29],[11,27],[4,24]],[[56260,80110],[12,3],[33,-22],[30,-11],[9,11],[3,14],[-1,10],[-24,32],[-15,20],[-1,12],[5,28],[3,31],[-3,34],[-17,75],[-3,32],[16,39],[51,92],[17,34],[23,42],[64,100],[40,59],[27,32],[40,56],[17,29],[73,19],[8,27],[14,29],[10,13],[1,50],[-13,61],[-11,21],[-8,15],[5,14],[8,4],[10,2],[12,14],[-2,16],[-31,39],[-13,30],[-21,77],[-42,80],[-13,26],[-2,25],[6,24],[-6,31],[-15,40]],[[56556,81519],[3,4],[-2,49],[11,11],[17,7],[23,-3],[20,-7],[25,-23],[7,4],[41,42],[43,64],[12,36],[11,17],[37,9],[32,4],[20,-1],[51,6],[30,7],[25,11],[56,5],[87,-8],[57,0],[39,-6],[95,-34],[35,-6],[17,-18],[31,-7],[57,-18],[50,-9],[34,4],[19,-5],[35,-80],[8,-9],[14,-2],[29,7],[41,-3],[25,-17],[-4,-47],[7,-7],[11,2],[14,27],[11,28],[8,9],[42,-19],[19,3],[18,21],[11,4],[30,-15],[37,-11],[30,-1],[19,-11],[13,-50],[12,-10],[11,-3],[18,44],[15,18],[22,12],[14,6],[10,15],[13,16],[11,1],[10,-6],[10,-21],[16,-48],[19,-49],[13,-17],[34,15],[24,15],[42,3],[56,10],[43,14],[27,-2],[17,-16],[25,-29],[6,-43],[33,-30],[26,-5],[9,31],[15,21],[-5,30],[-3,37],[-11,35],[-8,37],[14,53],[15,47],[8,25],[25,47],[25,33],[37,54],[28,18],[24,-8],[14,-8],[36,32],[63,2],[53,-4]],[[58823,81855],[5,-1],[26,-17],[27,-14],[19,-1],[22,4],[27,18],[18,18],[22,91],[8,13],[12,7],[20,1],[39,-17],[44,-15],[26,2],[69,49],[39,7],[46,-11],[44,-1],[34,7],[24,-17],[28,-37],[26,-55],[27,-101],[79,-115],[2,-22],[-7,-15],[-39,-14],[-33,-7],[-1,-20],[9,-21],[15,-32],[2,-40],[-1,-37],[7,-32],[12,-14],[2,-16],[-15,-20],[-4,-12],[6,-7],[71,-4],[35,-20],[27,-17],[13,-2],[30,11],[34,8],[20,1],[8,-13],[7,-35],[12,-34],[11,-10],[19,1],[12,-1],[7,-13],[-8,-20],[2,-21],[9,-27],[10,-60],[10,-18],[6,-23],[0,-27],[-8,-23],[-6,-18],[6,-41],[21,-46],[16,-11],[13,-41],[23,-13],[34,34],[26,18],[33,-10],[30,-6],[20,-24],[15,-32],[17,-18],[18,9],[36,-9],[17,-26],[16,-15],[22,21],[17,27],[64,27],[40,7],[11,5],[23,20],[24,13],[23,-4],[21,-40],[23,-28],[6,-45],[28,-61],[68,-83],[27,-26],[18,5],[10,7],[4,8],[4,41],[9,15],[14,1],[53,-51],[28,-6],[27,-1],[36,-39],[39,-35],[30,-3],[25,13],[16,8],[11,-13],[9,-29],[16,-23],[18,-7],[26,-1],[46,-45],[43,-45],[26,-3],[23,14],[20,3],[14,-11],[4,-20],[-10,-26],[0,-38],[19,-36],[0,-36],[-5,-32],[-11,-29],[-26,-41],[-24,-38],[-36,-16],[-21,-16],[6,-28],[13,-26],[31,-21],[34,-15],[5,-17],[-6,-9],[-22,-7],[-31,8],[-10,-15],[-15,-25],[-9,-44],[-7,-41],[33,-11],[20,-17],[6,-34],[7,-37],[2,-34],[-11,-16],[-1,-17],[5,-9],[15,-3],[11,-8],[1,-18],[-21,-40],[-20,-76],[-11,-41],[1,-44],[-12,-25],[-21,-2],[-75,-4],[-64,2],[-28,6],[-44,4],[-22,-11],[-28,-70],[-22,-28],[-36,-25],[-40,-7],[-22,-30],[-8,-45],[-1,-41],[-3,-20],[-9,-18],[-3,-13],[2,-14],[9,-5],[11,-6],[0,-10],[-4,-13],[-13,-14],[-5,-22],[1,-23],[2,-25]],[[58892,78458],[38,-29],[-39,8],[-86,27],[-38,25],[-10,28],[-5,38],[21,-40],[15,-18],[104,-39]],[[59417,51265],[-30,0],[-50,0],[-49,0],[-49,0],[-50,0],[-49,0],[-50,0],[-49,0],[-49,0],[-50,0],[-49,0],[-50,0],[-49,0],[-49,0],[-50,0],[-49,0],[-49,0],[-30,0],[-5,2],[-4,3],[-19,-8],[-19,-25],[-21,-11],[-22,5],[-3,-3]],[[58474,51228],[-11,1],[-16,1],[-14,-6],[-11,-23],[-12,-37],[-20,-44],[-16,-38],[-13,-28],[-31,-45],[-17,-13],[-8,2],[-5,8],[-10,58],[-6,9],[-60,-29],[-9,-1]],[[58215,51043],[1,18],[-4,136],[-1,83],[8,52],[4,60],[1,52],[11,90],[-4,54],[14,189],[4,31],[5,91],[9,28],[8,11],[10,56],[20,90],[14,46],[-3,101],[2,68],[3,16],[29,25],[38,63],[15,75],[23,47],[43,31],[1,0],[129,256],[60,138],[26,70],[1,26],[5,33],[-11,26],[-12,24],[-4,21],[-11,11],[-16,0],[-10,15],[-11,31],[-12,20],[-37,-2],[-28,32],[0,43],[12,85],[21,98],[1,26],[-3,23],[-5,20],[-10,20],[-9,23],[7,70],[14,69],[11,34],[11,38],[-4,32],[-15,15]],[[58566,53853],[8,31],[17,52],[33,52],[29,35],[19,0],[38,-27],[34,-33],[19,-2],[22,14],[47,58],[11,-18],[14,-36],[15,-58],[30,-27],[14,-18],[10,-6],[6,5],[11,46],[13,25],[26,32],[55,25],[39,7],[17,6],[28,15],[44,47],[44,-61],[47,-12],[46,1],[14,18],[8,14],[48,100],[65,136]],[[59437,54274],[44,-191],[14,-11],[-2,-17],[-3,-16],[28,-46],[35,-24],[12,-23],[2,-26],[-12,-112],[2,-31],[11,-112],[21,-25],[19,-113],[37,-47],[5,-14],[9,-55],[11,-59],[9,-14],[5,-4],[11,-63],[-6,-36],[9,-108],[14,-96],[3,-116],[1,-51],[-1,-31],[-3,-44],[-7,-25],[-12,-25],[-13,-39],[-11,-41],[-7,-21],[5,-62],[-1,-16],[-3,-8],[-17,-10],[-22,-17],[-13,-16],[-18,-32],[-15,-34],[-20,-101],[-33,-78],[-5,-26],[-31,-47],[-14,-57],[-9,-71],[-12,-51],[-26,-69],[-6,-110],[1,-220],[-7,-249],[1,-99]],[[64752,74195],[-3,-27],[-15,81],[-7,89],[9,26],[11,-2],[-10,-32],[15,-135]],[[68478,73357],[-14,-2],[-34,13],[-67,27],[-58,54],[-38,35],[-6,-5],[-16,-24],[-12,-30],[-9,-57],[-15,-67],[-70,-3],[-59,-5],[-39,-26],[-37,-35],[-10,-42],[-8,-54],[-22,-124],[-20,-113],[-10,-73],[-15,-50],[-42,-66],[-49,-44],[-25,-21],[-12,-26],[-2,-25],[-9,-7],[-20,4],[-21,-4],[-46,-26],[-50,-31],[-60,-32],[-34,0],[-14,-7],[-6,-16],[6,-29],[6,-23],[5,-28],[-14,-24],[-9,-40],[-8,-70],[-21,-21],[-34,-35],[-38,-45],[-9,-9],[-22,-13],[-21,4],[-20,7],[-21,-12],[-22,-35],[-10,11],[-5,35],[-11,23],[-35,52],[-29,36],[-13,3],[-27,-10],[-33,-7],[-28,8],[-21,15],[-34,50],[-12,28],[-9,20],[-23,-5]],[[67017,72361],[-7,23],[-1,26],[7,33],[-2,61],[-13,43],[-15,20],[2,13],[7,30],[8,27],[0,53],[-11,57],[-4,82],[3,81],[-14,40],[-114,0],[-102,-3],[-6,9],[-39,102],[-33,77],[-31,45],[-73,56],[-35,23],[-29,43],[-25,46],[-6,64],[-5,21],[-7,17],[-8,8],[-9,-2],[-84,74],[-34,20],[-32,-16],[-14,-3],[-28,21],[-32,-28],[-13,-2],[-19,7],[-16,10],[-42,68],[-36,27],[-26,18],[-49,25],[-53,14],[-27,11],[-19,15],[-5,9],[0,25],[-1,32],[-7,24],[-13,28],[-19,22],[-31,-4],[-48,2],[-37,21],[-29,4],[-35,-4],[-29,0],[-20,-16],[-12,-18],[-8,-55],[-7,-9],[-12,-4],[-16,3],[-33,0],[-58,10],[-73,2],[-55,-28],[-43,-40],[-42,-45],[-49,-72],[-14,-32],[-29,-127],[-12,-18],[-17,-15],[-17,-2],[-33,-19],[-44,-31],[-30,-13],[-77,7]],[[64976,73354],[-5,40],[-14,148],[-7,148],[1,69],[8,138],[-1,69],[-3,63],[3,61],[6,69],[4,71],[-5,49],[-15,39],[-25,49],[-4,29],[-2,33],[-24,3],[-22,34],[-17,18],[-39,20],[-19,1],[-18,-14],[-13,-30],[-9,47],[0,49],[31,102],[19,-30],[24,-12],[30,-2],[29,8],[-6,35],[-13,20],[-17,15],[-6,46],[2,48],[8,45],[-9,18],[-14,11],[-32,-1],[-42,12],[-42,5],[-10,-53],[23,-70],[-19,34],[-19,46],[-26,81],[-16,96],[-3,103],[14,85],[18,80],[11,102],[15,101],[15,-45],[17,-40],[24,-38],[13,-9],[39,-15],[25,6],[27,22],[26,-7],[22,-42],[20,-46],[29,-10],[61,33],[29,8],[25,-15],[13,-3],[13,2],[-11,42],[-5,40],[15,21],[48,-23],[31,16],[8,8],[7,10],[3,35],[-1,36],[-4,33],[-9,29],[-22,42],[-86,98],[-28,39],[-24,50],[-16,72],[-12,74],[-11,55],[-30,129],[-12,15],[-14,7],[-36,4],[-36,-10],[-58,-22],[-34,7],[-15,-13],[-39,-55],[-18,-46],[-25,-106],[19,-34],[0,-22],[-15,-157],[9,-76],[-3,-6],[-7,18],[-22,78],[-38,94],[-32,145]],[[64581,75910],[56,94],[49,67],[39,40],[12,10],[54,34],[70,30],[51,22],[67,19],[22,4],[32,-1],[26,-18],[16,-14],[56,-57],[57,-59],[49,-65],[13,-26],[8,-32],[6,-31],[41,-99],[17,-45],[24,-59],[20,-29],[19,-35],[13,-29],[14,-14],[17,-6],[37,10],[44,18],[27,8],[12,-1]],[[57213,74963],[-64,-18],[-19,17],[20,35],[37,22],[12,2],[16,-34],[-2,-24]],[[61530,75758],[18,-11],[35,-15],[22,-18],[12,-5],[28,37],[43,-1],[37,-5],[19,-6],[23,-12],[29,-9],[11,18],[17,51],[6,7],[5,5],[21,4],[20,-4],[9,-9],[9,-41],[24,-15],[42,-66],[25,-26],[6,-11],[-8,-13],[3,-17],[15,-21],[20,-8],[23,3],[12,-8],[8,-12],[2,-17],[0,-11]],[[62066,75522],[4,-25],[18,-34],[20,-21],[11,-23],[18,-77],[8,-43],[-3,-42],[-13,-42],[-27,-53],[7,-22],[6,-29],[-2,-22],[19,-67],[9,-42],[-7,-10],[-5,-13],[35,-32],[41,-28],[18,-5],[48,13],[31,2],[31,-25],[44,-63],[48,-81],[10,-25]],[[62435,74713],[4,-11],[10,-19]],[[62449,74683],[-10,0],[-16,18],[-38,50],[-20,-22],[-17,-37],[-18,-141],[-15,-15],[-27,1],[-32,4],[-22,-7],[-6,-9],[3,-15],[7,-23],[4,-29],[2,-24],[11,-22],[16,-21],[1,-21],[-3,-30],[-3,-22],[-4,-13],[7,-35],[17,-41],[11,-15],[-4,-78],[6,-35],[5,-48],[-2,-79],[3,-19],[5,-7],[16,-3],[15,-7],[6,-13],[-1,-10],[-19,-36],[-2,-26],[-6,-37],[-6,-21],[-17,-41],[-11,-41],[-5,-34],[4,-16],[31,-5],[17,-24],[45,-49],[8,-20],[-12,-30],[0,-12],[6,-16],[3,-28],[-1,-31],[0,-41],[8,-7],[31,-38],[22,-39],[1,-12],[-11,-30],[3,-35],[-1,-8]],[[62434,73238],[-9,13],[-17,5],[-18,1],[-11,-10],[-20,-27],[-26,-30],[-21,-28],[-12,-19],[-10,3],[-8,17],[-4,23],[1,87],[-4,27],[-10,19],[-12,11],[-13,6],[-15,1],[-20,-26],[-29,-26],[-44,2],[-30,5],[-15,5],[-58,40],[-12,1],[-22,17],[-25,13],[-44,-25],[-19,6],[-26,21],[-9,-6],[-29,-64],[-50,-70],[-27,-11]],[[61766,73219],[-13,69],[-12,27],[-6,4],[-13,8],[-9,-5],[-30,-47],[-48,-29],[-40,-17],[-64,-22],[-48,-10],[-21,-1],[-45,9],[-40,14],[-40,-1],[-30,-6],[-71,-51],[-121,-105],[-92,-51],[-51,-21],[-40,-11],[-69,-1],[-56,8],[-39,-1],[-22,13],[-30,42],[-38,43],[-16,9],[-22,9],[-32,4],[-79,-61],[-25,-17],[-27,-13],[-54,-37],[-25,-21],[-30,2],[-39,6],[-33,-2],[-23,29],[-12,32],[-46,20],[-33,5],[-8,-14],[-9,-44],[-14,-112],[-2,-29],[29,-111],[-2,-17],[-20,-6],[-24,-2],[-16,-10],[-12,-18],[-8,-97],[-27,-18],[-14,-20],[-13,-60],[-7,-1],[-45,45],[-20,4]],[[59970,72532],[17,47],[-19,93],[-21,86],[20,56],[41,67],[44,79],[0,48],[-3,37],[-12,25],[-24,34],[-40,-36],[-29,-40],[-18,-8],[-21,-23],[-10,-41],[-24,-32],[-40,-13],[-60,35],[-65,52],[-37,42],[-30,10],[-28,-18],[-84,-104],[-77,-152],[-19,-26],[-72,-65],[-48,-22],[-22,5],[-95,-29],[-48,-4],[-37,-34],[-72,37],[-44,48],[-26,48],[-42,105],[-31,49],[-67,45],[-119,108],[-31,12],[-80,16],[-85,10],[-18,-40],[-6,-156],[-15,-43],[-6,-81],[-10,-24],[-17,-15],[-25,26],[-18,11],[-41,-33],[-82,-47],[-28,-7],[-94,59],[-35,38],[-22,42],[-8,71],[-14,40],[-2,28],[-5,31],[-19,13],[-21,-24],[-22,1],[-27,15],[-65,59],[-50,5],[-30,-73],[-24,-23],[-25,-7],[-2,21],[20,47],[-78,-9],[-41,-35],[-32,5],[-24,16],[3,20],[25,7],[21,16],[84,13],[20,13],[21,51],[40,44],[5,19],[-31,0],[-129,-13],[-89,7],[-10,-21],[-14,-4],[-3,60],[14,27],[19,-3],[46,24],[-4,49],[-33,34],[-7,19],[-24,5],[-20,23],[-4,59],[-15,65],[-23,31],[3,17],[41,22],[8,90],[-6,56],[-20,4],[-60,44],[-18,-4],[-20,48],[-35,34],[-17,-12],[-11,-16],[-16,7],[-26,30],[-27,17],[-12,20],[15,53],[20,-1],[4,42],[-16,70],[2,36],[17,9],[20,-6],[21,-42],[6,-41],[-4,-39],[13,-38],[9,-10],[6,41],[9,7],[12,-17],[25,-9],[66,24],[12,21],[-48,-2],[-17,19],[-20,44],[-11,40],[-3,19],[-6,29],[7,15],[33,23],[29,64],[-12,18],[-14,9],[-15,-6],[-14,22],[-2,30],[12,25],[1,34],[-38,83],[-10,18],[8,28],[29,45],[27,57],[-4,19],[-20,7],[-95,-24],[-37,-21],[-66,-10],[-5,31],[2,28],[15,50],[-2,125],[9,67],[37,20],[45,100],[73,117],[76,-3],[30,33],[45,2],[9,-24],[5,-22],[40,-33],[70,5],[17,13],[16,18],[-32,57],[10,17],[29,2],[32,-14],[2,-13],[-9,-18],[-10,-32],[10,-6],[90,19],[95,-15],[30,8],[75,0],[13,19],[-22,25],[-22,9],[-15,12],[-15,18],[47,55],[27,11],[126,34],[94,17],[1,13],[-14,0],[-121,28],[-29,22],[-40,52],[-9,15],[-10,25],[6,55],[7,43],[15,25],[48,4],[166,-44],[119,27],[129,-65],[123,13],[26,29],[31,93],[174,156],[61,80],[66,45],[112,49],[94,65],[27,7],[225,-31],[155,-4],[71,62],[42,-21],[-4,-22],[-8,-19],[3,-38],[24,-55],[24,-38],[73,-55],[100,46],[16,-5],[21,-13],[35,-147],[28,-52],[35,-36],[29,-7],[21,37],[17,15],[36,6],[60,-50],[21,-53],[101,-40],[93,-20],[40,-45],[131,-44],[49,7],[82,46],[159,51],[106,-71],[29,-9],[25,6],[35,-20],[38,11],[117,84],[37,48],[39,12],[34,29],[92,93],[27,54]],[[57781,76018],[-7,-65],[17,-73],[41,-100],[41,-51],[167,-126],[31,-11],[-7,-51],[-10,-46],[-11,-30],[-49,-20],[-135,56],[-34,6],[-24,-12],[-45,-40],[-49,13],[-69,-23],[-19,-77],[-48,-88],[-79,-71],[-56,-38],[-84,-136],[-39,-80],[-16,-15],[-19,-13],[6,39],[10,35],[-2,26],[0,38],[28,44],[26,31],[76,58],[20,47],[-60,-1],[-60,-11],[-38,7],[-33,-4],[-11,42],[-8,25]],[[57232,75303],[9,7],[11,6],[19,44],[18,33],[25,41],[6,24],[0,23],[-6,16],[-1,19],[-1,27],[2,55],[57,60],[18,6],[6,28],[-4,63],[-8,51],[-10,4],[-14,15],[-9,17],[-14,19],[-25,12]],[[57311,75873],[-1,16],[3,16],[9,17],[42,14],[5,12],[5,29],[9,29],[10,10],[17,-1],[34,7],[23,9],[24,21],[12,18],[50,11],[14,9],[14,-8],[19,-31],[31,-45],[17,-15],[13,6],[22,17],[22,0],[17,-3],[9,14],[13,3],[37,-10]],[[53195,70957],[0,-16],[-10,-109],[-2,-39],[-2,-67],[0,-80],[22,-68],[1,-30],[-9,-34],[-41,-39],[-52,-51],[-46,-49],[-49,-53],[-15,-34],[-25,-26],[-21,-27],[-3,-25],[-15,-48],[-19,-38],[-47,-18],[-8,-12],[-22,-57],[-10,-23],[-13,-47],[16,-123],[20,-126],[4,-52],[-1,-44],[-11,-47],[-25,-68],[-18,-49],[-35,-89],[-11,-22],[-24,-26],[-47,-35],[-33,-30]],[[52644,69256],[-17,136],[-15,116],[-12,95],[-21,169],[-17,143],[-18,143],[-16,129],[-16,130],[-7,19],[-49,62],[-45,57],[-46,64],[-51,70],[-8,88],[-26,133],[-27,74],[-10,19],[-55,48],[-32,35],[-9,20],[-6,55],[-23,107],[-26,97],[-9,66],[-1,83],[5,60],[11,26],[54,74],[25,90],[31,34],[26,25],[22,30],[19,47],[15,51],[2,54],[7,87],[9,61],[23,68],[-9,55],[-12,60],[3,103],[-3,42],[-10,37],[-10,48],[0,39],[10,104],[7,80],[12,103],[-5,29],[-8,21],[-26,23],[-1,14],[7,15],[38,50],[21,74],[17,16],[27,26],[-1,29],[-6,31]],[[52382,73120],[68,35],[66,91],[23,22],[152,84],[19,-6],[22,-12],[-6,-31],[-9,-25],[13,-44],[18,27],[-4,18],[-1,23],[31,2],[28,-3],[30,-26],[-2,-100],[40,-97],[-11,-48],[33,-29],[29,35],[15,51],[54,29],[52,74],[28,8],[6,-61],[14,-54],[-19,-18],[-25,-57],[-47,-144],[-43,-42],[-33,-56],[-10,-39],[-3,-46],[8,-82],[23,-84],[28,-51],[26,-15],[61,-80],[-1,-47],[9,-57],[3,-68],[21,-55],[-45,-119],[-25,-86],[-49,-118],[-43,-77],[-93,-115],[-23,-38],[-15,-39],[-7,-41],[3,-49],[30,-119],[41,-70],[41,-38],[72,16],[-2,-46],[5,-55],[29,3],[20,8],[16,54],[36,-37],[18,-111],[30,-35],[3,-13],[-10,-9],[-9,-13],[9,-9],[29,-14],[17,9],[29,-24]],[[53132,71862],[-43,-41],[9,36],[28,43],[7,-10],[-1,-28]],[[53043,71268],[-7,-3],[-13,-16],[-8,-1],[-20,17],[-7,0],[-10,12],[3,68],[3,19],[49,2],[27,-40],[4,-10],[1,-12],[-12,-22],[-10,-14]],[[33123,58282],[-15,-6],[2,23],[26,40],[41,26],[10,1],[-6,-35],[-58,-49]],[[33052,57680],[-45,-32],[-118,-8],[-48,12],[-37,-9],[67,70],[8,30],[29,6],[9,9],[9,155],[-4,38],[-5,20],[-12,15],[-26,20],[-5,11],[17,17],[35,9],[26,19],[55,4],[26,16],[45,5],[-22,-71],[-10,-27],[4,-65],[-5,-43],[6,-55],[13,-37],[-9,-35],[-1,-54],[-2,-20]],[[1344,39648],[4,0],[4,17],[15,7],[-1,-19],[-21,-59],[-12,23],[-37,38],[-8,29],[13,23],[-2,-18],[6,-8],[21,-4],[19,-15],[-12,-6],[11,-8]],[[1680,41106],[-11,-34],[-5,0],[-12,20],[-5,13],[19,40],[10,3],[12,-13],[0,-12],[-8,-17]],[[1413,39573],[-2,-87],[-13,40],[-2,18],[14,27],[3,2]],[[50250,58175],[-8,-62],[-14,-76],[-10,-25],[-6,-186],[4,-16],[4,-4],[46,-64],[60,-82],[43,-59],[4,-19],[0,-123],[1,-105],[9,-60],[1,-59],[11,-44],[40,-85],[9,-50],[1,-161],[1,-122],[5,-166],[0,-139],[0,-175],[0,-205],[0,-215],[-26,-2],[14,-67],[2,-60],[4,-20],[-7,-29],[6,-45],[11,-16],[29,-90],[9,-75],[-46,-26],[3,-19]],[[50450,55424],[-86,-41],[-35,-33]],[[50329,55350],[0,32],[-13,6],[-15,11],[-10,17],[-13,38],[-5,29],[-20,5],[-25,33],[-24,39],[-8,38],[2,17],[-3,18],[-9,7],[-21,86],[-13,35],[-7,28],[3,22],[-3,29],[4,23],[11,14],[4,17],[1,37],[7,74],[4,74],[-12,20],[-15,6],[-8,21],[-3,34],[0,30],[30,104],[-6,241],[4,37],[13,25],[12,29],[-1,29],[-19,72],[-37,55],[-19,45],[-10,40],[-2,21],[22,32],[10,21],[2,25],[-10,46],[2,81],[9,61],[8,79],[0,24],[-22,47],[-12,6],[-9,-3],[-23,-31],[-8,-4],[-5,10],[-3,12],[8,18],[-3,24],[7,20],[14,9],[5,10],[-20,10],[-2,13],[1,14],[6,2],[6,-1],[3,10],[3,67],[3,23],[2,47],[3,179],[5,19],[0,13],[-13,9],[-32,48],[-19,37],[-17,38],[-14,25],[-27,38],[-7,25],[-2,24],[9,49],[13,52],[6,75],[-4,20],[-18,35]],[[49980,58246],[64,-27],[90,-45],[2,-8],[0,-13],[16,0],[26,16],[72,6]],[[84901,47154],[-19,-99],[-20,21],[22,55],[10,17],[7,6]],[[84740,46363],[-9,75],[-10,33],[-8,18],[-3,23],[0,23],[5,11],[34,3],[14,38],[0,47],[-7,15],[-7,7],[-35,-35],[-10,7],[-6,12],[2,51]],[[84700,46691],[29,48],[25,88],[17,34],[40,33],[16,9],[118,48],[28,3],[74,-1],[100,10],[24,7],[32,21],[31,26],[16,21],[18,14],[25,-18],[44,-14],[11,-13],[11,-17],[-50,-92],[-56,-76],[-34,-23],[-35,-15],[-27,-29],[-23,-46],[-29,-26],[-32,-9],[-28,-14],[-26,-27],[-35,-46],[-14,-5],[-15,1],[-29,-17],[-91,-67],[-55,-73],[-40,-63]],[[84454,46462],[45,49],[68,38]],[[84567,46549],[-2,-28],[-7,-44],[-10,-20],[-16,-37],[-10,-8],[-41,8],[-5,-5],[-7,3],[-11,24],[-4,20]],[[78501,58569],[-5,-60],[-15,24],[3,31],[7,13],[10,-8]],[[78451,58749],[1,-14],[-14,10],[-5,-5],[-17,4],[-8,80],[2,19],[11,-6],[17,-40],[8,-27],[5,-21]],[[77335,56395],[-3,-43],[-11,1],[-12,-27],[-5,-4],[-10,86],[11,121],[6,18],[8,-32],[23,-15],[-10,-69],[3,-36]],[[77811,63546],[-2,-34],[7,-7],[9,15],[13,39],[13,22],[14,5],[16,-27],[16,-57],[17,-33],[7,-3],[6,-26],[1,-26],[-8,-53],[-13,-62],[-20,-76],[7,-64],[26,-53],[31,-31],[33,9],[17,15],[14,25],[14,12],[16,3],[53,-18],[16,-18],[2,-35],[-6,-92],[8,-67],[15,-70],[1,-65],[-18,-106],[-15,-101],[-17,-48],[-12,-32],[-4,-21],[1,-20],[12,-30],[12,-39],[3,-38],[-1,-46],[-9,-62],[-31,-137],[-26,-122],[14,-25],[24,-18],[17,-18],[17,12],[37,72],[32,54],[39,54],[2,5],[35,40],[15,36],[9,47],[12,18],[16,-11],[20,20],[24,51],[19,24],[13,-4],[23,-32],[33,-59],[30,-36],[26,-11],[13,-22],[-1,-33],[6,-21],[12,-9],[5,4],[-1,16],[12,23],[25,31],[25,18],[26,5],[17,25],[11,63],[16,48],[14,22],[17,11],[5,15],[-9,20],[1,19],[10,21],[22,8],[34,-3],[39,-20],[45,-38],[30,-13],[14,14],[28,-59],[41,-131],[35,-100],[29,-67],[31,-52],[32,-36],[24,-49],[21,-93],[-16,-128],[-4,-111],[2,-137],[19,-104],[36,-73],[21,-59],[6,-44],[28,-39],[51,-32],[21,-29],[-9,-26],[0,-30],[7,-35],[17,-28],[28,-23],[17,-24],[5,-25],[-1,-40],[-6,-57],[-12,-43],[-17,-30],[-2,-24],[-4,-36],[0,-74],[12,-50],[4,-63],[-7,-51],[-6,-105],[-1,-41],[-6,-34],[-15,-34],[-22,-32],[-27,-28],[-17,-12]],[[79217,60107],[-4,-6],[-12,-32],[-15,-31],[-11,0],[-8,16],[-6,20],[-4,44],[-25,22],[-28,14],[-56,-22],[-46,-12],[-51,15],[-48,-19],[-20,-3],[-23,3],[-22,0],[-22,7],[-39,27],[-15,-2],[-32,-23],[-33,-15],[-31,-11],[-47,-46],[-34,-67],[-10,-47],[-17,-48],[-23,-75],[-30,-72],[-21,-33],[6,-19],[-6,-24],[-32,-10],[-26,-4],[-5,-12],[3,-145],[9,-55],[17,-66],[11,-36],[8,-108],[2,-91],[36,-58],[21,-44],[14,-38],[-5,-25],[-8,-74],[8,-95],[51,-206],[4,-15]],[[78592,58586],[-6,-2],[-8,40],[-26,67],[-8,71],[-30,79],[-16,31],[-6,-26],[-9,-28],[-30,40],[-25,43],[-23,81],[-3,-19],[-6,-17],[-26,64],[-28,51],[-25,19],[-15,17],[-15,27],[-31,28],[-78,-40],[-98,31],[-38,-30],[-16,19],[-9,35],[9,59],[2,125],[12,88],[-6,67],[6,31],[4,43],[-15,17],[-70,34],[-15,27],[-18,-31],[-84,-17],[-31,-26],[-29,-49],[-8,-64],[17,-41],[11,-73],[-30,-158],[-5,-46],[12,-194],[-5,-106],[-16,-71],[-26,-63],[-11,-109],[-20,-50],[-28,-114],[-18,-143],[-13,-66],[-8,-122],[-56,-184],[-13,-104],[-20,-40],[7,-31],[1,-52],[-7,-139],[-2,-115],[8,-62],[27,-122],[-6,-36],[-3,-50],[22,-23],[17,-7],[91,58],[31,-15],[12,-54],[8,-47],[15,-254],[8,-48],[19,-45],[20,-47],[7,8],[1,18],[1,20],[19,-48],[14,-90],[48,-476],[14,-61],[11,-63],[-29,31],[-8,105],[-8,45],[-11,6],[-16,0],[-1,18],[12,35],[-2,41],[-17,34],[-27,-27],[1,-74],[12,-57],[46,-127],[15,-53],[18,-15],[27,8],[32,-54],[25,-50],[63,-77],[38,8],[41,19],[27,-5],[27,-20],[32,-64],[52,-161],[84,-134]],[[78361,55438],[-9,-33],[-4,-50],[-33,-68],[-5,-39],[-13,-50],[-23,-26],[-19,-5],[-12,4],[-8,10],[-13,47],[-7,14],[-6,4],[-42,-33],[-41,-35],[-7,-33],[-11,-37],[-12,-15],[-10,-3],[-9,22],[-15,28],[-12,27],[3,43],[23,64],[3,44],[-3,77],[-6,44],[-7,1],[-11,7],[-32,-7],[-16,50],[-7,54],[-10,20],[-11,12],[-24,-19],[-18,11],[-61,48],[-23,76],[-13,2],[-11,-8],[-4,-18],[-7,-88],[-5,-27]],[[77810,55553],[-69,178],[-48,73],[6,132],[-14,26],[-18,2],[-14,37],[12,79],[-19,-15],[-26,3],[-21,21],[-16,109],[-11,33],[-22,58],[-29,0],[-10,27],[2,70],[-21,43],[-28,36],[-23,20],[-24,114],[-19,28],[-16,22],[-22,-15],[-7,-41],[-15,-39],[-16,5],[-16,22],[-18,114],[-4,69],[5,129],[23,116],[13,185],[20,117],[13,39],[20,159],[39,204]],[[77417,57713],[4,43],[8,49],[6,46],[2,73],[-5,38],[0,22],[8,27],[28,46],[38,76],[46,107],[47,163],[23,95],[10,34],[10,10],[16,33],[11,36],[1,18],[-26,178],[-16,58],[-9,68],[-4,50],[-6,45],[3,43],[-9,26],[-21,34],[-22,50],[-13,82],[0,46],[-13,40],[-5,42],[8,40],[11,34],[-1,152],[-4,46],[-6,81],[-14,61],[-20,72],[-22,59],[-59,107],[-42,71],[-21,66],[-26,74],[-19,54],[-24,68],[-12,93],[-7,99],[4,33],[11,21],[15,18],[12,4],[34,45],[24,-4],[5,10],[2,21],[-3,90],[2,120],[4,98],[5,64],[63,75],[13,33],[6,35],[0,31],[-5,24],[-9,14],[-41,-65],[-8,15],[-19,106],[-8,32],[-11,39],[-13,54],[-2,94],[-9,46],[-50,99],[-23,53],[-31,77],[-37,92],[-38,86],[-18,54],[-6,12],[-2,21],[11,59],[-5,59],[-19,78],[-8,49],[2,19],[-9,7],[-21,-4],[-20,36],[-20,78],[-1,14],[6,-1],[24,-13],[9,2],[17,18],[26,19],[16,6],[5,9],[2,19],[-13,179],[2,37],[25,77],[-3,78],[7,112],[27,77],[21,35],[7,55],[9,12],[17,-5],[36,-41],[15,-2],[22,1],[23,3],[11,4],[74,40],[16,5],[16,-5],[11,2],[12,18],[8,33],[9,103],[5,19],[10,15],[16,10],[18,-1],[24,-20],[15,-1],[17,8],[15,15],[9,18],[5,22],[-4,41],[-11,53],[3,6],[20,-11],[30,-13],[22,3],[15,9],[14,25],[19,23],[17,-5],[14,-21],[33,-36]],[[77798,57428],[-3,-9],[-11,18],[-8,21],[-4,26],[17,-1],[8,-25],[1,-30]],[[77797,57365],[1,-33],[-6,-39],[-25,-23],[-9,31],[2,49],[4,12],[25,-3],[8,6]],[[77683,55599],[-5,-3],[-10,47],[13,67],[13,-82],[-11,-29]],[[77386,56413],[-3,-10],[-14,110],[20,-29],[-3,-71]],[[77307,57057],[-16,-7],[2,32],[4,20],[8,5],[3,-34],[-1,-16]],[[77521,56216],[7,-70],[-10,15],[-8,30],[0,44],[2,7],[9,-26]],[[60971,48286],[21,-123],[-3,-23],[-15,-14],[-8,-1],[-9,20],[-7,41],[-11,-10],[-19,50],[-20,2],[-17,59],[7,51],[-4,88],[21,45],[12,76],[13,-52],[3,-80],[18,-95],[15,-29],[3,-5]],[[61073,49017],[2,-30],[-5,-27],[1,-87],[-1,-58],[-16,-80],[-13,-28],[-12,8],[-9,13],[-8,22],[15,147],[-7,107],[30,-10],[23,23]],[[58541,47123],[-8,51],[-19,77],[-26,109],[-20,89],[-22,96],[-9,70],[-17,78],[-28,96],[-14,37],[-16,33],[-40,65],[-45,64],[-25,43],[-33,128],[-14,47],[-9,81],[-8,85],[3,34],[30,109],[3,31],[-4,42],[-14,87],[-11,56],[-8,49],[-15,81],[-22,111],[-5,49],[0,36],[12,96],[10,99],[0,28]],[[58167,49280],[87,-4],[15,22],[49,63],[56,128],[11,54],[22,82],[23,40],[8,29],[6,44],[7,37],[29,56],[28,42],[-2,18],[-4,12],[5,11],[15,22],[30,20],[6,43],[0,48],[-5,28],[1,31],[-5,17],[-19,5],[-29,24],[-25,10],[-17,14],[-6,11],[-2,29],[4,32],[3,9],[6,34],[-11,20],[-2,10],[5,16],[25,108],[6,15]],[[58487,50460],[11,2],[17,13],[16,6],[14,-5],[9,6],[9,14],[7,42],[6,70],[-3,57],[-13,44],[-3,68],[6,90],[-5,75],[-14,60],[-14,36],[-22,17],[-34,92],[-11,44],[2,28],[9,9]],[[59417,51265],[21,0],[20,-21],[22,-26],[60,-69],[59,-68],[59,-69],[59,-68],[59,-69],[60,-68],[59,-69],[59,-69],[59,-68],[59,-69],[60,-68],[59,-69],[59,-68],[59,-69],[60,-68],[59,-69],[28,-33],[4,-14],[5,-62],[3,-39],[-1,-35],[-16,-58],[-5,-31],[0,-21],[4,-8],[13,-3],[12,-14],[4,-11],[9,-44],[11,-22],[25,-37],[42,-64],[43,-64],[43,-63],[42,-64],[43,-64],[43,-63],[42,-64],[43,-64],[21,-31],[8,-8]],[[60894,49140],[-5,-49],[-22,-117],[-1,-49],[-9,-58],[-8,-38],[-22,-165],[-19,-62],[-25,-145],[-5,-111],[15,-78],[5,-72],[30,-72],[23,-25],[17,-33],[28,-74],[17,-75],[51,-37],[20,-83],[-7,-58],[-24,-48],[-22,-77],[-18,-102],[-1,-155],[13,23],[27,-38],[3,-114],[-28,-134],[-8,-62],[-2,-53],[21,-160],[30,-81],[-2,-26],[-8,-21],[53,-144],[-5,-125],[20,-97],[9,-84],[13,-65],[2,-44],[-16,-50],[39,-12],[22,-41],[11,-39],[28,2],[15,-26],[22,-22],[47,-65],[13,-33],[5,-19],[3,-12]],[[61239,45815],[-32,-50],[-50,-79],[-50,-77],[-47,-52],[-34,-25],[-37,-13],[-34,-33],[-33,-50],[-42,-26],[-51,0],[-53,-36],[-53,-67],[-31,-39],[-50,59],[-38,19],[-44,-2],[-27,-8],[-10,-12],[-8,-36],[-7,-59],[-29,-57],[-51,-55],[-47,-20],[-43,14],[-29,22],[-15,32],[-23,15],[-29,-3],[-28,-22],[-27,-43],[-44,-18],[-59,5],[-31,21],[-5,35],[-26,42],[-47,47],[-35,1],[-23,-45],[-20,-29],[-19,-12],[-16,-1],[-15,9],[-9,3],[-66,5],[-62,-2]],[[59710,45173],[-2,20],[-4,46],[-13,41],[-11,24],[-14,6],[-7,-1],[-6,19],[-7,41],[-11,35],[-14,29],[-8,27],[-3,25],[2,27],[13,67],[4,47],[-1,47],[-7,49],[-15,58],[2,16],[-5,40],[-1,28],[3,34],[-3,45],[-13,97],[0,25],[-13,47],[-41,111],[-2,14],[-65,112],[-25,24],[-10,-21],[-3,-19],[3,-36],[-2,-18],[-3,-8],[-15,1],[-10,4],[-24,30],[-19,8],[-47,-6],[-17,-7],[-13,7],[-25,51],[-29,11],[-27,3],[-43,58],[-10,-3],[-5,-4]],[[61030,47247],[-15,-7],[-6,7],[-9,24],[16,21],[16,39],[36,59],[12,38],[5,8],[-3,-45],[-20,-99],[-18,-7],[-14,-38]],[[69710,75022],[1,-11],[-4,-19],[-58,-32],[-26,-28],[-6,-49],[-7,-14],[-12,-11],[-11,-3],[-18,57],[-20,12],[-29,20],[-56,40],[-29,17],[-56,-26],[-66,-35],[-10,-21],[-7,-23],[1,-17],[4,-23],[-3,-18],[-12,-6],[-19,22],[-16,12],[-8,-29],[-9,-53],[-4,-38],[14,-54],[5,-82],[26,5],[20,0],[37,24],[19,0],[29,-10],[52,-2],[40,4],[10,-2],[9,16],[11,-6],[10,-18],[41,22],[30,3],[19,-6],[11,-7],[19,-53],[15,-34],[19,-11],[57,10],[17,47],[14,12],[24,3],[19,9],[16,20],[21,16],[18,4],[9,-13],[4,-16],[-3,-21],[-1,-22],[12,-15],[35,-3],[17,-14],[1,-26],[-3,-41],[15,-17],[7,-1],[52,43],[14,1],[12,-24],[17,-29],[23,-30],[6,4],[10,34],[20,36],[36,12],[21,11],[21,5],[65,-14],[21,-2],[44,3],[35,7],[28,22],[15,17],[23,10],[29,-1],[16,-5]],[[70453,74567],[1,-30],[-4,-57],[-4,-40],[23,-72],[15,-34],[14,-25],[3,-19],[-3,-16],[-18,-15],[-7,-17],[-3,-18],[6,-21],[11,-68],[13,-53],[19,-26],[28,-17],[15,4],[11,40],[18,30],[16,-2],[25,1],[66,-34],[64,-52],[18,-29],[7,-32],[-18,-75],[1,-47],[4,-51],[15,-38],[13,-65],[3,-53],[6,-16],[4,-19],[-7,-49],[-5,-50],[6,-16],[20,-25],[31,-45],[6,-38],[-11,-24],[-20,-29],[-25,-25],[-8,-11]],[[70802,73289],[-4,6],[-12,26],[-28,41],[-20,21],[-38,-7],[-22,8],[-26,13],[-25,-2],[-16,-24],[-10,-25],[-25,-8],[-35,-19],[-56,-30],[-26,5],[-8,13],[6,17],[19,22],[5,26],[-4,25],[-17,7],[-7,4],[-8,5],[-34,15],[-28,-6],[-47,-31],[-88,-81],[-38,-55],[-28,-82],[-83,-27],[-57,-47],[-59,-78],[-39,-41],[-19,-6],[-19,7],[-19,21],[-18,65],[-16,98],[-11,64],[6,84],[7,94],[7,96],[11,111],[10,40],[0,26],[-8,13],[-18,0],[-27,-15],[-20,-3],[-11,10],[1,52],[14,93],[-21,79],[-57,64],[-48,22],[-40,-20],[-33,-50],[-27,-82],[-28,-68],[-29,-52],[-21,-25],[-7,-10],[-4,-22],[16,-69],[-1,-58],[-18,-48],[-19,-22],[-21,2],[-16,11],[-13,20],[-33,5],[-54,-9],[-37,-23],[-20,-39],[-6,-50],[8,-62],[-4,-48],[-17,-34],[-14,-19],[-10,-5],[-24,29],[-36,62],[-25,34],[-14,5],[-7,-3],[-8,-7],[-5,-8],[-4,-18],[-12,-7],[-16,5],[-15,-5],[-9,-20],[-25,-23],[-44,-27],[-25,-28],[-4,-30],[-6,-14],[-14,5],[-40,-41],[-30,13],[-35,53],[-19,44],[-2,18]],[[69639,74783],[-25,-22],[-15,3],[-11,21],[-8,20],[-2,12],[4,-1],[19,-9],[27,-6],[10,-6],[1,-12]],[[83613,64873],[-17,-68],[-14,-71],[-6,-68],[1,-69],[-4,-63],[-7,-62],[-27,18],[-15,44],[-3,73],[-20,88],[-7,26],[-28,49],[-26,25],[-20,36],[3,-3],[-15,49],[-11,52],[-23,148],[-8,36],[-10,32],[-3,33],[3,36],[10,53],[6,54],[-5,74],[2,73],[8,32],[130,443],[36,94],[22,47],[18,52],[17,66],[22,60],[15,19],[75,54],[23,52],[19,16],[21,-1],[14,-25],[12,-29],[13,-16],[33,-28],[15,-28],[6,-48],[-20,-45],[-10,-41],[-2,-45],[4,-61],[0,-61],[-25,-143],[-27,-90],[-7,-44],[-9,-111],[-16,-111],[-13,-140],[-22,-145],[-13,-61],[-16,-58],[-37,-109],[-42,-90]],[[82890,65968],[12,-38],[-5,-24],[-38,13],[-2,23],[14,-4],[19,30]],[[61766,73219],[0,-8],[-3,-20],[-31,-57],[-43,-78],[-30,-49],[-52,-83],[-38,-18],[-65,-30],[-17,-29],[-17,-46],[-9,-64],[-3,-40],[-2,-75],[16,-77],[14,-75],[2,-49],[-1,-48],[-14,-52],[-16,-71],[-9,-80],[-4,-150],[0,-128],[-2,-21],[-26,-90],[-31,-106],[-15,-24],[-68,-32],[-74,-77],[-84,-87],[-75,-78],[-79,-83],[-83,-85],[-59,-61],[-78,-82]],[[60770,71066],[-72,-78],[-72,-79],[-56,-60],[-83,-95],[-49,-56],[-73,-82],[-63,-72],[-75,-85],[-94,25],[-30,15],[-25,40],[-18,22],[-44,22],[-29,77],[-17,27],[-30,12]],[[59940,70699],[4,27],[16,47],[15,50],[-8,28],[-3,23],[-1,29],[10,27],[-5,33],[-8,33],[-6,16],[0,30],[4,23],[5,36]],[[59963,71101],[13,19],[3,20],[11,20],[16,16],[3,13],[-2,7],[-15,15],[-9,25],[8,38],[5,11],[9,18],[20,28],[16,4],[14,0],[23,-2],[18,-5],[5,7],[-1,9],[-22,23],[-1,18],[5,19],[16,30],[19,23],[9,4],[22,44],[14,50],[-22,122],[-14,19],[-22,17],[-13,3],[-1,8],[17,30],[13,27],[-14,26],[-24,12],[-9,-27],[-32,-2],[-48,0]],[[59993,71790],[-22,129],[-3,55],[1,65],[15,94],[-7,43],[-1,30],[-4,40],[-38,87],[21,160],[15,39]],[[52645,79218],[8,-7],[20,-26],[-4,-43],[-23,-70]],[[52646,79072],[-12,-56],[-1,-44],[2,-20],[4,0],[22,-3]],[[52661,78949],[11,0],[34,-11],[28,-17],[6,-19],[3,-22],[33,-30],[38,-19],[13,6],[47,71],[19,-12],[11,-38],[-1,-19]],[[52903,78839],[-13,-75],[-2,-41],[11,-26],[1,-21],[-3,-19],[-19,-2],[-25,11],[-21,32],[-17,-4],[-14,-8],[-7,-31],[-6,-36],[2,-21],[10,-15],[8,-34],[5,-43],[5,-20],[-5,-8],[-13,-6],[-11,5],[-20,52],[-9,20],[-15,3],[-27,-12],[-41,-29],[-17,0],[-14,6],[-13,24],[-11,47],[-4,30],[-8,-1],[-26,9],[-12,-12],[0,-48],[-3,-61],[-13,-38],[-37,-68],[-13,-29],[-6,-21],[-1,-18],[6,-32],[7,-30],[-6,-18],[-19,-9],[-14,19],[-5,32],[-30,45],[13,37],[-2,10],[-49,19],[-21,28],[-30,50],[-6,21],[2,69],[-2,17],[-4,8],[-14,0],[-20,-24],[-19,-36],[-38,-41],[-4,-8],[13,-40],[-1,-15],[-30,-63],[-6,-21],[-39,-39],[-18,-15],[-54,29],[-15,4],[-25,-20],[-34,-18],[-55,-19],[-21,14],[-9,13]],[[51950,78298],[-5,19],[-14,33],[-16,20],[-11,22],[-14,24],[-9,19],[12,64],[-9,22],[-5,32],[3,22],[-5,5],[-50,12],[-42,-4],[-29,-21],[-25,-35],[-3,-8],[2,-6],[12,-32],[-20,-35],[-32,-26],[-22,-3],[-10,5],[0,37],[18,13],[17,24],[5,34],[2,23],[-17,29],[2,17],[11,34],[6,29],[9,25],[34,42],[35,41],[5,45],[3,54],[5,13],[47,32],[11,13],[6,18],[37,60],[37,60],[7,20],[6,12],[0,10],[-4,7],[-18,5],[-6,19],[19,34],[24,21],[23,0],[9,-9],[-1,-11],[10,-12],[18,-4],[21,4],[22,13],[13,30],[7,23],[34,26]],[[52115,79258],[23,-13],[63,-4],[47,7],[29,18],[36,0],[24,-10],[4,1],[7,3],[6,9],[23,7],[3,8],[-1,8],[-4,4],[-28,-4],[-11,6],[-2,15],[9,25],[20,20],[18,5],[12,-5],[31,-38],[7,-2],[5,7],[6,4],[11,-7],[11,-24],[2,-4],[69,9],[15,0],[47,-42],[48,-43]],[[55298,85158],[-23,-14],[-13,-40],[-19,-7],[-17,-14],[-7,-128],[33,-49],[-18,-7],[-17,-14],[-11,-22],[-12,-47],[-45,-26],[-17,-19],[-25,-44],[-13,-63],[-25,-27],[-29,-6],[17,52],[22,42],[-21,28],[-13,46],[-16,34],[13,39],[-7,63],[2,62],[19,32],[22,25],[34,59],[37,42],[51,19],[23,-17],[10,38],[17,9],[15,-9],[33,-37]],[[54591,84268],[-15,-29],[-12,2],[-9,39],[-2,99],[5,49],[61,178],[27,14],[38,109],[10,48],[17,44],[10,39],[8,15],[17,-7],[8,-7],[-18,-23],[2,-29],[-1,-13],[-48,-128],[-12,-83],[-17,-21],[-69,-296]],[[53163,85850],[23,-73],[20,-10],[28,19],[19,53],[11,81],[13,76],[-15,81],[-17,72],[-1,21],[43,60],[13,49],[14,47],[16,16],[23,4],[27,9],[34,31],[30,42],[24,38],[8,76],[0,39],[10,28],[10,55],[-9,55],[-31,83],[-36,117],[-5,63],[16,12],[32,11],[60,3],[6,7],[6,28],[13,38],[15,28],[10,39],[4,36],[-34,54],[-45,55],[-30,18],[-54,46],[-38,39],[22,148],[16,109],[3,27],[0,41],[-52,177],[2,39],[5,35],[-6,61],[-3,54],[9,16],[21,30],[-20,47],[-2,4],[-38,117],[59,115],[-11,60],[36,44],[64,99],[36,56],[7,9],[29,25],[54,29],[60,14],[27,0],[103,-20],[80,-15],[12,15],[17,32],[22,45],[1,50],[-7,73],[-12,44],[-57,29],[-62,39],[76,124],[53,86],[66,129],[21,54],[15,22],[19,198],[13,56],[11,29],[0,30],[-7,50],[-19,114],[104,14],[34,7],[32,14],[61,35],[31,31],[-17,106],[37,36],[91,125],[98,119],[46,46],[5,22],[4,35],[-21,56],[-22,35],[-43,65],[19,46],[31,9],[42,18],[32,39],[4,5],[55,154],[107,77],[43,43],[67,-32],[97,-48],[44,71],[14,26],[15,39],[-6,67],[-3,87],[5,34],[39,16],[21,4],[108,-36],[28,1],[51,-5],[57,-16],[120,-42],[50,-17],[28,-4],[24,20],[51,50],[-76,37],[50,38],[26,38],[22,46],[8,55],[-3,29],[-16,20],[-46,50],[105,7],[36,2]],[[55728,91610],[76,-33],[3,-7],[0,-17],[3,-18],[74,-45],[21,-23],[45,-37],[12,-19],[42,-23],[30,-24],[35,-20],[41,-31],[55,-25],[46,-8],[117,-42],[20,-13],[33,-30],[35,-34],[23,-69],[38,-4],[10,-24],[33,-41],[46,-36],[-2,-12],[-36,-34],[-4,-45],[3,-58],[12,-47],[-2,-14],[-9,-16],[-10,-26],[-4,-22],[1,-11],[3,-6],[20,0],[34,-5],[20,-10],[12,-55],[-4,-10],[-29,-25],[-9,-19],[-1,-29],[6,-31],[9,-36],[23,-37],[31,-40],[20,-32],[9,-23],[4,-16],[-14,-20],[-12,-40],[-3,-45],[-5,-30],[-27,-41],[-19,-14],[-5,-22],[-3,-36],[6,-44],[2,-29],[6,-22],[8,-14],[43,-25],[25,-50],[15,-41],[29,-106]],[[56709,89749],[-73,-13],[-56,26],[-27,-13],[-48,-1],[-55,-10],[-19,-21],[-14,-8],[-51,29],[-48,49],[-35,-37],[-23,-7],[-20,33],[-18,6],[-10,-12],[-8,-29],[-14,-24],[-3,-14],[-2,-60],[-4,-14],[-46,8],[2,-16],[10,-8],[5,-10],[-17,-13],[-47,2],[-4,-14],[13,-22],[-10,-19],[-10,-8],[-55,-12],[-32,3],[-9,-12],[-3,-16],[6,-16],[14,-9],[5,-10],[-1,-21],[-12,-4],[-33,38],[-10,-2],[7,-20],[19,-22],[11,-22],[10,-26],[-2,-21],[-41,-65],[-37,-41],[-27,-37],[-16,-39],[19,-20],[20,-29],[15,-55],[17,-49],[35,-46],[-7,-27],[-8,-21],[-58,-47],[-66,-70],[-71,-178],[-24,-24],[-62,-30],[-23,-30],[-46,-35],[-81,-29],[-37,-42],[-16,-43],[-19,-3],[-18,17],[-24,12],[-3,-28],[1,-21],[-39,31],[-19,-28],[-14,-47],[-56,-63],[-61,11],[-6,-11],[16,-8],[2,-10],[-11,-5],[-17,0],[-25,-12],[-17,1],[-8,-30],[-13,-37],[-34,-15],[-18,-3],[-9,-20],[53,-5],[-4,-17],[-1,-17],[-6,-19],[-60,-27],[-9,-21],[-12,-13],[-27,0],[1,13],[4,13],[-39,-1],[-12,31],[-8,-8],[4,-25],[11,-25],[11,-38],[-9,-24],[-10,-11],[7,-11],[21,-8],[9,-15],[-25,-13],[-32,-44],[-32,-1],[-20,-28],[-21,0],[-17,18],[-27,15],[-9,-27],[-2,-20],[16,-53],[29,-41],[28,-18],[-20,-12],[-15,-26],[-17,-83],[-10,-33],[-10,-57],[6,-49],[6,-24],[13,-32],[-36,4],[-39,19],[6,-39],[-24,-47],[4,-40],[5,-27],[-7,-44],[11,-14],[6,-26],[-10,-20],[5,-17],[1,-59],[8,-92],[-3,-20],[21,-80],[-5,-29],[-3,-36],[31,-34],[27,0],[27,1],[10,-9],[11,-24],[8,-29],[23,2],[36,24],[23,6],[16,-46],[42,-59],[24,-27],[42,-14],[43,-48],[-6,-58],[18,-20],[52,-22],[18,-31],[9,-27],[14,-21],[16,-66],[-6,-41],[-21,-14],[-49,-44],[-22,-32],[-17,-20],[-49,-44],[-18,-8],[-17,-22],[-16,-10],[-15,6],[-55,-41],[4,-18],[42,-7],[22,9],[17,20],[18,5],[16,-4],[18,16],[14,7],[14,-8],[16,-39],[-33,-20],[-23,-1],[-12,-64],[-14,-27],[-10,-13],[-52,-27],[-35,-35],[-40,-27],[-18,6],[-26,-29],[-59,-33],[-31,-45],[-68,-40],[-34,-32],[-95,-2],[-89,7],[-29,-16],[29,-4],[20,-16],[25,7],[57,-8],[29,-8],[38,-54],[-28,-19],[-48,-14],[18,-76],[15,-51],[-20,-31],[-1,-140],[-27,-2],[-12,-58],[9,-30],[-1,-69],[6,-42],[13,-39],[-6,-41],[-43,-95],[1,-44],[8,-27],[6,-42],[-20,-81],[-14,-69],[-16,-57],[-37,-69],[-18,-51],[-43,-160],[-21,-32],[-26,-24],[-29,22],[-27,13],[-32,-2],[-51,-18],[-77,12],[-74,-6],[-19,-16],[11,-58],[-28,-8],[-26,17],[-24,-20],[-20,-22],[-39,-51],[-13,-32],[-3,-59],[20,-54],[18,-62],[-46,-76],[-26,-2],[-76,20],[-135,-47],[-121,38],[15,40],[0,30],[6,45],[4,47],[-1,32],[-9,33],[-29,44],[-68,147],[-19,62],[-14,26],[10,1],[55,-33],[13,4],[13,13],[-16,47],[-14,22],[-10,32],[33,9],[23,-2],[17,37],[-10,58],[-25,19],[-21,7],[-40,93],[-42,48],[-75,184],[-27,127],[-26,-12],[-12,55],[-9,53],[-2,38],[-40,22],[-1,27],[-8,120],[-42,16],[-28,68],[-5,128],[-28,23],[-23,-7],[1,32],[5,30],[-13,117],[-4,108],[-11,32],[-6,38],[5,33],[8,19],[28,5],[26,-29]],[[55321,85208],[-5,-36],[-15,3],[-13,26],[27,41],[40,-2],[14,-9],[-48,-23]],[[55115,85846],[-12,-6],[-6,2],[7,27],[6,11],[19,11],[5,-2],[-19,-43]],[[55165,86100],[-7,-19],[-7,23],[3,5],[4,23],[14,12],[21,-7],[0,-6],[-20,-19],[-8,-12]],[[58874,36890],[6,-8],[25,-27],[2,-53],[-2,-60],[-5,-38],[2,-38],[8,-59],[8,-41],[2,-184]],[[58920,36382],[-9,9],[-16,7],[-8,-3],[-8,-83],[-6,-122],[4,-77],[-60,-2],[-76,8],[-54,33],[-59,73],[-35,113],[-15,71],[-21,4],[-4,12],[-2,87],[1,91],[4,25],[39,112],[25,69],[15,68],[33,79],[36,51],[13,7],[9,-2],[62,-70],[65,-66],[14,8],[7,6]],[[34956,54930],[-23,-41],[-25,-58],[-34,-100],[2,-32],[-8,-25],[-2,-45],[3,-51],[8,-33],[4,-62],[-6,-57],[2,-33],[7,-52],[6,-55],[-1,-23],[8,-18],[8,-18],[-3,-49],[27,-88],[16,-39],[23,-37],[9,-37],[13,-44],[8,-5],[4,-18],[-4,-34],[-1,-47],[-15,-55],[-35,-100],[-4,-24],[9,-83],[-5,-68],[-2,-33],[-17,-60],[-40,-145],[-23,-27],[-14,-42],[-9,0],[-10,-4],[-4,-5]],[[34828,53183],[-12,0],[-10,19],[-2,22],[-5,25],[-12,8],[-24,-9],[-7,6],[-14,27],[-11,30],[-3,28],[-8,-3],[-18,-25],[-12,-6],[-9,7],[-11,-2],[-28,-27],[-16,-7],[-11,-27],[-76,-13],[-20,-7],[-45,48],[-12,15],[-6,3],[-5,-3],[-5,-11],[-8,-60],[-6,-16],[-12,-14],[-12,-24],[-2,-23],[18,-13],[15,-45],[16,-36],[13,-33],[-2,-36],[-2,-51],[-10,-18],[-15,-8],[-58,25],[-44,22],[-19,5],[-8,5]],[[34310,52961],[-11,19],[-11,18],[-18,6],[-22,12],[-15,45],[-17,64],[-5,29],[-13,28],[-13,40],[-3,36],[-10,32],[-5,11],[-7,45],[-2,16],[-3,2],[-5,14],[-11,47],[-2,12],[-4,4],[-12,34],[-9,11],[-4,17],[1,47],[-5,23],[-2,43],[0,17],[-5,20],[-8,12],[-1,32],[-2,77],[-4,14],[-34,-1],[-3,-8],[-15,-4],[-16,-1],[-15,10],[-12,14],[-3,17],[2,54],[-20,41],[-31,50],[-9,64],[-12,40],[-34,84],[-7,57],[0,41],[13,37],[17,65],[6,60],[6,31],[8,40],[8,53],[-6,32],[-10,32],[-3,23],[10,35],[10,24],[11,4],[14,15],[12,21],[17,5],[22,2],[44,0],[22,9],[7,17],[-1,33],[12,29],[11,13],[5,9],[1,11],[-3,10],[-5,7],[-12,2],[-11,51],[7,22],[10,41],[2,23],[15,37]],[[34112,55039],[4,-12],[11,67],[2,53],[8,54],[14,63],[24,31],[140,-32],[64,-30],[82,-52],[12,-55],[0,55],[-4,56],[23,40],[50,14],[75,-19],[64,23],[87,-3],[133,-45],[59,-31],[25,-28],[4,-50],[-2,-64],[-10,-62],[-21,-82]],[[58566,53853],[-6,25],[-6,23],[-11,29],[-16,12],[-14,-6],[-17,-6],[-8,17],[-1,40],[-5,37],[-8,28],[-24,28],[-63,56],[-48,113],[-25,52],[-17,34],[-25,89],[-29,61],[-35,28],[-23,-14],[-23,-65],[-45,-61],[-20,-3],[-26,34],[-33,23],[-59,11],[-24,-29],[-32,-47],[-27,-28],[-17,-4],[-15,12],[-18,6],[-15,1],[-32,42],[-16,32],[-11,30],[-18,21],[-21,17],[-15,27],[-7,34],[-12,43],[-15,39],[-48,70],[-15,41],[-10,41]],[[57611,54786],[-19,44],[-21,60],[-7,87],[-1,70],[-4,32],[-9,33],[-11,27],[-16,31],[-40,45],[-40,52],[-20,31],[-36,11],[-23,30],[-18,65],[-8,53],[-18,41],[-8,29],[-5,34],[15,104],[-21,37],[-32,47],[-23,52],[-14,48],[-41,63],[-90,95],[-51,60],[-29,54],[-24,53],[-3,22],[16,53],[3,43],[-13,48],[-54,91],[-43,99],[-32,31],[-78,28],[-23,11],[-23,19],[-23,45],[-8,53],[11,84],[-7,26],[-13,7]],[[56707,56834],[4,18],[14,41],[24,27],[65,42],[3,16],[2,53],[5,26],[22,73],[3,29],[1,63],[3,29],[7,21],[17,37],[6,22],[3,48],[-2,94],[9,38],[41,86],[11,38],[3,34],[0,35],[2,35],[12,33],[11,11],[30,10],[20,-7],[143,59],[16,-8],[8,-35],[-1,-55],[3,-27],[7,-19],[23,-27],[15,-44],[9,-16],[23,-31],[106,-253],[30,-24],[29,9],[57,52],[29,14],[202,-15],[22,8],[1,-2],[31,-127],[15,-29],[221,-1],[-4,36],[2,40],[26,52],[13,26],[6,9],[34,38],[33,25],[64,29],[24,46],[13,42],[0,82],[9,14],[15,19],[74,74],[13,16],[131,-172],[73,-136],[5,-7],[3,-2],[4,4],[4,7],[5,4],[3,2],[32,1],[59,7],[20,16],[119,243],[31,78],[8,16],[17,55],[18,95],[4,11],[131,227],[4,18],[1,15],[-19,76],[-5,39],[0,60],[3,93],[-1,59],[0,7],[-2,9],[-1,3],[-73,168],[185,2],[0,14],[0,7],[0,7],[-4,20],[-2,26],[0,8],[0,7],[1,14],[0,7],[0,4],[0,3],[0,3],[1,3],[132,-4],[-1,-47],[-16,-112],[0,-66],[-4,-77],[-1,-6],[-3,-16],[-4,-10],[-3,-9],[-1,-3],[-2,-6],[0,-8],[28,-427],[-1,-11],[-1,-7],[-8,-27],[-1,-9],[-1,-6],[3,-5],[61,-46],[3,-3],[3,-4],[22,-55],[120,-202],[4,-10],[12,-64],[2,-10],[0,-15],[0,-12],[-3,-38],[1,-17],[2,-12],[2,-13],[0,-4],[-1,-3],[0,-6],[-18,-74],[-6,-52],[-2,-44],[1,-25],[2,-17],[1,-4],[1,-2],[1,-2],[1,-1],[51,0],[1,0]],[[59466,57293],[-1,-24],[2,-116],[2,-102],[3,-167],[0,-43],[-2,-55],[-6,-21],[-15,-31],[-18,-28],[-47,-7],[-39,1],[-27,6],[-38,3],[-36,-6],[-13,-24],[-19,-83],[-28,-122],[-14,-51],[-4,-30],[4,-18],[19,-26],[40,-36],[46,-21],[34,-9],[24,-10],[18,-12],[66,-93],[21,-43],[12,-38],[2,-41],[10,-41],[38,-81],[21,-47],[57,-61],[22,-68],[21,-33],[20,-36],[11,-53],[25,-154],[16,-81],[17,-66],[7,-108],[13,-48],[14,-58],[23,-53],[25,-41],[4,-11]],[[59796,55006],[-51,-104],[-57,-116],[-66,-135],[-73,-147],[-56,-116],[-56,-114]],[[56707,56834],[-28,15],[-35,11],[-67,13],[-27,19],[-12,29],[4,73],[-7,16],[-11,13],[-7,32],[1,38],[36,85],[7,45],[6,158],[4,55],[-3,65],[-28,119],[-25,83],[-40,123],[-16,41],[-81,169],[-9,25],[-20,72]],[[56349,58133],[10,63],[12,94],[1,43],[-5,45],[-21,33],[-18,4],[-8,17],[-16,25],[-15,19],[-14,37],[-10,52],[7,184],[-5,25],[-20,7],[-5,13],[1,36],[-12,105],[-12,87],[7,48],[-18,66],[-33,28],[-31,-9],[-33,-13],[-20,4],[-14,12],[-10,24],[-5,28],[5,43],[18,79],[23,64],[46,59],[13,31],[7,35],[1,40],[-3,42],[-5,38],[-14,51],[-13,60],[0,40],[6,29],[13,35],[24,39],[6,8],[16,21],[13,15],[34,42],[8,19],[-3,24],[-8,20],[-14,27],[-2,33],[-4,57],[-7,37],[-5,26],[9,20],[14,28],[18,17],[28,15],[11,19],[3,38],[-1,37],[10,27],[14,57],[10,27],[18,30],[19,38],[8,43],[2,43],[-10,127],[21,54],[27,44],[38,-3],[60,9],[40,19],[29,-1],[66,-24],[5,6],[2,5],[3,34],[0,85],[0,257],[0,257],[0,257],[0,257],[0,257],[0,257],[0,256],[0,257]],[[56661,63073],[0,72],[0,72],[0,72],[0,72],[68,0],[69,0],[68,0],[69,0],[1,1],[0,1],[1,1],[1,1],[0,287],[0,287],[0,287],[0,287]],[[56938,64513],[107,0],[106,0],[106,0],[106,0],[106,0],[106,0],[106,0],[106,0],[106,0],[107,0],[106,0],[106,0],[106,0],[106,0],[106,-1],[106,0],[33,0],[14,5],[27,107],[12,8],[17,-6],[7,-25],[-6,-37],[-9,-51],[52,0],[91,0],[91,0],[92,0],[91,0],[91,0],[91,0],[91,0],[91,0],[91,0],[92,0],[91,0],[91,0],[91,0],[91,0],[91,0],[91,1]],[[60241,64514],[4,-132],[12,-105],[43,-150],[36,-81],[13,-44],[1,-21],[-1,-19],[-11,22],[-19,15],[-3,-70],[5,-50],[4,-94],[15,-101],[-11,-93],[2,-158],[19,-190],[-4,-120],[32,-283],[30,-156],[17,-39],[19,-20],[36,-14],[53,-79],[43,-85],[15,-44],[20,-48],[14,9],[9,12],[13,-39],[67,-84],[10,-39]],[[60724,62214],[-24,-38],[-28,-66],[-7,-26],[-3,-16],[-3,-20],[-8,-19],[-16,-27],[-6,-12],[-4,-18],[-9,-12],[-11,-1],[-9,-8],[-14,-12],[-20,6],[-21,-12],[-8,-14],[-16,-13],[-17,-3],[-5,-4],[-16,-22],[-19,-30],[-23,-19],[-8,-6],[-10,-21],[-16,-103],[-12,-27],[-19,-3],[-26,0],[-22,-9],[-30,12],[-14,-2],[-4,-22],[-6,-89],[1,-38],[-12,-45],[-13,-56],[5,-95],[2,-94],[-24,-142],[-4,-32],[-24,-113],[-13,-41],[-31,-210],[-13,-65],[-26,-68],[6,-110],[6,-118],[6,-110],[9,-166]],[[60145,60055],[-22,-155],[1,-84],[-16,-124],[-12,-58],[-11,-34],[-10,-35],[-17,-78],[-14,-102],[-7,-105],[0,-61],[-3,-28],[-5,-17],[-33,-12],[-46,-12],[-25,-14],[-17,-22],[-21,-49],[-40,-137],[-22,-83],[-33,-115],[-39,-81],[-8,-39],[-7,-73],[-14,-116],[-13,-83],[2,-66],[-12,-115],[2,-56],[-14,-31],[-18,-30],[-13,-7],[-27,34],[-20,34],[-8,9],[-18,-21],[-21,-32],[-25,-75],[-19,-75],[11,-159],[-1,-35],[-5,-38],[-30,-119],[-7,-37],[-11,-72],[-11,-124],[0,-30]],[[72213,57390],[-17,-6],[-14,38],[-3,17],[3,11],[4,6],[5,-2],[6,-36],[16,-28]],[[72187,57056],[8,-43],[-23,29],[-15,25],[-6,20],[32,-22],[4,-9]],[[72217,57495],[26,-3],[29,2],[20,-8],[34,-89],[93,-159],[51,-162],[4,-35],[7,-30],[12,-9],[11,-14],[50,-156],[6,-31],[-1,-34],[3,-25],[14,-13],[16,-6],[11,-24],[14,-124],[0,-39],[3,-17],[64,-193],[4,-24],[-1,-18],[2,-15],[12,-34],[20,-92],[9,-21],[12,-81],[1,-154],[-4,-69],[-12,-84],[-14,-81],[-16,-59],[-21,-50],[-71,-106],[-21,-22],[-93,-66],[-68,-63],[-64,-17],[-63,34],[-48,83],[-24,122],[-17,127],[-25,141],[-18,435],[-9,122],[-15,155],[2,67],[10,64],[0,-141],[9,-17],[7,18],[7,146],[5,62],[25,161],[1,29],[-5,61],[1,30],[38,113],[9,66],[5,67],[-2,73],[-7,72],[31,-23],[17,-25],[17,-17],[14,9],[16,0],[-11,39],[-36,36],[-59,22],[-18,29],[-7,25],[3,29],[5,11]],[[50442,74119],[-6,-7],[-18,7],[-28,0],[-1,23],[4,16],[5,17],[17,-33],[27,-6],[0,-17]],[[50873,74763],[27,-19],[28,17],[15,-5],[15,-9],[3,-37],[-13,-41],[-18,-41],[-16,-45],[-13,-52],[-25,-31],[-23,-18],[-48,38],[-28,10],[-8,14],[-7,58],[-12,18],[-19,8],[-16,-14],[-21,-31],[-12,31],[-17,5],[-7,19],[0,23],[115,139],[33,31],[71,36],[11,-5],[-9,-22],[0,-9],[9,-10],[-2,-17],[-9,-14],[-4,-27]],[[51192,74793],[-5,-7],[-85,67],[-28,7],[-7,10],[1,35],[2,15],[57,7],[46,-24],[25,-67],[2,-11],[-8,-32]],[[50401,74261],[-10,-35],[-42,12],[-10,15],[9,40],[13,5],[0,28],[13,29],[60,23],[14,-20],[3,-28],[-36,-61],[-14,-8]],[[49501,76847],[1,-20],[10,-28],[12,-10],[24,-14],[18,-2],[25,-7],[17,-16],[1,-24],[-5,-28],[-10,-25],[-6,-20],[6,-11],[9,-9],[9,-2],[7,3],[5,15],[9,19],[5,2],[0,-10],[4,-13],[31,-23],[67,-41],[26,-1],[22,-5],[6,-17],[43,-64],[10,2],[19,-1],[23,5],[16,12],[11,-2],[12,-13],[14,-10],[19,-21],[16,-26],[11,-9],[67,18],[15,-16],[16,0],[18,4],[39,-8],[32,2],[3,7],[3,57],[5,21],[7,5],[19,-4],[68,-34],[28,-21],[27,-17],[24,-2],[15,-11],[22,-55]],[[50396,76379],[-3,-27],[1,-10],[3,-19],[-1,-21],[6,-14],[10,-2],[14,5],[14,8],[26,23],[7,4]],[[50473,76326],[43,-27],[19,-17],[7,-20],[9,-19],[13,-3],[18,19],[29,20],[48,-18],[54,-26],[23,-3],[1,13],[4,18],[9,8],[13,3],[19,9],[21,16],[21,6],[23,-11],[28,-10],[17,0]],[[50892,76284],[7,-36],[14,-14],[5,-31],[-24,-17],[-15,-2],[-4,-54],[6,-16],[14,-14],[4,-16],[3,-80],[-28,-48],[-40,-54],[-193,-173],[-46,-84],[-17,-19],[-143,-53],[-101,-57],[-48,-20],[-60,-98],[-28,-40],[23,-11],[26,-47],[-9,-21],[-38,-32],[-17,-10],[-9,5],[-9,-4],[-64,-170],[-58,-123],[-32,-53],[-32,-79],[-70,-206],[-1,-59],[35,-204],[19,-54],[28,-45],[53,-38],[12,-38],[-18,-36],[-52,-64],[-91,-86],[-39,-68],[-8,-66],[-27,-30],[-10,-92],[-16,-61],[-4,-20],[-17,-47],[-2,-33],[28,-47],[-14,-20],[-14,-9],[-32,-5],[-108,-6],[-87,-100],[-44,-89],[-39,-165],[-48,-98],[-21,-18],[-33,43],[-41,7],[-40,-15],[-20,-33],[-33,-19],[-32,16],[-68,9],[-31,-2],[-48,-27],[-41,18],[-69,9],[-150,-21],[-18,-11],[-19,-41],[-48,-70],[-72,-3],[-66,-45],[-16,-29],[-28,-79],[-9,-58],[-5,-1],[-7,14],[-11,-4],[-5,-45],[-25,-20],[-20,-7],[-51,36],[-42,54],[-22,3],[-36,84],[-16,54],[-11,57],[2,22],[-3,19],[-32,23],[-8,53],[24,68],[19,30],[12,8],[-29,-3],[-21,-44],[-27,71],[-109,138],[7,31],[-1,18],[-18,-37],[-13,-10],[-56,6],[-64,-17]],[[47942,73259],[-17,144],[-8,55],[-2,35],[17,82],[18,34],[24,69],[30,58],[31,13],[14,9],[11,44],[7,38],[-5,4],[-36,-8],[-66,159],[2,26],[8,38],[6,47],[1,38],[17,32],[26,32],[22,46],[11,46],[3,41],[-13,29],[-36,16],[-37,117],[-8,73],[-8,8],[-23,33],[-22,62],[-3,10],[23,11],[93,1],[20,13],[3,5],[17,49],[18,80],[4,49],[-6,20],[-31,49],[-1,15],[5,23],[18,25],[25,28],[14,25],[-3,19],[-8,20],[-1,18],[5,23],[1,79],[4,20],[-5,71],[-6,58],[-20,75],[4,17],[9,14],[29,26],[24,62],[35,51],[45,41],[31,46],[13,35],[9,10],[-3,16],[-6,24],[-18,23],[-23,13],[-26,0],[-16,4],[-4,19],[1,49],[-1,49],[-5,22],[-12,17],[-24,-5],[-20,14],[-16,3],[-9,-10],[-45,3],[-19,8],[-14,9],[-8,-5],[-5,-10],[-1,-15],[-3,-19],[-17,-18],[-37,-18],[-30,2],[-28,12],[-9,10],[-13,8],[-57,-10],[-7,7],[-19,-18],[-29,-22],[-16,-1],[-6,4],[-2,10],[-12,34],[3,18],[23,53],[-2,12],[-10,17],[-8,25],[-3,12],[-15,2],[-15,-13],[-60,-26],[-14,-9],[-26,-26],[-27,-39]],[[47561,76002],[-20,-8],[-8,12],[-2,91],[32,60],[22,37],[-10,7],[-24,-1],[1,29],[12,13],[11,31],[-13,14],[-10,20],[0,53],[3,22],[-3,23],[-49,-32],[-13,5],[0,40],[27,60],[3,18],[-32,9],[-24,30],[-14,26],[-16,38],[0,34],[16,79],[23,24],[20,14],[42,55],[57,-10],[36,11],[32,28],[19,7],[29,24],[-1,33],[-10,25],[9,23],[33,29],[37,37],[42,7],[43,34],[29,-22],[25,7],[29,-25],[38,-58],[56,-24],[45,19],[78,3],[40,-7],[70,14],[40,-5],[64,29],[51,-36],[97,-17],[58,-30],[162,-49],[59,-1],[82,28],[35,21],[32,-13],[47,24],[23,-4],[29,-35],[104,-46],[27,39],[20,9],[74,-24],[75,-49],[39,-3],[57,13],[46,32],[9,4]],[[45462,68190],[-23,-131],[-22,-52],[-13,-17],[-32,-14],[-38,82],[-19,83],[-11,26],[17,21],[25,-3],[54,17],[11,7],[55,84],[55,10],[1,-27],[-60,-86]],[[46190,68497],[-19,-38],[-21,13],[10,83],[9,25],[39,36],[32,15],[9,38],[11,15],[11,-23],[-9,-26],[-6,-84],[-22,-26],[-44,-28]],[[46056,68069],[-38,-65],[-38,15],[-6,11],[38,16],[34,50],[22,110],[35,121],[7,52],[13,20],[19,2],[8,-4],[9,-27],[0,-61],[-10,-102],[-18,-89],[-75,-49]],[[45722,68057],[-2,-45],[6,-44],[-1,-69],[-13,-36],[-35,-37],[-26,6],[-15,15],[-27,60],[-1,61],[25,41],[10,51],[64,-9],[6,9],[4,3],[5,-6]],[[45226,67984],[-11,-5],[-14,15],[-14,45],[10,34],[8,16],[13,-3],[23,-25],[8,-25],[0,-16],[-23,-36]],[[45031,67862],[-27,-94],[-34,35],[-8,12],[-7,19],[33,4],[33,47],[10,-23]],[[45046,68256],[-7,-5],[-7,46],[-33,111],[20,50],[37,1],[15,-34],[5,-36],[-7,-21],[2,-42],[-4,-27],[-21,-43]],[[85175,73606],[9,11],[0,16],[0,51],[25,36],[34,73],[17,40],[20,38],[22,25],[22,11],[35,5],[66,-4],[13,4],[46,4],[11,-7],[33,-4],[38,5],[18,11],[18,18],[15,33],[15,62],[17,48],[10,9]],[[85659,74091],[68,-258],[64,-166],[56,-121],[79,-232],[23,-124],[2,-77],[13,-106],[-11,-60],[3,-96],[-5,-49],[-9,-36],[-1,-70],[3,-37],[1,-49],[6,-19],[9,-7],[14,18],[18,7],[-3,-59],[-22,-150],[-18,-109],[-25,-95],[-32,-87],[-38,-34],[-27,-13],[-51,-4],[-43,15],[-36,-11],[-15,-18],[-11,-31],[8,-48],[-1,-36],[-16,3],[-31,21],[-34,2],[-16,11],[-16,51],[-17,-2],[-29,-31],[-44,-6],[-15,-17],[-5,-21],[6,-26],[22,-35],[-7,-36],[-23,-18],[-19,44],[-12,43],[-13,2],[-20,-12],[-4,-46],[10,-32],[15,-36],[-22,-42],[-5,-30],[-16,-21],[-42,47],[6,34],[18,33],[3,34],[-6,20],[-61,-86],[-37,-96],[-19,7],[-9,25],[-11,10],[-40,-63],[-8,-49],[-14,-2],[-7,21],[0,45],[-7,37],[-41,56],[-19,48],[10,27],[34,-15],[28,2],[-6,23],[-9,11],[19,12],[15,27],[-13,7],[-19,-15],[-16,7],[-6,63],[-20,65],[-10,63],[19,36],[10,56],[18,81],[9,27],[25,19],[9,21],[-14,11],[-22,9],[1,24],[15,12],[16,26],[32,32],[10,59],[-9,15],[-20,14],[5,30],[8,23],[-3,14],[-24,38],[-16,36],[5,40],[-4,60],[2,51],[-1,28],[-11,62],[-5,63],[-16,-10],[-12,-15],[-44,22],[-14,1],[-5,47],[15,57],[38,50],[21,6],[16,22],[26,7],[30,-34],[27,-7],[15,-59],[9,-12],[2,22],[22,25],[5,19],[-4,11],[-25,10],[-23,73],[-3,32],[-9,20],[13,59],[-26,67],[-13,21],[2,59],[-14,39],[-8,21],[-4,36],[4,16],[12,6],[3,15]],[[85761,71888],[-27,-36],[-35,48],[-8,26],[26,39],[23,44],[15,3],[6,-124]],[[85573,71892],[-3,-56],[-20,-3],[-11,36],[-13,-17],[-6,-1],[-10,45],[-2,36],[23,26],[14,-16],[20,-8],[8,-42]],[[85064,71641],[-18,-9],[-10,20],[-7,6],[4,26],[29,51],[6,17],[27,-10],[10,-27],[-13,-42],[-28,-32]],[[85144,73580],[-2,-76],[-15,4],[-10,7],[-5,15],[-10,71],[11,29],[23,-23],[8,-27]],[[85208,71626],[5,-27],[-22,5],[-12,26],[1,23],[14,3],[14,-30]],[[85499,71782],[-3,-18],[-14,27],[14,30],[3,-39]],[[85115,72864],[-4,-38],[-18,25],[-5,82],[19,-24],[8,-45]],[[85047,71849],[-4,-14],[-12,4],[-12,40],[-5,31],[-13,18],[20,27],[25,-49],[1,-57]],[[86365,73432],[-13,-18],[-15,18],[-2,18],[8,15],[18,10],[9,-14],[-5,-29]],[[85090,70981],[-13,-13],[-11,8],[-3,6],[-14,33],[-4,17],[10,32],[38,53],[99,51],[18,2],[39,-21],[9,-42],[-7,-35],[-9,-24],[-46,-40],[-35,-19],[-71,-8]],[[58690,38938],[2,-30],[2,-14],[13,-80],[20,-119],[13,-111],[18,-151],[0,-84],[4,-33],[16,-41],[20,-70],[7,-39],[7,-30],[21,-56],[16,-85],[14,-113],[12,-54],[4,-27],[5,-49],[0,-102],[0,-118],[0,-133],[1,-109],[-2,-55],[1,-157],[-18,-82],[2,-64],[6,-42]],[[58920,36382],[24,4],[42,-17],[35,2],[31,2],[52,3],[30,0]],[[59134,36376],[-10,-133],[-40,-208],[-13,-95],[-34,-341],[-44,-172],[-25,-71],[-72,-126],[-20,-25],[-18,-17],[-31,-14],[-123,-254],[-46,-123],[-41,-178],[-40,-98],[-60,-210],[-53,-161],[-51,-147],[-88,-203],[-39,-59],[-27,-26],[-70,-118],[-99,-189],[-75,-168],[-113,-190],[-65,-84],[-99,-164],[-27,-24],[-111,-152],[-79,-93],[-129,-107],[-51,-30],[-122,28],[-51,-15],[-43,-65],[-4,-93],[-18,-14],[-27,4],[-85,39],[-46,-7],[-27,-50],[-22,-63],[-64,-3],[-115,65],[-135,40],[-31,4],[-65,-48],[-23,-7],[-95,10],[-53,31],[-51,0],[-38,-26],[-47,-8],[-127,-175],[-66,0],[-56,-21],[-28,1],[-53,24],[-19,-1],[-30,-11],[-30,-31],[-68,-13],[-26,-27],[-115,-159],[-26,6],[-22,11],[-59,1],[-68,86],[-26,-6],[7,26],[2,45],[-14,32],[-10,14],[-26,-3],[-14,39],[-41,3],[-14,-9],[-20,-2],[-1,39],[1,24],[-1,38],[-5,46],[-16,15],[-12,6],[-28,-3],[-20,-5],[-10,-14],[-10,-33],[0,-103],[-15,29],[-16,62],[-5,66],[6,78],[31,29],[-3,53],[-6,45],[-35,117],[-13,54],[-29,36],[-23,87],[-23,32],[-9,61],[-22,49],[-8,77],[12,44],[20,24],[20,-38],[24,15],[35,56],[21,85],[1,135],[-5,85],[-28,219],[-13,50],[-63,157],[-72,210],[-92,330],[-44,199],[-66,401],[-59,227],[-72,212],[-9,14]],[[54568,35358],[11,26],[39,49],[17,13],[10,-6],[9,13],[9,33],[2,31],[4,44],[9,27],[9,52],[16,34],[34,22],[26,-30],[11,-29],[5,-38],[11,-18],[18,1],[13,-24],[8,-48],[-2,-35],[-10,-22],[1,-28],[14,-35],[5,-34],[9,-45],[47,-25],[23,-15],[39,-5],[38,-20],[35,-34],[58,-9],[80,18],[66,-8],[52,-34],[38,-6],[24,21],[10,31],[-3,41],[11,25],[26,11],[21,31],[16,50],[37,40],[57,32],[29,-1],[0,81],[0,256],[0,256],[0,257],[0,256],[0,256],[0,256],[0,256],[0,242]],[[55550,37570],[13,-17],[88,-128],[24,-68],[11,-43],[38,-155],[28,-140],[23,-105],[2,-48],[3,-47],[4,-23],[-3,-25],[-16,-57],[-16,-44],[-20,-60],[-2,-79],[6,-93],[12,-46],[16,-15],[36,23],[23,-7],[32,-18],[107,11],[13,-6],[40,-6],[14,7],[12,20],[14,56],[12,18],[23,9],[27,15],[22,33],[35,110],[70,98],[22,23],[14,26],[11,36],[25,123],[19,103],[6,48],[17,79],[20,50],[19,27],[10,7],[26,13],[32,13],[34,-14],[37,-31],[42,-51],[42,-64],[20,-32],[21,-15],[37,-5],[25,1],[38,-63],[19,-4],[44,-19],[53,-20],[34,2],[36,34],[26,2],[33,-3],[37,10],[27,14],[21,30],[18,33],[21,97],[12,78],[19,89],[23,122],[8,85],[8,23],[33,26],[28,18],[74,33],[15,18],[14,40],[32,68],[40,57],[21,32],[37,275],[5,34],[27,73],[17,31],[11,0],[15,20],[20,37],[24,24],[28,9],[18,25],[8,41],[14,20],[21,-1],[11,13],[3,28],[12,24],[22,19],[11,23],[1,27],[26,66],[51,103],[47,58],[45,12],[42,21],[40,32],[30,49],[19,67],[32,38],[65,11]],[[57982,34503],[45,36],[21,23],[15,18],[19,28],[7,68],[5,58],[15,28],[15,19],[13,30],[15,72],[10,70],[2,29],[-6,30],[-10,31],[-9,43],[-12,6],[-23,24],[-33,48],[-29,42],[-27,61],[-11,9],[-26,42],[-12,23],[-8,28],[-7,10],[-12,-8],[-31,-12],[-66,-49],[-41,-46],[-35,-53],[-36,-21],[-26,-18],[-21,-61],[-20,-58],[-17,-51],[-10,-24],[-9,-15],[-10,-33],[-18,-55],[-18,-37],[-24,-20],[-31,-26],[-11,-15],[-1,-22],[11,-52],[11,-49],[17,-59],[13,-42],[20,-52],[12,-31],[-1,-51],[4,-18],[6,-21],[6,-6],[6,-7],[17,-15],[4,-10],[12,-17],[11,-32],[22,-44],[24,-33],[41,-14],[32,-10],[11,6],[11,27],[9,34],[3,43],[10,23],[39,111],[21,41],[13,2],[17,8],[21,4],[16,-4],[4,2],[25,14]],[[60515,24801],[-12,-11],[-56,10],[-6,22],[17,34],[9,14],[29,-7],[24,-28],[4,-9],[-9,-25]],[[61536,50866],[2,47],[-5,24],[-26,71],[-49,132],[-38,99],[-38,102],[0,82],[0,243],[-1,485],[-1,486],[-1,485],[0,243],[-1,99],[4,16],[44,89],[57,118],[76,224],[41,122],[34,101]],[[61634,54134],[9,31],[30,61],[56,37],[36,6],[121,46],[18,19],[11,21],[10,48],[23,68],[31,47],[58,61],[56,52],[13,8],[68,33],[17,11],[28,11],[10,1],[95,-12],[74,-9],[77,-9],[8,7],[53,121],[85,192],[54,123],[84,189],[64,137],[72,151],[69,139],[83,166],[52,105],[82,162],[77,155],[69,137]],[[63327,56449],[41,130],[40,127],[44,136],[52,165],[49,154],[40,126],[0,65],[0,140],[0,96],[0,265],[0,161],[0,155],[0,159]],[[63593,58328],[35,7],[90,41],[71,63],[130,45],[99,114],[17,55],[30,70],[43,23],[111,-82],[18,-6],[-7,-50],[-3,-50],[-23,-88],[-15,-98],[11,-149],[5,-242],[-3,-35],[-7,-34],[-3,-28],[-12,-9],[-5,-16],[9,-6],[34,26],[0,29],[2,14],[28,-32],[21,-13],[5,-31],[-1,-20],[-32,9],[-17,16],[-48,-26],[-29,-29],[-9,-47],[-7,-190],[-11,-123],[-3,-162],[-38,-108],[-14,-76],[-57,-152],[-31,-130],[-9,-64],[-51,-178],[-70,-137],[-25,-174],[-25,-110],[-28,-99],[-62,-177],[-31,-122],[-40,-213],[-12,-135],[-111,-391],[-115,-312],[-72,-263],[-129,-305],[-176,-393],[-230,-467],[-62,-95],[-252,-288],[-163,-241],[-83,-164],[-88,-143],[-69,-136],[-210,-460],[-22,-43],[-20,-41],[-27,-77],[-18,-31],[-50,-131],[-31,-69],[-36,-67],[-14,-47],[-11,-55],[-12,-31],[-31,-130],[-28,-86],[-28,-67]],[[63327,56449],[-95,0],[-92,0],[-91,0],[-16,17],[-77,53],[-97,67],[-120,84],[-85,59],[-92,62],[-92,63],[-73,50],[-90,61],[-79,54],[-11,13],[-44,82],[-57,107],[-11,2],[-27,23],[-25,58],[-25,74],[-23,93],[-11,63],[-31,26],[-15,50],[-28,74],[-20,36],[-7,31],[-9,65],[-17,70],[-15,44],[-4,19],[1,12],[29,95],[13,34],[15,33],[12,33],[4,23]],[[61922,58179],[35,112],[31,99],[24,77]],[[62012,58467],[54,-88],[53,-180],[62,-144],[85,-135],[33,-45],[30,-24],[155,4],[109,122],[100,89],[33,18],[58,-24],[64,-7],[57,-27],[29,7],[114,103],[71,101],[48,42],[20,1],[66,-36],[85,15],[117,87],[37,18],[28,1],[64,-39],[9,2]],[[94357,46942],[-13,-8],[-20,21],[-9,19],[4,30],[12,12],[13,-20],[1,-21],[12,-33]],[[96368,45123],[-24,-9],[-10,2],[-16,50],[12,11],[18,-4],[5,-29],[15,-21]],[[96147,45646],[-22,-10],[-7,3],[-17,-6],[-18,-41],[-13,6],[-10,-2],[-8,34],[0,17],[13,-3],[6,33],[14,17],[32,7],[28,-10],[10,-8],[-9,-30],[1,-7]],[[94604,45047],[-20,-20],[-17,10],[-14,15],[-11,44],[-23,28],[-34,11],[-14,19],[-3,10],[-24,8],[-6,24],[2,25],[3,13],[22,-12],[103,-117],[25,-36],[11,-22]],[[94873,46298],[4,-62],[-2,-21],[-21,45],[-10,-16],[-9,22],[1,46],[1,50],[-4,38],[-11,55],[12,-9],[39,-148]],[[94218,46587],[-4,-1],[-13,7],[-16,2],[-9,20],[11,29],[15,18],[6,-4],[7,-12],[14,-5],[2,-37],[-13,-17]],[[94490,46661],[16,-8],[8,1],[18,-31],[25,-46],[-10,-23],[-20,12],[-7,-5],[-2,3],[-4,23],[-22,23],[-19,2],[-3,27],[20,22]],[[93822,47095],[18,-47],[20,-105],[-4,-36],[-14,-3],[-4,-22],[-20,51],[-26,14],[-19,31],[-6,62],[-2,39],[-15,7],[-42,-10],[-14,-34],[-19,11],[-4,30],[3,29],[26,29],[5,38],[26,64],[15,11],[31,-23],[3,-92],[11,-30],[31,-14]],[[93944,46761],[-6,-2],[-7,23],[15,62],[8,-50],[4,-19],[-14,-14]],[[93918,46840],[-27,-45],[-20,15],[-17,39],[6,47],[3,13],[8,2],[8,10],[9,21],[29,-17],[8,-11],[-18,-29],[6,-9],[4,-14],[1,-22]],[[93718,46823],[0,-8],[-15,16],[-34,78],[6,26],[31,50],[10,7],[8,-31],[-7,-46],[-10,-12],[-5,-43],[16,-37]],[[93523,47279],[-5,-8],[-9,31],[-7,10],[0,34],[-28,57],[-2,39],[16,38],[22,-22],[22,-48],[25,-16],[-5,-32],[-23,-57],[-6,-26]],[[93500,47136],[-3,-15],[-15,71],[1,36],[3,23],[5,7],[12,-79],[-3,-43]],[[93658,47172],[-6,-9],[-30,4],[-23,59],[0,44],[18,40],[22,8],[12,-16],[11,-34],[4,-43],[-3,-38],[-5,-15]],[[93288,47754],[-28,-13],[-17,18],[7,44],[10,23],[35,-41],[-7,-31]],[[93789,46797],[0,-20],[-16,6],[-36,31],[-1,14],[20,5],[15,-4],[12,-18],[6,-14]],[[94374,46501],[61,-92],[27,8],[80,-2],[47,-66],[28,-30],[16,-59],[19,-14],[12,-30],[7,-55],[-5,-9],[-24,-20],[-18,-9],[-47,20],[-44,42],[-89,5],[-41,12],[-14,17],[-13,21],[-21,51],[-17,61],[-2,35],[-2,68],[5,24],[17,25],[18,-3]],[[94410,46927],[0,-14],[-37,48],[-28,59],[-81,64],[-17,33],[-15,4],[-41,54],[-41,36],[-25,47],[-6,19],[-15,11],[-25,51],[-25,34],[-9,62],[-24,43],[-6,19],[77,-35],[36,-68],[30,-38],[11,-28],[27,-38],[25,-4],[24,-38],[23,-10],[18,-20],[114,-172],[-14,-46],[15,-33],[9,-40]],[[93745,47620],[9,-20],[-21,-35],[-29,19],[-6,19],[0,11],[-20,-7],[-40,17],[-54,82],[-58,156],[-56,86],[-11,26],[-1,45],[8,17],[34,-19],[45,-71],[74,-73],[20,-38],[12,-90],[13,-27],[40,-69],[21,-16],[11,-3],[9,-10]],[[94652,47053],[69,-171],[-3,-31],[-9,-19],[-3,-58],[8,-22],[19,-10],[32,-62],[13,-75],[1,-23],[14,-34],[0,-72],[30,-100],[3,-48],[-3,-22],[-12,13],[-37,113],[-41,49],[-5,21],[-42,66],[-28,111],[-30,198],[14,47],[-34,96],[1,25],[15,-6],[10,2],[5,11],[13,1]],[[94920,45859],[35,-34],[20,6],[30,-23],[23,13],[15,-30],[36,-118],[0,-38],[24,-27],[-20,-5],[-28,14],[-22,-10],[-22,23],[-38,12],[-33,27],[-69,87],[0,43],[-11,21],[-3,54],[-25,17],[-29,3],[-2,26],[5,45],[21,-1],[26,-19],[50,-65],[12,-12],[5,-9]],[[56147,79726],[-6,-7],[-95,-32],[-13,5],[-13,18],[-7,14],[-5,9],[-8,26],[-11,19],[-16,15],[-15,17],[-19,1],[-52,-25],[-36,-2],[-23,8],[-32,15],[-62,2],[-43,-13],[-4,-18],[-39,-115],[-57,-43],[-50,-43],[-14,-9],[-25,14],[-28,25],[-23,14],[-17,-6],[-19,-29],[-8,-30],[-56,-22],[-98,-12],[-34,-29],[-11,-36],[-1,-26],[9,-23],[-11,-27],[-4,-11],[-69,-6],[-92,-8],[-55,2],[-52,2],[-35,23],[-43,45],[-45,59],[-5,2],[-6,6],[-29,4],[-7,-3]],[[54763,79496],[-17,19],[-5,25],[-27,66],[-30,109],[0,32],[11,35],[11,28],[1,21],[2,6]],[[54709,79837],[9,45],[21,60],[20,35],[15,11],[30,-10],[52,-9],[39,8],[37,27],[20,23],[18,25],[5,16],[8,7],[31,14],[9,17],[4,31],[3,35],[6,26],[8,19],[57,45],[5,16],[9,16],[17,17],[16,25],[17,15],[22,-1],[21,3],[16,9],[7,1]],[[55231,80363],[29,-8],[5,-28],[3,-30],[51,2],[28,64],[14,8],[24,22],[15,20],[10,-13],[16,-41],[16,-33],[9,-13],[1,-10],[10,-6],[18,-4],[12,-10],[4,-31],[0,-28],[-6,-20],[-3,-18],[13,-7],[19,7],[13,10],[39,-23],[14,51],[15,27],[21,12],[18,16],[17,11],[11,0],[5,4],[15,-1],[16,-5],[23,6],[31,-13],[20,-23],[19,-8],[22,1],[15,13],[22,45],[16,0],[24,7],[35,-1],[80,-9],[21,-18],[49,-22],[22,-25],[9,-31],[5,-21],[51,-32],[75,-42],[18,-5]],[[54587,78628],[-24,14],[-30,6],[-5,-7],[-12,-8],[-6,-14],[4,-55],[-7,-9],[-34,5],[-11,-6],[-18,-38],[-19,-16],[-23,-11],[-18,-14],[-22,-12],[-19,-7],[-8,-17],[-4,-18],[1,-18],[19,-35],[3,-37],[-2,-46],[-5,-24],[-7,-16],[-48,-21],[-49,-38],[-1,-8],[22,-34],[1,-8],[-18,-19],[-2,-19],[2,-22],[10,-22],[3,-21],[-27,-14],[-36,5],[-43,28],[-16,-4],[-14,-15],[-15,7],[-17,17],[-23,36],[-12,23],[-4,23],[-7,4],[-9,-7],[-8,-29],[-22,-51],[-16,-14],[-24,3],[-34,-1],[-21,-5],[-26,19],[-6,-4],[0,-12],[-10,-19],[-15,-12],[-74,28],[-10,23]],[[53771,78062],[17,11],[23,30]],[[53811,78103],[15,-4],[19,7],[9,12],[-13,38],[-30,47],[-16,17],[-22,12],[-4,13],[12,73],[-4,11],[-25,-4],[-6,8],[-2,13],[2,17],[17,29],[19,25],[5,14],[-1,11],[-24,12],[-15,11],[-11,4],[-8,-6],[-6,7],[-6,21],[6,32],[21,30],[24,26],[21,20],[11,8],[6,33]],[[53805,78640],[12,-3],[25,-2],[27,-8],[25,-9],[22,-12],[47,-12],[42,-7],[13,-7],[10,1],[13,-10],[8,7],[5,13],[23,16],[22,21],[14,26],[9,21],[14,14],[16,5],[14,7],[60,10],[62,-8],[30,14],[24,26],[35,7],[2,0],[53,-19],[4,11],[2,5],[-1,55],[17,25],[16,11]],[[54470,78838],[53,-4],[7,-17],[2,-26],[5,-35],[9,-10],[5,-14],[-1,-24],[10,-18],[24,-49],[3,-13]],[[78880,52610],[-42,-38],[-47,34],[15,57],[32,13],[25,-18],[14,-13],[10,-16],[-7,-19]],[[47143,56730],[-1,-17],[-8,-83],[-12,-71],[-8,-17],[-36,-19],[-15,-31],[-13,-101],[-8,-79],[-12,-13],[-52,-114],[-34,-43],[-24,-38],[-22,-48],[-28,-47],[-31,-80],[-21,-82],[-15,-26]],[[46803,55821],[-11,23],[-52,82],[-54,55],[-116,91],[-39,25],[2,33],[13,59],[-22,69],[9,51],[-9,0],[-16,-31],[-36,9],[-23,44],[-19,15],[-9,22],[-12,115],[-9,52],[-17,32],[-36,8],[-15,69],[-19,54],[3,34],[16,-2],[13,-24],[20,-10],[25,58],[23,32],[5,28],[-3,15],[-14,-24],[-37,6],[-9,-21],[-17,-7],[-13,69],[1,40],[5,45],[38,7],[3,14],[-26,10],[-33,52],[-6,35]],[[46307,57055],[16,12],[16,-5],[13,-8],[15,13],[14,20],[8,25],[11,67],[35,22],[21,41],[20,64],[9,45],[8,22],[6,19],[3,22],[9,19],[10,47],[6,44],[20,20],[42,19],[38,-32],[61,27],[3,41],[56,1],[66,0],[55,1],[19,-11],[7,-30],[18,-47],[19,-33],[23,-72],[28,-84],[29,-75],[19,-41],[2,-14],[-1,-17],[-10,-38],[-8,-42],[1,-15],[6,-8],[31,-13],[2,-46],[1,-64],[14,-60],[15,-44],[-1,-16],[-35,-75],[-13,-74],[-7,-21],[-3,-17],[7,-8],[9,5],[14,-6],[13,-2],[17,27],[28,68],[10,8],[21,-6]],[[46520,56126],[-4,-15],[-18,37],[-96,56],[27,29],[66,9],[20,-17],[9,-15],[3,-27],[-7,-57]],[[65427,49139],[1,-53],[-13,18],[-4,34],[-18,26],[-9,24],[20,29],[23,-78]],[[56306,77325],[-10,-10],[-11,-15],[-7,-26],[-1,-42],[-36,-33],[-14,-7],[-6,-21],[-9,-62],[1,-47],[5,-23],[2,-20],[12,-23],[10,-37],[7,-48],[16,-37],[39,-37],[20,-21],[14,-31],[11,-27],[33,-38],[-3,-26],[-7,-26],[-7,-12],[-16,-33],[-16,-19],[-26,-59],[-41,-3],[-10,-5],[-16,-16],[-7,-29],[7,-23],[-1,-24],[-7,-46],[10,-50],[14,-23],[2,-13],[-2,-23],[-22,-47],[-6,-17],[-22,-9]],[[56206,76217],[-7,4],[-11,17],[-11,4],[-26,-19],[-26,-11],[-21,9],[-20,1],[-14,-8],[-11,-3],[-21,-21],[-33,-14],[-16,3]],[[55989,76179],[-6,19],[-6,27],[3,13],[22,21],[3,21],[31,99],[6,32],[0,11],[-8,7],[-17,0],[-76,40],[4,46],[-22,25],[-24,22],[-4,25],[-27,50],[-19,28],[-25,14],[-22,21],[-12,12],[-6,23],[0,14],[-7,14],[-10,-2],[-17,-18],[-22,-16],[-4,-12],[8,-28],[6,-17],[-3,-17],[-7,-21],[-41,-47],[-5,-16],[8,-26],[-5,-13],[-34,-17]],[[55651,76513],[1,14],[-3,23],[-19,25],[-28,19],[-63,65],[-23,9],[-22,7],[-30,32],[-16,5],[-18,22],[-38,76],[-32,41],[-22,20],[-6,21],[-2,20],[1,7]],[[55331,76919],[17,30],[13,4],[16,1],[11,-15],[15,-3],[8,19],[4,27],[-2,35],[-35,82],[-29,57],[-4,12],[7,11],[10,5],[11,-4],[29,-4],[28,5],[9,14],[0,18],[-10,18],[-32,46],[-26,41],[-29,32],[-23,12],[-6,16],[-3,18],[3,31],[1,40],[5,25],[20,47],[19,51],[12,48],[6,45],[-2,13],[-10,9],[-21,10],[-29,-9],[-25,-16],[-10,-1]],[[55279,77689],[-3,20],[4,9],[8,-1],[6,-4],[7,9],[4,27],[-10,94],[18,9],[1,13],[1,12],[19,-16],[27,0],[24,3],[4,9],[-1,14],[-5,10],[-8,9],[-6,13],[-16,5],[-50,34],[-24,36],[0,39],[7,21],[9,7],[-2,7],[-29,18],[-10,24],[9,32],[-15,64],[-15,40],[15,17],[2,24],[1,14]],[[55251,78301],[6,0],[25,16],[8,13],[6,16],[5,4],[17,-17],[17,-2],[19,11],[15,15],[17,12],[8,8],[10,14],[21,39],[23,8],[30,-10],[34,-4],[25,9],[63,-11],[13,-9],[9,-10]],[[55622,78403],[17,-34],[16,-43],[22,-20],[26,-24],[13,-17],[20,-52],[16,-25],[5,1],[5,7],[4,5],[4,-5],[0,-16],[1,-34],[-3,-38],[5,-35],[0,-11],[-3,-10],[0,-9],[6,-9],[21,-23],[20,-36],[22,-26],[22,-16],[13,-1],[22,-29],[43,-21],[14,-7],[9,-12],[7,-14],[0,-14],[-6,-7],[-10,-20],[-3,-25],[-7,-6],[-7,0],[-5,-8],[1,-10],[6,-10],[9,-9],[17,-9],[17,-14],[0,-10],[-4,-11],[-21,-5],[-16,-2],[-8,-4],[1,-21],[45,-21],[21,-20],[10,-26],[29,-17],[47,-8],[33,-27],[18,-45],[30,11],[42,67],[41,17],[40,-32],[22,-26],[4,-20],[-10,-9],[-22,4],[-19,-13],[-14,-29],[-2,-31],[10,-33],[14,-23],[19,-13],[9,-17],[2,-22],[4,-6]],[[46588,60373],[26,-93],[-5,-44],[-6,-65],[15,-47],[17,-31],[12,-28],[14,-39],[2,-77],[-2,-56],[9,-26],[7,-32],[-1,-26],[-5,-24],[-17,-31],[-3,-58],[27,-71],[17,-38],[0,-22],[5,-24],[13,-28],[8,7],[8,23],[4,15],[24,-7],[11,-7],[14,-46],[6,-30],[4,-39],[15,-48],[14,-34],[2,-21],[13,-28],[-8,-64],[1,-32],[-8,-85],[-2,-41],[0,-15],[19,-30],[-2,-43]],[[46836,58988],[-19,8],[-32,5],[-65,-23],[-23,9],[-43,-3],[-30,-12],[-39,-28],[-30,7],[-16,22],[-21,-1],[-24,11],[-26,22],[-23,10],[-26,40],[-11,7],[-9,-11],[-7,-13],[-7,-8],[-14,7],[-5,27],[5,26],[1,19],[-7,11],[-15,4],[-25,-1],[-40,9],[-9,5],[-90,6]],[[46186,59143],[-93,1],[-79,1],[-100,1],[-70,0],[-66,1],[-50,-53],[-55,-56],[-73,-31],[-85,12],[-27,-9],[-28,-25],[-21,-18],[-29,-11],[-37,9],[-16,-6]],[[45357,58959],[-9,26],[-11,42],[7,31],[23,20],[34,26],[19,-14],[10,0],[2,16],[-3,9],[-26,22],[-14,30],[-11,-17],[-10,-37],[-8,-10],[-12,-11],[-6,25],[-3,24],[5,19],[-2,104],[3,55],[-2,49]],[[45343,59368],[16,32],[16,20],[60,2],[57,1],[54,-1],[55,-1],[6,97],[17,8],[26,10],[49,12],[54,11],[12,19],[9,33],[6,28],[11,13],[15,-10],[20,-15],[21,-24],[23,-21],[16,-14],[38,-34],[65,-48],[53,-19],[65,35],[46,22],[6,42],[-7,41],[-35,37],[-47,-4],[-15,-10],[-22,-13],[-13,-4],[-22,8],[-28,33],[-18,32],[-25,15],[-29,16],[-47,66],[-25,12],[-23,4],[-45,-13],[-44,-36],[-23,-81],[-43,1],[-93,3],[-86,2],[-70,-6]],[[45399,59669],[-7,59],[-17,47],[-27,40],[-6,37],[9,33],[26,26],[6,19],[-13,-2],[-21,-18],[-14,0],[-1,51],[-23,66],[-26,112],[-30,46],[-24,91],[-26,35],[-24,16],[-20,-3],[-7,-42],[-25,60],[34,21],[73,75],[85,215],[76,253],[9,60]],[[45406,60966],[10,46],[6,103],[11,62],[10,12],[13,47],[15,83],[18,46],[19,9],[16,-4],[11,-17],[31,-10],[53,-4],[41,12],[29,29],[38,14],[47,1],[25,12],[3,24],[6,7],[10,-10],[9,4],[8,17],[9,1],[9,-14],[39,-5],[70,6],[65,-44],[60,-93],[31,-62],[1,-31],[10,-31],[18,-31],[16,-6],[15,20],[12,-3],[8,-24],[17,-5],[19,15],[14,-5],[2,-14],[3,-8],[9,-3],[13,-19],[17,-49],[14,-69],[11,-88],[14,-48],[18,-8],[10,-18],[2,-22],[5,-14],[9,-8],[15,5],[18,-30],[19,-65],[3,-29],[-3,-16],[1,-11],[12,-11],[12,-21],[10,-32],[21,-29],[32,-24],[23,-37],[15,-50],[29,-41],[6,-5]],[[60250,66464],[-7,0],[-20,39],[-11,29],[-12,19],[-53,39],[-8,25],[9,25],[5,-25],[10,-14],[44,-36],[49,-76],[9,-7],[-15,-18]],[[61663,61471],[21,-3],[-9,19],[-2,9],[10,26],[30,-55],[-1,-64],[-2,-15],[-8,14],[-6,13],[-2,15],[-8,16],[-30,-10],[-18,17],[-27,55],[-7,39],[11,8],[12,19],[7,31],[-7,32],[16,-5],[9,-33],[1,-75],[3,-16],[-5,-17],[12,-20]],[[61888,61273],[-3,46],[-16,68],[-1,49],[-8,48],[-14,37],[-26,38],[-3,53],[-19,52],[-25,42],[-15,77],[-10,103],[-67,135],[-84,124],[-26,71],[-42,143],[-21,113],[-56,130],[-2,50],[-9,61],[-13,68],[-7,54],[-57,235],[-18,37],[-16,53],[-4,40],[-5,22],[-39,39],[-38,99],[-111,157],[-55,15],[-43,56],[-32,74],[-34,126],[-60,136],[-50,194],[16,71],[-1,49],[-16,84],[-17,64],[-12,61],[10,88],[3,98],[10,52],[7,57],[-9,115],[-17,61],[2,41],[-19,20],[-16,45],[16,-1],[-29,62],[-11,34],[-11,84],[-14,64],[-45,146],[-22,89],[-49,114],[-53,85],[-33,38],[-16,35],[-28,2],[-30,50],[-21,1],[-26,8],[-31,97],[-26,90],[-44,118],[11,31],[13,50],[-6,65],[-7,44],[-19,81],[-64,202],[-17,29],[-27,34],[-16,88],[-8,78],[-44,38],[-74,282],[-44,99],[-17,66],[-50,109],[-24,109],[-51,100],[-44,173],[-67,174],[-29,30],[-69,12],[-30,13],[-27,-38],[-2,48],[19,67],[26,140],[6,123],[42,364]],[[59708,68751],[59,-18],[49,-16],[71,-23],[74,-23],[43,-14],[14,6],[60,89],[54,81],[32,98],[31,96],[14,20],[48,17],[76,29],[75,28],[5,9],[18,77],[22,97],[5,10],[5,10],[54,55],[32,33],[-46,97],[-44,92],[-49,103],[-41,80],[-63,120],[-40,79],[71,37],[77,40],[78,41],[94,49],[73,38],[110,57],[53,28],[10,7],[41,68]],[[60873,70348],[62,-19],[93,-29],[90,-27],[95,-32],[31,-27],[91,-96],[60,-63],[69,-74],[87,-91],[59,-63],[77,-81],[59,-92],[76,-117],[82,-128],[68,-100],[94,-137],[93,-135],[90,-133],[73,-106],[91,-134],[8,-5],[92,-15],[125,-21],[125,-20],[113,-19],[49,19]],[[62925,68603],[53,-12],[72,-17],[43,-11],[82,-21],[25,-88],[9,-61],[8,-60],[24,-54],[56,1],[49,1],[61,2],[49,1]],[[63456,68284],[15,-54],[7,-54],[29,-128],[41,-100],[9,-36],[7,-55],[-7,-21],[-3,-23],[30,-55],[51,-46],[19,-12],[22,-21],[-17,-31],[30,-74],[34,-74],[37,-17],[50,-113],[74,-73],[46,-96],[-4,-2],[-14,10],[-16,13],[-5,-12],[0,-40],[5,-47],[23,-41],[21,-29],[8,-56],[-17,-120],[-5,1],[-11,10],[-12,2],[-6,-7],[14,-86],[13,-66],[17,-52],[14,-77],[11,-32],[49,-82],[14,-68],[14,-127],[30,-70],[17,-55],[22,-46]],[[64112,66122],[14,-63],[20,-49],[11,-12],[15,-5],[20,0],[23,12],[25,12]],[[64240,66017],[20,-24],[20,3],[2,-23],[-13,-31],[-17,-78],[24,-13],[22,-6],[17,-13],[9,0]],[[65329,64921],[20,-65],[17,-54],[23,-75],[25,-79],[24,-75],[17,-57],[-9,-58],[-10,-64],[-10,-63],[-11,-64],[-10,-64],[-10,-64],[-10,-64],[-10,-63],[-11,-64],[-10,-64],[-10,-64],[-10,-63],[-10,-64],[-10,-64],[-11,-64],[-10,-63],[-10,-64],[-12,-77],[-30,-20],[-47,-33],[-48,-33],[-48,-33],[-48,-34],[-48,-33],[-47,-33],[-48,-33],[-48,-33],[-48,-33],[-48,-33],[-47,-33],[-48,-33],[-48,-33],[-48,-33],[-47,-33],[-48,-33],[-39,-27]],[[60165,66654],[-3,-8],[-12,21],[1,44],[10,25],[-1,-34],[5,-35],[0,-13]],[[52062,52746],[-11,-15],[-12,12],[-3,23],[16,44],[7,11],[6,-9],[4,-12],[1,-18],[-8,-36]],[[51849,51912],[-28,-42],[-10,11],[-7,29],[-8,64],[3,30],[13,35],[28,34],[17,3],[17,-46],[0,-47],[-25,-71]],[[53468,77131],[-17,-4],[-8,24],[12,27],[18,4],[3,-21],[-8,-30]],[[2130,44086],[31,-54],[12,-72],[-13,-69],[-30,17],[-42,-15],[-15,5],[-34,85],[-23,38],[-10,35],[30,-4],[44,24],[50,10]],[[2374,43751],[-76,0],[-38,26],[-13,0],[-33,55],[-5,28],[17,19],[36,10],[70,-41],[11,-37],[16,-4],[13,-16],[3,-26],[-1,-14]],[[33007,59422],[-8,-9],[-21,39],[3,45],[12,25],[12,14],[12,2],[4,-38],[-3,-52],[-11,-26]],[[32992,59328],[-4,-6],[2,0],[-2,-5],[-1,5],[-3,2],[-2,1],[-4,0],[0,5],[4,-3],[7,3],[0,4],[-2,4],[-1,3],[2,5],[8,10],[3,5],[1,-2],[0,-2],[0,-2],[1,-2],[-4,-8],[-5,-17]],[[32962,59156],[-2,-1],[-3,2],[1,2],[3,1],[1,4],[0,5],[0,6],[2,3],[2,1],[1,-2],[1,-6],[-2,-4],[-1,-3],[-1,-5],[-2,-3]],[[33084,59805],[-15,-61],[-31,38],[-3,48],[3,29],[18,54],[15,36],[10,12],[6,-47],[-3,-109]],[[32630,61705],[-14,-12],[-12,17],[3,40],[11,1],[11,-18],[1,-28]],[[32602,61773],[-7,-8],[-13,35],[-20,10],[-18,21],[0,4],[0,11],[4,12],[9,9],[22,-28],[11,-36],[10,-17],[2,-13]],[[58487,50460],[-7,3],[-13,11],[-21,36],[-38,-20],[-10,1],[-14,-18],[-12,-21],[-7,-1],[-7,3],[-33,42],[-12,-1],[-5,-120],[-5,-67],[-7,-30],[-23,-29],[-24,-16],[-13,1],[-52,-9],[-21,0],[-11,10],[-15,68],[-27,30],[-27,14],[-10,-4],[-10,-35],[-4,-32]],[[58059,50276],[-26,22],[-7,27],[-1,46],[-10,62],[6,27],[10,17],[21,33],[33,46],[7,22],[4,37],[-2,84],[-3,72],[4,26],[15,55],[19,57],[24,59],[14,6],[18,23],[19,34],[11,12]],[[90522,76877],[4,-3],[5,0],[5,1],[2,-6],[1,-11],[-3,-1],[-7,-2],[-4,-1],[-2,8],[-1,6],[-4,4],[0,4],[4,1]],[[90654,76972],[-7,-3],[-12,3],[-4,3],[2,5],[8,8],[6,-3],[5,-2],[2,-11]],[[90567,76848],[-3,-1],[-2,7],[6,8],[11,9],[4,-5],[-4,-7],[-5,-4],[-7,-7]],[[88104,83582],[-34,-100],[-24,-1],[-18,21],[-39,-8],[-14,5],[23,31],[55,48],[23,-1],[22,10],[6,-5]],[[91830,85840],[-22,-7],[-11,16],[-1,11],[34,25],[21,36],[13,-22],[4,-15],[-38,-44]],[[83405,93945],[-70,-26],[-60,0],[-42,46],[33,18],[57,7],[31,-6],[44,-29],[7,-10]],[[84594,94383],[-17,-1],[-32,15],[-8,21],[0,10],[26,8],[33,-5],[25,-19],[4,-7],[-31,-22]],[[79519,96892],[-33,-4],[-36,12],[10,26],[81,4],[30,39],[51,-2],[14,-11],[8,-13],[-1,-17],[-11,0],[-48,-2],[-9,-9],[-56,-23]],[[79837,96337],[-32,0],[-9,27],[27,33],[34,0],[29,-10],[10,-5],[10,-12],[4,-18],[-73,-15]],[[77107,95967],[-15,-9],[-29,4],[-24,22],[-9,35],[20,9],[57,-61]],[[76903,95736],[-15,-6],[-13,4],[-4,7],[1,29],[25,38],[1,12],[12,6],[31,-7],[15,-16],[2,-7],[-21,-38],[-34,-22]],[[77815,97703],[-61,-7],[7,40],[4,11],[31,6],[20,-10],[44,-7],[-45,-33]],[[71320,94150],[-26,-4],[-118,22],[-43,27],[16,18],[31,0],[140,-63]],[[72974,94522],[-27,-20],[-37,11],[-27,13],[-14,19],[14,10],[40,7],[24,-7],[21,-22],[6,-11]],[[73543,94734],[-13,-34],[-78,17],[-11,14],[42,21],[38,12],[54,2],[-32,-32]],[[74070,95035],[23,-11],[73,17],[14,-6],[20,-24],[-31,-45],[-23,-18],[-66,10],[-83,1],[-37,25],[20,26],[48,16],[28,15],[14,-6]],[[66475,98677],[-60,-7],[-105,12],[-30,14],[7,13],[68,18],[54,4],[57,-19],[26,-23],[-17,-12]],[[86301,76210],[-8,15],[-2,26],[-9,25],[-18,34],[-7,35]],[[86257,76345],[16,18],[-3,32],[-15,30],[-23,6],[-5,8],[1,16],[8,16],[11,14],[24,19],[40,14],[22,12],[19,3],[20,-6],[18,18],[17,11],[4,31],[1,47],[6,14],[8,20],[11,26],[10,67],[8,46],[5,23],[1,32],[-5,20],[-10,13],[-7,8],[-1,36],[1,48],[-3,31],[11,172],[12,39],[-36,229],[-11,73],[-7,37],[-16,54],[-10,27],[4,26],[14,25],[14,12],[40,6],[12,9],[49,28],[11,17],[26,40],[10,31],[11,40],[24,21],[15,36],[16,13],[16,-31],[19,-17],[25,-11],[31,-13],[51,-25],[51,-21],[33,-17],[16,-7],[32,-12],[14,-8],[13,-10],[21,26],[28,33],[-5,51],[5,58],[20,100],[23,29],[12,5],[12,11],[23,19],[8,26],[-5,31],[8,31],[2,30],[8,39],[11,11],[15,13],[12,20],[10,31],[7,35],[-3,41],[14,26],[23,22],[8,14],[4,35],[1,16],[6,18],[-4,36],[-6,40],[26,66],[18,57],[4,84],[2,13],[7,40],[4,16],[14,52],[19,34],[-4,38],[-7,37],[1,25],[16,29],[10,15],[8,21],[14,9],[12,5],[28,5],[16,22],[15,22],[28,58],[9,35],[6,17],[-15,50],[-13,42],[-16,58],[-7,27],[11,35],[11,22],[6,19],[3,33],[-4,25],[-28,39],[-30,19],[-34,8],[-11,2],[-24,-7],[-101,-50],[-48,-38],[-27,-43],[-29,-21],[-47,3],[-43,2],[-35,-24],[-40,-49],[-29,-22],[-18,4],[-19,-33],[-21,-70],[-24,-31],[-27,9],[-64,-7],[-101,-22],[-63,1],[-26,24],[-40,3],[-55,-18],[-33,-3],[-12,10],[-8,29],[-4,48],[-19,50],[-32,51],[-6,63],[21,73],[5,50],[-12,27],[-4,24],[-25,31],[-17,52],[-12,16],[3,45],[15,54],[-18,50],[-55,3],[-44,15],[-44,46],[-68,131],[-34,46],[-22,5],[-16,21],[-10,37],[-16,1],[-16,0],[-9,-16],[-11,-5],[-18,15],[-17,1],[-18,-11],[-15,7],[-13,26],[-23,17],[-33,9],[-13,17],[5,28],[-6,20],[-18,13],[-49,-3],[-80,-20],[-66,5],[-52,31],[-29,28],[-5,26],[-15,25],[-24,24],[-14,42],[-2,58],[5,56],[22,79],[-54,51],[-16,30],[3,25],[-2,20],[-10,15],[1,23],[10,32],[0,41],[-11,50],[-30,70],[-49,90],[-27,66],[-4,42],[-6,33],[-10,18],[-5,31],[4,34],[-6,22],[-7,21],[1,33],[-9,22],[-18,13],[-6,25],[4,53],[-13,46],[-40,83],[-12,61],[-3,54],[-17,27],[-1,24],[-2,42],[-11,11],[-6,15],[5,17],[-8,22],[-21,26],[-9,22],[-3,21],[-10,15],[-31,16],[-8,21],[2,19],[6,17],[4,11],[-1,14],[-2,13],[-13,17],[-17,19],[-19,41],[-25,11],[-15,0],[-14,23],[5,14],[-1,28],[-12,22],[-15,9],[-14,-6],[-34,21],[-55,47],[-42,22],[-29,-4],[-18,-14],[-6,-25],[-20,3],[-48,44],[-48,11],[-27,24],[-21,40],[-20,17],[-19,-7],[-44,27],[-70,61],[-37,20],[-14,-11],[-7,0],[-12,2],[-18,0],[-32,15],[-43,-7],[-55,-27],[-59,-17],[-64,-6],[-37,3],[-12,13],[-69,-19],[-96,-40],[-94,-38],[-117,-19],[-78,-64],[-78,-118],[-57,-74],[-34,-30],[-14,-40],[6,-49],[29,-17],[53,14],[44,-7],[38,-28],[12,-42],[-14,-56],[4,-56],[22,-54],[2,-63],[-19,-71],[-48,-72],[-76,-72],[-47,-71],[-28,-102],[-42,-90],[-16,-50],[-3,-41],[-17,-45],[-31,-48],[-17,-48],[-3,-49],[-15,-44],[-29,-39],[-17,-42],[-7,-45],[-11,-29],[-15,-16],[8,-15],[30,-15],[13,-43],[-6,-71],[-18,-51],[-31,-31],[-47,-20],[-62,-9],[-85,-68],[-73,-88],[-87,-103],[-17,0],[-32,13],[-61,42],[-65,9],[-62,40],[-37,25],[-57,50]],[[82411,80543],[-14,31],[-22,25],[-56,33],[-37,18],[-23,1],[-58,-34],[-36,-27],[-22,-14],[-36,3],[-44,6],[-18,9],[-25,21],[-49,64],[-26,45],[-35,26],[-38,29],[-19,7],[-33,-2],[-47,8],[-25,10],[-21,-9],[-42,-31],[-52,-59],[-41,-23],[-44,-32],[-36,-37],[-35,-39],[-43,-44],[-20,-61],[-10,-44],[-40,-27],[-30,-26],[-30,-9],[-56,14],[-33,-10],[-83,-52],[-40,-5],[-28,-7],[-27,-3],[-45,-13],[-17,-9],[-23,-10],[-26,7],[-37,-29],[-104,-80],[-33,-13],[-22,-3],[-28,28],[-28,19],[-30,-2],[-34,-26],[-57,20],[-68,19],[-61,18],[-21,15],[-60,22],[-88,1],[-52,0],[-33,-8],[-26,11],[-32,32],[-54,74],[-32,21],[-17,19],[-7,30],[-12,4],[-8,21],[0,29],[-1,62],[4,44],[-9,13],[-36,7],[-43,14],[-79,2],[-32,1],[-25,25],[-28,31],[-28,64],[-24,29],[-40,37],[-38,10],[-57,-7],[-42,-7],[-37,16],[-24,20],[-34,22],[-51,5],[-42,16],[-44,18],[-32,-7],[-22,-18],[-26,-23],[-33,-4],[-81,-24],[-24,-14],[-36,-6],[-32,-18],[-26,-35],[-22,-26],[-28,-9],[-33,2],[-29,8],[-15,3],[-22,-13],[-25,-9],[-38,15],[-21,13],[-32,8],[-20,37],[-20,15],[-34,6],[-50,18],[-26,20],[-23,11],[-38,43],[-21,37],[-17,6],[-20,5],[-13,23],[-1,29],[5,18],[3,30],[-11,29],[-11,13],[-6,22],[3,42],[-4,42],[-4,44],[-12,32],[-3,63],[5,26],[-1,30],[-12,23],[-37,17],[-44,22],[-70,27],[-29,2],[-23,-11],[-22,13],[-22,22],[-39,23],[-50,30],[-54,33],[-48,29],[-19,8],[-66,2],[-54,4],[-32,11],[-37,41],[-19,26],[-30,12],[-22,4],[-35,13],[-64,44],[-23,21],[-16,0],[-21,38],[-18,9],[-13,-27],[-13,-65],[-11,-30],[-34,-60],[-80,-48],[-13,-25],[-8,-23],[-11,-32],[-4,-42],[-10,-12],[-23,-1],[-18,-19],[-14,-42],[-11,-17],[-7,-39],[1,-17],[-2,-19],[-2,-30],[-21,-66],[-3,-38],[8,-24],[18,-33],[9,-18],[3,-22],[0,-28],[11,-38],[8,-33],[13,-24],[19,-20],[21,-7],[16,-13],[4,-27],[-5,-37],[-7,-69],[-14,-43],[-8,-28],[-14,-42],[-5,-17],[-27,-36],[-19,-10],[-23,-29],[-19,-2],[-18,1],[-19,-7],[-18,-13],[-13,-39],[-34,-40],[-16,-19],[-42,-6],[-20,18],[-11,25],[-14,14],[-17,31],[-76,16],[-20,-7],[-12,-12],[-15,9],[-11,15],[-11,-5],[-23,-8],[-19,2],[-23,31],[-33,16],[-13,10],[-13,0],[-8,-15],[-15,-8],[-10,18],[-13,13],[-18,0],[-22,-27],[-39,-13],[-13,-19],[-22,3],[-16,15],[-15,1],[-46,0],[-15,-5],[-19,15],[-8,27],[-23,21],[-33,2],[-26,-3],[-12,-8],[-17,-3],[-14,37],[-19,26],[-10,19],[-16,8],[-13,24],[-2,47],[-8,59],[-9,61],[-10,26],[-49,9],[-23,-2],[-54,5],[-38,4],[-10,1],[-34,7],[-32,6],[-32,4],[-14,-5],[-33,-2],[-26,29],[-11,34],[-2,19],[-6,19],[-23,6],[-22,-6],[-11,-39],[-16,-16],[-15,3],[-13,21],[-26,23],[-17,22],[-20,35],[-16,-8],[-5,-22],[-3,-21],[-21,-43],[-24,-5],[-41,3],[-43,-2],[-27,-16],[-20,-29],[-10,-23],[-21,-8],[-21,-23],[-9,-31],[-20,1],[-11,-4],[-19,-6],[-48,-17],[-11,-4],[-29,-30],[-22,-23],[-21,-10],[-13,-27],[-17,-21],[-38,-6],[-42,-26],[-15,-9],[-24,-20],[-34,-8],[-14,-6],[-13,-14],[-8,-49],[-28,-17],[-37,-3],[-28,-26],[-2,-46],[9,-42],[-4,-19],[-21,-11],[-29,-22],[-22,-28],[-26,-1],[-16,10],[-11,-18],[-7,-37],[-19,-18],[-28,-16],[-11,6],[-7,14],[-12,18],[-10,-7],[-1,-26],[-8,-19],[-24,-2],[-18,11],[-13,12],[-25,-2],[-26,-5],[-16,6],[-15,-6],[-41,-12],[-16,-41],[0,-48],[-5,-24],[-24,-21],[-12,-19],[-14,-13],[-33,-1],[-1,0]],[[74392,80162],[-14,2],[-26,-11],[-26,-8],[-17,-6],[-11,-18],[-16,-8],[-26,5]],[[74256,80118],[-8,35],[-17,40],[-24,14],[-21,8],[-20,19],[-13,20],[-39,95],[-27,41],[-25,3],[-3,27],[14,27],[18,22],[0,31],[-15,16],[-18,-5],[-25,-35],[-29,-40],[-35,-29],[-14,-24],[-17,-27],[-24,4],[-18,-2],[-15,-2],[-11,29],[-15,4],[-106,28],[-35,11],[-23,-14],[-16,9],[-6,28],[-21,50],[-16,41],[-21,41],[-8,33],[7,34],[-3,30],[-18,15],[-23,2],[-65,64],[-30,9],[-27,12],[-22,0],[-18,28],[-17,86],[-6,48],[-21,49],[-27,41],[-16,57],[-23,25],[-40,39],[-38,28],[-62,34],[-23,0],[-32,-3],[-18,-16],[-21,-37],[-28,-2],[-44,0],[-11,-14],[-7,-25],[-23,-31],[-33,-25],[-46,8],[-32,-13],[-32,-5],[-45,32],[-51,-1],[-33,-15],[-46,1],[-10,18],[6,30],[-4,27],[-8,22],[-6,27],[-19,6],[-54,-11],[-15,12],[2,27],[9,33],[8,43],[-3,26],[-28,-4],[-17,3],[-9,30],[-16,23],[-18,1],[-21,5],[-24,-9],[-12,-30],[-16,-5],[-16,-8],[-12,-11],[-7,-27],[3,-25],[5,-55],[-8,-29],[-22,-16],[-20,3],[-14,-7],[-26,-31],[-12,-11],[-3,-19],[-2,-28],[-22,10],[-35,104],[-40,118],[-45,125],[-24,67],[-89,216],[-43,103],[-76,178],[-68,162],[-77,168],[-46,95],[-48,101],[-17,27],[-26,36],[-65,69],[-94,99],[-87,87],[-68,69],[-17,30],[-8,17],[-7,18],[-10,34],[0,22],[64,-4],[14,22],[24,80],[13,69],[-22,-3],[-40,-28],[-21,-21],[-12,-9],[-64,-14],[-35,-31],[-72,-52],[-52,-30],[-10,-5],[-61,-10],[-11,-12],[-1,-27],[-5,-30],[-43,-44],[-47,-38],[-17,-5],[-29,9],[-14,-5],[-43,-41],[-64,-62],[-6,-25],[0,-30],[-7,-27],[-14,-10],[-21,24],[-19,28],[-39,20],[-58,5],[-36,-10],[-24,-16],[-48,-61],[-18,-13],[-10,4],[-2,30],[-10,21],[-12,32],[6,63],[26,60],[43,33],[35,35],[10,38],[-1,27],[-13,12],[-13,2],[-8,-13],[-23,-26],[-35,-21],[-29,-4],[-13,1],[-31,13],[-57,73],[-48,10],[-33,6],[-11,-7],[-5,-18],[3,-20],[7,-19],[-4,-16],[-15,-11],[-24,-20],[-11,13],[-6,51],[1,40],[-16,34],[-17,52],[-23,31],[-22,-10],[-11,-44],[-17,-15],[-33,9],[-58,-25],[-95,-11],[-68,31],[-11,28],[28,59],[2,53],[0,48],[7,35],[-16,66],[-38,136],[-22,102],[-34,77],[-14,25],[-70,-13],[-19,-17],[-13,-23],[-22,-17],[-31,-12],[-26,8],[-29,13],[-31,27],[-36,36],[-69,28],[-68,9],[-75,10],[-38,-18],[-36,-29],[-52,-59],[-24,-6],[-38,-5],[-27,-15],[6,-26],[5,-36],[-10,-29],[-15,-15],[-22,-10],[-37,-3],[-31,-6],[-38,-41],[-58,-10],[-63,-15],[-44,-23],[-96,-29],[-55,-13],[-93,-28],[-74,-5],[-11,20],[-58,-43],[-64,3],[-11,-18],[-16,-16],[-17,-8],[-22,-20],[-13,-43],[-9,-45],[-20,-13],[-25,16],[-19,16],[-33,-16],[-44,-10],[-35,6],[-18,13],[-73,-21],[-37,-26],[-8,-13],[-9,-8],[-43,-17],[-35,5],[-6,-1],[-33,-13],[-47,-22],[-33,-7],[-29,0],[-18,-18],[-14,-20],[-123,-21],[-12,-14],[-25,-18],[-127,-6],[-11,-13],[-4,-15],[-16,-4],[-92,28],[-74,31],[-28,-17],[-24,-32],[-9,-47],[0,-40],[0,-34],[-11,-25],[-24,-31],[-2,-20],[33,-23],[42,-18],[24,8],[21,13],[17,-4],[13,-15],[4,-18],[-2,-13],[-8,-9],[-27,-17],[-25,6],[-23,-12],[-12,-22],[-6,-40],[10,-29],[31,-7],[35,-21],[39,-9],[23,3],[30,-31],[69,-38],[18,-29],[1,-30],[-13,-23],[-18,-13],[-23,7],[-47,8],[-52,5],[-37,10],[-54,-4],[-44,-9],[-11,-23],[-18,-42],[-14,-23],[-25,-44],[-8,-39],[13,-61],[44,-101],[4,-33],[-16,-33],[-30,-27],[-44,-48],[-47,-2],[-21,-12],[-53,-58],[-47,-28],[-10,-25],[11,-25],[59,-32],[30,-35],[8,-40],[13,-30],[46,-20],[95,-46],[6,-5],[6,-21],[97,-29],[13,-16],[40,-52],[8,-54],[-20,-54],[-13,-84],[-21,-75],[-45,-49],[-79,-46],[-85,-18],[-36,3],[-23,6],[-38,14],[-28,38],[-21,37],[-15,9],[-15,-6],[-13,-23],[-19,-63],[-21,-62],[-17,-22],[-63,-30],[-7,11],[7,41],[-8,13],[-12,9],[-78,16],[-30,11],[-22,5],[-28,10],[-19,25],[-42,76],[-32,59],[-53,53],[-47,11],[-4,-6],[-36,-2],[-57,13],[-3,-1],[-18,-25],[-13,-38],[-18,-32],[-26,-17],[-32,-4],[-37,34],[-37,51],[-46,17],[-45,-11],[-17,-8],[-47,-30],[-15,14],[-21,9],[-46,-48],[-50,-53],[-11,-39],[-15,-37],[-34,-34],[-36,-30],[-31,-11],[-40,11],[-51,37],[-46,45],[-50,72],[-41,42],[-39,32],[-23,8],[-19,-12],[-8,-26],[5,-20],[12,-18],[9,-57],[3,-69],[-4,-40],[-11,-23],[-11,-9],[-11,3],[-13,25],[-7,52],[-7,61],[-34,77],[-30,47],[-14,26],[-27,43],[-24,26],[-50,31],[-24,22],[-43,85],[-24,26],[-31,21],[-25,7],[-5,-5],[-53,-12],[-37,1],[-23,16],[-24,2],[-2,0],[-26,-10],[-5,0],[-13,1],[-20,17],[-21,48],[-25,50],[-31,16],[-59,-21],[-65,-68],[-46,-41],[-37,-1],[-22,-6],[-14,2],[-12,13],[-3,25],[-6,31],[-30,30],[-40,20],[-38,22],[-24,6],[-11,-32],[-31,-49],[-35,-48],[-45,-79],[-13,-27],[-17,-19],[-40,-20],[-48,-33],[-30,-38],[-43,-17],[-47,-10],[-21,-33],[-12,-53],[-16,-48],[-73,-72],[-40,-47],[-30,-25],[-20,3],[-22,7],[-9,-4],[12,-36],[9,-113],[14,-72],[10,-41],[9,-33],[7,-50],[-9,-29],[-14,-20],[-45,-31],[-46,-26],[-27,17],[-31,42],[-12,22],[-33,71],[-59,109],[-40,55],[-30,21],[-26,-7],[-21,-25],[-15,-23],[-13,-26],[-9,-32],[1,-45],[-1,-47],[-13,-33],[-33,-36],[-38,-49],[-29,-90],[-18,-112],[-6,-78],[14,-37],[28,-29],[18,-30],[4,-29],[-5,-30],[-15,-35],[-30,-39],[-42,-95],[-26,-133],[15,-93],[53,-51],[42,-23],[17,-30],[15,-60],[-2,-62],[-5,-42],[10,-41],[20,-48],[25,-30],[27,16],[26,20],[33,-8],[93,-16],[48,-9],[16,-21],[30,-69],[38,-77],[39,-78],[14,-34],[31,-93],[33,-84],[35,-104],[-2,-28],[-19,-11],[-30,2],[-23,16],[-13,12],[-11,4],[-13,-5],[-11,-13],[-5,-20],[2,-28],[9,-26],[12,-16],[7,-6],[46,-34],[51,-38],[63,-54],[13,-7]],[[63675,78534],[4,-26],[-34,-5],[-4,-31],[-8,-23],[-75,-51],[-19,0],[-16,-8],[1,-33],[4,-30],[13,-32],[-6,-14],[-11,-5],[-14,10],[-14,17],[-14,4],[-14,-4],[-64,-91],[-27,-23],[-30,-9],[-61,-34],[-19,2],[-17,12],[-15,-17],[-4,-42],[-17,29],[-18,23],[-8,7],[-4,-4],[17,-45],[1,-41],[-4,-23],[-7,-21],[-10,-12],[-11,-7],[-6,-73],[-12,-44],[-15,-40],[-21,-72],[-16,-31],[-13,-37],[-9,-51],[-12,12],[-10,22],[-6,-29],[-7,-25],[-32,-37],[-24,-36],[-11,-55],[-2,-33],[3,-30],[9,-17],[46,-20],[29,-25],[28,-47],[30,-40],[21,-51],[15,-64],[19,-123],[9,-129],[28,161],[24,29],[-6,-46],[-16,-69],[-17,-101],[-5,-74],[6,-64],[0,-30],[-13,-106],[7,-20],[11,-19],[29,-36],[21,-54],[5,-75],[12,-20],[14,-18],[72,-150],[41,-100],[21,-58],[22,-73],[12,-17],[14,-11],[27,-34]],[[63492,75947],[-15,-38],[-25,-67],[-11,-35],[-25,-33],[-44,-35],[-24,-15],[-25,-72],[-29,-69],[-19,-8],[-56,11],[-19,6],[-57,31],[-16,19],[-15,81],[-17,34],[-22,23],[-15,19],[-6,19],[-16,28],[-30,42],[-21,40],[-16,11],[-21,-14],[-12,-4],[-5,7],[-4,33],[-30,12]],[[62897,75973],[-6,8],[-39,32],[-16,17],[-14,2],[-31,9],[-27,16],[-12,20],[-18,22],[-33,29],[-24,26],[-1,17],[15,71],[10,68],[-6,13],[-14,11],[-25,11],[-61,-4],[-38,69],[-13,15],[-25,11],[-35,21],[-20,15],[-6,-6],[-22,-75],[-22,54],[-13,14],[-19,8],[-20,0],[-49,-26],[-36,-28],[-27,-22],[-27,-12],[-13,-17],[-37,3],[-18,13],[-6,14],[3,23],[13,26],[1,14],[-5,11],[-44,35],[-18,22],[-59,30],[-71,53],[-25,35],[-3,24],[-28,24],[-36,21],[-28,-6],[-26,-2],[-41,39],[-38,3],[-44,-12],[-10,-5],[-10,-5],[-130,16],[-34,33],[-28,33],[-77,24],[-39,25],[-39,36],[-42,31],[-36,-13],[-49,18],[-54,15],[-18,-9],[-17,-40],[-13,-37]],[[61104,76854],[-29,31],[-99,146],[-52,98],[-170,225],[-22,17],[-90,33],[-37,26],[-91,161],[-41,-22],[-37,6],[-21,14],[-24,23],[-16,30],[-19,68],[-22,38],[-72,56],[-82,33],[-6,14],[-3,20],[71,38],[19,22],[-36,29],[-14,5],[-11,13],[20,22],[20,10],[31,-25],[35,-46],[31,-18],[14,22],[106,39],[7,30],[0,34],[-11,-2],[-6,8],[0,38],[16,51],[48,84],[25,116],[23,27],[16,-18],[-1,-27],[3,-20],[15,39],[14,53],[36,0],[24,-9],[26,6],[-49,88],[-66,87],[-28,-6],[-18,13],[-29,73],[-12,60],[28,-2],[28,-9],[53,42],[20,6],[31,-13],[44,-8],[-3,39],[-14,47],[53,34],[47,19],[91,68],[40,12],[5,15],[1,20],[-13,54],[-14,40],[-48,2],[-26,-55],[-72,-19],[-33,4],[26,36],[25,13],[8,15],[-52,-13],[-25,-37],[-76,-48]],[[58823,81855],[-2,14],[-19,55],[-11,24],[-13,13],[-7,15],[0,66],[2,61],[9,8],[-25,50],[-2,38],[12,19],[0,16],[-8,22],[-25,37],[-25,41],[-16,33],[-11,15],[13,26],[17,45],[6,26],[9,6],[40,4],[29,-1],[22,-9],[8,-22],[21,-23],[57,-10],[24,1],[30,21],[49,48],[12,34],[30,24],[18,10],[17,4],[2,20],[-1,28],[-6,17],[-60,57],[-8,18],[-5,22],[8,21],[-1,23],[-69,51],[-58,9],[-47,-3],[-19,10],[8,26],[12,46],[3,38],[-3,17],[-9,15],[-46,32],[-62,48],[-29,56],[-15,57],[-17,35],[-31,23],[2,14],[21,54],[-1,9],[-9,13],[-38,27],[-51,51],[-3,13],[4,31],[7,32],[11,14],[30,64],[0,21],[-5,29],[-23,49],[-17,32],[-1,16],[3,14],[11,17],[11,22],[2,73],[0,26],[-7,15],[-7,7],[-16,-4],[-22,12],[-16,19],[-10,6],[-11,20],[-31,39],[-6,11],[-61,33],[-53,-5],[-30,6],[-15,-8],[-16,-21],[-22,-15],[-17,0],[-15,-11],[-41,-38],[-19,23],[-17,34],[6,29],[7,27],[-1,18],[-6,15],[-25,17],[-55,31],[-15,0],[-24,-11],[-42,-34],[-15,7],[-14,27],[-15,34],[-20,18],[-44,-2],[-4,-1],[-21,-20],[-9,2],[-38,50]],[[57818,84183],[7,27],[8,41],[-3,31],[-6,41],[-16,72],[-2,20],[-27,31],[-4,26],[-14,34],[-14,22],[-3,47],[-9,17],[-12,8],[-41,-14],[-5,2],[20,76],[2,44],[12,47],[15,18],[4,16],[2,30],[-2,27],[-9,13],[-35,30],[-37,35],[-8,45],[-11,10],[-33,2]],[[57597,84981],[1,13],[5,36],[8,31],[25,33],[6,23],[8,20],[59,24],[6,9],[1,8],[-3,8],[-13,12],[-14,17],[-8,46],[-20,71],[-19,48],[-4,28],[5,33],[7,31],[0,31],[-29,172],[2,31],[8,31],[14,26],[30,34],[38,62],[25,81],[14,49],[11,11],[22,3],[8,15],[4,8],[19,9],[6,9],[-5,17],[-19,29],[-14,18]],[[57781,86108],[14,40],[-5,54],[-9,44],[12,33],[21,3],[22,-36],[34,-18],[25,24],[8,46],[18,20],[24,-18],[40,-7],[33,3],[22,10],[10,15],[9,27],[18,34],[19,23],[145,-26],[126,-47],[9,18],[5,30],[-32,26],[-23,14],[-29,54],[-42,43],[-42,4],[-55,-15],[-84,9],[-71,81],[-47,25],[-34,62],[-8,33],[36,-28],[5,29],[3,40],[-20,24],[-18,14],[-93,-61],[-106,-20]],[[57721,86714],[98,120],[71,87],[14,14],[31,23],[26,24],[21,33],[71,63],[72,69],[67,90],[24,28],[31,30],[67,96],[22,26],[82,120],[48,59],[24,34],[103,113],[69,91],[28,50],[27,71],[15,49],[27,63],[1,21],[-8,19],[-20,30],[-28,35],[-25,43],[-18,38],[-57,53],[-89,67],[-66,50],[-101,107],[-18,26],[4,7],[57,33],[57,83],[25,42],[6,32],[0,37],[-4,34],[-7,21],[-27,27],[-78,48],[-19,44],[-15,47],[0,19],[37,50],[2,25],[-5,26],[-10,19],[-80,22],[-23,24],[-18,38],[-9,33],[-1,19],[6,22],[27,23],[25,16],[5,22],[-1,23],[-4,11],[-50,11],[-5,6],[-1,8],[2,10],[28,41],[3,79],[26,55],[-29,32],[2,5],[44,17],[41,4],[18,7],[2,25],[-4,35],[-42,136],[-9,39],[-28,50],[-23,33],[-14,24],[-22,47],[-13,47],[-22,54],[-26,48],[-22,46],[-55,88],[-8,25],[1,22],[5,23],[44,73],[40,60],[51,71],[49,59],[53,69],[13,70],[-2,12],[-44,37],[-82,101],[-51,77],[-78,32],[-104,41],[-35,93],[-25,79],[2,29],[76,134],[7,25],[-1,15],[-8,9],[-11,6],[-70,4],[-11,18],[42,14],[35,19],[58,28],[18,7]],[[58045,91602],[43,16],[14,12],[11,15],[40,100],[10,16],[123,36],[45,18],[26,23],[12,19],[9,21],[7,24],[2,22],[-10,28],[6,3],[13,-1],[42,-28],[66,-30],[48,-2],[20,5],[10,13],[7,26],[0,27],[-15,75]],[[58574,92040],[50,-8],[112,-46],[26,5],[34,13],[34,55],[25,9],[33,-12],[9,14],[-17,46],[4,22],[113,-48],[48,-36],[105,-32],[18,-17],[2,-30],[-5,-25],[-23,-14],[-44,2],[-161,39],[-23,-24],[19,-20],[47,-25],[13,-43],[72,6],[69,-16],[32,5],[6,-14],[-22,-36],[10,-9],[77,34],[36,10],[19,-9],[3,-29],[-13,-36],[-1,-28],[-24,-66],[-36,-21],[-16,-27],[54,17],[28,18],[53,92],[16,12],[152,1],[34,-5],[142,-44],[40,-3],[46,5],[16,20],[16,6],[158,-48],[211,-109],[309,-179],[174,-160],[20,-34],[63,-20],[14,14],[35,-12],[205,-146],[70,-7],[-9,31],[-12,29],[18,-7],[24,-21],[38,-57],[48,-42],[48,-64],[41,-24],[36,-9],[30,-18],[56,-17],[26,-155],[20,-34],[0,-68],[36,-28],[27,-5],[-1,-51],[-22,-119],[-24,-51],[-186,-219],[-116,-84],[-226,-97],[-176,-36],[-72,-3],[-138,18],[-75,20],[-93,55],[-86,27],[-60,12],[-110,5],[-239,54],[-41,19],[-150,105],[-60,-30],[-35,-5],[-24,36],[10,10],[5,12],[-85,30],[-70,2],[-37,26],[-46,19],[-20,-12],[-11,0],[-92,46],[-41,37],[-43,65],[10,23],[13,15],[-148,38],[-140,5],[25,-18],[60,-10],[39,-26],[44,-37],[-10,-50],[62,-50],[47,-48],[2,-14],[18,-10],[70,-14],[12,-44],[-11,-17],[9,-25],[53,-27],[31,-7],[38,-17],[-17,-33],[-32,-22],[-33,-10],[16,-8],[41,3],[152,-55],[80,-56],[81,-102],[26,-50],[2,-28],[-4,-27],[-12,-30],[-5,-31],[-28,-88],[-20,-31],[-38,-35],[36,-68],[37,-63],[37,-105],[7,-42],[1,-65],[33,-26],[-13,-10],[-13,-18],[3,-84],[46,-69],[70,-45],[41,-9],[59,18],[43,-25],[96,-84],[43,-89],[18,-18],[97,-34],[72,-20],[111,-54],[19,-2],[54,47],[92,32],[29,44],[-3,37],[-23,67],[-7,65],[-31,27],[-28,18],[-86,-14],[-39,3],[-30,17],[-40,47],[-75,113],[-40,37],[-13,24],[-14,32],[2,53],[33,-2],[37,30],[27,106],[46,14],[25,-1],[108,-50],[134,-132],[29,-14],[31,-2],[51,4],[9,-18],[27,-20],[20,-3],[123,-42],[142,-82],[53,3],[21,46],[4,20],[59,46],[40,8],[57,-17],[10,13],[-19,68],[-26,59],[-39,37],[-68,111],[-28,54],[-13,57],[9,50],[10,36],[142,89],[51,53],[50,69],[23,14],[83,19],[111,59],[85,78],[84,119],[36,31],[28,-2],[38,-19],[42,-35],[57,-6],[55,5],[64,-3],[88,-54],[14,-17],[14,-23],[-28,-45],[-3,-29],[23,14],[32,6],[29,-9],[28,-25],[20,-28],[25,-24],[7,32],[4,28],[-13,70],[34,99],[26,43],[48,110],[-14,71],[-2,82],[-7,38],[-31,55],[-61,39],[-61,13],[-20,38],[4,43],[17,63],[50,133],[52,188],[2,43],[-5,24],[4,24],[-7,57],[-9,42],[-213,163],[-13,15],[-7,22],[23,5],[16,-1],[160,-76],[35,-4],[251,21],[123,-18],[103,-39],[74,-108],[76,-99],[70,-86],[2,-70],[-73,-14],[-70,-4],[-180,-35],[-43,-39],[-120,-122],[-11,-37],[11,-36],[55,-38],[118,-57],[52,-113],[37,-57],[28,-22],[27,-5],[60,-1],[42,-13],[12,-11],[17,11],[38,4],[224,60],[44,26],[15,40],[16,133],[20,46],[19,57],[-7,35],[-2,40],[112,38],[104,26],[50,-8],[13,28],[-32,55],[-19,28],[16,12],[24,-15],[32,-9],[56,9],[215,113],[84,63],[50,25],[80,57],[38,19],[67,7],[71,23],[78,42],[105,36],[17,2],[21,-5],[43,-42],[-16,-24],[-12,-25],[21,-14],[17,-6],[21,7],[22,17],[54,26],[15,33],[-21,13],[-27,49],[-32,11],[-26,-2],[95,71],[202,105],[108,48],[107,4],[85,-6],[-32,-16],[-140,-22],[-21,-11],[0,-13],[34,-8],[14,-16],[-11,-18],[-11,-6],[-16,-54],[-21,-43],[44,-56],[4,-58],[-28,-31],[-39,12],[-34,-20],[-62,-14],[-14,-18],[-9,-26],[40,-6],[31,2],[110,-17],[15,-2],[37,18],[37,4],[45,6],[23,11],[23,-13],[44,-51],[40,10],[17,99],[63,62],[74,50],[72,5],[69,35],[33,7],[64,-14],[96,-3],[81,-30],[60,-8],[88,51],[203,143],[17,-33],[33,48],[157,50],[38,2],[1,-20],[14,-44],[30,-27],[42,-64],[-20,-17],[-21,-10],[-31,-43],[-3,-99],[59,-25],[81,-29],[34,1],[28,16],[9,9],[10,15],[8,29],[5,22],[-21,55],[8,58],[74,-4],[91,17],[41,33],[49,63],[33,52],[-21,92],[-53,-20],[-91,199],[-47,77],[30,36],[78,23],[71,74],[27,15],[29,3],[210,-51],[239,-12],[203,-39],[230,-81],[112,-57],[93,-63],[-9,-45],[38,13],[82,-40],[56,-16],[57,-24],[22,-32],[75,-23],[78,-43],[14,-8],[95,-32],[68,-11],[41,-69],[136,-100],[25,-38],[119,-63],[59,-52],[37,20],[91,126],[54,144],[32,77],[-60,3],[-45,-22],[-29,5],[-32,23],[-52,58],[-66,97],[-13,106],[-18,35],[-64,28],[-42,32],[-156,63],[-28,-22],[-8,-34],[-10,-25],[-16,32],[-10,29],[0,46],[8,59],[26,99],[40,-5],[21,15],[26,44],[-12,37],[-14,28],[3,43],[25,118],[11,138],[-21,34],[-19,23],[-89,-24],[-33,13],[-8,26],[-2,21],[25,35],[25,59],[-43,-13],[-15,23],[36,34],[42,82],[99,38],[74,37],[116,78],[86,77],[56,98],[38,93],[62,218],[58,160],[98,165],[61,15],[23,-3],[4,-12],[-14,-14],[-4,-20],[26,-7],[42,-1],[79,10],[134,-6],[234,14],[33,-7],[87,-48],[47,6],[96,-23],[52,-26],[50,-31],[-7,-120],[-10,-80],[-35,-152],[-14,-39],[-56,-110],[-26,-72],[-42,-50],[-60,-35],[-8,-21],[-5,-31],[59,-87],[140,-90],[34,-108],[8,-81],[-9,-210],[-13,-31],[-26,-34],[-25,-40],[16,-59],[20,-219],[4,-178],[-16,-61],[-8,-129],[0,-43],[14,-64],[28,-54],[37,-34],[105,-63],[99,-76],[7,-24],[5,-29],[-35,-30],[-55,-78],[-35,-65],[-3,-53],[12,-67],[-6,-63],[-23,-56],[-33,-41],[-99,-63],[-207,-334],[-50,-39],[-84,13],[23,-48],[29,-68],[-4,-45],[-54,3],[-77,-48],[-35,-32],[-60,-17],[-45,17],[-50,31],[7,26],[10,12],[35,19],[34,25],[-17,5],[-14,0],[-38,-32],[-45,-7],[-52,40],[-41,43],[-19,9],[-38,-18],[-146,8],[-38,-7],[-18,-16],[10,-13],[11,-24],[15,-48],[14,-36],[60,-39],[81,-15],[78,-48],[99,-34],[224,14],[59,-4],[58,-15],[97,-50],[42,4],[71,45],[17,101],[9,31],[257,142],[48,31],[77,77],[25,52],[29,140],[25,50],[167,161],[26,41],[5,76],[-3,51],[-10,50],[-30,84],[-34,49],[-33,67],[24,138],[28,53],[151,63],[129,23],[144,43],[58,9],[40,-7],[41,-47],[36,-69],[104,-105],[35,-72],[7,-89],[-4,-216],[-20,-94],[41,-24],[20,-22],[51,-31],[27,-31],[27,-11],[59,-7],[168,11],[92,6],[-9,14],[-14,11],[-78,4],[-110,23],[-159,42],[-19,91],[4,56],[36,106],[25,18],[31,7],[36,15],[-11,67],[-14,61],[-34,85],[-37,157],[-51,1],[-39,31],[-189,92],[-179,68],[-123,9],[-39,-7],[-102,-71],[-66,-15],[-125,31],[-107,-17],[-40,17],[-16,31],[32,127],[-17,49],[-47,66],[-28,51],[5,56],[70,214],[29,56],[75,100],[38,76],[-9,44],[-161,239],[-43,85],[-19,27],[-39,32],[-60,38],[-18,34],[163,231],[74,40],[103,25],[50,22],[87,47],[52,39],[17,31],[11,37],[2,91],[-11,73],[-14,41],[-31,52],[-31,59],[22,15],[22,9],[58,-1],[60,-32],[30,-64],[35,-60],[0,-40],[-3,-31],[15,-44],[13,-18],[14,-31],[-13,-25],[-14,-12],[-27,-35],[-43,-108],[-33,-14],[-8,-84],[71,-92],[-9,-69],[-14,-23],[-39,-37],[5,-30],[10,-21],[111,-44],[105,-27],[176,-9],[51,-43],[19,30],[165,-7],[133,-105],[70,-32],[57,-11],[116,13],[20,9],[19,30],[-54,-2],[-24,-14],[-22,1],[-38,11],[-27,18],[-29,35],[-48,104],[-84,33],[-57,-14],[-62,7],[-102,56],[-68,21],[-121,61],[-34,25],[-27,51],[-31,84],[-20,47],[26,9],[83,46],[124,15],[53,-16],[136,-94],[63,-3],[114,41],[13,26],[-26,53],[-34,27],[-66,13],[-80,-24],[-23,20],[8,28],[9,21],[43,5],[30,16],[65,58],[72,28],[71,10],[261,-8],[148,-91],[144,-41],[63,-31],[17,-5],[15,-21],[11,-48],[182,-129],[42,-17],[116,-6],[130,30],[59,3],[63,-9],[33,-16],[36,-30],[-19,-38],[-17,-23],[-36,-64],[-16,-18],[-118,-73],[-47,-19],[-13,-96],[-6,-21],[-5,-34],[22,-68],[5,-42],[-18,-58],[-30,-62],[6,-50],[10,-67],[5,20],[-2,30],[8,35],[54,85],[39,115],[40,30],[36,7],[40,-34],[11,-46],[2,-70],[-8,-65],[-30,-100],[-50,-70],[-16,-39],[23,-37],[25,-29],[29,-9],[33,3],[8,9],[6,28],[-10,36],[-6,33],[61,25],[57,14],[45,42],[11,28],[10,46],[-23,72],[-20,54],[-68,129],[-51,66],[32,99],[53,110],[20,27],[6,17],[6,30],[-5,31],[-6,20],[-54,83],[-39,27],[-123,16],[-31,13],[-90,85],[-11,19],[-20,61],[-7,15],[-25,16],[-83,35],[-58,15],[-84,4],[-51,18],[-76,56],[-8,19],[-22,73],[-17,37],[5,28],[27,58],[19,51],[-23,44],[-33,14],[-36,21],[-15,40],[-9,43],[-1,34],[-6,39],[17,33],[38,34],[-9,24],[5,31],[247,41],[96,11],[480,4],[34,12],[209,20],[89,24],[94,-25],[34,1],[69,7],[45,51],[102,20],[170,21],[84,-4],[19,-15],[19,-21],[-92,-62],[-92,-56],[-76,-24],[-74,-49],[-7,-19],[-2,-12],[2,-39],[5,-25],[77,-32],[59,-44],[57,-32],[45,-19],[11,11],[-165,104],[-42,23],[-17,25],[8,38],[17,17],[26,19],[17,9],[62,20],[206,27],[49,51],[21,30],[56,31],[-19,13],[-46,8],[-36,18],[-142,183],[-35,28],[-109,20],[-49,21],[50,62],[59,16],[40,-4],[35,-17],[65,-51],[92,22],[-35,23],[-58,26],[-54,42],[-77,37],[-86,24],[-90,10],[25,55],[50,-7],[16,17],[23,33],[125,-77],[59,21],[50,35],[104,93],[14,42],[-50,23],[-41,11],[-56,-2],[-5,25],[24,33],[45,13],[139,-36],[232,93],[63,45],[161,58],[79,-7],[164,77],[227,33],[132,1],[102,42],[156,15],[54,17],[263,43],[146,34],[23,27],[-131,-22],[-31,20],[-27,-13],[-20,-19],[-63,34],[-17,-9],[-13,-18],[-23,-6],[-27,4],[-9,41],[32,55],[37,-29],[43,42],[27,1],[81,-26],[54,27],[72,13],[79,-12],[33,3],[19,25],[129,-22],[89,15],[61,-2],[95,-13],[43,-18],[-25,-42],[-92,-68],[25,-11],[53,31],[159,46],[26,-9],[-18,-40],[-11,-17],[106,23],[91,50],[40,9],[41,-31],[39,28],[9,28],[69,6],[28,26],[49,19],[40,8],[89,36],[31,-11],[59,-9],[56,-17],[105,-40],[14,-15],[13,-3],[30,-28],[-22,-42],[-24,-60],[-45,-28],[27,-3],[19,8],[36,40],[32,28],[-8,119],[-57,60],[-44,20],[-102,63],[-34,27],[-46,28],[18,17],[196,-22],[100,11],[108,-7],[144,27],[61,-28],[69,1],[80,-23],[24,27],[-131,29],[-58,-3],[-21,15],[22,34],[25,51],[-25,44],[-24,24],[-4,45],[23,52],[54,22],[30,42],[63,55],[303,179],[145,68],[55,9],[64,-6],[126,57],[47,0],[175,-45],[42,-33],[96,-26],[111,-14],[51,-21],[25,-24],[21,-33],[-90,-22],[-97,-66],[-132,-36],[-163,-24],[-34,-18],[311,-5],[90,4],[19,-57],[30,-2],[90,27],[54,2],[102,-20],[21,11],[44,1],[94,-25],[42,-37],[-67,-60],[-69,-53],[-84,-90],[-26,7],[-44,2],[8,-45],[74,2],[40,-20],[92,25],[130,-8],[27,7],[50,28],[13,52],[22,33],[43,11],[47,-10],[80,0],[203,17],[170,-22],[136,27],[178,-20],[78,-21],[57,-37],[52,-11],[42,-29],[43,-42],[-21,-34],[-21,-23],[56,25],[43,6],[32,-15],[57,-15],[18,-95],[17,-18],[15,-33],[-21,-30],[-18,-14],[45,3],[63,32],[13,11],[16,24],[-24,23],[-21,14],[27,11],[52,-4],[26,-42],[17,-38],[38,-127],[81,17],[4,-38],[-34,-87],[-36,-64],[-14,-14],[-23,-3],[9,34],[-14,20],[-21,12],[-74,12],[-138,79],[-37,8],[-8,-4],[-4,-7],[77,-54],[63,-95],[57,28],[23,-5],[31,-45],[56,-18],[47,-30],[-31,-91],[-192,-160],[-203,-93],[-90,-65],[-158,-47],[-113,-64],[-144,-47],[-42,-51],[-107,-32],[8,-17],[12,-18],[-13,-30],[-15,-23],[-83,-47],[-121,-32],[-243,-195],[-121,-40],[-137,-2],[-29,-18],[-104,-123],[-32,-26],[-136,-13],[-142,-201],[-79,-68],[-69,-37],[72,7],[85,27],[99,65],[26,30],[14,34],[29,27],[45,19],[176,21],[72,-8],[106,6],[70,36],[41,13],[37,4],[19,26],[62,5],[143,34],[21,12],[46,51],[85,-19],[61,10],[159,91],[96,34],[26,24],[-19,17],[-22,12],[-92,-32],[-83,-10],[-94,8],[-13,13],[-11,32],[30,47],[26,28],[60,37],[49,13],[183,-40],[38,-5],[21,66],[58,-3],[58,-11],[-25,-14],[-64,-21],[20,-48],[28,-33],[112,-47],[95,-21],[70,1],[110,20],[17,14],[23,38],[-28,72],[27,-9],[27,-18],[42,-44],[40,-75],[25,-35],[-15,-37],[-57,-71],[33,-39],[59,-26],[0,-116],[-4,-56],[-29,-61],[-34,-26],[-33,-38],[8,-36],[8,-22],[35,-42],[98,-13],[13,11],[-23,13],[-66,20],[-26,16],[-23,38],[27,42],[29,31],[35,71],[11,50],[-7,52],[23,24],[35,25],[17,5],[16,11],[-25,13],[-23,6],[-48,32],[-8,41],[96,17],[57,29],[210,13],[144,55],[322,-15],[226,-45],[317,-5],[117,-30],[11,-11],[7,-22],[-50,-9],[-83,0],[-22,-56],[14,-70],[148,-74],[129,-31],[90,-49],[48,-4],[188,5],[110,-25],[100,19],[109,0],[38,-5],[40,-37],[64,-10],[77,-1],[43,7],[17,9],[-6,15],[-64,22],[7,27],[25,6],[107,-36],[44,-6],[39,27],[29,49],[16,33],[17,17],[14,2],[14,10],[-34,39],[-33,49],[-7,32],[-10,16],[-4,59],[30,60],[21,17],[85,-23],[38,36],[24,14],[102,24],[43,-2],[71,-23],[228,-110],[-5,-42],[54,12],[26,17],[61,11],[41,18],[11,-7],[14,-17],[-10,-25],[-14,-25],[9,-15],[12,-3],[61,-31],[79,57],[32,55],[22,11],[197,-38],[59,-21],[12,-12],[8,-20],[32,-22],[39,-12],[-5,-18],[-2,-19],[92,-3],[40,-16],[44,-25],[-5,-29],[11,-17],[41,-2],[11,3],[-13,-39],[-55,-42],[-33,-16],[-38,-28],[21,-5],[95,-8],[59,-56],[6,-41],[-37,-16],[-84,-52],[-50,-21],[-35,-2],[-25,-7],[36,-22],[158,-6],[46,-28],[36,-70],[0,-86],[-36,-43],[-97,-7],[-127,96],[-78,37],[-109,71],[-21,-12],[32,-60],[51,-34],[92,-93],[154,-192],[36,16],[21,24],[10,31],[-9,43],[25,-21],[23,-38],[46,-64],[-62,3],[-80,-21],[-29,-26],[22,-35],[59,-5],[25,-49],[46,-60],[103,-164],[73,-31],[71,-68],[71,-32],[37,-2],[25,42],[20,-15],[19,-76],[34,-33],[38,-2],[31,13],[45,36],[36,42],[58,116],[38,58],[36,24],[-13,28],[4,33],[26,77],[36,91],[27,49],[66,97],[25,18],[18,-32],[14,-42],[10,-18],[10,-7],[81,-85],[82,-67],[73,-33],[115,-32],[167,5],[30,42],[58,32],[94,16],[55,39],[91,11],[57,-6],[88,-28],[197,-89],[55,-33],[29,-35],[64,-52],[41,-25],[40,-18],[14,5],[-5,15],[-20,15],[-16,19],[47,19],[5,15],[17,12],[62,11],[-61,19],[-20,3],[-29,11],[2,27],[19,19],[15,36],[19,23],[32,18],[24,3],[57,-23],[41,42],[30,-3],[63,-43],[56,-64],[31,0],[87,26],[98,1],[-13,38],[-68,83],[8,106],[-47,24],[-54,14],[78,27],[58,87],[46,8],[48,16],[-15,11],[-143,9],[-31,-10],[-21,-26],[-71,0],[-8,59],[-2,37],[93,79],[35,17],[236,-2],[71,15],[104,39],[-27,25],[-3,50],[-89,73],[7,16],[9,11],[27,0],[140,-19],[58,-39],[151,-40],[404,-13],[45,-14],[174,-17],[73,-19],[175,-23],[80,-17],[63,-25],[103,-15],[47,-17],[-5,-53],[-213,7],[-71,17],[-88,2],[-33,-8],[-53,-44],[-63,-23],[-53,-4],[35,-38],[49,-10],[158,49],[432,24],[66,-4],[-7,-34],[-58,-65],[-55,-50],[-80,-52],[-30,0],[63,110],[-26,6],[-24,-3],[-70,46],[-11,2],[-14,-11],[0,-16],[-13,-64],[26,-27],[0,-46],[-97,-29],[-38,3],[-40,18],[-17,0],[-5,-15],[8,-27],[-1,-13],[-15,-22],[-8,-23],[24,-26],[31,-7],[171,29],[75,36],[82,65],[146,159],[65,54],[37,21],[48,8],[269,-17],[156,-34],[149,-51],[74,-42],[54,-57],[10,-24],[5,-32],[-37,-30],[-167,-10],[-64,-17],[-24,-19],[-3,-11],[-8,-17],[12,-14],[75,-2],[72,-13],[100,-36],[15,-12],[32,-35],[10,-6],[149,6],[10,-12],[9,-26],[-39,-40],[-39,-27],[-80,-64],[40,23],[161,55],[41,10],[49,-4],[121,-50],[50,-39],[92,-112],[-26,-12],[-66,-12],[208,-85],[80,1],[184,24],[93,1],[172,54],[171,35],[157,2],[83,33],[220,-1],[211,-11],[164,-20],[185,-60],[180,-83],[105,-82],[21,-25],[30,-57],[13,-48],[13,-65],[-6,-51],[-26,-36],[-16,-45],[2,-53],[-31,-69],[29,-49],[80,-32],[172,-42],[47,-29],[6,-85],[14,-71],[15,-136],[29,-35],[47,-32],[9,-45],[-59,-144],[-37,-27],[-39,-40],[69,14],[35,53],[38,97],[36,16],[19,31],[0,92],[-23,79],[0,57],[15,46],[114,95],[61,38],[58,22],[158,19],[72,19],[82,-13],[58,5],[67,20],[59,-10],[98,-63],[347,-14],[61,-22],[233,-27],[18,0],[52,31],[154,108],[64,-7],[26,-17],[27,-43],[28,-27],[23,-75],[20,-102],[33,-18],[46,-6],[100,-38],[101,-48],[29,-92],[54,-77],[126,7],[132,16],[127,126],[0,52],[-31,74],[-47,72],[-37,112],[-117,25],[11,33],[44,39],[40,61],[6,46],[-11,98],[106,-7],[106,-11],[201,-44],[163,-18],[86,-28],[52,-32],[62,-23],[21,57],[23,14],[82,-33],[60,-9],[103,4],[130,-15],[141,3],[127,25],[47,-5],[52,-20],[84,-53],[143,-71],[130,-20],[150,-66],[141,-25],[113,-38],[16,-14],[5,-21],[8,-18],[89,-20],[165,-143],[-99962,-16],[56,-25],[56,-20],[23,6],[12,-2],[32,-35],[21,-16],[113,-41],[51,-45],[42,-52],[-21,10],[-38,34],[4,-39],[12,-27],[61,-26],[64,-20],[40,-24],[14,-21],[8,-38],[-10,-33],[37,12],[35,30],[-18,23],[-117,81],[-25,27],[34,-14],[158,-103],[43,-39],[-18,-8],[-13,-23],[14,-10],[19,8],[31,4],[31,-13],[35,-27],[73,-32],[434,-254],[10,-44],[12,-21],[7,-26],[2,-43],[-39,-51],[61,5],[9,6],[16,21],[17,14],[24,-17],[19,-34],[-6,-46],[-17,-38],[-2,-63],[15,-54],[15,-22],[13,-26],[3,-76],[-27,-34],[-15,-59],[17,-6],[52,-5],[18,-11],[30,-27],[7,-26],[7,-36],[9,-34],[7,-16],[8,3],[30,46],[14,14],[34,12],[19,-53],[-13,-88],[11,0],[8,10],[11,23],[15,14],[19,32],[16,39],[-19,31],[-21,20],[-51,10],[-26,24],[-10,29],[26,12],[22,21],[15,52],[-4,28],[-6,27],[-12,39],[-19,23],[-36,11],[-16,22],[-25,-1],[-25,6],[-9,8],[1,16],[28,7],[157,2],[57,22],[25,-6],[26,-16],[94,-21],[-3,-10],[-16,-10],[-27,-46],[-6,-26],[-1,-34],[24,-6],[24,14],[-12,27],[-3,33],[10,14],[13,3],[24,-24],[27,-8],[89,-10],[26,3],[8,13],[-18,14],[-116,33],[-2,17],[108,-22],[48,-20],[48,-15],[67,5],[66,-24],[63,-65],[58,-82],[59,-49],[61,-36],[103,-99],[13,-8],[10,-14],[-19,-16],[-17,-25],[34,17],[33,12],[17,-3],[15,-12],[10,-21],[5,-20],[-14,-18],[99,-4],[30,-12],[14,-49],[-28,-34],[-17,5],[-16,14],[-15,1],[-44,-14],[-67,-46],[-38,-37],[-7,-24],[6,-65],[-5,-31],[-29,-20],[-64,12],[-29,13],[-33,17],[-31,24],[-41,39],[-12,4],[-8,-10],[13,-24],[28,-31],[47,-40],[22,-45],[-14,-23],[-18,-5],[-13,1],[-41,14],[-29,3],[-90,-13],[-32,-8],[-11,7],[-3,19],[-48,15],[-29,2],[-13,6],[-11,21],[-32,30],[-48,11],[-31,2],[-17,-7],[63,-39],[56,-67],[-11,-13],[-7,-14],[31,-1],[21,4],[5,-17],[-16,-71],[-11,-15],[-98,-16],[25,-12],[25,-3],[29,3],[26,-13],[17,-44],[3,-46],[-25,-27],[-27,-21],[-53,-33],[-56,-14],[-29,3],[-28,-7],[-19,-17],[-5,-17],[24,11],[28,-6],[27,-21],[-3,-17],[-26,-18],[-5,-14],[9,-24],[-3,-20],[13,-11],[30,-4],[36,-14],[36,-20],[14,-16],[12,-24],[4,-24],[-6,-11],[-82,-4],[-12,3],[-5,28],[-10,22],[-31,16],[-12,-11],[9,-79],[-12,-24],[-14,-18],[-41,-10],[-33,6],[-28,37],[0,32],[19,19],[0,26],[-6,30],[-18,-35],[-23,-29],[-35,-37],[-18,-4],[-17,4],[-47,26],[-29,23],[-56,74],[-32,34],[-70,46],[-72,34],[-57,22],[-31,-3],[-30,-9],[-39,5],[-13,8],[-11,19],[-11,10],[-54,46],[-38,37],[-2,25],[8,30],[-7,73],[-18,69],[-48,68],[-126,44],[-104,31],[-37,7],[-33,-6],[-87,-57],[-59,-8],[-170,-3],[-28,6],[-26,24],[-6,33],[8,59],[-1,25],[-7,9],[-9,-1],[-33,24],[-31,40],[-25,41],[-16,56],[22,3],[31,-14],[5,13],[10,51],[21,24],[9,18],[14,68],[2,49],[-24,-26],[-39,-68],[-18,-20],[-14,-9],[-13,-4],[-30,13],[-22,17],[-1,65],[-10,17],[-10,-12],[-4,-24],[-28,-4],[-13,-10],[7,-39],[-3,-33],[-27,-13],[-53,-7],[-19,32],[-16,-45],[-12,-51],[-2,-67],[17,-56],[25,-27],[53,-40],[23,-28],[6,-37],[-2,-33],[-28,-42],[-18,-34],[-33,-81],[-19,-33],[-82,-69],[99951,-19],[-49,-66],[-56,-57],[-83,-23],[-126,-87],[-49,-16],[-65,40],[-149,26],[-47,35],[-68,88],[-23,13],[-21,35],[-82,39],[-72,-25],[-58,19],[-20,-14],[30,-12],[54,-11],[82,5],[27,-9],[24,-31],[28,-49],[-21,-32],[-22,-11],[-66,36],[-76,-5],[-36,9],[-102,60],[-78,-67],[-107,-35],[-83,-4],[-152,-53],[41,-2],[111,38],[65,0],[96,21],[51,24],[24,23],[31,23],[31,-11],[22,-24],[14,-35],[14,-45],[-18,-24],[-18,-12],[-22,-33],[102,56],[62,-33],[31,5],[58,49],[93,32],[11,-6],[11,-16],[-15,-94],[6,-74],[71,-81],[73,-47],[26,-2],[24,9],[9,43],[18,32],[23,-29],[19,-31],[27,-76],[-1,-23],[-6,-45],[23,-20],[32,-6],[12,-71],[11,-101],[-14,-9],[-16,0],[-51,-26],[7,-18],[52,-10],[15,-21],[-11,-47],[3,-21],[18,-5],[12,28],[-3,39],[5,17],[35,-81],[0,-31],[30,-36],[85,-54],[15,-24],[5,-40],[-21,-12],[-20,-28],[12,-40],[22,-32],[36,-12],[17,-52],[0,-49],[-26,-43],[-53,-59],[-31,-24],[-12,-42],[-3,-44],[-21,2],[-23,19],[-262,110],[-99,21],[-87,2],[-16,7],[1,26],[5,24],[13,29],[-6,26],[-11,2],[-11,-20],[-24,0],[-23,23],[-19,-7],[-9,-32],[-7,-17],[0,-20],[12,-18],[50,-20],[-8,-18],[-70,-14],[-57,-18],[-74,-54],[-30,-38],[-198,-93],[-48,-32],[-21,-4],[-27,-11],[-21,-39],[-110,-55],[-23,5],[-29,-46],[-27,-26],[-63,-3],[-41,-13],[-88,-67],[-55,21],[-65,-91],[-72,-87],[-21,0],[-55,36],[-14,-19],[9,-35],[19,-37],[-11,-10],[-22,10],[-16,2],[-12,-11],[2,-27],[-31,-33],[-24,-3],[-28,-11],[-10,-29],[9,-32],[-50,-36],[-41,-48],[-19,-8],[-22,-21],[-24,-16],[-28,3],[-67,-67],[-150,-117],[-42,-15],[-53,-36],[-5,-23],[0,-30],[-21,-48],[-25,-122],[-8,-22],[-12,-25],[-55,12],[-48,46],[-15,22],[-8,25],[-3,40],[-9,19],[-11,9],[-55,99],[-95,68],[-14,23],[-121,-18],[-33,-1],[-58,17],[-90,-11],[-109,-37],[-33,-23],[-111,-36],[-73,-57],[-142,-208],[-34,-43],[-16,-9],[-24,-4],[-10,42],[-4,33],[9,63],[17,52],[17,96],[5,39],[12,41],[-48,-3],[-66,-71],[-100,-69],[-46,-18],[-36,-41],[-26,-5],[-30,-15],[-3,-89],[-15,-48],[-18,-10],[-28,-2],[-21,19],[-30,71],[-40,37],[-24,7],[-18,-9],[-35,-48],[-38,-44],[6,50],[-33,19],[-29,11],[-36,2],[-11,-7],[-14,-29],[-33,-37],[-22,-15],[-23,-30],[-13,-31],[-12,-44],[-14,-107],[1,-125],[-53,-99],[-20,10],[-10,-6],[-10,-13],[18,-55],[-10,-19],[-9,-13],[-25,-14],[-56,-81],[-53,-52],[-87,-151],[-25,-100],[-25,-113],[12,-55],[10,-36],[16,-25],[28,-27],[59,-29],[-5,-19],[0,-16],[21,28],[15,79],[37,26],[18,-1],[118,-63],[23,-27],[-4,-60],[-7,-28],[-22,-42],[-42,-50],[-49,-69],[-5,-43],[0,-23],[13,-81],[1,-46],[-6,-85],[3,-37],[13,-31],[20,-20],[35,11],[33,-9],[25,-22],[-4,-71],[15,-67],[11,-124],[-21,-34],[-20,-21],[-39,-54],[-21,-6],[-37,18],[-58,96],[23,57],[50,40],[23,28],[17,42],[-26,-8],[-18,-18],[-57,8],[-23,-20],[-28,-32],[11,-80],[-19,-15],[-35,-27],[-52,-34],[-17,-23],[-45,-143],[-41,-107],[-15,-92],[2,-79],[15,-88],[11,-38],[48,-82],[23,-64],[7,-77],[-38,-37],[-67,-89],[-28,-10],[-92,2],[-46,45],[-54,-11],[-45,-22],[-71,-63],[-63,-82],[-60,-57],[-18,-34],[-24,-71],[-22,-129],[8,-64],[12,-30],[11,-39],[-16,-61],[0,-38],[29,-61],[6,-84],[-21,-2],[-49,60],[-52,4],[-124,-69],[-52,-40],[-57,-80],[-17,15],[-12,46],[-21,20],[-26,-10],[-11,-43],[36,-20],[13,-28],[-21,-107],[-15,-36],[6,-95],[-2,-45],[-8,-45],[-37,-123],[-63,-162],[-78,-118],[-54,-41],[-27,-31],[-12,-41],[-80,-113],[-98,-119],[-28,-21],[-6,45],[-3,44],[-12,59],[-36,49],[-6,40],[-6,54],[-3,252],[-31,262],[-3,82],[-38,67],[-21,70],[-12,68],[-3,81],[-41,425],[-13,106],[-55,342],[-24,198],[-16,192],[-2,86],[24,257],[21,160],[74,359],[11,33],[12,17],[128,138],[56,75],[33,80],[36,101],[-4,55],[-4,31],[-14,36],[-30,41],[11,18],[12,14],[31,15],[64,-31],[65,13],[60,127],[86,-19],[65,22],[18,-9],[13,43],[36,46],[66,68],[97,82],[48,55],[27,52],[40,50],[39,62],[71,186],[140,154],[55,88],[45,31],[40,15],[101,126],[64,105],[85,72],[25,46],[44,108],[18,26],[55,41],[124,71],[72,71],[106,10],[31,28],[33,16],[35,23],[-43,63],[10,33],[8,16],[76,74],[31,60],[-4,25],[-5,19],[-47,24],[9,55],[13,48],[38,40],[13,94],[2,99],[37,142],[22,32],[87,71],[20,2],[60,-24],[66,-12],[23,-22],[5,19],[-3,24],[18,9],[38,-10],[-5,27],[-98,14],[-70,31],[-63,60],[-41,17],[-45,-5],[-257,-84],[-12,-23],[-12,-32],[16,-47],[-13,-21],[-12,-14],[-14,-31],[-12,-61],[3,-59],[-31,-92],[-3,-57],[55,-32],[14,-21],[-16,-32],[-17,-19],[-14,-24],[-11,-9],[-15,-6],[-20,31],[-18,62],[-29,4],[-10,-10],[-5,-24],[-25,-2],[-28,12],[-32,-5],[-57,-70],[-319,-333],[-34,-40],[-42,-80],[-79,-8],[-31,-18],[-23,-24],[-31,-16],[1,30],[6,22],[7,59],[43,111],[-27,12],[-27,1],[-50,-23],[-34,-37],[-26,8],[13,33],[31,66],[-9,61],[-9,33],[13,18],[65,123],[23,64],[20,84],[1,26],[-4,32],[-19,5],[-16,0],[-128,-83],[-47,-23],[-15,36],[-21,15],[-35,61],[-30,9],[-31,-4],[-70,-41],[-77,-23],[-59,8],[-51,-35],[-23,-6],[-75,24],[-91,2],[-28,-30],[-79,-41],[-54,-64],[-28,-20],[-31,-28],[-14,-120],[-41,-39],[-38,-29],[-80,-92],[-56,-126],[-38,-54],[-81,-76],[-126,-100],[-110,-162],[-38,-122],[-14,-4],[-27,-25],[-7,-60],[1,-41],[-17,-33],[-17,-42],[18,-26],[16,-5],[24,4],[63,34],[108,-52],[54,-52],[-4,-52],[2,-46],[-40,3],[-53,-4],[-34,-27],[-68,43],[-23,-16],[-36,-46],[-65,-19],[-33,23],[-55,63],[-93,-6],[-24,-71],[-21,2],[-33,-7],[-55,-82],[-18,-8],[-67,16],[-48,42],[-23,2],[-43,-19],[-21,-50],[-107,-25],[-105,5],[-57,119],[107,47],[63,-10],[72,8],[75,37],[-26,31],[-18,7],[-45,-4],[-40,23],[-87,116],[-38,21],[-49,13],[-38,1],[-14,-8],[-20,-28],[-13,-27],[-12,-9],[-26,5],[-31,22],[-37,-7],[16,17],[35,18],[-58,20],[-37,28],[-34,7],[-156,69],[-60,-6],[-37,-19],[-63,-56],[17,-41],[14,-19],[8,-22],[-20,-4],[-58,-4],[-35,33],[-25,-48],[10,-43],[40,15],[21,-18],[-14,-49],[-52,-15],[-65,3],[-65,87],[-107,-15],[-51,-56],[-49,-13],[-131,56],[-66,5],[-74,48],[-26,-15],[-47,-121],[-63,-29],[-32,16],[-29,76],[-20,25],[-56,23],[-298,-22],[-100,19],[-70,2],[-96,-39],[-92,15],[-170,-75],[-70,-50],[-84,-88],[-76,-147],[-42,-55],[-71,-70],[-100,-64],[-54,-65],[-30,-53],[-52,-200],[-14,-30],[-123,-72],[-39,-80],[-17,-20],[-51,-34],[-31,-56],[-17,-16],[-73,-40],[-60,-100],[-85,-70],[-123,-194],[-11,-23],[-10,-52],[-19,-38],[-106,-169],[-33,-16],[-53,-79],[-54,-47],[-49,-56],[-61,-59],[-92,-67],[-31,-39],[-48,-90],[-118,-111],[-59,-27],[-77,-98],[-8,-23],[-6,-36],[13,-63],[19,-14],[31,-9],[115,-62],[107,17],[95,0],[37,6],[23,-2],[8,-34],[-1,-63],[-14,-57],[-11,-168],[-13,-75],[10,-73],[23,-13],[23,33],[37,5],[38,-15],[28,117],[-23,18],[-22,42],[13,31],[66,57],[41,5],[39,-4],[-43,-73],[-17,-15],[-13,-4],[-18,-14],[38,-42],[41,-32],[59,-14],[-14,-25],[-39,-22],[-36,-91],[-56,-44],[-26,-30],[9,-19],[21,-4],[114,12],[59,25],[84,71],[35,105],[32,29],[9,0],[11,-7],[1,-74],[-45,-83],[-32,-47],[-12,-40],[19,0],[37,8],[16,19],[42,101],[11,72],[6,100],[-5,60],[3,43],[-16,43],[11,13],[113,-59],[60,-14],[108,48],[24,-12],[18,-29],[89,-89],[17,-29],[29,-108],[95,-125],[88,-59],[3,-23],[56,-69],[44,-24],[7,-62],[-20,-50],[-41,-48],[-82,44],[-13,-2],[10,-28],[59,-81],[47,-34],[3,-108],[-6,-59],[-31,-66],[10,-38],[44,-56],[22,-22],[22,-32],[-28,-70],[-5,-78],[-30,-35],[-36,-76],[-55,-62],[-26,-119],[-42,-105],[-5,-104],[-7,-37],[-34,-108],[-13,-146],[17,-239],[8,-14],[16,-14],[-3,-17],[-8,-11],[-33,-71],[0,-49],[13,-37],[2,-95],[-24,-153],[-9,-24],[-10,-39],[-4,-36],[-7,-22],[-4,-39],[7,-34],[12,-17],[-43,-110],[-15,-144],[-16,-58],[-31,-57],[-66,-83],[-24,-52],[-43,-66],[-41,-51],[-57,-145],[-46,-145],[-116,-188],[-15,-46],[-9,-50],[-30,-84],[-15,-116],[-35,-46],[-29,-122],[-94,-186],[-23,-63],[-72,-103],[-77,-142],[-96,-128],[-18,-53],[-37,-58],[-40,-90],[-58,-90],[-12,-60],[-19,-42],[-43,-28],[-31,-39],[-95,-231],[-12,-42],[-2,-37],[-62,-86],[-35,-92],[-60,-57],[-62,-78],[-149,-144],[-41,-54],[-83,-68],[-34,-1],[-72,-37],[-47,-38],[-28,14],[-17,50],[-21,-2],[-16,-7],[-43,48],[-37,-3],[-26,22],[-50,-15],[9,205],[-7,43],[-21,-40],[-57,-72],[-23,-14],[-22,0],[9,44],[31,62],[-10,10],[-10,3],[-40,-27],[-20,-30],[-58,-119],[-34,-100],[-28,-29],[-13,-43],[-24,-41],[-37,11],[-22,-7],[-53,23],[-13,-10],[35,-77],[-29,-113],[-12,-14]],[[63178,98417],[127,-23],[95,6],[29,-3],[28,-7],[28,-16],[38,-35],[0,-49],[-17,-2],[-161,22],[-74,51],[-20,5],[-29,-13],[-25,-31],[-27,-8],[-31,-39],[-29,5],[-15,-4],[-37,-27],[-93,0],[-15,-12],[-30,-38],[-38,-10],[-66,-6],[-22,21],[-10,33],[-15,17],[-92,-19],[-69,13],[-67,22],[-68,8],[61,23],[334,48],[131,12],[62,34],[92,22],[25,0]],[[63966,98460],[42,-10],[103,2],[32,-14],[149,-84],[38,-2],[31,-30],[-154,-49],[-52,-36],[-189,-8],[-121,-17],[-26,-15],[12,-26],[-58,-29],[-191,-4],[-24,-9],[-37,-31],[3,-5],[65,-8],[10,-6],[9,-14],[5,-20],[-9,-26],[-24,-4],[-26,3],[-60,20],[-7,-7],[-6,-14],[-19,-28],[-22,-8],[-61,21],[-20,-6],[-19,-13],[-24,-6],[-56,-4],[-29,17],[25,23],[70,35],[-23,15],[-70,4],[-55,-9],[-28,-24],[-26,-5],[-72,2],[-40,31],[-30,12],[-26,25],[211,83],[70,32],[67,16],[87,9],[27,10],[27,4],[17,-6],[44,-29],[129,5],[27,24],[2,56],[-13,33],[27,63],[74,25],[171,34],[43,2]],[[68823,95758],[-111,-44],[-66,-30],[-65,-21],[-66,-15],[-104,-36],[-184,-46],[-116,-37],[-127,-30],[-134,-39],[-134,-27],[-33,-2],[-96,-38],[-75,-16],[-272,-85],[-125,-63],[-36,-5],[-36,3],[-30,-20],[-28,-33],[-59,-34],[-30,-31],[-30,-24],[-18,-8],[-34,2],[-16,-2],[-55,-27],[-10,-22],[59,-14],[13,-24],[-17,-16],[-38,-23],[-22,-23],[-40,-23],[-27,-7],[-65,1],[-4,-29],[11,-18],[-6,-16],[-22,-15],[-21,2],[-99,45],[-16,-15],[-7,-32],[-3,-34],[-13,-25],[-17,-13],[-31,-13],[-109,21],[-9,-20],[17,-25],[23,-54],[5,-22],[-13,-36],[-49,-56],[-187,-67],[3,-23],[21,-44],[5,-27],[-8,-26],[-24,-21],[-28,0],[-15,4],[-43,29],[-37,7],[-7,-14],[49,-39],[21,-51],[-23,-27],[-90,-61],[-47,-80],[-92,-35],[-57,-5],[-56,10],[-53,18],[-135,7],[-75,20],[-76,36],[-66,-3],[-56,-18],[-74,-39],[-47,75],[20,35],[-101,90],[-22,40],[25,19],[31,13],[59,36],[59,29],[61,9],[10,5],[25,43],[27,35],[25,20],[28,33],[89,134],[21,10],[184,26],[16,8],[-53,27],[-54,-1],[-25,9],[-14,19],[-8,22],[21,16],[71,81],[84,58],[78,35],[-19,9],[-25,23],[-95,-6],[-37,32],[-12,19],[-3,19],[31,25],[32,15],[35,-4],[35,-13],[28,-15],[27,-24],[23,1],[85,84],[-13,19],[-5,29],[9,14],[41,13],[27,5],[59,-6],[85,-18],[7,9],[21,56],[21,30],[86,50],[-5,15],[-4,25],[100,33],[65,33],[63,45],[32,9],[32,2],[65,19],[121,22],[71,22],[23,48],[45,17],[90,7],[35,-3],[20,-20],[39,1],[15,11],[16,17],[-5,29],[-1,37],[34,23],[13,5],[102,9],[60,-4],[125,-28],[65,-7],[87,9],[52,-5],[154,42],[261,39],[68,28],[67,33],[34,7],[35,2],[31,11],[61,28],[30,7],[33,0],[30,20],[26,43],[29,33],[79,43],[134,60],[121,23],[75,25],[32,2],[102,-12],[130,-33],[59,-36],[49,-47],[10,-17],[9,-30],[-14,-28],[-9,-28],[11,-22],[-95,-71],[-93,-78],[-16,-17],[-111,-27]],[[65366,94071],[130,-23],[97,-7],[59,-18],[22,-14],[-9,-36],[-17,-14],[-41,-47],[-6,-28],[7,-45],[-6,-33],[-13,-24],[-11,-10],[-73,0],[-27,-13],[-1,-26],[-5,-29],[-24,-42],[-48,-13],[-11,-16],[4,-27],[-17,-21],[1,-32],[9,-18],[2,-37],[33,-54],[-6,-22],[-26,-43],[-8,-53],[-21,-46],[48,-38],[21,-50],[19,-53],[57,-105],[62,-94],[114,-137],[122,-104],[48,-29],[116,-48],[20,-16],[19,-21],[-49,-39],[-51,-14],[-5,-18],[-28,-10],[-138,34],[-7,5],[-15,24],[-16,18],[-35,3],[-35,-11],[21,-22],[23,-7],[40,-41],[-17,-16],[-18,-2],[-82,55],[-7,-7],[-8,-16],[-40,18],[-10,-13],[-31,-6],[-25,15],[0,19],[-5,10],[-125,-15],[-52,0],[-51,7],[-61,36],[-11,-16],[-2,-19],[-23,8],[-51,29],[-37,12],[-133,28],[-94,34],[24,16],[40,8],[1,21],[-7,29],[-1,29],[23,20],[52,-9],[-7,32],[25,6],[47,-18],[18,11],[-75,41],[-82,58],[8,21],[-29,5],[-30,-1],[-25,34],[4,45],[22,31],[-13,6],[-127,-27],[-64,6],[-72,18],[-66,-26],[-67,-9],[-35,9],[-34,20],[-28,26],[-22,45],[-20,74],[-3,28],[4,62],[11,27],[28,52],[19,16],[43,25],[22,6],[51,-12],[51,-1],[22,14],[21,25],[15,32],[35,18],[10,10],[11,20],[12,31],[2,27],[10,26],[32,39],[-12,24],[5,16],[21,29],[-64,7],[-22,13],[-21,19],[6,18],[8,13],[64,48],[28,15],[31,7],[31,0],[33,-5],[32,7],[-34,33],[-3,22],[-13,53],[3,25],[14,21],[30,24],[43,8],[34,12],[33,19],[31,3],[63,-12],[31,2],[34,11],[97,40],[36,11],[38,-3],[50,-15],[55,-28]],[[76812,98545],[10,-26],[36,-21],[18,-21],[183,-67],[80,-8],[36,-17],[10,-20],[-3,-37],[-31,0],[-22,-12],[-124,-15],[-30,-22],[-24,-45],[13,-9],[12,-13],[37,-77],[10,-12],[37,-11],[-33,-29],[-35,-19],[-366,-37],[-249,-15],[-83,-16],[-27,2],[-65,-29],[-127,-38],[-61,0],[-181,53],[-222,45],[-31,25],[-55,15],[-71,12],[-31,51],[45,35],[58,34],[97,12],[92,20],[69,49],[43,48],[78,51],[-135,-13],[-51,7],[5,17],[28,36],[15,12],[49,19],[35,36],[81,25],[39,4],[38,-1],[70,12],[70,18],[66,10],[65,5],[63,14],[62,28],[27,48],[179,5],[28,-11],[22,-29],[26,-10],[31,-6],[79,-48],[15,-14]],[[77131,98017],[64,-37],[31,-41],[-30,-11],[-28,-28],[-13,-34],[-37,-27],[-10,-43],[17,-8],[20,12],[41,41],[53,28],[58,-16],[23,6],[40,39],[-7,33],[16,20],[18,5],[75,-4],[119,-17],[21,-17],[29,-10],[17,-16],[53,-13],[26,-12],[35,-28],[32,-42],[-40,-22],[-22,-40],[-9,-9],[-7,-15],[-3,-35],[-6,-30],[-7,-13],[-5,-17],[5,-45],[-12,-35],[-40,-27],[-41,-1],[-61,18],[-18,-1],[-17,-7],[76,-38],[56,-56],[65,-13],[18,-6],[23,-52],[8,-26],[-108,-62],[-28,-11],[-172,-9],[-113,-18],[-36,4],[-63,15],[-42,-6],[-60,10],[-37,0],[-85,23],[-88,38],[-17,18],[-18,12],[-105,10],[-23,8],[-153,-9],[-26,6],[-47,50],[-27,1],[-84,-29],[-31,2],[-64,19],[-38,24],[-6,8],[-4,29],[-38,15],[-46,52],[-27,54],[-128,28],[-77,7],[-58,-2],[-56,21],[93,78],[123,41],[53,31],[61,42],[25,65],[103,40],[27,14],[36,31],[12,4],[81,-38],[16,7],[15,17],[29,19],[100,3],[85,-8],[32,8],[39,-3],[195,28],[130,8],[24,-5]],[[78578,97496],[-27,-45],[-11,-40],[-83,-133],[-10,-23],[49,20],[44,45],[27,38],[30,24],[34,0],[35,9],[65,31],[66,14],[36,-1],[34,-15],[22,-35],[24,-28],[87,-21],[13,-7],[8,-24],[-7,-25],[50,-25],[69,11],[37,-7],[36,-14],[17,-22],[14,-27],[15,-39],[9,-41],[-8,-55],[-134,-84],[-25,-8],[-62,6],[-61,-9],[-161,-44],[-199,-1],[-57,-39],[-17,1],[-17,7],[-16,13],[-121,-11],[-136,-7],[-136,-1],[-45,-28],[-139,-55],[-127,-42],[-66,-10],[-96,11],[-30,14],[-29,21],[42,27],[30,54],[37,32],[94,61],[11,24],[18,51],[11,20],[15,18],[11,22],[2,33],[6,28],[37,42],[27,20],[29,6],[71,-8],[22,3],[-16,13],[-11,50],[2,16],[10,31],[18,15],[18,10],[11,42],[-5,15],[27,20],[13,27],[32,16],[65,13],[3,34],[10,21],[14,7],[33,6],[18,-1],[24,-34],[26,-28],[34,-6],[34,2],[-20,33],[1,35],[12,22],[16,10],[34,2],[107,-24],[70,-35],[16,-18],[-13,-10],[-31,-6],[-16,-10]],[[88902,95523],[28,-11],[34,7],[32,-15],[30,-61],[14,-16],[15,-11],[15,-5],[45,-2],[20,12],[15,28],[-1,28],[-4,29],[0,39],[7,35],[10,21],[13,14],[74,43],[52,42],[71,-16],[72,-38],[127,-80],[59,-23],[71,-21],[72,-8],[35,5],[69,22],[35,2],[436,-160],[15,-13],[14,-19],[-94,-24],[-61,-42],[-21,-29],[24,-24],[20,-32],[-133,-96],[-53,-25],[-54,-8],[-110,23],[-64,-1],[-62,20],[-69,58],[-29,29],[-25,40],[-8,64],[10,55],[37,16],[32,35],[5,15],[-17,31],[-108,5],[-68,-17],[-61,-18],[18,-117],[13,-37],[18,-27],[98,-123],[22,-17],[65,-24],[55,-53],[-97,-59],[-43,-17],[-42,-10],[-26,5],[-26,12],[-28,28],[-24,30],[-31,23],[-66,-5],[-61,-20],[-61,-14],[-180,-24],[-55,-15],[-55,-5],[-71,28],[-70,39],[-22,1],[-20,-11],[-17,-24],[-9,-38],[-23,-51],[-29,-36],[-31,-16],[-32,-2],[-33,10],[-32,16],[-215,56],[-25,17],[-24,25],[-65,79],[-32,19],[-33,8],[-64,40],[-59,64],[-12,20],[-4,32],[10,23],[51,-11],[34,1],[-21,119],[15,112],[25,19],[97,-13],[-31,37],[-26,49],[16,27],[18,19],[42,15],[56,7],[17,12],[16,19],[31,20],[62,8],[107,40],[29,-1],[27,-21],[26,-30],[28,-16],[88,-39],[60,-35],[85,-71]],[[90776,95259],[73,-4],[107,43],[14,1],[260,-15],[22,-15],[2,-30],[-8,-15],[-4,-22],[32,-21],[84,-4],[53,19],[156,-10],[128,-14],[49,-32],[38,-17],[31,-20],[23,12],[22,20],[18,4],[18,-4],[-49,-122],[-18,-14],[-69,-30],[-137,-42],[-67,-13],[-152,0],[-209,16],[-57,15],[-34,18],[-64,43],[-31,16],[-103,14],[-32,8],[-60,37],[-62,30],[-154,49],[10,56],[20,56],[24,50],[26,45],[28,13],[59,-41],[-1,-47],[14,-33]],[[89655,83175],[60,-145],[2,-32],[-5,-33],[-11,-42],[-4,-44],[7,-39],[-5,-10],[49,-176],[35,-111],[11,-45],[7,-48],[11,-99],[2,-151],[-3,-50],[-8,-49],[-8,-29],[-18,-20],[-8,-54],[-4,-153],[9,-80],[17,-56],[12,-60],[2,-64],[5,-29],[27,-36],[11,-28],[3,-40],[2,-59],[4,-13],[13,-18],[56,-426],[22,-129],[64,-223],[26,-135],[17,-64],[11,-68],[9,-69],[19,-76],[25,-74],[49,-67],[22,-37],[5,-30],[2,-103],[-11,22],[-14,79],[-24,45],[-35,54],[-35,48],[-44,80],[-21,23],[-23,16],[-41,18],[-24,2],[-98,-12],[-40,-16],[-37,-37],[-21,-54],[-16,-108],[-89,-386],[-21,-101],[-8,-108],[3,-85],[6,-31],[26,-84],[21,-49],[15,-21],[18,-14],[11,-17],[10,-23],[18,-57],[23,-128],[25,-91],[11,-28],[28,7],[18,-1],[18,-8],[10,-23],[15,-101],[11,-98],[1,-26],[-20,-75],[-5,-32],[-3,-34],[-5,-27],[-9,-23],[-3,111],[-14,79],[-5,68],[-19,47],[-65,20],[-61,7],[-9,9],[-14,29],[-15,23],[-16,3],[-16,-9],[-27,-33],[-21,-51],[-15,-55],[-13,-59],[-27,-155],[-16,-51],[-20,-48],[-17,26],[-15,30],[-9,43],[-4,48],[-24,161],[10,140],[41,194],[7,63],[-6,60],[-9,60],[-6,113],[1,25],[14,65],[17,62],[20,54],[9,64],[-13,159],[-29,108],[-37,102],[-7,28],[-2,27],[32,128],[11,62],[13,134],[12,74],[9,74],[3,373],[-3,55],[-20,117],[-1,67],[9,84],[13,65],[17,63],[0,129],[-32,119],[-24,52],[-37,63],[-28,35],[-14,27],[14,9],[10,21],[-24,33],[-15,50],[-2,196],[6,49],[18,55],[16,59],[14,137],[5,141],[-9,57],[-4,116],[8,29],[31,38],[49,23],[11,-7],[38,-45],[14,-2],[15,5],[29,21],[16,52],[-21,29],[12,37],[35,13],[3,32],[-13,4],[11,46],[7,45],[-10,42],[-57,104],[-36,76],[60,-1],[18,14],[14,32],[7,33],[19,-13]],[[0,93051],[43,8],[43,15],[40,3],[40,-9],[41,2],[40,15],[32,-2],[33,-9],[122,-21],[23,-7],[39,-27],[22,-10],[22,-16],[23,-27],[43,-29],[65,-34],[14,-10],[10,-26],[-7,-30],[-83,-57],[-67,-15],[-129,-15],[-175,-43],[-72,-12],[-25,2],[-63,28],[-74,12],[99966,-10],[-65,-44],[-137,-11],[-81,-31],[-19,-2],[-40,103],[-6,26],[15,34],[41,42],[17,30],[96,54],[86,71],[47,11],[47,33],[-99967,8]],[[59948,89390],[9,-23],[3,-37],[-9,-24],[5,-20],[-18,-14],[-27,46],[-17,1],[-17,20],[-8,33],[15,9],[7,-6],[33,24],[24,-9]],[[61864,90265],[-10,-8],[-55,27],[-5,21],[2,8],[22,6],[23,-7],[17,-27],[6,-20]],[[64695,92951],[25,-42],[22,-31],[19,3],[14,-16],[4,-32],[-38,-54],[-6,-20],[16,-18],[4,-10],[-27,-8],[-5,25],[-15,24],[-32,19],[-13,16],[-14,38],[-53,40],[-34,-6],[-38,18],[-11,8],[-3,23],[16,19],[60,16],[29,-1],[31,-16],[-2,20],[3,8],[13,-3],[35,-20]],[[96677,83274],[11,-30],[-112,106],[-52,56],[-13,36],[19,0],[23,-34],[32,-16],[48,-46],[44,-72]],[[94643,92639],[-19,-10],[-40,8],[-19,18],[1,42],[2,6],[33,-6],[22,-23],[20,-35]],[[94851,91532],[-12,-1],[9,39],[1,17],[-27,28],[-50,21],[-13,17],[-3,50],[11,78],[-23,42],[8,37],[59,41],[24,31],[27,25],[4,-3],[27,-24],[-2,-52],[-20,-37],[-46,-14],[-6,-25],[6,-44],[1,-57],[5,-51],[28,-52],[6,-26],[-3,-25],[-11,-15]],[[92467,95691],[-27,-20],[-64,33],[24,18],[43,12],[10,-6],[8,-13],[6,-24]],[[91430,96001],[-209,-6],[14,16],[75,40],[191,21],[-38,-20],[-18,-41],[-15,-10]],[[88321,93034],[-69,-49],[-27,6],[-28,24],[-15,5],[-15,-4],[-17,-10],[-22,-2],[-51,26],[-5,16],[5,8],[14,8],[10,0],[32,13],[149,5],[11,-3],[21,-23],[7,-20]],[[79915,96849],[-25,-28],[-35,-14],[-38,23],[-95,-1],[-163,25],[47,16],[257,13],[18,-3],[34,-31]],[[81243,95979],[43,-39],[8,-25],[-13,-6],[-8,-9],[-3,-18],[-12,-1],[-38,19],[-27,31],[-40,7],[-42,31],[-9,13],[11,4],[75,-8],[32,14],[23,-13]],[[76814,95782],[22,-9],[-6,-24],[-29,7],[-38,-12],[1,-20],[-15,-33],[-53,20],[-73,3],[-46,19],[-102,12],[3,27],[16,16],[59,-23],[54,26],[101,-13],[33,19],[73,-15]],[[76745,96213],[-9,-11],[-12,-9],[-33,6],[-65,-16],[-25,9],[-24,18],[-88,-6],[-26,4],[42,22],[120,24],[188,62],[9,-30],[0,-14],[-38,-34],[-39,-25]],[[74864,96306],[-59,-3],[-34,15],[-10,10],[16,26],[23,17],[93,6],[17,-18],[-4,-15],[-42,-38]],[[70738,93820],[-6,-5],[-14,10],[-42,15],[-71,39],[-22,27],[11,30],[16,20],[58,12],[53,-5],[35,-7],[66,-27],[-61,-17],[-26,-37],[3,-22],[11,-13],[-11,-20]],[[70973,94156],[-45,-14],[9,26],[54,37],[100,19],[30,-8],[4,-6],[-42,-39],[-21,-13],[-89,-2]],[[73207,94511],[-14,-14],[-13,2],[-11,-7],[-70,21],[-95,9],[24,22],[68,13],[101,-17],[30,-19],[-20,-10]],[[68706,91894],[-22,-50],[-46,3],[-14,11],[-6,9],[52,54],[32,-2],[4,-25]],[[68488,92477],[3,-23],[-15,8],[-19,26],[-11,32],[-4,64],[7,17],[6,9],[6,-2],[-1,-40],[28,-91]],[[69450,90150],[-49,-7],[-54,44],[-51,86],[10,21],[31,-7],[51,-2],[33,-14],[44,-9],[-5,-40],[0,-16],[14,-17],[-14,-30],[-10,-9]],[[63903,97968],[-23,-8],[-106,44],[-9,13],[91,41],[102,-6],[16,-20],[3,-7],[-69,-36],[-5,-21]],[[64280,97893],[7,-7],[-1,-6],[-99,6],[-173,-4],[-100,32],[106,32],[56,7],[72,27],[89,-26],[-5,-23],[1,-11],[24,-10],[23,-17]],[[64098,98529],[-39,-4],[-27,3],[-29,22],[-10,11],[-2,11],[26,2],[12,11],[4,8],[20,6],[34,1],[45,-12],[19,-24],[-44,-21],[-9,-14]],[[65410,98083],[-79,-27],[-40,1],[-20,16],[32,23],[41,17],[31,-5],[23,-8],[12,-17]],[[65115,98198],[-39,-30],[-129,32],[11,16],[14,6],[0,16],[-12,12],[5,24],[83,-18],[8,-7],[56,-12],[9,-24],[-6,-15]],[[66580,97900],[-100,-19],[-35,6],[-10,9],[-19,9],[-50,12],[7,33],[16,7],[150,37],[72,-21],[30,-51],[-61,-22]],[[66283,98526],[39,-30],[15,-33],[24,-20],[8,-38],[-20,-31],[-60,-6],[-99,-2],[-97,16],[-52,56],[-96,15],[-54,58],[56,17],[68,-8],[109,50],[15,-3],[24,-11],[88,-19],[32,-11]],[[63328,78045],[-4,-10],[-13,53],[-1,32],[8,17],[11,-54],[-1,-38]],[[63962,91696],[5,-56],[-17,-23],[-16,-6],[-7,35],[-13,15],[-48,-41],[-22,-46],[-60,-66],[-123,-47],[-75,-20],[-68,-6],[-63,42],[-35,79],[-6,24],[-4,32],[1,33],[4,50],[7,49],[26,44],[60,52],[59,34],[31,8],[75,2],[214,-117],[48,-30],[27,-41]],[[67603,98329],[-52,-2],[-51,9],[-67,29],[-67,34],[20,18],[63,23],[82,42],[139,9],[67,0],[67,10],[19,21],[13,41],[12,22],[15,17],[74,14],[63,-1],[63,-16],[40,-14],[38,-28],[20,-23],[-6,-28],[3,-23],[18,-21],[-122,-65],[-125,-36],[-326,-32]],[[66098,97996],[-43,-11],[-113,21],[-17,11],[-14,20],[-19,78],[-1,23],[-7,16],[-28,28],[-20,13],[18,15],[124,-11],[266,-6],[136,-28],[40,-16],[39,-26],[-238,-14],[-32,-12],[1,-29],[-9,-26],[-25,-3],[-58,-43]],[[67268,98406],[17,-23],[-10,-37],[-22,-27],[-10,-38],[-86,-9],[-24,-9],[-23,-29],[-87,-18],[-65,-49],[-91,9],[-124,34],[-105,-28],[-69,-8],[-85,42],[-11,10],[-5,29],[5,26],[23,55],[30,31],[15,10],[12,19],[34,11],[105,7],[39,-6],[12,-21],[57,2],[94,13],[137,20],[79,18],[70,-4],[70,-11],[18,-19]],[[66983,98473],[-87,-12],[-141,15],[-73,17],[6,8],[19,10],[122,41],[242,9],[30,-30],[-26,-23],[-92,-35]],[[64866,98032],[-184,-7],[-62,4],[-8,7],[-15,6],[-58,6],[-36,29],[16,8],[85,12],[29,12],[10,17],[38,31],[92,6],[40,-6],[5,-20],[39,-25],[101,-32],[-20,-23],[-35,-3],[-37,-22]],[[65855,98128],[12,-20],[-1,-71],[-13,-31],[2,-26],[-26,-13],[-218,3],[-108,6],[-25,10],[61,34],[19,23],[-6,67],[10,12],[175,-6],[14,19],[66,1],[38,-8]],[[66058,98816],[14,-23],[43,-13],[117,-11],[35,-26],[-53,-19],[-143,-10],[15,-38],[29,-28],[-29,-33],[-40,-16],[-88,-19],[-81,24],[-94,35],[-42,-23],[-44,-14],[-41,2],[-48,27],[-132,-21],[-40,23],[-29,48],[87,10],[104,-15],[69,48],[88,21],[70,51],[33,17],[76,-3],[25,4],[73,13],[26,-11]],[[65199,98568],[209,-55],[194,5],[84,-17],[122,-50],[182,-53],[35,-16],[-31,-21],[-213,-53],[-138,-18],[-120,-3],[-48,6],[-48,38],[-117,28],[-125,-8],[-13,15],[-25,11],[-43,2],[-86,15],[-6,34],[54,17],[35,1],[14,48],[60,73],[24,1]],[[67680,98853],[-34,-8],[-179,7],[-86,14],[-12,8],[-4,7],[-114,12],[49,16],[142,7],[254,-19],[16,-13],[5,-8],[-37,-23]],[[66193,98914],[-92,-12],[-13,9],[-3,6],[10,15],[11,29],[42,17],[313,16],[41,-17],[-15,-26],[0,-12],[-294,-25]],[[75745,97744],[-68,-5],[-80,5],[-130,61],[-85,26],[-70,40],[-15,44],[44,28],[54,11],[91,2],[117,-4],[116,-29],[247,-31],[90,-21],[-56,-51],[-61,-19],[-63,-27],[-64,-19],[-67,-11]],[[75435,98583],[-96,-45],[-346,29],[-16,20],[-5,13],[47,25],[288,-9],[103,-9],[25,-24]],[[89169,94469],[-140,-47],[-27,2],[-63,48],[-23,103],[26,31],[29,11],[30,6],[123,4],[26,-5],[26,-13],[12,-19],[5,-24],[-14,-68],[-10,-29]],[[89495,94409],[69,-25],[57,-28],[196,-135],[18,-28],[15,-35],[8,-123],[-11,-9],[-72,-6],[-98,14],[-70,5],[-68,0],[-60,17],[-147,16],[-115,45],[-120,33],[-25,4],[-75,-10],[-102,-43],[-28,-3],[-39,0],[-27,40],[65,14],[65,5],[63,14],[59,47],[29,38],[51,85],[28,31],[28,20],[30,6],[33,-3],[103,19],[70,6],[70,-11]],[[87763,95281],[-57,-16],[-81,5],[6,42],[14,19],[19,46],[-9,35],[5,42],[10,33],[23,45],[25,-27],[17,-40],[15,-20],[62,-39],[12,-12],[-52,-48],[-5,-21],[16,-27],[-20,-17]],[[87832,94420],[-21,-17],[-20,25],[-93,76],[-23,35],[-51,34],[-13,12],[-4,30],[67,-19],[113,-75],[62,-60],[-17,-41]],[[88316,83578],[25,-23],[39,4],[10,-15],[-31,-25],[-22,-51],[-7,-47],[-9,-18],[-25,-23],[-22,-30],[-19,-19],[-17,-6],[-37,99],[-18,28],[-52,-47],[-12,-1],[12,58],[30,63],[15,9],[30,85],[9,19],[93,-50],[8,-10]],[[96999,91923],[-79,-5],[-158,54],[-56,28],[-42,36],[-48,25],[-9,10],[7,21],[14,16],[54,43],[38,19],[45,4],[283,-76],[12,-16],[4,-14],[-4,-30],[-24,-6],[-9,-20],[-10,-61],[-5,-16],[-13,-12]],[[95453,85600],[-45,-54],[-7,9],[-4,12],[-1,19],[41,36],[42,91],[16,75],[-5,25],[-2,24],[123,47],[87,75],[16,-3],[15,-63],[9,-81],[-12,-49],[-94,-28],[-88,-54],[-91,-81]],[[96291,83432],[-2,-84],[-34,43],[-16,34],[-23,6],[-16,16],[-26,41],[-31,54],[-10,27],[-4,34],[-21,31],[-67,60],[22,7],[28,26],[78,-16],[18,-7],[-13,-40],[5,-44],[43,-92],[21,-32],[28,-25],[20,-39]],[[93002,80248],[-27,-25],[-28,15],[0,50],[59,153],[21,-9],[-5,-37],[-22,-57],[7,-69],[-5,-21]],[[93445,81023],[-11,-13],[-11,3],[-36,36],[-8,17],[13,30],[45,45],[22,-1],[9,-10],[-1,-53],[-22,-54]],[[93310,80819],[-35,-58],[-52,-14],[-25,-19],[-19,-39],[-14,-21],[-30,12],[-13,19],[0,68],[-13,30],[6,19],[30,-3],[30,44],[69,18],[25,47],[31,117],[33,41],[26,9],[8,-58],[-7,-64],[-15,-62],[-35,-86]],[[92799,79948],[-10,-30],[-12,10],[-2,9],[27,35],[10,41],[20,1],[8,-8],[-6,-20],[-35,-38]],[[93234,81118],[-26,-7],[-11,16],[-8,18],[-5,26],[29,12],[19,-14],[4,-38],[-2,-13]],[[92527,79356],[-13,-33],[-14,4],[-5,9],[18,39],[8,7],[6,-26]],[[92222,78857],[-52,-63],[-17,0],[-9,24],[-2,13],[42,10],[48,84],[35,55],[19,19],[16,-1],[-80,-141]],[[91579,78134],[-41,-29],[-26,1],[61,142],[36,21],[46,84],[97,103],[11,7],[56,-3],[-88,-113],[-11,-45],[-39,-48],[-28,-16],[-20,-23],[-54,-81]],[[91277,77947],[-52,-40],[-42,-18],[-71,-84],[-26,-46],[-36,-19],[-35,11],[-10,-19],[-3,-33],[-13,-29],[-70,-91],[-29,-72],[-30,-13],[-56,-73],[10,63],[11,30],[47,56],[3,60],[26,51],[51,52],[35,67],[28,18],[31,56],[32,20],[-3,43],[14,48],[11,-3],[26,-67],[20,-2],[54,14],[80,116],[26,21],[19,4],[11,-10],[4,-14],[-1,-17],[-6,-25],[10,-29],[-13,-22],[-53,-4]],[[90753,77041],[-9,-16],[-20,14],[1,32],[2,9],[57,28],[16,-18],[4,-15],[-51,-34]],[[90612,77475],[42,-42],[58,9],[-14,-38],[-22,1],[-39,-55],[-34,-7],[-17,-13],[-55,-82],[-8,-32],[-33,-62],[-50,-55],[-9,-104],[-32,42],[-4,42],[10,35],[57,74],[23,41],[7,34],[22,36],[10,32],[14,14],[48,131],[26,-1]],[[81496,94700],[-10,-27],[-15,-21],[-11,-26],[-19,-19],[-59,-24],[-46,-54],[-8,-5],[-163,30],[-26,9],[-53,33],[-75,31],[-39,46],[19,8],[19,4],[67,-6],[19,14],[10,39],[1,23],[5,18],[22,13],[241,-40],[93,-23],[28,-23]],[[71180,97725],[34,-21],[26,16],[248,-50],[53,-18],[11,-13],[-217,-8],[-44,3],[-4,29],[-49,1],[-85,19],[-23,27],[-5,11],[27,11],[28,-7]],[[72229,98414],[-258,-21],[-25,13],[-8,8],[36,44],[30,21],[164,8],[131,-14],[41,-13],[-15,-26],[-8,-9],[-88,-11]],[[69631,93948],[-82,-27],[-22,-2],[-50,7],[-22,-11],[-33,27],[2,24],[16,25],[9,31],[-6,78],[42,49],[56,19],[164,22],[23,-6],[33,-15],[25,-18],[33,-43],[26,-18],[40,-34],[12,-33],[-2,-30],[-75,-6],[-130,-25],[-59,-14]],[[71564,93485],[-135,-5],[-67,9],[-10,11],[9,28],[69,42],[31,27],[32,46],[56,38],[47,0],[147,-45],[21,-28],[3,-13],[-58,-38],[-41,-14],[-63,-48],[-41,-10]],[[72083,93733],[-20,-6],[-152,23],[-53,30],[-16,27],[6,24],[141,117],[54,-33],[15,-31],[36,-38],[-1,-86],[-10,-27]],[[72825,95287],[10,-19],[4,-21],[-12,-6],[-36,1],[-20,-54],[-20,9],[-13,31],[-45,-21],[-12,5],[-21,24],[-13,5],[-9,16],[59,48],[36,-25],[24,1],[-5,29],[1,22],[30,9],[40,1],[2,-55]],[[66791,92128],[9,-29],[-1,-53],[-11,-39],[-31,-6],[-31,-16],[-53,17],[-29,-11],[-30,-1],[-24,6],[-25,8],[-16,11],[1,30],[-22,43],[-34,14],[-31,5],[-35,13],[-17,-6],[-22,-16],[-14,5],[-76,92],[-12,21],[-8,24],[-11,15],[-26,64],[13,29],[26,19],[18,5],[32,43],[59,18],[12,-3],[11,-13],[61,-44],[33,-29],[28,-35],[30,-30],[89,-51],[60,-50],[61,-35],[16,-15]],[[55821,83685],[-27,-55],[-74,-116],[23,-15],[27,-5],[32,-22],[30,-3],[53,18],[10,100],[3,90]],[[55898,83677],[17,0],[26,6],[16,-23],[30,-23],[35,-20],[54,-34],[55,-22],[18,-2],[58,3],[61,-3],[17,-51],[30,-24],[25,-34],[1,-18],[-33,-119],[-7,-40],[-2,-40],[13,-51],[11,-28]],[[56323,83154],[-9,-4],[-157,6],[-148,9],[-137,9],[-132,9],[-127,8],[-79,8],[-78,7],[-11,7]],[[55445,83213],[43,49],[28,52],[23,67],[3,46],[6,52],[37,21],[80,-3],[35,25],[44,62],[46,74],[15,32]],[[55805,83690],[16,-5]],[[59722,78187],[6,-19],[66,-146],[31,-54],[24,-22],[28,-3],[53,46],[23,7],[50,-18],[18,31],[26,16],[33,2],[38,-13],[41,-23],[-17,-52],[-17,-41],[-7,-45],[-9,-51],[-46,-23],[-48,3],[-52,-15],[-18,20],[-12,18],[-23,18],[-30,10],[-27,-12],[-32,-69],[-56,-47],[-19,-54],[-56,12],[-47,-10],[-69,-49],[-52,-106],[-57,-66],[-46,-21],[-43,7],[-28,20],[-57,69],[4,25],[8,13],[10,35],[23,131],[-3,43],[-13,66],[-45,52],[-36,-9],[-21,13],[-75,89],[-40,6],[-45,-18],[-16,13],[-13,31],[89,109],[88,90],[38,9],[52,42],[55,63],[-8,49],[-12,37]],[[58251,77914],[-5,-38],[-3,-24],[-12,-99],[-8,-37],[-13,-42],[-142,-49],[9,23],[-3,42],[-6,31],[13,29],[-31,10],[-14,-15],[-11,-28],[9,-62],[-15,-35],[-6,-19],[-1,-46],[-9,-20],[-2,-21],[23,5],[-10,-39],[-43,-76],[-15,-45],[4,-180],[-19,-107],[-1,-32]],[[57940,77040],[-45,-1],[-14,2],[-42,16],[-48,29],[-28,55],[-18,40],[-40,-18],[-8,5],[-11,19],[-31,13],[-37,0],[-85,72],[-9,13],[-67,-13],[-99,-35],[-76,-45],[-79,-78],[-32,-60],[-37,-32],[-52,-23],[-94,9],[-97,30],[-105,32],[-57,-18],[-77,13],[-115,39],[-86,12],[-85,-23],[-14,17],[-4,20],[4,28],[12,23],[20,17],[11,17],[1,18],[-23,29],[-47,39],[-20,24]],[[55622,78403],[11,14],[63,19],[29,-19],[14,7],[13,16],[7,12],[1,14],[6,16],[22,8],[56,-10],[23,23],[8,13],[5,27],[6,23],[20,12],[0,20],[-3,22],[12,50],[7,20],[11,8],[14,15],[24,33],[-6,28],[5,21],[25,51],[19,49],[0,25],[3,22],[16,23],[18,31],[23,96],[9,16],[15,18],[11,18],[1,63],[11,18],[21,21],[20,33],[17,38],[12,19],[17,4],[19,16],[20,5],[20,-7],[13,4],[19,19],[48,71],[7,14]],[[57394,79642],[26,2],[20,-4],[32,-26],[22,-32],[9,-26],[19,-36],[20,-51],[22,-68],[4,-34],[9,-37],[16,-45],[31,-50],[5,-10],[14,-35],[27,-78],[23,-31],[20,-34],[9,-34],[15,-31],[33,-41],[27,-37],[22,-107],[15,-50],[10,-38],[-5,-76],[6,-33],[-12,-60],[-23,-120],[-5,-95],[4,-52],[0,-33],[6,-21],[6,-44],[1,-38],[-8,-11],[-12,-9],[-4,-8],[10,-17],[14,-32],[14,-36]],[[64112,66122],[8,35],[3,22],[-19,167],[-6,128],[2,26],[11,30],[19,66],[9,65],[28,148],[29,57],[43,42],[35,-82],[43,-63],[8,-70],[-13,-57],[-11,-90],[7,-42],[2,-36],[12,-61],[11,-78],[2,-55],[-6,-51],[-15,-42],[-29,-129],[-9,-13],[-36,-22]],[[45224,70776],[38,-30],[35,14],[43,-39],[23,-9],[-20,-27],[-21,-36],[-50,9],[-42,34],[-15,26],[-5,23],[14,35]],[[47942,73259],[-24,-6],[-95,-94],[-29,0],[-55,41],[-96,14],[-32,12],[-39,-27],[-30,1],[-25,-35],[-17,10],[20,77],[31,152],[-1,93],[7,81],[-8,80],[-16,50],[21,130],[-2,67],[-19,84],[59,-13],[-19,34],[-18,20],[-17,-4],[-15,1],[-50,-33],[-25,-10],[-8,6],[3,52],[-13,68],[20,18],[24,5],[20,29],[12,33],[-7,57],[18,55],[40,46],[-21,-7],[-24,-29],[-38,-104],[-12,-53],[-33,-17],[-29,-9],[-14,6],[-18,13],[-2,39],[2,31],[12,62],[4,88],[18,78],[-2,21],[-5,31],[16,30],[19,20],[28,68],[40,160],[47,170],[-4,21],[-10,15],[4,46],[28,200],[11,26],[13,59],[3,94],[5,65],[-1,33],[-4,39],[-18,75],[-18,159],[-2,53],[15,26],[-25,4],[-11,35],[2,38],[28,63]],[[43048,73133],[-2,-11],[-15,5],[-20,-4],[-11,31],[10,13],[22,3],[11,-14],[5,-23]],[[41350,74542],[-12,-27],[-21,10],[-7,10],[6,59],[17,14],[17,-24],[0,-42]],[[42479,74103],[-6,-6],[-58,16],[-16,21],[-7,39],[10,13],[25,8],[37,-7],[24,-28],[0,-36],[-9,-20]],[[42283,74052],[-13,-7],[-74,44],[-26,21],[-34,51],[96,-62],[51,-47]],[[42044,74034],[-29,-1],[-27,44],[40,23],[12,-14],[8,-16],[6,-21],[-10,-15]],[[42181,73993],[23,-23],[-35,-5],[-11,-11],[-29,16],[-33,-3],[-22,31],[-5,33],[11,20],[30,0],[71,-58]],[[42875,73640],[17,-4],[89,9],[24,-6],[-3,-43],[-17,-17],[-52,-11],[-82,27],[-27,37],[-4,27],[0,12],[17,10],[38,-41]],[[55231,80363],[-1,17],[-6,42],[-59,83],[-8,35],[3,13],[-4,22],[-13,13],[-47,16],[-12,-9],[-11,9],[-17,20],[-29,16],[-3,9],[-11,14],[-6,2],[-3,-9],[-9,-12],[-30,-16],[-12,7],[-11,13],[-13,29],[-18,25],[-15,9],[-9,14],[-2,10],[34,21],[7,21],[-4,39],[-5,5],[-13,-13],[-28,-11],[-26,-6],[-13,0],[-73,71],[-48,22],[-28,6],[-3,-7],[13,-40],[22,-49],[-1,-13],[-26,-20],[-15,-9],[-18,-17],[-15,-24],[-12,-10],[-12,2],[-11,12],[-31,73],[-38,55],[-4,13],[-12,3],[-17,12],[-6,18],[9,17],[11,17],[21,10],[6,9],[4,14],[7,19],[-2,6],[-14,21],[-22,20],[-60,-15],[-16,-10],[-9,13],[-7,21],[-16,3],[-20,19],[-25,18],[-24,5],[-50,26],[-19,1],[-11,9],[-12,20],[-10,21],[-5,44],[-37,19],[-37,13],[-2,-7],[1,-43],[-2,-24],[-24,-14],[-24,-2]],[[54113,81139],[2,8],[28,78],[13,50],[15,91],[-18,72],[-5,33],[-8,16],[-50,35],[-4,12],[8,48],[-4,20],[-12,21],[-16,41],[-7,36],[21,42],[5,30],[9,42],[6,23],[1,7],[-13,16],[-3,23],[3,33],[-7,25],[-18,15],[-11,21],[-6,27],[5,41],[13,56],[-29,67],[-72,79],[-35,55],[3,32],[15,28],[28,26],[21,45],[11,54],[1,10],[1,39],[-33,157],[-5,39],[-4,48],[-2,13]],[[53960,82793],[64,-33],[26,-19],[-3,21],[-5,18],[3,27],[-2,40],[-57,20],[-38,7]],[[53948,82874],[-5,28],[4,18]],[[53947,82920],[11,-11],[37,-4],[92,54],[159,70],[170,66],[40,7],[40,14],[14,24],[15,17],[23,43],[51,68],[91,24],[34,32],[70,45],[162,50],[67,11],[66,1],[59,-39],[62,-49],[12,-30],[-34,19],[-49,44],[-18,2],[42,-134],[22,-47],[47,-36],[39,-11],[119,21],[43,28],[12,14]],[[56323,83154],[16,23],[20,-3],[23,-14],[11,-11],[4,-12],[3,-13],[13,-3],[23,-10],[31,-24],[24,-23],[23,-33],[8,-37],[0,-42],[-1,-27],[2,-11]],[[56523,82914],[32,-196],[53,-189],[19,-92],[8,-49],[6,-70],[2,-50],[0,-28],[-4,-38],[-16,-23],[-101,-65],[-20,-20],[-29,-51],[-28,-52],[-6,-18],[-2,-11],[6,-18],[36,-27],[37,-23],[12,-17],[26,-21],[10,-19],[6,-17],[-1,-39],[-12,-54],[5,-40],[-12,-27],[-10,-30],[-2,-53],[18,-58]],[[83638,62566],[43,-30],[94,-108],[34,-27],[36,-20],[28,-5],[26,24],[10,25],[20,67],[20,8],[13,-24],[9,-33],[5,-47],[-6,-50],[-20,-44],[-12,-54],[-8,-177],[0,-53],[7,-51],[17,-81],[9,-23],[26,-29],[7,-22],[1,-39],[4,-35],[17,-13],[14,-18],[-5,-38],[-9,-39],[-12,-97],[-55,-223],[-3,-48],[-22,-96],[-45,-16],[-52,-46],[-28,-36],[-25,-47],[-10,-62],[8,-28],[5,-30],[0,-32],[-8,-27],[-25,-65],[-10,-54],[-11,-24],[-6,-29],[2,-33],[10,-29],[30,-125],[33,-121],[7,-14],[2,-16],[-19,-32],[1,-58],[5,-58],[29,-142],[4,-38],[10,-31],[14,-30],[17,-24],[46,-42],[18,-9],[19,-1],[4,28],[17,10],[-4,28],[-20,38],[0,21],[10,16],[13,9],[28,42],[29,34],[38,-3],[37,-19],[27,-19],[22,-37],[22,-62],[16,-69],[-1,-33],[-3,-33],[0,-33],[12,-22],[36,-1],[18,51],[3,58],[-13,22],[6,28],[11,22],[16,-19],[15,-36],[56,-39],[14,-1],[11,-7],[25,-28],[12,-21],[-14,-45],[-56,-10],[-16,-34],[17,-68],[26,-55],[17,-45],[15,-49],[0,-45],[-9,-46],[24,3],[23,-9],[32,-40],[10,-3],[10,6],[-1,-141],[-22,-129],[-27,16],[-23,54],[4,67],[15,64],[-8,14],[-15,-6],[-17,-14],[-19,-5],[-30,8],[-62,70],[-26,7],[-6,31],[2,67],[-25,80],[-4,28],[-8,23],[-74,86],[-9,15],[-23,69],[-52,98],[-14,10],[-16,3],[-5,-25],[7,-38],[3,-33],[-1,-35],[2,-27],[25,-54],[3,-26],[17,-70],[2,-82],[-21,-34],[-24,38],[-1,31],[-4,29],[-25,74],[-8,16],[-48,74],[-37,80],[-82,86],[-9,5],[-15,-7],[-13,-10],[-40,-43],[-14,-29],[-1,-46],[-28,-36],[-39,-5],[-30,23],[-25,45],[-21,2],[-25,71],[-31,9],[-26,-55],[-5,109],[0,111],[7,33],[13,27],[65,116],[8,38],[-3,50],[-15,40],[-23,25],[-27,10],[-19,23],[-15,38],[-11,-67],[10,-98],[2,-65],[-9,-24],[-17,0],[-16,7],[-11,23],[-9,67],[-23,43],[-9,63],[-10,9],[-21,-5],[-16,29],[-10,74],[-2,78],[-9,66],[-13,64],[-7,52],[-12,235],[-2,21],[-6,18],[-15,27],[-11,32],[-2,27],[3,115],[5,28],[11,13],[16,-22],[12,-28],[15,-14],[14,-17],[25,-69],[10,-10],[31,2],[18,8],[9,25],[5,30],[1,35],[-18,103],[-6,74],[0,67],[5,67],[24,112],[3,77],[-2,104],[4,61],[-1,36],[-14,55],[-4,60],[41,302],[13,58],[9,61],[4,80],[31,22],[29,33],[15,-3],[15,-8],[36,17],[13,1]],[[82586,56704],[-26,-42],[3,52],[7,49],[26,99],[19,31],[31,78],[18,38],[42,75],[39,82],[13,6],[14,1],[12,9],[25,45],[63,147],[53,110],[54,139],[26,41],[7,15],[49,128],[16,18],[17,14],[12,17],[11,22],[17,56],[8,65],[-5,37],[-10,54],[13,74],[9,34],[35,150],[10,31],[14,-19],[2,-27],[-7,-64],[0,-31],[8,-33],[-10,-53],[25,-142],[19,-89],[1,-30],[-26,-53],[-15,-16],[-33,-15],[-15,-15],[-23,-44],[-15,-57],[-4,-30],[-7,-23],[-68,-39],[-31,-25],[-15,-19],[-7,-31],[5,-55],[-57,-199],[-18,-51],[-19,-45],[-24,-31],[-33,-19],[-27,-39],[-18,-68],[-22,-61],[-28,-45],[-30,-40],[-28,-30],[-30,-20],[-9,-27],[-6,-33],[-14,-16],[-15,-8],[-28,-33]],[[84026,58533],[32,-29],[32,25],[31,-7],[26,-38],[-9,-24],[-1,-27],[57,58],[16,-3],[-1,-54],[-3,-46],[-7,-44],[-12,-52],[-17,-46],[-21,-33],[-26,-21],[-12,-19],[-4,-28],[1,-35],[-6,-32],[-27,-14],[-42,-62],[-90,-40],[-25,-27],[-16,-36],[-17,-32],[-10,-8],[-4,15],[-1,13],[13,84],[-3,35],[-6,33],[4,66],[16,62],[8,68],[3,132],[12,182],[-1,22],[-9,25],[-35,20],[-14,19],[7,36],[13,25],[18,-1],[16,-23],[57,-48],[30,-40],[27,-51]],[[84202,57064],[-18,-6],[-20,3],[-13,28],[-22,122],[-26,30],[-30,22],[-15,19],[-14,23],[-42,122],[-3,74],[7,42],[13,38],[14,10],[35,1],[18,5],[40,56],[3,22],[0,92],[-4,64],[-10,62],[11,29],[14,28],[14,55],[3,39],[0,41],[4,29],[12,14],[54,45],[10,3],[71,-41],[14,-62],[1,-20],[-11,-69],[-9,-46],[-24,-71],[-18,-77],[-13,-115],[-8,-38],[-22,-72],[-7,-40],[0,-86],[-4,-32],[0,-31],[44,-143],[4,-23],[0,-26],[-8,-32],[-18,-55],[-10,-19],[-17,-14]],[[84603,58377],[20,-20],[22,8],[27,45],[30,-16],[18,-68],[9,-25],[5,-44],[-2,-106],[-7,-95],[6,-20],[14,-17],[12,-22],[10,-27],[7,-30],[2,-74],[18,-62],[2,-24],[-4,-25],[-29,5],[-3,-21],[1,-27],[-10,17],[-17,60],[-16,26],[5,-98],[5,-48],[1,-47],[-27,36],[-33,23],[-9,19],[4,61],[-1,31],[-14,64],[16,140],[0,29],[-3,28],[-13,57],[-21,47],[-13,0],[-32,-33],[-16,11],[-9,131],[-13,127],[-9,32],[-7,34],[6,28],[13,-11],[17,-34],[21,-19],[10,-16],[7,-30]],[[84788,59059],[20,-47],[4,-34],[-2,-38],[9,-16],[16,-5],[20,-19],[15,-35],[-9,-32],[3,-46],[-16,-59],[2,-105],[9,-33],[1,-33],[-2,-36],[4,-28],[24,-96],[5,-32],[-8,-25],[-2,-24],[15,-2],[21,-40],[12,-53],[-3,-13],[-17,41],[-13,6],[-55,-11],[-33,17],[-22,2],[-21,70],[-19,12],[-15,31],[-25,79],[-8,46],[18,46],[5,37],[-1,36],[-17,-6],[-14,12],[-17,44],[-7,25],[-13,22],[-20,50],[-30,20],[-11,14],[-24,42],[-16,53],[-17,92],[-9,95],[76,-25],[76,5],[86,22],[25,-26]],[[83528,59607],[14,-5],[45,18],[18,-9],[12,-33],[15,-10],[12,-17],[23,29],[22,-33],[20,-63],[24,-44],[22,-33],[5,-25],[-14,-40],[-4,-50],[2,-55],[16,-114],[-5,-31],[-18,-44],[-12,-49],[1,-20],[-5,-16],[-1,-35],[-11,7],[-9,-5],[-9,-16],[-15,-33],[-23,10],[-10,10],[-3,29],[-7,20],[-9,12],[-24,50],[-11,38],[-1,40],[-6,37],[-12,33],[-16,26],[-6,24],[-2,29],[-1,75],[-24,92],[-8,23],[-21,22],[-18,30],[-8,29],[-7,48],[-5,7],[-14,-3],[-13,7],[3,35],[14,25],[19,3],[51,-14],[14,-11]],[[85001,57212],[22,-35],[30,9],[-1,-87],[5,-26],[27,-74],[4,-61],[-16,-59],[-12,-27],[-22,-40],[0,-18],[9,-20],[31,-12],[23,-32],[4,-91],[22,-71],[-1,-31],[-9,-128],[3,-54],[16,-44],[14,-19],[8,-27],[6,-75],[-1,-128],[-2,-44],[-10,-42],[-30,-94],[-40,-75],[-22,5],[-6,-22],[13,-68],[-5,-145],[-9,-100],[-13,51],[-9,53],[-9,140],[-10,64],[-16,57],[-7,52],[-16,48],[-22,125],[-14,-7],[-23,-34],[-5,-23],[-3,-36],[-6,-32],[-27,-51],[-22,-60],[-17,-67],[-6,-61],[15,-47],[15,-20],[21,-42],[7,-20],[23,-139],[-1,-141],[-17,-63],[-42,-119],[-30,-37],[-17,19],[-13,72],[-2,29],[9,68],[1,62],[-10,21],[-12,-4],[-4,-9],[-27,-81],[-12,-21],[-17,-2],[-13,5],[-81,71],[-66,70],[-51,65],[-38,99],[-8,74],[0,77],[-17,113],[-2,38],[2,37],[16,70],[20,35],[12,25],[9,28],[6,37],[-2,37],[-7,23],[-32,82],[-27,50],[-57,45],[-13,24],[-14,19],[-16,8],[-16,0],[-16,-14],[-5,-29],[2,-27],[-2,-26],[-24,-148],[-30,32],[-29,38],[-7,26],[-4,32],[-5,21],[-6,19],[-14,-49],[-16,-39],[-20,-10],[-21,0],[-7,17],[-7,94],[-22,30],[-27,-7],[-33,-52],[-6,-19],[-7,-45],[-36,-127],[-19,-98],[-21,-96],[-9,-31],[-13,-21],[-19,9],[-18,23],[-17,61],[6,72],[19,45],[15,49],[19,171],[1,61],[4,26],[31,77],[26,48],[13,10],[57,28],[23,23],[36,0],[30,13],[24,37],[2,38],[-2,40],[6,24],[9,21],[12,27],[15,20],[40,15],[14,17],[10,26],[16,50],[17,-12],[18,-20],[33,-16],[28,-42],[19,-66],[3,-32],[5,-108],[-7,-25],[-28,-51],[13,-5],[36,46],[19,18],[45,24],[11,16],[7,24],[16,66],[12,71],[9,29],[13,23],[13,4],[47,-48],[31,23],[8,73],[7,106],[6,29],[17,28],[21,-9],[28,-38],[27,-13],[9,31],[10,61],[10,-1],[36,-20],[34,13],[10,73],[-7,78],[-27,226],[16,51],[14,1],[34,-60],[65,-81],[22,-50],[14,-61]],[[84269,57286],[-11,-15],[-4,38],[3,51],[21,179],[-5,45],[36,100],[22,93],[32,99],[5,51],[29,97],[27,134],[-1,45],[7,22],[4,33],[0,29],[20,50],[6,-33],[-6,-64],[1,-30],[3,-14],[0,-60],[-7,-91],[7,-105],[-13,-107],[-15,-48],[-21,-34],[-24,-21],[-25,-53],[-15,-62],[-3,-57],[-39,-192],[-34,-80]],[[83866,62727],[-17,-42],[-10,12],[10,40],[0,14],[8,31],[15,11],[13,-31],[-19,-35]],[[83755,62996],[3,-52],[-17,1],[-24,32],[-3,16],[1,13],[4,11],[36,-21]],[[83877,63574],[-5,-7],[-8,3],[8,55],[14,15],[11,-6],[-20,-60]],[[83854,63814],[-13,-47],[-11,0],[2,26],[14,55],[5,-1],[3,-33]],[[83655,55342],[15,-41],[19,11],[30,-12],[6,-22],[-1,-14],[-32,-40],[-21,42],[-38,-29],[-18,17],[-24,-15],[-15,33],[6,31],[39,51],[34,-12]],[[82521,56384],[-14,-44],[-16,50],[1,71],[5,19],[24,11],[0,-107]],[[83309,57883],[-34,-18],[-8,56],[24,51],[28,-21],[16,-20],[-8,-18],[-18,-30]],[[83360,58852],[15,-9],[11,8],[10,31],[9,-45],[22,-37],[-7,-38],[-20,-4],[-19,8],[-21,-15],[-25,9],[-14,35],[-17,63],[-9,12],[1,26],[6,16],[-3,4],[2,12],[3,8],[5,3],[13,-28],[32,-42],[6,-17]],[[83343,58584],[-21,-19],[-5,12],[-3,28],[0,20],[-20,104],[15,15],[11,-12],[12,-16],[10,-9],[10,-32],[-2,-23],[3,-22],[-10,-46]],[[84068,57875],[-7,-8],[-7,2],[-16,-21],[-6,39],[5,66],[25,50],[6,16],[7,10],[8,1],[8,-20],[2,-30],[-16,-90],[-9,-15]],[[84609,57480],[-3,-21],[-22,2],[-8,-3],[-20,-54],[-12,-14],[-66,-18],[-52,14],[-18,30],[-12,49],[-3,33],[13,35],[12,24],[42,46],[10,35],[22,43],[45,14],[4,-11],[6,-6],[9,-2],[23,-35],[25,-23],[-6,-85],[7,-28],[4,-25]],[[83402,54871],[-7,-35],[-9,-16],[-12,9],[-9,18],[-5,-27],[-24,-10],[-15,-41],[-23,-12],[-15,6],[2,37],[43,54],[27,21],[23,39],[12,5],[6,-33],[6,-15]],[[83914,55546],[-28,-8],[-9,0],[-22,59],[-2,26],[-18,29],[6,29],[23,7],[40,38],[64,-59],[10,-21],[-20,-13],[-14,-56],[-30,-31]],[[85016,57468],[-4,-3],[-15,45],[2,51],[21,76],[15,-67],[0,-30],[-2,-15],[14,-37],[-10,-19],[-21,-1]],[[84913,57554],[-5,-16],[-6,33],[-17,31],[-15,53],[-11,16],[7,42],[1,68],[16,31],[7,10],[11,33],[6,2],[5,-28],[-11,-85],[16,-100],[-6,-62],[3,-14],[-1,-14]],[[83408,59764],[0,-39],[-47,57],[-1,20],[1,14],[5,9],[25,-21],[17,-40]],[[83864,59642],[18,-1],[5,5],[33,-48],[-2,-24],[4,-33],[-19,-55],[-3,-19],[-11,-18],[-35,44],[-13,27],[-4,56],[14,81],[13,-15]],[[83914,58959],[-22,-143],[-15,49],[6,31],[-13,26],[-3,24],[5,31],[13,29],[3,94],[29,30],[11,1],[-4,-23],[1,-43],[-11,-106]],[[84070,58933],[-14,-13],[-29,56],[-17,26],[-4,15],[13,21],[37,0],[19,-39],[3,-24],[-8,-42]],[[84244,59247],[24,-88],[-26,60],[-30,41],[-31,67],[-23,24],[-6,14],[2,28],[17,5],[7,-2],[45,-119],[21,-30]],[[84381,59017],[1,-51],[-10,19],[-34,99],[-9,36],[9,24],[25,-37],[18,-90]],[[84365,58921],[53,-69],[37,-116],[4,-89],[-3,-35],[-17,39],[-38,54],[-26,12],[-8,10],[3,30],[-17,27],[-2,11],[-15,12],[-23,61],[-16,12],[-15,-13],[-35,-91],[-37,-64],[-1,25],[15,79],[10,128],[6,39],[-8,57],[-1,51],[28,-24],[35,-23],[27,-33],[4,-22],[40,-68]],[[84542,59695],[-8,-37],[-9,13],[-12,-2],[-21,-32],[-33,43],[-5,33],[24,73],[0,109],[8,27],[9,19],[11,11],[23,-75],[8,-10],[22,-34],[-5,-70],[2,-41],[-14,-27]],[[83937,59935],[-1,-23],[-60,85],[-3,15],[0,13],[4,14],[60,-104]],[[83897,60486],[5,-20],[-5,1],[-4,-4],[-13,-41],[14,-77],[-9,-56],[-16,-4],[-6,6],[3,28],[4,12],[-3,37],[-10,23],[-7,44],[-12,27],[6,43],[36,5],[17,-24]],[[84531,57952],[-7,-3],[13,61],[10,-9],[3,-6],[0,-28],[-19,-15]],[[84799,57593],[2,-29],[-35,75],[-8,53],[12,-2],[16,-20],[13,-77]],[[84148,56111],[3,-14],[-1,-14],[-29,-27],[-9,1],[-3,44],[7,21],[14,-18],[12,21],[6,-14]],[[84939,55853],[-4,-32],[-17,77],[-7,19],[9,65],[19,-32],[0,-97]],[[84613,58463],[-35,-4],[-15,26],[-19,78],[21,16],[21,-4],[15,-27],[15,-52],[-3,-33]],[[84668,57109],[-8,-34],[-31,28],[-8,25],[4,29],[15,10],[8,0],[15,-31],[5,-27]],[[83680,62835],[-1,-39],[-14,21],[-3,29],[1,21],[6,26],[9,-23],[2,-35]],[[83294,58482],[6,-31],[-8,-46],[-7,-10],[-8,19],[-20,14],[-1,24],[10,0],[18,24],[10,6]],[[84376,58342],[16,-76],[-22,0],[-8,56],[10,18],[4,2]],[[83974,59060],[-8,-18],[-5,3],[-4,31],[8,21],[3,-2],[6,-35]],[[84991,57369],[-5,-15],[-8,31],[7,68],[5,11],[7,-43],[-6,-52]],[[84681,58522],[-5,-30],[-8,8],[-7,14],[-11,44],[-3,33],[16,-18],[9,-33],[9,-18]],[[82598,56575],[-19,-14],[-4,36],[2,35],[14,-3],[6,-11],[1,-43]],[[84360,57164],[2,-60],[-25,-18],[-21,16],[-13,36],[0,13],[11,-1],[26,31],[8,7],[12,-24]],[[30565,49403],[-2,-38],[-9,-15],[-14,-3],[-21,26],[-15,-6],[-15,-2],[-22,31],[-7,31],[-17,25],[-35,-10],[-29,-1],[-24,6],[-22,-8],[-18,-33],[-14,-38],[-16,-31],[-48,-22],[-25,0],[-23,-21],[-33,-8],[-23,-18],[-41,-10],[-49,-10],[-28,-28],[-10,-12],[-28,-39],[-49,-62],[-26,-21],[-33,-67],[-38,-62],[-25,-33],[-37,-16],[-16,-16],[-5,-20],[3,-24],[-6,-60],[-12,-111],[-3,-54],[-2,-26],[-25,-89],[-26,-83],[-13,-55],[-8,-40],[9,-34],[10,-60],[9,-48],[3,-32],[-3,-38],[-11,-34],[-18,-22],[-23,-7],[-49,-60],[-54,-89],[-18,-41],[-5,-39],[-8,-62],[4,-31],[9,-22],[10,-52],[1,-27],[-8,-15],[-16,-3],[-13,-5],[-11,-14],[-10,4],[-10,-7],[0,-22],[3,-25],[-1,-26],[-7,-17],[-5,-12],[5,-17],[10,-15],[14,-25],[21,-48],[15,-9],[13,-16],[1,-27],[-4,-27],[-12,-12],[-1,-23],[16,-28],[10,-21],[11,-30],[9,-41],[0,-27],[11,-34],[6,-28],[0,-27],[17,-27],[15,-20],[10,-18],[11,-12],[2,-20],[-1,-30],[15,-50],[28,-38],[22,-55],[14,-39],[27,-64],[1,-73],[-33,-84],[-33,-84],[54,3],[56,-2],[58,-24],[39,-23],[23,-11],[17,-26],[8,-42],[7,-34],[1,-50],[25,-40],[-2,-38],[-1,-54],[11,-1],[71,0],[78,0],[74,10],[28,13],[34,65],[21,20],[20,30],[24,56],[19,25],[16,31],[23,31],[10,23],[8,8],[19,15],[-8,-30],[-6,-31],[-2,-44],[9,-49],[-8,-36],[-12,-32],[0,-85],[0,-121],[0,-104],[-1,-129],[0,-147],[0,-98],[13,20],[17,17],[23,-45],[16,-20],[14,-4],[15,1],[19,10],[43,37],[29,31],[34,-2],[46,-12],[26,1]],[[30672,45534],[35,-125],[25,-91],[29,-105],[24,-84],[35,-127],[31,-110],[32,-118],[37,-133],[-11,-34],[-10,-27],[1,-46],[-15,-24],[-15,-15],[-19,-38],[-12,-34],[-1,-47],[3,-242],[-3,-66],[-10,-56],[-10,-29],[-6,-22],[15,-56],[13,-113],[10,-22],[13,-46],[6,-44],[-3,-16],[-25,-21],[-9,-18],[-3,-64],[-11,-23],[-18,-31],[-12,-35],[-10,-24],[-10,-14],[-5,-42],[-7,-44],[-23,-28],[-4,-53],[0,-44],[12,-43],[40,-92],[4,-22],[-23,-56],[-13,-38],[-32,-117],[-1,-22],[8,-55],[49,-238],[8,-19],[15,-23],[24,3],[37,-26],[18,-29],[2,-15],[-4,-9],[-20,-20],[-22,-26],[-7,-24],[-2,-39],[5,-57],[-9,-18],[-22,-23],[-18,-32],[-19,-53],[-32,-81],[-11,-22],[-5,-28],[-18,-9],[-34,-55],[-5,-28],[5,-27],[17,-22],[12,-32],[3,-41],[0,-26]],[[30691,41759],[-21,-39],[-27,-44],[-34,-9],[-13,-22],[3,-47],[11,-66],[0,-52],[-10,-60],[-24,-65],[-37,-44],[-35,-24],[-27,0],[-27,-5],[-11,-7]],[[30439,41275],[-20,39],[-91,130],[-34,69],[-32,33],[-78,111],[-8,36],[-9,114],[-11,32],[-26,41],[-68,55],[-26,28],[-27,50],[-40,36],[-44,72],[-26,59],[-29,38],[-91,54],[-45,54],[-85,76],[-38,49],[-91,59],[-27,28],[-90,138],[-62,46],[-51,77],[-153,166],[-24,53],[-23,81],[-34,49],[-38,112],[-57,66],[-54,87],[-20,80],[-36,101],[-11,54],[-32,53],[-2,107],[-22,49],[16,24],[17,11],[21,165],[-12,83],[-56,151],[-21,72],[-15,93],[-22,55],[-34,116],[-21,102],[-45,75],[-12,27],[-7,38],[-25,26],[-1,79],[-17,150],[-25,76],[-90,140],[-2,55],[-7,99],[-20,106],[-99,332],[-26,99],[-25,161],[-22,91],[-25,162],[-37,123],[-24,107],[-25,133],[-2,71],[-45,122],[-24,112],[-42,94],[-42,72],[-18,50],[-58,240],[-8,71],[-40,132],[-40,95],[-25,76],[-32,69],[-195,212],[-69,88],[-23,42],[-10,66],[4,38],[20,36],[28,-27],[17,11],[13,47],[1,72],[-17,92],[-63,177],[5,38],[12,42],[-24,86],[-27,68],[-13,53],[15,200],[14,51],[95,203],[26,86],[40,54],[42,82],[49,62]],[[27687,49891],[8,-11],[7,-10],[0,-21],[2,-18],[5,-17],[1,-32],[6,-21],[1,-23],[0,-33],[-3,-16],[3,-28],[11,-52],[-4,-16],[-11,-11],[-10,-14],[-10,-32],[-15,1],[-22,14],[-15,-18],[-5,-35],[4,-28],[2,-27],[9,-23],[28,-2],[-25,-73],[-12,-33],[3,-21],[15,-18],[11,-2],[25,27],[17,39],[10,22],[16,9],[21,-18],[28,-36],[33,-32],[13,-18],[24,5],[20,7],[17,-26],[17,-22],[4,-76],[13,-55],[15,-42],[19,-51],[18,-17],[22,0],[31,-19],[12,12],[11,35],[5,20],[16,9],[1,23],[-3,28],[5,32],[13,28],[33,42],[15,18],[4,25],[6,35],[-3,19],[-6,23],[1,34],[9,45],[12,52],[11,67],[4,31],[12,20],[4,29],[6,34],[14,38],[0,41],[6,18],[0,46],[15,94],[0,20],[6,5],[11,-6],[9,-22],[3,-21],[4,-9],[9,2],[10,12],[-1,19],[-7,18],[-2,11],[3,18],[15,38],[17,44],[36,92],[22,38],[56,40],[42,30],[41,29],[55,42],[78,58],[56,42],[50,76],[39,58],[33,50],[42,64],[56,138],[40,95],[28,70],[20,44],[16,123],[18,142],[8,62],[3,22],[8,-9],[9,-15],[10,-1],[11,1],[6,8],[-9,141],[1,31],[5,37],[-1,20],[-17,28],[-28,56],[-11,50],[-7,43],[-19,27],[-20,25],[1,20],[12,0],[30,-20],[22,7],[16,2],[15,20]],[[29087,51781],[17,38],[11,0],[13,-5],[23,-39],[14,-22],[17,-19],[15,-6],[15,-2],[9,1],[6,-25],[7,-31],[18,-21],[21,-21],[17,-34],[11,-23],[14,-28],[13,-36],[12,-64],[6,-43],[7,-24],[-2,-24],[14,-45],[11,-24],[18,-16],[35,-18],[19,-40],[16,-16],[18,-41],[16,-12],[20,2],[19,-20],[15,-39],[10,-49],[15,-27],[8,-51],[-9,-58],[8,-32],[16,-25],[25,-27],[23,7],[12,-9],[7,-25],[5,-29],[10,-70],[5,-45],[-10,-43],[-3,-30],[5,-41],[24,-19],[22,-16],[13,-31],[15,-9],[21,2],[27,8],[15,18],[10,5],[11,-8],[24,-17],[29,-19],[26,11],[23,5],[23,11],[23,33],[19,-2],[14,22],[19,35],[17,36],[14,8],[23,-17],[31,-25],[18,-31],[13,-9],[14,-23],[27,0],[29,12],[23,39],[24,12],[16,10],[15,-6],[58,-71],[16,-37],[20,-7],[17,-20],[27,-22],[15,-22],[19,-14],[14,-31],[22,-19],[20,-11],[8,-25],[0,-16],[-2,-12],[-21,-65],[-39,-129],[-36,-116],[-56,-182],[-32,-102],[8,-4],[49,-45],[12,-1],[18,11],[12,18],[11,2],[11,-17],[17,-22],[11,-65],[9,-31],[20,-25],[21,-40],[15,-42]],[[33844,40227],[6,-42],[4,-32],[9,-23],[9,-31],[9,-17],[7,-28],[-2,-33],[4,-41],[4,-37],[5,-9],[13,-10],[7,-33],[-5,-16],[2,-19],[5,-19],[-5,-18],[2,-14],[9,-12],[9,-46],[1,-78],[-10,-42],[-7,-34],[-2,-21],[6,-31],[-9,-36],[-11,-44],[2,-30],[2,-29],[1,-30],[3,-29],[-4,-30],[-4,-27],[-1,-30],[4,-35],[-8,-32],[-5,-23],[-1,-23],[8,-36],[21,-15],[16,-4],[16,19],[12,6],[22,-17],[20,-31],[26,-4],[23,-5],[17,-10],[26,11],[27,-11],[31,-17],[26,-15],[25,3],[20,2],[20,17],[19,-1],[15,30],[8,27],[8,19],[21,15],[14,-10],[12,-49],[21,-29],[9,-21],[15,-9],[34,-2],[21,2],[24,-15],[16,0],[14,-27],[13,-32],[1,-59],[12,-46],[16,-17],[8,-29],[-2,-40],[-8,-40],[1,-44],[8,-40],[0,-40],[6,-40],[11,-34],[4,-55],[-2,-40],[7,-23],[3,-33],[-5,-26],[-2,-36],[1,-33],[6,-26],[16,-35],[5,-61],[0,-42],[7,-49],[14,-23],[22,-8],[26,-7],[31,11],[28,13],[15,14],[31,36],[26,21],[14,13],[13,10],[27,-23],[24,-29],[20,-40],[35,-43],[-6,-11],[-15,-36],[1,-42],[10,-61],[-9,-127],[-28,-196],[-11,-114],[4,-32],[-10,-57],[-38,-123],[-1,-82]],[[34829,37110],[-5,-248],[-13,-174],[-21,-129],[-20,-69],[-17,-8],[-13,-21],[-8,-33],[-14,-27],[-21,-22],[-11,-24],[-2,-26],[-20,-16],[-38,-8],[-23,-21],[-6,-34],[-13,-27],[-19,-20],[-9,-33],[1,-46],[-11,-40],[-23,-33],[-21,-1],[-19,31],[-25,21],[-33,10],[-26,-8],[-22,-26],[-19,-41],[-17,-57],[-18,-9],[-21,38],[-26,11],[-31,-15],[-25,5],[-18,26],[-28,3],[-39,-20],[-77,23],[-117,65],[-99,25],[-121,-23],[-11,68],[7,37],[19,27],[13,32],[5,35],[13,27],[23,18],[9,19],[-3,19],[4,16],[13,15],[7,23],[2,31],[5,15],[8,12],[1,21],[-4,67],[0,55],[6,43],[8,25],[5,7],[5,15],[2,26],[8,24],[38,49],[15,27],[1,24],[6,33],[23,71],[7,34],[1,16],[8,17],[27,40],[16,37],[2,35],[-7,39],[-16,45],[-49,110],[-38,50],[-49,42],[-33,13],[-15,-14],[-16,11],[-16,38],[-27,29],[-57,33],[-128,129],[-52,62],[-17,39],[-48,69],[-79,100],[-61,48],[-42,-2],[-67,29],[-93,61],[-54,59],[-14,57],[-35,57],[-54,57],[-28,38],[-2,18],[-16,24],[-31,29],[-33,50],[-36,71],[-38,109],[-41,148],[-44,100],[-47,51],[-23,35],[0,16],[-7,16]],[[32597,39035],[6,29],[17,112],[25,164],[25,169],[31,199],[0,141],[0,149],[43,122],[30,87],[27,83],[26,142],[18,94],[68,23],[116,49],[57,24],[122,52],[123,53],[130,3],[125,3],[97,-117],[74,-90],[82,-99],[5,-21],[6,-83],[-6,-96]],[[92490,49103],[-21,-44],[-13,41],[-16,36],[-13,36],[-17,79],[0,40],[4,42],[1,43],[-8,87],[-19,78],[-68,189],[-21,49],[-24,44],[-16,11],[-31,11],[-14,8],[-26,31],[-24,36],[-60,106],[-31,30],[-17,37],[-94,120],[-27,28],[-34,0],[-28,24],[22,15],[5,40],[-5,41],[47,-67],[50,-58],[14,-47],[25,-3],[45,-38],[30,-35],[29,-40],[33,-58],[62,-45],[9,-17],[32,-75],[42,-64],[14,-35],[177,-301],[30,-85],[2,-58],[-6,-22],[-19,-49],[1,-58],[-6,-51],[-16,-52]],[[92198,49368],[14,-12],[42,60],[22,-42],[28,-20],[30,-12],[-12,-86],[4,-40],[7,-40],[-1,-59],[-13,-52],[-26,-76],[-12,-15],[-13,-8],[-43,-6],[-8,-40],[3,-43],[23,-57],[18,-63],[-18,-59],[-30,-40],[-29,-21],[-47,12],[-50,-5],[-10,-22],[0,-37],[-7,-28],[-9,-25],[-25,-53],[-29,-46],[-38,-45],[-13,-10],[-35,-7],[-31,-26],[-13,-25],[-15,-20],[-33,-22],[-32,-43],[-12,-8],[-66,-7],[-95,-2],[-28,-5],[-27,6],[-15,17],[-32,79],[-28,26],[-30,0],[-41,-28],[-8,6],[-80,116],[-25,28],[-26,21],[-32,15],[-30,23],[-18,55],[2,72],[24,42],[37,-21],[14,0],[14,12],[16,-4],[17,-10],[60,15],[34,-22],[34,-29],[32,-6],[32,6],[43,33],[14,-4],[42,0],[36,44],[14,177],[9,60],[13,14],[9,-4],[13,-30],[-17,-38],[-8,-29],[-2,-71],[9,-69],[22,-54],[32,-7],[29,36],[32,7],[30,-35],[30,6],[14,23],[16,10],[16,4],[14,13],[20,60],[13,67],[19,52],[52,88],[15,11],[17,6],[37,-4],[27,32],[2,70],[-4,72],[-31,167],[-2,27],[4,30],[9,27],[31,0],[32,-9],[13,-26],[14,-20]],[[89159,46590],[0,8],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,118],[0,96],[-16,38],[-15,57],[3,74],[19,92],[9,61],[0,50],[0,117],[0,117],[0,117],[0,117],[0,118],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[-1,118],[0,117],[0,117],[0,70],[0,39],[0,2]],[[89158,50339],[9,0],[28,-1],[22,-9],[140,-125],[41,-50],[14,-12],[14,-1],[14,-5],[62,-70],[94,-69],[99,-67],[31,-14],[31,-6],[69,-23],[37,-21],[53,-82],[27,-25],[25,-46],[35,-50],[15,-12],[15,-6],[35,-2],[35,9],[15,-4],[14,-9],[13,-17],[6,-33],[22,-47],[31,-20],[29,-42],[27,-50],[19,-50],[22,-43],[34,-18],[35,-2],[120,-253],[6,-39],[1,-165],[-13,-129],[30,-40],[40,-15],[58,-28],[55,-41],[175,-174],[24,-15],[35,-6],[36,3],[13,-9],[26,-32],[14,-20],[24,-57],[21,-61],[9,-17],[11,-14],[6,-33],[9,-103],[-3,-64],[-9,-24],[-28,-11],[-99,-11],[-65,12],[-46,-65],[-2,-28],[4,-27],[40,-137],[23,-121],[20,-50],[29,-40],[26,-48],[24,-54],[50,-95],[27,-36],[31,-21],[53,-74],[7,-33],[16,-103],[6,-69],[1,-29],[4,-26],[46,-63],[11,-18],[20,-140],[16,-65],[27,-24],[31,2],[85,42],[12,1],[16,-10],[14,-23],[4,-63],[-13,-66],[-4,-64],[17,-52],[43,-41],[16,-12],[78,-13],[30,-11],[30,-17],[11,-16],[-8,-28],[-15,-14],[-18,-6],[-29,-20],[1,-36],[16,-38],[15,-45],[12,-17],[14,-11],[33,-15],[33,-22],[22,-22],[22,-15],[48,-10],[36,-29],[51,12],[-44,-47],[-15,-11],[-53,17],[-10,-18],[22,-50],[32,-34],[12,-19],[-9,-23],[-37,-46],[-16,-6],[-29,-4],[-50,20],[-35,25],[-9,34],[-10,20],[-31,49],[-23,26],[-28,9],[-30,-1],[-53,28],[-116,20],[-27,12],[-35,39],[-16,6],[-18,-12],[-44,-8],[-13,3],[-32,33],[-33,12],[-14,-9],[-14,-3],[-44,24],[-34,10],[-28,33],[-15,30],[-17,28],[-16,70],[-24,67],[-31,54],[-65,89],[-13,22],[-25,81],[1,54],[9,54],[-14,-19],[-16,3],[-44,36],[-18,42],[-30,116],[-19,62],[-44,108],[-13,64],[-18,56],[-12,21],[-9,24],[-9,32],[-12,21],[-62,49],[-11,15],[-12,8],[-46,5],[-26,8],[-50,39],[-26,12],[-31,7],[-30,15],[-15,15],[-10,25],[-6,59],[-25,-7],[-25,10],[-24,21],[-24,13],[-17,-18],[-5,-47],[-8,-2],[-14,9],[-7,-5],[-16,-22],[-12,-29],[-23,4],[-47,30],[-21,18],[-18,34],[-15,38],[-16,29],[-19,22],[24,-51],[56,-228],[-14,-4],[-14,6],[13,-44],[-15,-6],[-15,0],[-32,19],[-31,6],[-10,-9],[7,-16],[11,-49],[9,-50],[-46,-23],[-46,-14],[-52,-27],[-53,-2],[-27,16],[-28,9],[-26,-9],[-25,-20],[-21,3],[-14,36],[-6,27],[-8,23],[-20,-4],[-19,-12],[33,-2],[10,-30],[8,-36],[23,-32],[29,19],[61,-5],[60,-57],[14,-7],[13,-11],[31,-56],[24,-51],[19,-59],[4,-23],[-1,-61],[-6,-30],[-39,-43],[-41,-33],[-61,-63],[-59,-73],[-31,15],[-28,38],[-10,10],[-29,21],[-18,7],[-69,-16],[-70,-8],[-30,1],[-28,12],[-32,23],[-31,-11],[-21,-26],[-23,-4],[-44,59]],[[91117,48486],[-11,-4],[-5,26],[-26,23],[-26,70],[1,61],[3,17],[15,1],[57,-70],[6,-22],[-4,-66],[-10,-36]],[[90560,49120],[-19,-17],[-13,13],[-6,38],[5,36],[16,29],[10,9],[12,-20],[4,-38],[-9,-50]],[[92408,50038],[-7,-51],[-17,30],[-12,42],[8,20],[19,11],[9,-52]],[[92249,50145],[-3,-29],[-9,1],[-24,57],[-4,15],[5,14],[28,-41],[7,-17]],[[91601,50948],[-1,-21],[-20,11],[-6,-3],[-34,60],[0,37],[9,31],[15,-5],[25,-39],[12,-71]],[[91966,46071],[12,0],[20,43],[17,13],[11,-20],[-18,-137],[-16,21],[-60,38],[-2,54],[-15,18],[-10,53],[-20,58],[-4,38],[12,-16],[12,-38],[53,-79],[-2,-25],[10,-21]],[[91762,46374],[-4,-14],[-16,10],[-46,80],[7,59],[21,30],[31,-33],[10,-49],[3,-27],[-6,-56]],[[91973,46812],[5,-41],[-22,44],[10,50],[2,27],[-1,15],[-22,26],[11,42],[13,14],[7,4],[0,-59],[6,-27],[-9,-95]],[[92855,45298],[-4,-31],[-10,10],[-30,-16],[-16,4],[-9,28],[-3,13],[27,-10],[-5,31],[38,-16],[12,-13]],[[89884,46957],[-12,-2],[-49,39],[-12,29],[57,-7],[15,-7],[3,-40],[-2,-12]],[[90881,48714],[-15,-3],[-26,54],[-6,21],[3,28],[32,39],[21,-35],[4,-75],[-13,-29]],[[90851,50714],[93,-38],[6,1],[-1,13],[1,4],[6,-10],[-2,-27],[-15,-7],[-13,3],[-10,-15],[-26,-52],[-18,9],[-22,-12],[-38,-1],[-50,23],[-13,-20],[-18,6],[-17,-22],[-8,1],[-4,32],[1,16],[20,14],[-3,49],[17,25],[29,-3],[27,17],[58,-6]],[[91787,50309],[-55,-8],[-20,9],[-18,33],[-16,52],[-16,12],[-7,11],[39,39],[35,12],[56,-49],[6,-25],[0,-16],[-1,-53],[-3,-17]],[[91813,46459],[39,-48],[21,14],[12,-7],[25,-55],[1,-40],[4,-34],[-1,-15],[-14,-21],[1,24],[-10,4],[-37,-1],[-28,15],[-39,4],[16,36],[4,14],[-21,59],[0,28],[1,15],[17,8],[9,0]],[[92397,46682],[16,-9],[33,4],[11,-33],[16,-11],[13,-15],[12,-22],[0,-13],[-3,-12],[-7,-10],[2,-23],[-12,3],[-16,-12],[-30,27],[-11,6],[-3,24],[-19,39],[-35,28],[18,23],[15,6]],[[92648,45232],[46,-30],[16,-34],[-17,-15],[-40,-10],[-10,20],[-39,21],[-6,37],[-19,-13],[10,27],[-25,29],[-7,40],[-1,16],[28,-19],[64,-69]],[[89885,46869],[5,-25],[-40,35],[-39,58],[-19,15],[-13,38],[24,-28],[41,-27],[41,-66]],[[91076,50527],[-9,-30],[-21,3],[-9,9],[15,6],[6,25],[7,8],[11,-21]],[[92209,50212],[-6,0],[-1,46],[4,24],[16,-16],[2,-42],[-15,-12]],[[91915,45757],[-4,-45],[-22,13],[-5,10],[4,28],[20,1],[7,-7]],[[92682,49481],[-2,-13],[-17,15],[14,30],[6,2],[-1,-34]],[[93321,47991],[-7,-54],[-5,-9],[-7,20],[-24,-20],[-11,-22],[-13,-17],[-28,4],[-27,15],[-26,28],[-23,35],[-23,55],[-14,57],[7,66],[-9,60],[-44,43],[-10,14],[-19,59],[-19,26],[-25,52],[-6,23],[-11,66],[-3,40],[9,116],[-4,58],[12,-5],[13,-23],[15,-16],[35,-11],[27,-46],[25,-90],[4,-30],[8,-21],[26,-38],[14,-25],[26,-98],[15,-21],[17,-9],[16,-14],[27,-43],[24,-49],[17,-51],[12,-55],[9,-70]],[[92957,48713],[-6,-4],[-12,72],[-2,54],[-4,40],[-6,24],[18,43],[8,12],[13,-23],[2,-51],[11,-43],[-8,-95],[-14,-29]],[[28507,56830],[-5,-8],[-16,-45],[-8,-39],[20,-41],[6,-44],[11,-47],[17,-47],[20,-89],[4,-35],[-5,-23],[-19,-14],[-17,-41],[-5,-51],[3,-25],[-52,-80],[-13,-13],[-9,12],[-11,40],[-13,33],[-8,11],[-4,1],[-4,-8],[-2,-17],[7,-76],[-6,-30],[-17,-24],[-20,-123]],[[28361,56007],[-8,16],[-67,165],[-58,205],[-12,93],[15,6],[14,-3],[8,15],[9,27],[-7,63],[28,47],[11,32],[7,-3],[19,-55],[26,-31],[33,-46],[21,-10],[-26,47],[-44,63],[-13,42],[-12,57],[-17,-25],[-8,-21],[-9,-12],[-8,15],[-1,18],[-26,4],[-7,17],[-7,9],[3,-36],[5,-22],[-2,-27],[-9,-1],[-7,27],[-9,25],[-13,105],[-29,49],[-14,16],[-11,7],[-17,33],[-22,18],[-29,52],[-37,37],[-44,14],[-54,-9],[-19,-20],[-12,-27],[-6,-12],[-32,-30],[-12,-43],[-7,-37],[-16,-42],[18,-25],[-104,-142],[-21,-20],[-47,-15],[-11,-15],[-14,-28],[-2,-42],[2,-37],[14,-28],[12,-17],[29,-85],[52,-106],[9,-39],[8,-57],[-15,-27],[-12,-11],[-49,-5],[-17,-23],[-7,-35],[-18,-29],[-64,-28],[-49,-3],[-16,33],[-4,92],[-33,158],[-8,108],[-8,-13],[-18,-13],[-6,-27],[-5,-80],[-6,-27],[-14,2],[-28,29],[-37,26],[-48,170],[-5,32],[-9,38],[-37,16],[-32,29],[-34,4],[-17,-16],[-18,21],[-3,46],[-36,-21],[-47,7],[-41,20],[-28,-10],[-24,-33],[4,-85],[-7,-16]],[[26978,56492],[-1,34],[-9,40],[-10,33],[-20,34],[-1,12],[8,18],[38,49],[4,21],[1,43],[-4,41],[-17,60],[10,38],[19,30],[20,24],[4,10],[-4,20],[-12,22],[-27,38],[-16,3],[-1,108],[1,116],[4,11],[10,7],[8,18],[5,34],[11,12],[22,-26],[22,-24],[9,8],[7,11],[5,12],[1,10]],[[27065,57359],[18,-31],[36,-54],[2,-27],[-3,-26],[10,-74],[18,-10],[19,14],[5,-14],[-4,-13],[-9,-15],[-3,-64],[31,-30],[15,-26],[51,13],[19,-7],[13,7],[-14,51],[-19,38],[1,17],[15,-13],[11,-25],[25,-32],[46,-111],[53,-26],[42,3],[39,15],[63,43],[45,78],[36,34],[116,74],[42,77],[17,10],[17,10],[36,58],[20,46],[21,22],[62,-16],[39,-22],[28,3],[27,-15],[11,-33],[12,-14],[65,3],[54,-16],[117,-98],[70,-97],[37,-103],[90,-133]],[[28084,56609],[-6,-24],[-13,54],[2,14],[-1,49],[13,13],[9,1],[7,-7],[5,-58],[-4,-26],[-12,-16]],[[27332,56067],[-15,-3],[-31,24],[-23,48],[-2,15],[1,16],[12,49],[17,17],[6,0],[16,-57],[-11,-21],[5,-35],[22,-26],[3,-27]],[[27157,57246],[-3,-27],[-21,49],[12,8],[5,-1],[7,-29]],[[28037,56597],[-12,-25],[-5,24],[9,25],[3,0],[5,-24]],[[86436,53586],[-6,-3],[-4,2],[0,8],[4,9],[6,4],[4,-3],[0,-8],[-4,-9]],[[87387,56095],[-17,-12],[-8,44],[3,51],[11,39],[12,13],[2,4],[12,51],[3,-28],[-8,-93],[-9,-37],[-1,-32]],[[71323,72385],[13,-52],[19,-78],[13,-51],[14,-58],[7,-29],[13,-50]],[[71402,72067],[-5,-27],[-9,-41],[-30,-30],[-30,-23],[-7,-12],[-3,-18],[-14,-35],[-28,-29],[-24,3],[-15,8],[-79,-51],[-36,2],[-29,-33],[-21,-30],[-42,-33],[-29,-1],[-43,20],[-52,37],[-21,22],[-19,-1],[-47,5],[-45,18],[-54,22],[-27,10],[-55,19],[-35,-26],[-33,-23],[-26,-16],[-22,-71],[-9,-26],[-10,-36],[-5,-25],[4,-31],[32,-21],[13,-30],[2,-26],[-11,-27],[-10,-21],[0,-19],[5,-18],[8,-14],[45,-9],[27,0],[10,-8],[2,-25],[-10,-34],[-38,-28],[-22,-29],[-7,-39],[1,-30],[7,-21],[18,-23],[17,-27],[6,-22],[-3,-30],[-6,-41],[-19,-48],[-16,-34],[-1,-12],[4,-18],[12,-27],[22,-39],[27,-31],[17,-9],[5,-8],[6,-37],[2,-38],[-7,-29],[13,-24],[36,1],[29,-10],[13,10],[8,-8],[-5,-86],[4,-51],[7,-15],[29,-21],[55,3],[33,-24],[36,-28],[19,-31],[8,-22],[-2,-37],[-20,-43],[-32,-21],[-19,-9],[-92,-81],[-29,-34],[-22,-41],[-8,-31],[-4,-30],[19,-108],[4,-34],[-17,-118],[-4,-43],[6,-31],[19,-11],[5,-26],[2,-19],[-35,-43],[-35,-39],[-12,0],[-34,-71],[-58,-144],[-30,-49],[-2,-23],[-3,-24],[12,-41],[2,-34],[-13,-35],[-21,-40],[-42,-34],[-53,-36],[-24,-21],[-18,-93],[-16,-94],[-8,-34],[-28,-108],[-50,-158],[-13,-35],[-77,-76],[-79,-83],[-14,-32],[-16,-75],[-15,-83],[-14,-44],[-50,-97],[-17,-75],[-5,-49],[-42,-27],[-49,-26],[-70,-9],[-29,-13],[-86,-68],[-22,-3],[-16,12],[-13,23],[-12,38],[-6,59],[-16,26],[-23,23],[-23,1],[-24,-25],[-20,-27],[-14,-23],[-14,-26],[-26,-89],[-43,-128],[-48,-92],[-17,-28],[-11,-21],[-15,-31],[-9,-30],[-12,-97],[-6,-86],[3,-19],[7,-17],[26,-25],[37,-41],[49,-24],[41,-4],[16,-18],[9,-24],[2,-20],[-2,-71],[-4,-77],[-16,-82],[1,-47],[6,-46],[45,-117],[17,-12],[34,-3],[16,2],[18,12],[13,-8],[9,-14],[2,-24],[-1,-117],[14,-53],[27,-72],[22,-82],[20,-99],[19,-77],[8,-40],[-13,-20],[-7,-20],[-2,-27],[3,-29],[-2,-20],[9,-25],[11,-8],[0,-17],[-17,-23],[-15,1],[-12,-10],[-23,-48],[-10,-9],[-14,-4],[-16,4],[-22,19],[-7,30],[3,32],[-5,18],[-16,-3],[-56,-32],[-53,-40],[-9,-27],[-12,-28],[-25,-12],[-35,-3],[-25,4],[-23,30],[-21,28],[-32,1],[-58,-4],[-32,0],[-19,10],[-18,-7],[-24,11],[-10,-15],[-10,-1],[-8,26],[-5,2],[-6,-4],[-5,-8],[-4,-15],[-1,-174],[-38,1],[-27,1],[-30,-10],[-27,-13],[-14,-16],[-19,-25]],[[68934,65585],[-4,-34],[-10,-26],[-13,38],[-9,17],[-9,-13],[-14,2],[-26,42],[-11,-43],[-42,-9],[-5,32],[-1,30],[-23,-22],[-17,34],[-7,45],[-6,12],[-8,15],[-17,15],[-16,48],[-1,51],[-4,60],[-33,224],[-20,21],[-110,39],[-6,40],[8,105],[-3,66],[-36,88],[-10,61],[-29,52],[-29,15],[-30,-7],[-15,-20],[-9,-35],[63,8],[14,-13],[17,-23],[-18,1],[-21,11],[-26,-1],[-98,-26],[-56,-37],[-76,11],[-96,-36],[-79,-2],[-33,-71],[-18,12],[-14,18],[-109,56],[-7,23],[-18,17],[-20,-30],[-15,-5],[-59,25],[-46,-19],[-17,-32],[-1,-50],[-57,10],[-32,15],[-43,-17],[-98,23],[-25,-6],[-36,-33],[-15,-26],[-21,-10],[-18,36],[-14,16],[-13,-10],[-18,-30],[-50,-14],[-46,4],[-49,28],[6,9]],[[67107,66360],[8,48],[7,172],[8,62],[-2,34],[2,10],[19,31],[4,12],[8,88],[8,98],[9,35],[7,9],[61,44],[11,29],[31,-7],[3,7],[3,34],[14,36],[21,30],[15,11],[54,19],[32,26],[10,2],[85,-6],[18,10],[3,9],[5,99],[15,16],[3,8],[-5,69],[3,45],[17,27],[-1,16],[-12,32],[-17,21],[-8,5],[-70,-20],[-29,7],[-14,12],[-2,9],[2,20],[1,32],[10,51],[3,30],[-8,175],[-12,116],[6,115],[-1,24],[-2,5],[-9,0],[-43,-10],[-36,74],[-22,30],[-62,36],[-27,7],[-40,32],[-37,70],[-37,72],[-15,45],[-17,78],[-47,149],[0,39],[-6,23],[-46,98],[-33,70],[-53,112]],[[66900,69042],[106,-63],[83,-48],[133,-78],[103,-60],[29,-10],[303,52],[112,-40],[36,-22],[5,13],[15,27],[26,27],[35,21],[36,12],[51,1],[34,-1],[25,-7],[49,4],[24,10],[81,43],[54,29],[82,44],[60,33],[15,17],[15,32],[8,28],[-19,43],[-2,38],[12,48],[7,74],[-2,104],[-4,61],[17,112],[14,63],[28,30],[19,19],[8,13],[8,15],[30,86],[27,40],[26,24],[29,-3],[25,-33],[47,-15],[46,10],[40,25],[18,20],[21,18],[-1,20],[-24,18],[-14,25],[-5,31],[14,18],[31,6],[77,74],[31,49],[9,23],[15,3],[29,-23],[34,-8],[22,23],[21,5],[21,-25],[11,-29],[20,-36],[24,-7],[29,19],[30,41],[29,58],[26,56],[-7,180],[-4,107],[14,55],[19,35],[13,53],[-1,47],[14,40],[13,107],[19,26],[37,17],[61,11],[47,49],[47,52],[7,46],[-18,50],[-24,95],[-22,57],[-52,103],[6,63],[29,26],[72,-44],[20,-9],[25,-6],[66,1],[54,17],[57,39],[11,41],[-1,48],[1,40],[1,56],[-20,35],[-12,32],[-4,25],[14,14],[14,26],[13,47],[31,57],[19,51],[18,24],[27,33],[17,48],[8,29],[16,29],[5,18],[-4,17],[-8,21],[-9,23],[0,23],[7,24],[8,22],[-3,30],[-5,50],[-14,29],[-10,68],[-16,68],[-8,27],[-15,34],[-34,35],[-10,24],[13,46],[22,29],[42,70],[23,48],[21,34],[27,-5],[15,3],[14,31],[27,28],[49,57],[17,39],[26,19],[21,5],[29,13],[28,21],[25,16],[40,3],[63,9],[35,10],[81,8],[89,3],[11,1],[38,-21],[26,-17],[11,2],[43,41],[66,50],[30,22]],[[70705,73169],[17,8],[25,0],[21,-14],[21,-19],[13,-15],[16,9],[30,11],[25,-8],[56,-35],[8,-17],[13,-84],[10,-7],[32,19],[26,-10],[29,-27],[19,-26],[12,-28],[14,-46],[5,-36],[6,-44],[-1,-123],[-10,-20],[-8,-26],[2,-23],[9,-18],[18,-12],[17,-8],[9,-19],[12,-70],[9,-10],[20,0],[38,15],[32,24],[14,5],[3,-66],[19,-25],[26,-29],[11,-10]],[[66311,63489],[-17,-8],[-6,4],[1,73],[40,91],[27,106],[19,-94],[-33,-53],[-17,-91],[-14,-28]],[[65663,66232],[28,-152],[42,-142],[37,-78],[38,-106],[59,-98],[27,-33],[108,-69],[60,-25],[82,-25],[57,-53],[19,-3],[29,15],[22,-1],[54,-73],[16,-69],[23,-36],[20,-57],[13,-60],[45,-92],[33,-103],[33,-76],[29,-47],[44,-19],[36,-21],[4,-51],[-4,-67],[-7,-49],[-33,-96],[-8,-59],[-37,-97],[-41,-163],[-18,-37],[-66,-84],[-48,-102],[-57,-176],[-43,-174],[-17,-56],[-35,-12],[-23,5],[-15,17],[6,47],[4,54],[-21,-6],[-19,-11],[-43,-131],[-24,-57],[-5,-73],[-12,-94],[-16,-86],[-8,-73],[0,-41],[13,-101],[1,-103],[7,-62],[6,-74],[-20,-23],[-18,-11],[-68,-8],[-70,-24],[-61,-43],[-37,-43],[-47,-95],[-29,-243],[-47,-103],[-31,-21],[-76,-9],[-106,-28],[-38,-25],[-62,-148],[-5,-47],[12,-34],[4,-37],[-5,-35],[-29,-94],[-30,-68],[-81,-43],[-30,25],[-27,13],[-53,2],[-86,-17],[-31,-50],[-50,-36],[-46,-55],[-87,-21],[-59,-43]],[[65577,66856],[24,83],[9,13],[8,-6],[22,9],[11,45],[9,25],[10,-3],[4,-14],[-3,-69],[0,-57],[-12,-175],[-13,-30],[-6,-25],[-2,-34]],[[53163,85850],[-1,17],[-5,22],[-65,22],[-12,-1],[-25,13],[-15,4],[-31,8],[-25,64],[-28,54],[-3,22],[0,101],[-8,44],[-2,49],[-17,-39],[9,-63],[-21,-26],[-26,-13],[2,-37],[11,-7],[3,-38],[-7,-56],[-52,-126],[-11,-13],[-7,-17],[-27,11],[-34,-35],[-32,-5],[-12,39],[-46,53],[-22,-3],[20,-26],[19,-34],[-11,-22],[-11,-14],[-18,-8],[-67,-44],[23,-29],[-20,-34],[-23,-5],[-13,-15],[-4,-21],[-69,-61],[-113,-155],[-59,-44],[-40,-46],[-36,2],[-45,-39],[-114,-34],[-75,15],[-53,-13],[-28,26],[-4,19],[2,10],[5,13],[-10,5],[-21,2],[-9,-13],[-1,-29],[-10,-8],[-39,17],[-10,15],[14,30],[25,28],[-5,5],[-5,17],[-11,2],[-35,-4],[-29,5],[-93,62],[-21,33],[-75,52],[-34,56],[-19,61],[2,56],[9,87],[15,22],[68,-31],[68,-51],[10,3],[22,40],[41,32],[-12,9],[-61,-37],[-23,21],[-36,42],[0,21],[17,22],[5,29],[-8,28],[4,37],[27,40],[41,40],[30,39],[31,24],[-4,8],[-34,-15],[-34,-26],[-39,-44],[-48,-35],[-35,-13],[-17,-12],[-26,-11],[-27,-50],[-29,-21],[-53,-3],[-11,37],[15,131],[16,64],[17,45],[27,7],[20,34],[16,0],[13,-16],[54,-15],[26,43],[35,6],[62,42],[-1,8],[-42,-9],[-26,-2],[-37,-10],[-20,7],[-9,32],[15,29],[59,68],[21,30],[11,28],[-2,19],[10,39],[58,69],[47,32],[15,-28],[-13,-84],[0,-35],[38,123],[16,30],[19,20],[45,14],[13,20],[-53,-7],[-127,-47],[-54,-42],[-15,-32],[-37,-49],[-17,-31],[-8,-47],[-21,-25],[-29,-9],[-39,-59],[-17,-48],[-39,-37],[-25,-29],[-8,-11],[-14,-28],[-11,-2],[-10,16],[-1,37],[3,59],[19,42],[9,42],[-12,38],[9,24],[16,0],[31,-11],[33,1],[54,31],[-9,18],[-23,2],[-44,-2],[-36,29],[-29,59],[-13,79],[9,23],[105,81],[28,36],[-16,4],[-39,-45],[-57,-27],[-35,38],[-19,41],[-11,87],[4,45],[-4,59],[24,19],[27,-10],[26,-4],[61,5],[133,35],[85,-21],[35,2],[54,31],[46,3],[35,-23],[19,-27],[3,-36],[16,-23],[11,7],[-9,29],[-2,43],[140,50],[17,19],[-56,7],[-16,45],[30,68],[-3,9],[-31,-36],[-15,-51],[6,-40],[-6,-19],[-29,-9],[-64,-3],[-41,17],[-38,10],[-13,13],[4,29],[-7,6],[-16,-26],[-14,-52],[-30,-12],[-84,19],[-121,-11],[-54,-26],[-35,3],[-61,46],[-24,36],[-8,73],[3,33],[47,13],[24,-1],[22,17],[-19,12],[-28,22],[-19,44],[-29,14],[-19,38],[-5,57],[6,40],[15,13],[37,-9],[97,6],[91,-40],[62,-23],[125,12],[73,36],[-13,10],[-80,-21],[-73,1],[-130,40],[-53,14],[-57,-6],[-30,12],[-18,40],[13,77],[27,17],[15,-20],[18,-2],[18,32],[17,19],[14,41],[51,39],[22,3],[31,18],[20,-5],[12,-18],[16,-15],[35,2],[103,31],[11,10],[20,25],[-65,-11],[-54,-18],[-35,-5],[-5,22],[13,21],[20,21],[10,37],[22,16],[24,-1],[50,7],[35,9],[60,-6],[90,-14],[58,-34],[21,3],[23,9],[11,12],[-46,14],[-2,21],[5,15],[74,28],[81,6],[-14,23],[-177,-34],[-46,23],[-36,0],[-24,-13],[-68,-16],[-13,11],[13,40],[41,65],[3,16],[19,16],[106,37],[51,44],[23,6],[22,-3],[35,5],[67,-13],[30,-55],[28,-17],[87,-69],[-4,20],[-75,93],[-29,23],[-21,46],[7,43],[24,29],[86,15],[15,17],[2,29],[-13,19],[-32,-1],[-26,12],[-7,31],[10,21],[50,38],[27,13],[47,13],[81,-30],[6,-16],[-22,-38],[2,-21],[20,-3],[46,64],[55,9],[23,14],[26,9],[38,-58],[16,-19],[12,-7],[12,-48],[12,-3],[17,24],[30,13],[42,8],[69,-12],[32,9],[15,-1],[-14,43],[-10,12],[15,39],[15,15],[48,27],[46,12],[30,26],[40,24],[-6,18],[-12,22],[-26,2],[-10,12],[33,28],[45,32],[-8,12],[-34,14],[-26,-10],[-38,-25],[-45,-39],[15,-11],[22,-32],[-31,-43],[-166,-115],[-78,-34],[-37,5],[-9,32],[-16,23],[-18,48],[-31,-1],[-17,-11],[-8,16],[13,51],[26,40],[44,31],[20,36],[20,59],[63,55],[91,138],[75,44],[27,48],[44,21],[38,37],[29,4],[54,34],[30,40],[-20,2],[-47,-26],[-27,-10],[2,43],[13,44],[39,40],[186,117],[19,-19],[22,-35],[56,8],[64,66],[49,72],[-26,-12],[-29,-30],[-57,-41],[-26,-6],[-15,5],[-8,28],[-20,8],[-18,-6],[-18,20],[-3,48],[23,71],[19,47],[20,36],[78,101],[17,56],[36,29],[46,-7],[14,9],[-16,36],[-50,29],[-3,18],[167,47],[80,-1],[24,23],[43,15],[33,29],[-17,13],[-81,-26],[-51,-13],[-23,0],[-18,-9],[-64,-3],[-14,115],[10,63],[24,-2],[5,60],[28,35],[39,8],[19,15],[28,31],[46,-7],[48,7],[-12,14],[-59,19],[-14,32],[20,17],[23,13],[20,3],[40,62],[24,27],[26,-5],[38,28],[37,-10],[35,18],[49,12],[178,5],[5,25],[-38,6],[-132,7],[-67,-1],[-29,-7],[-10,9],[2,16],[24,24],[12,26],[49,65],[58,44],[44,-11],[46,-42],[34,-5],[15,-13],[25,-57],[11,-2],[-5,55],[32,44],[-8,13],[-49,-16],[-37,16],[-29,34],[-8,31],[18,30],[17,15],[-11,18],[-74,-48],[-51,-11],[-21,7],[11,43],[-6,34],[70,85],[23,9],[39,-6],[35,-24],[30,4],[32,12],[-5,23],[-69,9],[-18,19],[7,19],[47,19],[48,36],[54,10],[43,27],[8,-6],[8,-11],[15,-99],[39,-81],[15,-3],[-15,69],[14,20],[17,15],[6,17],[-20,6],[-17,24],[-24,79],[9,21],[51,41],[64,10],[68,-29],[24,-1],[40,8],[67,24],[40,10],[20,0],[5,12],[-19,8],[-6,7],[-15,5],[-62,-13],[-172,4],[-16,14],[-3,24],[18,34],[20,20],[65,34],[68,5],[72,61],[28,45],[15,71],[44,57],[111,32],[4,14],[-12,30],[1,53],[31,63],[20,21],[9,3],[24,-21],[29,-43],[45,-24],[59,-5],[16,12],[-46,25],[-35,32],[-3,33],[17,17],[25,-2],[33,4],[30,21],[4,16],[1,20],[8,22],[44,50],[136,33],[10,-14],[-7,-97],[-16,-63],[0,-46],[27,46],[35,126],[27,59],[30,34],[22,8],[21,17],[28,11],[9,-14],[9,-31],[-16,-110],[2,-35],[-17,-46],[-65,-104],[3,-13],[15,5],[25,17],[80,98],[70,-12],[1,8],[-22,29],[-28,28],[-8,34],[4,91],[21,37],[60,-4],[37,5],[17,-17],[36,1],[25,66],[50,6],[44,-44],[52,-29],[43,-42],[12,12],[-23,98],[-25,35],[-54,19],[-58,44],[-15,19],[3,15],[50,14],[68,-16],[59,36],[17,-10],[46,19],[28,-25],[17,7],[11,35],[73,21],[46,-20],[25,-20],[12,-39],[17,-78],[36,-42],[23,-21],[27,-5],[12,21],[-24,25],[-7,24],[12,59],[14,23],[78,87],[66,46],[39,4],[68,102],[20,18],[18,5],[-5,24],[-37,16],[-2,31],[50,38],[60,63],[30,4],[18,-17],[59,-29],[35,-33],[26,-16],[17,3],[14,25],[17,11],[37,-6],[22,-16],[18,-2],[15,-9],[4,-21],[-32,-23],[-55,-61],[-54,-69],[-18,-36],[-17,-95],[-43,-61],[-3,-43],[17,-20],[47,16],[57,57],[15,60],[143,164],[68,91],[76,75],[43,15],[21,-49],[-17,-65],[-32,-41],[24,-19],[-5,-50],[-7,-27],[-5,-28],[0,-26],[23,7],[89,52],[23,56],[21,42],[10,36],[35,34],[66,0],[3,14],[-80,47],[-9,22],[27,28],[73,55],[38,-6],[23,-13],[91,-9],[69,-39],[-2,-61],[-16,-26],[-15,-15],[-89,-47],[-15,-22],[28,-8],[60,23],[16,-21],[-19,-53],[-4,-78],[-7,-46],[0,-42],[8,-23],[24,90],[8,22],[36,34],[13,68],[34,81],[39,47],[23,13],[75,-2],[33,-18],[28,-39],[21,-16],[67,-17],[24,-21],[4,-12],[16,-3],[45,30],[30,5],[48,-46],[-10,-35],[3,-11],[58,2],[48,-13],[92,-71],[10,-33],[-5,-40],[-132,-44],[-57,-42],[-94,-16],[-318,28],[7,-31],[221,-66],[13,-19],[-7,-40],[-1,-33],[5,-22],[16,-20],[27,-10],[55,5],[27,-11],[19,17],[7,55],[16,12],[31,-16],[13,-59],[9,-6],[15,42],[31,-3],[33,3],[43,-7]],[[58045,91602],[-20,22],[-17,34],[4,33],[50,64],[46,45],[13,16],[27,46],[-54,114],[-94,34],[-108,53],[-40,28],[-62,58],[-43,52],[-40,1],[-43,-13],[-68,-47],[-39,-24],[-22,-7],[-5,-1],[-49,14],[-54,3],[-43,-4],[-16,-7],[-61,-76],[-42,-39],[-23,-14],[-17,-22],[-14,-37],[-31,-128],[-23,-48],[-5,-30],[5,-89],[-5,-50],[-28,-40],[-20,-19],[-27,-4],[-34,-10],[-30,-24],[-21,-32],[-24,-73],[-40,-26],[-39,7],[-28,27],[-59,21],[-44,13],[-49,28],[-44,22],[-39,4],[-23,-27],[-18,-26],[-68,-21],[-39,-16],[-50,-4],[-20,19],[-72,12],[-86,14],[-25,0],[-8,32],[-23,46],[-61,79],[-25,28],[-48,65],[-55,67],[-7,2],[-37,2],[-54,-2],[-34,-15],[-22,-20],[-4,-15],[21,-61],[-6,-16],[-11,-7],[-49,17],[-59,-1],[-15,-19]],[[51377,87030],[-25,-8],[-19,6],[7,55],[10,9],[15,4],[16,-30],[-4,-36]],[[51412,86582],[1,-68],[-25,5],[-12,26],[-3,17],[2,39],[-6,41],[7,20],[10,3],[16,-36],[10,-47]],[[58321,92048],[-53,-17],[-6,14],[11,22],[14,44],[22,-2],[22,-17],[17,-20],[-27,-24]],[[53324,89646],[-18,-18],[-35,5],[-3,15],[9,31],[21,13],[27,-3],[9,-13],[-10,-30]],[[52352,88517],[-31,-1],[-20,13],[46,25],[72,25],[6,15],[9,2],[12,-19],[2,-26],[-8,-13],[-88,-21]],[[52250,88327],[-27,0],[-32,9],[-21,19],[-3,16],[38,21],[37,12],[18,-23],[1,-37],[-11,-17]],[[56511,92635],[-6,-18],[-9,-18],[-23,-18],[-66,-74],[-38,-11],[-13,-12],[-15,-7],[-48,10],[-14,-15],[-14,-10],[-34,-4],[-21,4],[-53,27],[-31,29],[-17,26],[49,-1],[17,6],[33,-5],[19,26],[42,-3],[80,18],[29,-10],[67,60],[21,-2],[32,17],[13,-15]],[[57107,92823],[74,-22],[25,0],[37,-41],[19,4],[-3,-25],[-37,-12],[-58,-7],[-9,-5],[-49,4],[-28,33],[-47,9],[0,11],[30,25],[46,26]],[[56559,92482],[5,-27],[2,-23],[-26,-32],[-59,-42],[3,-11],[-20,-11],[-31,-8],[-17,8],[2,36],[-5,11],[-23,-15],[-24,19],[-1,18],[7,16],[23,25],[37,16],[25,-6],[83,65],[9,-14],[10,-25]],[[56671,92492],[-53,-23],[-31,20],[-13,20],[-1,45],[7,27],[25,15],[16,-11],[4,-8],[29,-9],[34,-28],[-17,-48]],[[53853,91166],[17,-10],[43,3],[8,-4],[-6,-16],[-19,-18],[-39,-11],[-18,-27],[-12,-9],[-34,-1],[-20,-6],[-25,-24],[-20,18],[-5,-13],[-4,-23],[-11,-6],[-34,-9],[-8,53],[16,20],[12,22],[19,4],[17,-2],[30,50],[42,14],[26,1],[25,-6]],[[53603,90941],[-41,-31],[15,56],[22,56],[30,32],[16,-12],[-7,-27],[0,-27],[-7,-13],[-28,-34]],[[54224,91556],[36,-58],[16,-34],[-13,-64],[-35,-32],[-54,-6],[-38,3],[-24,16],[-3,17],[-14,5],[-37,-22],[-25,-3],[-32,17],[-9,28],[34,35],[16,27],[38,-3],[10,-8],[21,-5],[13,32],[-3,23],[10,15],[46,-11],[0,61],[17,5],[8,-3],[13,-13],[9,-22]],[[55490,92290],[15,-7],[14,4],[11,-6],[23,-30],[25,-12],[2,-15],[-23,-15],[-31,-4],[-32,5],[-9,19],[-10,31],[-27,31],[-4,27],[23,5],[23,-33]],[[55771,92217],[-15,-14],[-23,-5],[-12,8],[-17,6],[-20,-3],[-16,25],[1,20],[23,28],[45,16],[36,-6],[10,-9],[-12,-66]],[[55348,92203],[25,-31],[22,3],[6,12],[15,6],[30,-17],[-4,-28],[-42,-36],[-30,-50],[-38,-12],[-18,6],[-35,-29],[-27,-31],[-28,-38],[-2,-20],[-5,-15],[-104,-15],[-37,-10],[-40,12],[-19,26],[6,14],[40,5],[1,24],[10,14],[13,8],[9,30],[16,8],[30,-7],[20,22],[11,3],[14,-18],[6,25],[-6,23],[3,15],[38,40],[17,29],[24,19],[22,-3],[7,28],[-7,28],[3,18],[20,45],[22,2],[11,-40],[1,-65]],[[53474,89805],[-22,-2],[0,23],[13,22],[20,14],[26,4],[29,2],[9,-12],[-17,-16],[-58,-35]],[[53449,89886],[-25,-4],[4,26],[21,24],[8,16],[4,20],[18,14],[26,-19],[1,-31],[-13,-30],[-44,-16]],[[53119,89208],[-14,-16],[-33,13],[-63,-10],[-26,15],[20,31],[58,32],[31,-2],[31,-39],[-4,-24]],[[54861,91933],[34,-33],[15,10],[29,3],[22,-11],[18,-21],[22,-1],[13,-27],[7,-36],[-16,-27],[-22,-12],[-6,-31],[9,-44],[-49,-15],[-58,-7],[-22,21],[-45,-38],[-46,-60],[-21,-7],[-2,19],[-32,13],[-42,1],[1,14],[8,10],[36,15],[7,30],[-7,54],[7,26],[1,19],[23,21],[77,-10],[9,20],[-6,13],[-39,22],[6,15],[28,14],[28,2],[8,22],[1,10],[4,6]],[[54377,91336],[4,-4],[38,56],[41,17],[3,19],[16,19],[-2,31],[9,24],[21,7],[13,8],[15,5],[27,-20],[15,-22],[19,-50],[-8,-48],[-50,-38],[-40,-17],[-41,-43],[-20,-35],[-17,-8],[-11,3],[-10,9],[-21,0],[-22,-31],[-68,-25],[-27,7],[-1,31],[-16,-3],[-26,-36],[-25,-12],[-16,-4],[-31,14],[-83,-63],[-78,-11],[-25,7],[0,38],[50,49],[41,34],[142,23],[88,101],[21,109],[21,39],[-10,23],[-24,4],[-1,34],[12,37],[47,51],[25,22],[42,62],[20,14],[23,0],[23,-16],[-4,-33],[-34,-60],[-50,-51],[6,-37],[20,-30],[5,-51],[1,-50],[-38,-66],[-9,-33]],[[47512,92649],[-25,-4],[-15,13],[37,35],[124,66],[49,63],[95,22],[6,-35],[-6,-44],[-84,-35],[-92,-23],[-89,-58]],[[55338,94695],[-33,-23],[-51,34],[-33,43],[18,16],[89,3],[22,-23],[4,-13],[-16,-37]],[[57465,97147],[-41,-1],[-75,42],[-14,37],[13,15],[36,1],[57,-51],[61,-15],[-37,-28]],[[59034,97994],[-263,-22],[-27,16],[427,63],[22,6],[80,8],[68,-14],[-20,-11],[-287,-46]],[[56002,97117],[38,-14],[83,3],[45,-98],[26,-103],[41,-8],[80,15],[70,7],[36,-8],[65,-30],[28,-21],[-24,-17],[-59,-19],[-10,-55],[59,-20],[98,-47],[56,-6],[98,19],[93,-37],[92,-45],[-215,-56],[-19,-16],[-29,-42],[-32,-35],[-29,-20],[-64,-35],[-35,-13],[-78,3],[-29,-14],[-27,-28],[-27,-21],[-69,-5],[-35,28],[12,9],[5,17],[-13,40],[66,40],[15,23],[-13,8],[-18,-2],[-48,12],[-14,0],[-40,-24],[-55,-16],[-55,-4],[-224,-31],[-34,11],[-15,61],[91,31],[14,53],[23,35],[26,23],[50,60],[12,4],[-123,48],[-48,31],[-53,61],[-17,50],[-71,42],[9,54],[-52,-4],[-41,38],[38,21],[190,24],[113,24],[43,-1]],[[55804,98069],[28,-6],[153,2],[30,-14],[11,-34],[24,-12],[32,-3],[81,-42],[28,-6],[24,23],[19,58],[0,68],[-7,33],[9,21],[27,8],[34,-2],[34,12],[29,21],[31,3],[67,-16],[18,-13],[-18,-25],[-7,-37],[-31,-75],[66,-4],[93,15],[24,22],[50,35],[53,-5],[25,4],[13,15],[5,18],[29,-3],[40,-34],[19,-6],[34,9],[13,0],[34,-14],[157,-25],[54,-14],[24,-12],[23,-8],[167,1],[118,-9],[43,-20],[37,-38],[14,-88],[-33,-24],[-239,-108],[-60,-35],[-29,-32],[-48,-70],[-24,-21],[-112,-34],[-26,-3],[-84,16],[-25,-2],[-102,-36],[-36,-22],[-34,-27],[-51,-13],[-53,7],[-237,14],[-32,20],[-26,37],[47,48],[-265,-18],[-292,10],[-15,6],[-13,19],[-100,12],[-75,15],[-64,26],[-62,33],[20,15],[20,9],[54,4],[48,-4],[85,0],[20,33],[34,10],[27,24],[-90,15],[-94,2],[-62,-20],[-73,-9],[-66,-1],[-127,6],[-60,14],[-83,36],[-28,21],[-11,16],[-9,24],[95,21],[36,17],[36,24],[-142,13],[-60,19],[-59,29],[48,16],[192,13],[51,-11],[50,-21],[56,-12],[53,27],[-50,12],[-46,45],[-9,22],[6,17],[23,3],[18,-7],[67,-42],[51,-14],[14,39],[2,19],[-9,15],[-24,28],[-21,35],[33,9],[33,-4],[70,-24],[71,-17],[32,-16],[61,-42],[56,-29]],[[54662,97872],[15,-1],[14,6],[10,16],[11,9],[71,-11],[99,-32],[30,-16],[41,-33],[34,-55],[-27,-40],[-35,-37],[-12,-21],[13,-30],[-6,-29],[-13,-26],[54,29],[114,94],[17,6],[18,-3],[51,-19],[46,-48],[11,-16],[8,-20],[5,-24],[-3,-28],[-4,-19],[-25,-12],[-11,-12],[26,-1],[30,-15],[27,-31],[31,-13],[111,11],[73,-17],[39,-52],[62,12],[0,27],[13,12],[82,-9],[43,-13],[43,-27],[-74,-45],[61,-43],[103,-31],[61,-33],[12,-14],[10,-18],[-40,-24],[-41,-13],[-104,-2],[-93,-17],[-172,-12],[-26,-7],[-6,-7],[-10,-21],[-66,-47],[-64,-58],[-26,-35],[-20,-49],[-8,-29],[15,-29],[-4,-30],[-48,-23],[-31,0],[-38,4],[-38,-13],[-2,-20],[2,-28],[-9,-85],[-12,-65],[-18,-59],[-19,-33],[-25,-9],[-81,-5],[-62,-57],[-50,-100],[-26,-39],[-55,-62],[10,-22],[17,-24],[-30,-43],[-46,-48],[1,-19],[16,-34],[7,-35],[-35,-30],[-66,-16],[-66,17],[-32,21],[-30,32],[-32,22],[-33,13],[-127,72],[-117,114],[-108,45],[-69,21],[-34,20],[-33,28],[-28,31],[-27,39],[-12,24],[-3,36],[9,21],[12,11],[85,9],[31,-5],[30,-19],[27,-7],[63,94],[357,54],[115,9],[115,0],[-18,25],[-15,33],[-17,7],[-87,-18],[-133,-19],[-65,0],[-67,13],[-67,-7],[-69,-28],[-69,-17],[-68,-7],[-143,3],[-35,14],[-48,33],[-11,17],[-10,21],[-9,63],[10,17],[14,9],[15,6],[32,1],[31,-11],[72,-36],[-17,39],[208,46],[96,40],[49,6],[50,-2],[-11,21],[0,20],[35,16],[25,7],[77,8],[174,-2],[62,11],[47,28],[-50,-10],[-50,-2],[-23,6],[-53,24],[-24,31],[68,63],[24,30],[-70,-5],[-23,-10],[-80,-58],[-60,-26],[-73,-12],[-73,1],[-16,8],[-22,39],[-7,20],[3,11],[23,31],[12,34],[-2,29],[-17,5],[-27,-28],[-25,-39],[-33,-20],[-35,6],[-15,15],[-13,23],[-13,9],[-15,0],[-31,-9],[-31,-18],[11,-25],[3,-29],[-14,-23],[-10,-28],[32,-17],[26,-28],[-39,-13],[-38,-18],[-34,-29],[-36,-23],[-56,-2],[-70,-12],[-141,-5],[-66,37],[-12,17],[-13,12],[-44,19],[-63,57],[-50,64],[-33,6],[-49,21],[-27,19],[-25,24],[-8,29],[3,26],[29,12],[-69,29],[-68,39],[25,13],[25,6],[202,-46],[14,6],[22,23],[-8,7],[-34,5],[-46,0],[-11,5],[-18,24],[-16,30],[-6,20],[-3,23],[34,35],[19,32],[-29,14],[-83,-1],[-28,-4],[10,-45],[-26,-31],[-51,-25],[-36,12],[-28,60],[-37,41],[-14,26],[-10,38],[-15,27],[-27,33],[-3,20],[3,16],[20,34],[-15,28],[-19,25],[-1,14],[18,18],[16,6],[17,-2],[51,-21],[28,-25],[9,2],[19,38],[25,8],[100,12],[111,-48],[29,-10],[23,-4],[-12,21],[-7,28],[17,10],[89,-24],[42,1],[98,33],[163,16],[62,-25],[3,-14],[-2,-18],[-3,-5],[-36,-22],[-206,-17],[-134,-66],[183,10],[33,-7],[14,-55],[13,-5],[48,-8],[32,-16],[32,-31],[34,-21],[21,3],[7,22],[-8,27],[-5,30],[3,33],[5,27],[39,19],[56,62],[59,42],[66,-19],[62,-53],[55,-74],[53,-80],[60,-99],[29,-35],[27,-8],[121,-103],[13,-3],[-25,78],[-62,133],[-43,102],[-9,39],[-7,54],[3,16],[5,14],[31,59],[40,28],[-12,40],[10,31],[42,24],[39,2],[38,-19],[73,-65]],[[53125,97125],[3,-40],[45,4],[53,-42],[58,-22],[17,-16],[12,-20],[35,-40],[17,-42],[-42,-4],[-58,60],[-47,34],[-60,29],[-48,2],[-21,12],[-78,105],[-15,24],[-44,39],[-20,48],[0,38],[60,-9],[52,-24],[45,-54],[9,-16],[-21,-22],[21,-27],[27,-17]],[[55205,98099],[-60,-32],[-100,25],[12,25],[23,15],[64,-6],[61,-27]],[[58068,97299],[83,-4],[83,9],[14,-9],[-107,-31],[-119,16],[-107,4],[-127,-33],[-42,13],[65,33],[70,10],[11,20],[27,4],[93,2],[56,-34]],[[85175,73606],[-3,5],[-14,4],[-56,47],[-46,-29],[-12,-37],[-12,-12],[-19,73],[-30,2],[-48,65],[-21,-13],[-5,-26],[-26,-60],[-37,-48],[-12,-7],[-13,3],[2,14],[-15,55],[-58,22],[-21,23],[-11,6],[57,61],[15,11],[-11,14],[-12,7],[-47,-9],[-24,20],[-36,-7],[-24,16],[51,60],[2,36],[-1,27],[26,80],[26,44],[67,62],[30,9],[21,-3],[17,6],[-18,24],[-18,11],[-35,-2],[-36,36],[-3,38],[70,240],[1,22],[-11,58],[-3,57],[-51,33],[-22,4],[-64,64],[-26,33],[-10,-10],[-2,-51],[-9,-12],[-17,-10],[-9,59],[-14,42],[-42,44],[-16,23],[8,52],[-4,4]],[[84544,74886],[7,58],[26,45],[64,79],[17,37],[33,44],[14,-1],[16,4],[4,19],[4,15],[13,13],[31,25],[36,31],[28,9],[35,48],[14,21],[15,0],[3,10],[9,24],[11,16],[15,3],[25,12],[32,7],[22,40],[7,29],[14,31],[31,34],[20,51],[24,55],[11,18],[10,3],[7,21],[7,59],[11,56],[6,27],[27,30],[7,14],[6,5],[12,-4],[16,17],[16,19],[14,-7],[15,-15],[15,-32],[7,-25],[12,-21],[2,-30],[12,-14],[25,-6],[42,-21],[27,-1],[15,-16],[32,-8],[64,12],[26,-7],[11,-19],[17,-16],[10,-1],[14,27],[16,42],[10,32],[-1,26],[-9,28],[-21,25],[-14,40],[-13,41],[-8,14],[-6,20],[-1,30],[4,21],[32,14],[41,8],[33,-9],[56,6],[34,12],[25,-2],[23,0],[11,18],[32,42],[16,15],[17,29],[3,30],[3,24],[10,26],[17,32],[14,15],[16,-2],[17,-15],[11,-14],[12,4],[10,25],[7,5],[19,2],[6,16],[8,74],[7,59],[2,40],[17,68],[6,41],[10,19],[12,-1],[10,-12],[12,-7],[17,6],[12,-10],[7,-22],[25,-15],[2,-11],[0,-74],[13,-34],[18,-31],[25,-29],[14,-6],[8,-20]],[[86301,76210],[-14,-16],[-19,10],[-31,6],[-39,-51],[-22,-17],[-16,-50],[-31,-30],[-17,-31],[-22,-54],[-14,-53],[-33,-54],[-20,-67],[-1,-58],[21,-59],[2,-51],[-15,-104],[9,-110],[-10,-43],[-102,-76],[-26,-37],[-38,-98],[-46,-36],[-28,-40],[-39,-24],[-26,-69],[-27,-39],[-33,-24],[-25,-30],[-55,-2],[-39,-21],[-27,-58],[-83,-66],[-12,-49],[6,-77],[0,-58],[-7,-49],[-18,14],[-10,-16],[-11,-44],[4,-51],[28,-17],[23,-20],[33,-11],[24,-24],[52,-107],[42,-47],[11,-17],[24,-24],[22,-37],[13,-33]],[[84695,74617],[-16,-17],[0,30],[12,25],[12,3],[-8,-41]],[[52027,54388],[-26,-18],[-18,4],[24,77],[12,-17],[16,-7],[-8,-39]],[[53779,59737],[44,-124],[47,-133],[36,-104]],[[53906,59376],[27,-268],[3,-51],[2,-23],[2,-21],[3,-37],[21,-16],[40,-7],[29,-26],[17,-44],[1,-7],[9,-34],[3,-24],[-3,-71],[-6,-90],[-10,-58],[6,-79],[-2,-34],[-4,-23],[-18,-27],[-24,-26],[-57,-76],[-17,-12],[-24,-2],[-21,-19],[-25,-41],[-53,-154],[-46,-154],[-16,-128],[-17,-122],[-40,-78],[-6,-44],[-2,-25],[-1,-59],[-5,-97],[-6,-47],[-7,-14],[-43,-30],[-25,-35],[-15,-71],[-5,-77],[-9,-87],[-5,-76],[-7,-40],[-14,-42],[-22,-44],[-19,-26],[-50,-16],[-26,-101],[-21,-79],[-1,-32],[-21,-164],[-36,-124],[-3,-44],[0,-35],[-45,-109],[-12,-32],[-12,-42],[12,-41],[12,-37],[2,-12],[-20,-35],[-36,-60],[-22,-36],[-5,-20],[-3,-90],[-6,-25],[-14,-33],[-21,-37],[-22,-28],[-24,-20],[-23,-7],[-13,12],[-8,27],[-13,111],[-7,24],[-15,21],[-30,61],[-30,61],[-36,43],[-8,-3],[-6,-12],[-11,-61],[-10,-23],[-19,-8],[-33,0],[-25,8],[-5,13],[-5,26],[-7,22],[-29,-43],[-46,-68],[-15,-12],[-11,-13],[-15,-64],[-18,-68],[-24,-35],[-23,-30],[-14,-26],[-19,-31],[-37,-77],[-50,-102],[-17,-53],[-18,-78],[-10,-87],[-11,-96],[-16,-153],[-24,-87],[-20,-69],[-16,-54],[-8,-45]],[[52376,54582],[-3,1],[-8,-19],[-23,13],[-11,39],[-14,6],[-25,57],[-5,-9],[26,-145],[-10,-57],[-73,-1],[-64,-19],[-43,1],[-22,21],[-10,54],[-3,-5],[-3,-30],[-13,-22],[-49,-5],[-22,37],[-17,42],[-19,18],[3,-17],[22,-41],[-3,-58],[-39,-67],[-25,-4],[-16,29],[-8,47],[-4,70],[-10,46],[-6,0],[5,-42],[2,-34],[0,-71],[19,-55],[-29,-17],[-11,-1],[-23,-1],[-4,20],[-5,46],[-6,12],[-7,-78],[-15,-5],[-10,1],[-46,-17],[-10,3],[-2,14],[6,22],[-2,35],[-15,-27],[-3,-54],[-9,-8],[-27,7],[-29,28],[-18,28],[-30,39],[-58,111],[-10,49],[-17,61],[-12,62],[-18,105],[5,8],[14,-9],[7,15],[-25,12],[-5,12],[-1,37],[1,45],[19,16],[18,8],[8,27],[5,28],[-45,-42],[-43,47],[-9,29],[4,22],[21,3],[29,-1],[17,21],[-10,8],[-19,-1],[-7,14],[0,34],[-6,-7],[-8,-31],[-29,-22],[-16,22],[-2,50],[-4,23],[-14,17],[-50,132],[-63,110],[-57,76],[-84,36],[-178,-2],[-10,11],[11,17],[16,12],[57,61],[-10,8],[-59,-38],[-21,-4],[-26,-74],[-156,-12],[-19,-3]],[[50751,55512],[1,33],[7,97],[5,38],[6,29],[-6,34],[-6,47],[-3,74],[8,22],[2,28],[-1,43],[0,145],[4,16],[5,12],[0,20],[-9,37],[-9,43],[0,61],[-3,60],[-6,27],[4,102],[3,128],[-3,57],[6,40],[3,100],[0,97],[11,153],[35,7],[40,13],[19,60],[10,77],[-3,75],[8,25],[16,41],[29,58],[-1,64],[8,20],[14,15],[20,8],[23,32],[12,56],[12,89],[-19,63],[0,13],[8,34],[11,34],[10,10],[22,-8],[3,3],[4,10],[14,99],[-2,27],[-20,66],[-3,47],[-3,70],[-5,62],[-6,23],[-11,20],[-5,13],[-42,126],[1,60],[18,76],[11,37]],[[50998,58580],[16,21],[3,17],[-4,22],[-8,16],[-2,34],[2,23],[6,25],[-2,53],[0,80],[3,118],[0,71],[35,53],[49,89],[25,91],[14,70],[17,232],[12,14],[14,11],[50,84],[38,31],[29,18],[44,16],[28,-6],[49,-4],[40,8],[33,46],[15,13],[21,8],[96,-62],[96,-59],[18,6],[14,-8],[24,-32],[36,-68],[21,-44],[10,-26],[50,-148],[18,-37],[18,-20],[19,-7],[15,2],[13,17],[19,33],[28,15],[23,-3],[120,133],[12,1],[34,-10],[39,-18],[100,-134],[82,-87],[58,-29],[67,-21],[116,-6],[87,187],[32,41],[39,37],[12,6],[68,28],[135,24],[125,-10],[25,-8],[54,-24],[82,-61],[36,-59],[55,-9],[40,11],[14,58],[40,76],[29,31],[31,40],[49,49],[40,22],[37,57],[28,17],[50,2]],[[50998,58580],[-17,53],[-23,37],[-25,16],[-17,27],[-9,37],[-33,73],[-75,144],[-8,3],[-12,6],[-22,-17],[-13,-24],[-9,-9],[-14,-1],[-36,-19],[-28,-23],[-1,-19],[14,-109],[-7,-59]],[[50663,58696],[-13,28],[-41,110],[-29,81],[-5,18],[-4,28],[3,12],[11,9],[27,11],[5,8],[1,23],[-4,41],[-15,57],[-15,37],[-8,7],[-16,2],[-17,-5],[-32,-46],[-14,-9],[-33,4],[-30,9],[-18,24],[-53,91],[-59,96],[-25,13],[-5,10],[-4,74],[1,89],[3,23],[25,-14],[26,-6],[8,16],[-21,32],[-30,32],[-11,48],[-9,17],[-13,17],[-16,9],[-15,14],[-11,14],[-17,6],[-19,10],[-26,79],[-26,76],[-16,60],[-5,36],[8,62],[-8,24],[-29,62],[-24,59],[6,89],[5,75],[0,47],[4,27]],[[50060,60432],[3,30],[16,10],[41,-1],[79,-14],[64,16],[3,3],[45,80],[50,84],[74,8],[81,9],[64,4],[92,7],[75,5],[86,7],[3,38],[5,10],[9,1],[63,-21],[60,-20],[4,73],[53,92],[30,18],[7,16],[9,31],[6,48],[3,34],[11,28],[8,52],[11,90],[29,95],[17,129],[3,125],[3,95],[9,19],[0,168],[-1,170],[0,143],[0,178],[-1,156],[0,169],[0,152],[0,101]],[[51174,62870],[60,24],[63,25],[92,36],[99,39],[108,43],[25,26],[81,146],[37,66],[74,130],[56,101],[72,128],[76,129],[61,103],[95,117],[144,176],[144,176],[144,175],[143,176],[144,176],[144,176],[144,176],[144,176]],[[53324,65390],[145,-67],[137,-64],[138,-64],[33,-35],[73,-125],[94,-160],[4,-3],[4,0],[91,94],[117,123]],[[54160,65089],[31,-333],[23,-285],[2,-183],[1,-47],[9,-32],[22,-33],[87,-263],[-19,-46],[13,-81],[23,-35],[72,-157],[10,-31],[-4,-25],[-51,-185],[-9,-45],[-10,-235],[-7,-167],[-10,-228],[-11,-273],[-10,-230],[-12,-304],[-12,-289],[-73,-158],[-129,-280],[-105,-229],[-53,-153],[-103,-298],[-46,-194],[-36,-100],[-18,-44],[16,-141],[28,-248]],[[26900,60479],[-7,-21],[-9,-14],[-18,-69],[-6,-6],[-1,51],[-10,7],[-13,-18],[-7,-26],[11,-35],[10,0],[11,-9],[31,-236],[-7,-42],[-19,-65],[-18,-56],[-18,-35],[-23,-148],[-20,-241],[14,-217],[-7,-200],[6,-48],[2,-59],[-15,-10],[-8,1],[-9,37],[1,31],[9,38],[4,50],[-5,27],[-9,-58],[-15,-26],[-10,-9],[-10,-29],[10,-55],[14,-40],[4,-29],[-5,-34],[-3,-117],[-5,3],[-5,16],[-14,1],[-2,-47],[1,-26],[-12,-21],[-4,-20],[10,-14],[11,-9],[13,2],[12,-58],[3,-47],[-26,-44],[-9,-36],[-14,-43],[-8,-43],[-3,-31],[10,-98],[18,-69],[15,-44],[20,-10]],[[26766,58131],[-5,-46],[-15,-29],[-27,-25],[-30,-4],[-49,23],[-20,3],[-8,12],[-3,23],[-14,34],[-25,45],[-15,-3],[-24,10],[-41,31],[-18,4],[-27,-27],[-31,-34],[-75,54],[-53,38],[-47,35],[-13,13],[-10,-3],[-9,-18],[-10,-32],[-4,-9],[-5,-9],[-6,-2]],[[26182,58215],[0,15],[-24,64],[-36,76],[-141,234],[-52,140],[-28,101],[-27,53],[-76,107],[-17,43],[-76,143],[-57,85],[-1,35],[24,45],[11,-2],[13,-32],[20,-36],[10,-1],[14,17],[0,17]],[[25739,59319],[78,7],[13,10],[14,26],[8,37],[1,35],[3,26],[12,25],[23,7],[17,3],[5,17],[-5,54],[-9,131],[-2,37],[3,27],[7,10],[34,6],[65,-11],[13,9],[26,74],[24,55],[17,25],[14,7],[15,-49],[55,-69],[9,4],[6,4],[1,10],[0,32],[13,29],[29,26],[28,47],[29,66],[25,39],[21,12],[8,18],[-5,24],[1,35],[9,46],[12,26],[16,7],[6,14],[-3,22],[3,23],[15,39],[34,33],[20,-12],[17,-44],[23,-30],[30,-16],[23,6],[17,28],[15,8],[13,-11],[7,6],[1,24],[7,5],[13,-13],[12,-3],[10,6],[4,12],[2,11],[7,9],[26,-9],[29,14],[33,35],[21,16],[11,-4],[12,18],[15,40],[34,18],[71,-9]],[[98087,28064],[32,-3],[29,43],[31,34],[32,28],[49,66],[12,9],[32,13],[14,15],[15,4],[-14,-39],[-17,-13],[-3,-14],[10,-22],[-15,-31],[0,-39],[-18,-46],[28,18],[10,30],[-5,17],[12,34],[18,16],[-7,25],[0,20],[23,-7],[11,0],[9,8],[16,4],[4,-23],[21,3],[-8,-28],[-16,-33],[-4,-20],[-27,-33],[-18,-14],[28,-4],[40,44],[24,39],[-1,-48],[-19,-44],[-17,-28],[-19,-8],[-18,-23],[-9,-36],[1,-25],[5,-19],[19,-32],[-21,-63],[24,8],[13,-12],[18,-36],[-11,-42],[-8,-22],[-47,-88],[-20,-44],[-24,-29],[1,-47],[-14,-34],[-70,-117],[-12,-25],[-55,-186],[-35,-78],[-20,-27],[-21,-22],[-51,-36],[-23,-43],[-25,-35],[-26,-8],[1,-15],[17,-9],[13,-23],[-10,-26],[-19,-16],[-19,-5],[-10,-17],[46,12],[13,-13],[3,-29],[5,-26],[11,-34],[39,-21],[35,-10],[7,-16],[5,-54],[-6,-27],[-8,-18],[-12,-6],[-28,-3],[-29,12],[-19,33],[-54,-11],[-15,-7],[-7,6],[30,35],[-16,19],[-13,8],[-14,-12],[-9,-18],[-3,-30],[-10,-17],[-15,-5],[-21,25],[-21,35],[-30,36],[4,-22],[24,-54],[12,-36],[-28,-29],[-28,-22],[-25,-13],[-22,-20],[-27,-32],[-15,-11],[-39,-1],[-21,-10],[-7,-42],[-15,-27],[-34,-5],[12,-8],[8,-14],[-23,-126],[-5,-53],[-4,-89],[-14,-83],[-41,0],[6,-15],[31,-23],[-6,-36],[-34,-64],[-14,-38],[-14,-90],[-20,-84],[-32,-95],[0,-17],[11,-24],[13,-21],[1,-30],[-4,-16],[-15,-4],[-13,-10],[-71,-26],[-24,-29],[-19,-53],[-22,-45],[-74,-100],[-44,-83],[-9,-24],[-12,-18],[-95,-39],[-68,-6],[-37,10],[-36,20],[-19,7],[-38,-12],[-16,-14],[-30,13],[-23,-10],[-7,10],[-9,25],[5,32],[-6,24],[-15,17],[-10,19],[-12,13],[-31,6],[-49,-9],[-16,1],[-34,80],[-11,20],[-39,25],[-14,-3],[-21,-43],[-13,-7],[-74,-5],[-75,14],[-28,16],[-5,37],[57,102],[-17,-14],[-35,-41],[-22,6],[21,45],[2,20],[-4,23],[-30,-38],[-33,-5],[-4,35],[3,41],[7,11],[89,22],[33,14],[14,22],[-54,7],[-3,31],[7,25],[46,41],[-33,-11],[-38,4],[3,43],[9,34],[40,1],[-13,23],[-1,33],[11,2],[39,-44],[29,-16],[-12,33],[2,21],[7,9],[24,7],[-7,6],[-22,8],[-26,25],[-3,26],[1,31],[28,42],[17,-25],[20,7],[-15,19],[-9,30],[6,19],[60,78],[15,-75],[4,25],[1,24],[-7,20],[1,21],[7,18],[25,17],[34,58],[25,26],[20,-17],[13,-23],[-2,23],[-9,19],[-3,53],[45,81],[49,78],[48,82],[25,29],[54,34],[34,-14],[9,3],[51,58],[21,16],[19,-21],[12,-8],[-12,54],[10,24],[42,44],[54,45],[40,19],[30,30],[18,1],[-3,23],[3,22],[16,-2],[5,9],[-14,12],[44,44],[24,48],[13,11],[11,14],[14,34],[17,11],[15,-5],[11,-17],[-6,28],[-20,15],[22,24],[22,16],[21,-12],[21,-19],[-21,30],[-3,18],[25,21],[14,6],[19,-39],[-2,31],[4,28],[28,45],[36,75],[11,-26],[2,-31],[-2,-39],[8,14],[2,34],[-5,61],[45,113],[8,12],[10,8],[16,3],[-5,17],[-12,17],[12,57],[8,65],[10,63],[17,62],[18,102],[14,22],[38,7],[16,15],[28,37],[32,67],[18,54],[23,140],[13,147],[37,108],[54,79],[48,60],[19,12],[33,4],[32,-17],[-59,-14],[-6,-36],[-2,-35],[7,-33],[11,-28],[28,-27],[33,-16],[15,-61],[3,-72],[5,-62],[13,-54]],[[98309,28304],[-38,-34],[2,23],[7,51],[17,26],[8,1],[17,20],[-1,-43],[-12,-44]],[[96317,25543],[-1,-28],[-3,-14],[-10,0],[-14,3],[-14,13],[-10,-4],[-7,5],[10,32],[33,17],[12,-14],[4,-10]],[[96382,25818],[12,-70],[-25,14],[-11,20],[20,35],[4,1]],[[96706,24848],[0,-23],[-29,9],[1,-26],[23,-14],[8,-18],[24,5],[5,-28],[-5,-24],[-16,-19],[-47,-9],[-31,-36],[-26,6],[-7,-3],[-30,-39],[-34,-12],[-9,3],[5,34],[25,33],[0,31],[7,25],[24,18],[0,33],[16,29],[-10,63],[6,56],[47,3],[53,-97]],[[98761,30944],[2,-31],[-21,11],[-8,24],[-24,24],[-4,8],[-2,48],[12,23],[2,10],[6,4],[10,-26],[19,-36],[8,-59]],[[98129,31719],[5,-26],[15,18],[11,30],[19,30],[-3,-48],[10,-11],[61,-34],[13,-28],[13,-8],[7,16],[9,8],[22,-18],[50,-49],[4,-17],[-2,-25],[2,-27],[7,-21],[17,-5],[22,31],[10,4],[15,-45],[6,-25],[-3,1],[10,-25],[12,-25],[22,-74],[-3,-26],[-6,-23],[20,-68],[-13,-5],[-40,12],[1,-14],[23,-50],[20,-70],[15,-43],[55,-132],[-8,-47],[1,-31],[-7,-26],[19,-70],[-12,-22],[-8,-72],[-8,-12],[1,-26],[22,-7],[13,-11],[12,-21],[7,25],[10,7],[26,-34],[55,-34],[15,-13],[8,-27],[5,-67],[11,-29],[21,-6],[23,9],[7,25],[-5,65],[-16,104],[0,34],[2,33],[-3,34],[-9,32],[-8,24],[-12,21],[4,32],[17,14],[10,-27],[9,-32],[42,-97],[26,7],[2,-40],[17,-41],[10,-47],[12,-143],[19,-133],[35,-59],[4,-28],[-21,15],[-7,-9],[2,-14],[20,-25],[23,-13],[14,2],[14,-9],[90,-87],[43,-34],[109,-56],[31,-4],[17,2],[33,19],[29,34],[25,52],[22,59],[23,28],[27,23],[14,21],[14,15],[73,-7],[25,-30],[32,-24],[16,-18],[-5,-38],[-19,-56],[-15,-61],[-13,-138],[-9,-141],[-13,-61],[-24,-48],[-27,-34],[-30,-17],[-12,-79],[-6,-93],[1,-24],[10,-18],[4,-28],[-16,-56],[-9,8],[-13,47],[-12,19],[-36,15],[-37,7],[-32,-5],[-31,-19],[-47,-41],[-14,-21],[-13,-25],[-21,-58],[-5,-71],[1,-38],[7,-28],[40,-40],[-39,-136],[-35,-143],[-20,-40],[-23,-38],[-21,-85],[-38,-74],[-25,-56],[-20,-59],[-17,-62],[-37,-88],[-16,-58],[-22,-48],[-40,-61],[-42,-53],[-67,-73],[-18,-24],[-20,-18],[-24,21],[-5,23],[-6,50],[-5,18],[-31,15],[-41,-24],[-7,5],[-2,11],[0,73],[7,20],[-9,12],[-10,-5],[-3,-18],[6,-16],[-23,-20],[-25,-1],[-7,8],[-2,13],[6,22],[8,20],[45,91],[47,122],[40,130],[11,67],[15,125],[-12,51],[-16,49],[-40,94],[-55,53],[-35,7],[-33,20],[-31,45],[-29,53],[-56,43],[-60,34],[-34,48],[-8,29],[-5,33],[0,30],[5,32],[6,24],[11,17],[63,62],[67,35],[12,-1],[12,6],[17,21],[30,48],[8,33],[6,104],[10,102],[17,116],[26,73],[9,44],[-11,73],[10,27],[12,17],[13,9],[-23,69],[-26,104],[-6,32],[4,32],[7,31],[-17,8],[-10,30],[-24,101],[7,16],[14,-11],[20,-73],[4,38],[16,23],[16,12],[18,2],[-40,82],[-14,-4],[-18,-12],[-19,-8],[-18,7],[-17,18],[-8,34],[-11,66],[-7,24],[-53,135],[16,4],[43,-67],[8,21],[7,31],[-3,35],[-10,26],[-15,17],[-1,30],[12,28],[-1,20],[-24,40],[-10,4],[-5,-18],[7,-28],[-6,-3],[-61,73],[-18,58],[-15,65],[-2,-26],[2,-37],[24,-74],[39,-82],[7,-22],[-6,-29],[-14,-8],[-11,18],[-18,71],[-13,35],[-148,365],[19,48],[29,41],[7,18],[5,22],[-13,3],[-11,-10],[-13,-18],[-11,-22],[-15,-47],[-7,-11],[-17,33],[-7,20],[0,24],[-4,16],[-13,5],[-19,48],[-12,24],[20,47],[1,62],[-21,65],[-24,60],[-47,96],[-43,102],[47,13],[47,2],[-22,-61],[10,-35],[15,-30],[32,-91],[3,-27],[16,-26],[8,-21]],[[96993,21602],[15,-29],[-29,-13],[-14,11],[-10,13],[-5,19],[15,-2],[14,8],[14,-7]],[[96172,22602],[6,-48],[-16,-1],[-32,14],[-9,21],[-7,5],[-12,-24],[-18,-1],[-5,8],[8,25],[44,49],[8,61],[-1,19],[35,5],[8,-7],[3,-9],[-2,-11],[-14,-20],[0,-23],[3,-24],[-11,-12],[6,-21],[6,-6]],[[1062,26647],[-10,-15],[-17,1],[-30,-59],[2,44],[-9,17],[-26,-4],[-4,-10],[17,-12],[4,-6],[-17,-25],[17,-55],[15,2],[14,-43],[0,-13],[-33,-16],[-17,-23],[-16,1],[-7,4],[-9,41],[0,17],[19,31],[11,30],[-9,28],[-22,19],[-48,-9],[-11,6],[24,39],[26,-5],[28,28],[108,-13]],[[1062,26312],[-12,-5],[1,33],[-4,21],[21,7],[9,-26],[-15,-30]],[[2089,46900],[-1,-1],[-1,6],[-2,7],[-1,7],[0,1],[3,-6],[2,-7],[0,-7]],[[2448,46454],[0,-2],[-2,3],[-2,5],[-1,6],[1,1],[2,-4],[1,-4],[1,-5]],[[2832,40850],[-28,-31],[-12,37],[11,48],[13,12],[8,2],[11,-45],[-3,-23]],[[5628,39602],[-9,0],[-12,4],[-7,3],[-1,5],[3,16],[6,9],[12,-2],[8,-11],[1,-19],[-1,-5]],[[51664,81077],[-28,1],[-26,1],[-14,3],[-15,9],[-7,18],[-8,21],[2,14],[25,37],[4,11],[-3,5],[3,17],[19,56],[2,23],[-8,16],[-13,9],[-40,17],[-19,23],[-8,21],[-9,6],[-13,-7],[-33,-8],[-27,11],[-32,39],[-7,35],[-4,26],[-8,10],[-11,-14],[-13,-22],[-27,-2],[-7,5],[-2,12],[-1,11],[-8,14],[-7,8],[-34,-40],[-13,1],[-16,15],[-8,15],[-17,-9],[-16,-18],[6,-35],[-9,-6],[-19,3],[-22,14]],[[51173,81443],[-24,9],[-37,24],[-51,-20],[-36,24],[-29,2],[-19,19],[-19,31],[14,21],[13,7],[54,4],[40,-13],[71,-68],[18,1],[19,8],[-10,19],[-18,9],[-26,18],[-21,26],[49,8],[-7,13],[-6,23],[-52,79],[9,22],[13,46],[16,38],[13,10],[22,27],[46,80],[30,65],[22,76],[32,212],[10,36],[15,40],[20,-8],[13,-11],[48,30],[83,78],[24,68],[24,31],[95,62],[52,18],[81,5],[59,11],[70,4],[27,-38],[15,-28],[25,-15],[39,-11]],[[51999,82535],[-3,-55],[1,-108],[-3,-19],[-18,-46],[-18,-81],[-5,-54],[-5,-11],[-74,1],[-10,-10],[-2,-11],[4,-14],[-2,-14],[-6,-11],[3,-18],[13,-20],[23,-13],[25,-1],[13,2],[9,-14],[10,-22],[-1,-29],[-4,-37],[-11,-35],[-34,-40],[-16,-14],[-14,-8],[-7,-10],[-3,-14],[1,-12],[24,-32],[-1,-7],[-7,-17],[-9,-16],[-62,-33],[-26,3],[-14,-16],[-5,-4],[-16,16],[-37,17],[-13,-6],[-8,-10],[-23,-11],[-16,-18],[0,-23],[29,-60],[10,-12],[0,-23],[14,-28],[15,-35],[1,-22],[-1,-23],[-8,-32],[-25,-75],[0,-15],[2,-11],[9,-3],[6,-6],[-2,-10],[-47,-52],[-6,-9],[-19,3],[-3,-9],[2,-14],[8,-13],[17,-6],[14,-13],[12,-26],[-16,-89]],[[51173,81443],[-4,-22],[-10,-24],[-37,-34],[-39,-23],[-19,3],[-14,12],[-7,12],[-21,12],[-28,6],[-18,-13],[-12,-12],[-11,2],[-8,10],[-7,16],[-8,50]],[[50930,81438],[21,9],[46,4],[35,-18],[46,-8],[36,24],[28,-21],[31,15]],[[51759,82667],[-39,-20],[-10,4],[3,6],[34,12],[12,-2]],[[51647,82637],[-55,-9],[-19,7],[-3,6],[15,4],[47,1],[14,-6],[1,-3]],[[51419,82550],[-52,-42],[-4,6],[33,37],[23,-1]],[[51479,82595],[-26,-5],[-12,8],[63,23],[39,7],[7,-3],[-71,-30]],[[51357,82413],[-28,-41],[-17,12],[-4,9],[8,32],[41,53],[0,-65]],[[51096,81646],[28,-31],[5,-10],[2,-11],[-34,-12],[-37,38],[-24,-9],[-9,18],[0,12],[25,9],[44,-4]],[[51870,82708],[-25,-2],[7,15],[24,12],[13,0],[-19,-25]],[[31054,58838],[-14,-64],[-8,28],[-1,52],[-6,20],[-11,12],[-6,17],[0,26],[42,-41],[4,-50]],[[32517,61921],[-7,-12],[-6,1],[-4,11],[0,20],[5,-6],[3,-2],[1,-4],[8,-8]],[[32435,61994],[-2,-2],[-4,5],[1,10],[3,4],[2,-3],[2,-7],[-2,-7]],[[30583,59015],[1,-16],[-13,9],[-17,35],[-17,27],[4,29],[4,10],[18,-27],[17,-50],[3,-17]],[[30902,58789],[-14,-8],[-54,56],[-44,90],[-1,47],[11,-4],[12,-18],[17,-64],[52,-42],[21,-57]],[[74474,67897],[11,-16],[2,-25],[-2,-29],[-12,-61],[-10,-44],[-13,-91],[-11,-158],[3,-28],[33,-91],[12,-69],[2,-48],[-14,-80],[-16,-90],[-8,-20],[-9,-7],[-40,31],[-28,-4],[-32,-18],[-34,4],[-27,10],[-35,-36],[-34,20],[-21,22],[-15,63],[-6,8],[-70,-66],[-17,-4],[-44,35],[-36,35],[-13,10],[-35,14],[-31,8],[-34,22],[-42,-29],[-17,3],[-16,20],[-8,42],[-2,40],[-15,27],[-22,6],[-31,-24],[-45,-33],[-15,6],[-13,9],[-5,9],[-7,37],[-7,9],[-10,1],[-19,9],[-23,27],[-70,66],[-9,29],[0,65],[-3,27],[-9,28],[-36,28],[-70,46],[-38,37],[-19,-17],[-35,-16],[-19,-33],[-23,11],[-54,34],[-29,6],[-18,-12],[-4,-20],[-22,-23],[-21,18],[-41,25],[-37,13],[-55,30],[-6,44],[-10,45],[-13,7],[-50,-8],[-45,48],[-49,63],[-21,20],[-13,8],[-12,-8],[-14,-15],[-12,-4],[-26,27],[-34,38],[-42,47],[-48,66],[-20,37],[-9,28],[-11,27],[-42,43],[-34,34],[-40,41],[-7,8],[-15,24],[-23,31],[-20,9],[-6,-17],[-4,-18],[-17,4],[-26,32],[-28,32],[-21,31],[-22,31],[-5,23],[9,71],[13,62],[11,13],[17,41],[7,71],[-1,61],[18,85],[23,91],[41,98],[18,32],[20,22],[37,72],[8,12],[17,19],[16,4],[12,-9]],[[72502,69218],[13,-37],[15,-36],[18,2],[22,30],[45,141],[63,29],[59,-15],[52,-20],[16,-47],[10,-50],[6,-25],[17,-29],[74,-71],[43,-64],[59,-85],[45,-37],[39,-3],[22,-34],[33,-66],[29,-77],[35,-71],[24,3],[33,23],[41,30],[24,-15],[22,-20],[7,-36],[13,-69],[15,-72],[23,-25],[28,-37],[15,-30],[51,-53],[8,-22],[10,-15],[13,-10],[10,-11],[16,-3],[60,32],[15,-4],[10,-6],[0,-12],[-11,-50],[-9,-65],[9,-32],[25,-14],[55,-9],[75,0],[22,-32],[23,-49],[22,-84],[9,-36],[12,-10],[19,14],[3,35],[1,51],[16,18],[11,-14],[12,-40],[30,-36],[23,-17],[21,6],[9,14],[10,70],[17,10],[21,-5],[8,-14],[9,-28],[25,-13],[26,-18],[24,-22],[33,-52],[42,-10],[48,1],[25,-1],[19,-4],[17,4],[49,37],[20,3],[25,-5],[24,-7]],[[96376,51545],[-5,-20],[-6,3],[-3,13],[2,14],[7,6],[5,-5],[0,-11]],[[57016,41593],[-12,3],[-85,-19],[-33,-25],[-73,-108],[-15,14],[-17,22],[-15,7],[-32,-27],[-32,-31],[-35,-44],[-29,-43],[-10,-23],[-45,-89],[-15,-15],[-13,-6],[-5,4],[-6,38],[-28,90],[-45,117],[-13,12],[-9,4],[-33,-6],[-96,-33],[-82,-28],[-124,-47],[-134,-39],[-83,-24],[-71,-7],[0,-116],[0,-235],[0,-235],[0,-235],[0,-235],[1,-235],[0,-235],[0,-235],[0,-235],[0,-102],[-2,-22],[-41,0],[-94,0],[-78,0],[-63,0],[0,-140],[0,-165],[0,-165],[0,-165],[0,-165],[0,-165],[0,-166],[0,-165],[0,-165],[1,-124],[0,-15]],[[54568,35358],[-31,47],[-91,175],[-32,46],[-48,107],[-105,334],[-15,64],[-20,161],[-23,120],[-3,69],[11,39],[-6,53],[-12,47],[-36,62],[-10,208],[-24,134],[5,110],[-11,101],[-1,65],[5,123],[-19,141],[-39,138],[-35,199],[-5,88],[3,235],[-6,95],[0,113],[-14,117],[-6,63],[10,51],[6,-16],[10,-8],[7,67],[1,59],[-17,146],[-39,149],[-97,244],[-24,92],[-13,77],[-108,321],[-46,226],[-33,196],[-35,90],[-162,634],[-36,101],[-65,121],[-15,41],[-25,115],[-48,155],[-12,144],[-4,164],[6,125]],[[53261,41906],[45,14],[31,33],[28,2],[27,-26],[29,-2],[12,4],[52,-3],[30,30],[36,30],[20,26],[29,27],[39,28],[21,-3],[27,-10],[36,-10],[20,-19],[24,-58],[36,-53],[28,-32],[31,-42],[9,-16],[14,-9],[8,-3],[58,7],[53,6],[56,0],[106,-1],[107,0],[106,0],[106,-1],[106,0],[107,0],[106,-1],[106,0],[44,0],[76,-2],[80,-2],[8,-3],[9,-12],[8,-10],[28,-73],[36,-77],[30,-36],[36,-22],[33,-8],[32,5],[52,-9],[73,-25],[76,-8],[78,11],[55,-14],[32,-38],[33,-25],[33,-13],[45,8],[57,28],[49,-4],[22,-21],[14,0],[83,30],[68,25],[101,39],[83,32],[123,47],[87,34]],[[59222,43770],[12,-17],[40,-142],[32,-83],[37,-77],[6,4],[10,18],[19,7],[57,18],[23,1],[14,20],[30,15],[34,9],[12,-10],[36,-99],[5,-77],[8,-110],[2,-54],[-1,-72],[-4,-90],[-29,-104],[-6,-51],[-16,-80],[-21,-39],[-10,-33],[1,-33],[11,-28],[24,-51],[8,-32],[-2,-29],[0,-40],[6,-27],[6,-16],[25,-26],[23,-65],[41,-78],[48,-111],[23,-34],[18,-8],[9,-38],[-5,-43],[-14,-25],[6,-35],[7,-19],[9,-9],[22,-2],[19,7],[5,12],[-2,167],[-15,97],[-14,38],[-3,7],[5,32],[16,75],[14,74],[8,31],[10,19],[67,20],[31,17],[12,21],[10,58],[8,160],[3,151],[-7,88],[10,133],[15,82],[-8,17],[-5,111],[-44,118],[-56,152],[-31,82],[-36,94],[-65,146],[-29,52],[-16,21],[-52,17],[-14,28],[-14,45],[-5,83],[0,62],[-6,105],[-11,149],[-5,44],[-15,112],[-14,107],[-1,26],[5,26],[24,79],[18,55],[8,31],[14,83],[4,40],[11,18],[46,8],[37,-2]],[[61239,45815],[15,-60],[26,-54],[-15,-31],[-19,-28],[30,-38],[-22,-57],[-3,-40],[6,-15],[5,-24],[-15,-65],[-20,-50],[-5,-38],[18,-68],[-9,-119],[17,-108],[4,-55],[6,-37],[-8,-67],[2,-111],[4,-46],[-10,-57],[17,-20],[9,-63],[-3,-71],[-5,-38],[-29,-46],[-4,-18],[1,-27],[36,-1],[2,-42],[-3,-33],[2,-63],[-5,-40],[8,-46],[-10,-51],[4,-40],[0,-51],[9,-130],[1,-160],[2,-25],[13,-18],[18,-9],[0,-44],[-21,-58],[-1,-35],[3,-50],[22,68],[14,-1],[12,-26],[-2,-39],[4,-20],[-2,-38],[7,-48],[-3,-42],[-16,-29],[-21,-50],[-4,-48],[2,-30],[-14,-10],[-7,-19],[10,-45],[-1,-39],[-25,-123],[-68,-167],[-30,-59],[-27,-65],[0,-27],[-3,-23],[-32,-92],[-34,-15],[-20,-25],[15,-81],[-22,-19],[-39,-64],[-106,-122],[-17,-29],[-27,-75],[-35,-19],[-20,-21],[-36,-8],[-12,6],[-12,-3],[-10,-16],[-70,-53],[-66,-42],[-16,-19],[-11,-26],[-58,-41],[-91,-103],[-74,-97],[-54,-98],[-14,-15],[-17,-33],[-5,-50],[-6,-28],[-40,-103],[-60,-121],[-11,-34],[-24,-67],[-2,-44],[-22,-14],[-18,42],[-7,-81],[-15,-6],[-16,17],[-40,-41],[-35,-46],[-56,-98],[-80,-191],[-116,-183],[-16,-5],[-10,0],[-37,64],[-20,5],[18,-38],[12,-32],[-3,-61],[1,-93],[-14,-181],[2,-40],[16,-51],[31,-62],[30,-79],[37,-224],[3,-115],[39,-147],[1,-64],[16,-159],[-1,-128],[-3,-79],[19,-33],[7,30],[-2,50],[5,80],[10,35],[11,-5],[3,-38],[7,-33],[3,-31],[0,-43],[-14,-162],[4,-66],[19,-110],[-22,-128],[-33,-301],[-1,-52],[7,-23],[18,-7],[6,38],[11,0],[5,-23],[-14,-139],[-15,-61],[-51,-149],[-27,-64],[-46,-63],[-106,-98],[-215,-142],[-85,-70],[-50,-42],[-108,-132],[-47,-88],[-19,-102],[-19,-47],[-18,-59],[16,-50],[16,-39],[18,-25],[10,-22],[12,-16],[13,80],[6,25],[11,2],[-6,-98],[-13,-333],[-1,-11]],[[59622,44922],[-5,17],[-9,8],[-10,-7],[-4,-21],[11,-27],[12,0],[5,30]],[[59644,44866],[7,13],[3,17],[0,16],[-5,11],[-7,6],[-9,-4],[-4,-22],[-1,-31],[6,-10],[10,4]],[[49383,72064],[8,-43],[16,-34],[59,-78],[35,-48],[1,-17],[-12,-39],[-4,-27],[9,-29],[21,-35],[2,-17],[-5,-20],[-11,-37],[23,-111],[4,-107],[-6,-76],[0,-44],[3,-37],[20,-87],[-13,-143],[15,-78],[21,-63],[11,-113],[17,-53],[27,-47],[15,-16],[30,-39],[22,-32],[13,-48],[-27,-40],[-22,-36],[-6,-38],[10,-61],[0,-33],[-14,-11],[-56,3],[-44,3],[-50,3],[-71,6],[-44,4],[-61,5],[-20,-3],[-56,-17],[-39,-12],[-6,-4],[-13,-15],[-8,-45],[-8,-52],[-8,-23],[-117,-74],[-46,-11],[-26,8],[-19,-6],[-16,-16],[-6,-24],[-1,-31],[4,-31],[11,-43],[2,-44],[-7,-30],[-2,-31],[-3,-33],[6,-18],[11,-3],[11,-15],[16,-14],[14,-26],[-1,-38],[-11,-21],[-10,-11],[-44,-10],[-35,-8],[-45,-60],[-48,-64],[-58,-42],[-25,-12],[-44,-30],[-53,-50],[-26,-80],[-32,-93],[-32,-62],[-43,-58],[-40,-23],[-51,-28],[-63,-21],[-45,-8],[-14,-4],[-39,-2],[-20,5],[-14,2],[-6,-6],[-2,-15],[-1,-33],[-3,-38],[-12,-32],[-9,-15],[-11,-6],[-33,9],[-28,10],[-66,14],[-13,-3],[-5,-4],[-21,-22],[-32,-46],[-22,-41],[-16,-18],[-38,-10],[-17,-15],[-72,-101],[-15,-24],[-74,-88],[-21,-29],[-17,-28],[-44,-65],[-28,-28],[-5,-17],[-2,-40],[0,-87],[0,-84],[0,-122],[0,-122],[0,-140]],[[47587,67774],[-37,0],[0,-1],[1,-24],[8,-48],[3,-40],[-4,-25],[-4,-32],[2,-31],[6,-33],[6,-34],[0,-23],[-11,-18],[-27,-9],[-31,-8],[-23,0],[-34,5],[-22,-1],[-19,0],[-16,-5],[-21,-22],[-23,-35],[-29,-46],[-17,-29],[-23,-6],[-23,0],[-22,23],[-14,12],[-10,-1],[-15,-16],[-19,-12],[-17,0],[-29,24],[-34,34],[-20,17],[-29,6],[-29,11],[-20,-5],[-26,0],[-34,-23],[-29,-17],[-31,-18],[-36,-16],[9,-51],[12,-28],[0,-35],[-6,-30],[-17,-28],[-20,-37],[-11,-29],[-12,-39],[-8,-24],[-15,-37],[-13,-47],[-4,-30],[-6,-33],[-10,-11],[-35,-9],[-22,-11],[-19,-12],[-8,-20],[-1,-3],[-5,-40],[0,-29],[-6,-23],[-8,-57],[-11,-53],[-9,-69],[-8,-57],[-11,-93],[-11,-86],[-14,-81],[-11,-51],[-9,-29],[-19,-35],[-17,-22],[-19,-30],[-22,-28],[-31,-35],[-25,-29],[-10,-13],[-12,-16],[-20,-40],[-16,-57],[-11,-47],[-20,-74],[-14,-41],[-8,-22],[-22,-23],[-25,-18],[-28,-23],[-22,-23],[-31,-23],[-19,-23],[-14,-34],[-11,-41],[-14,-58],[-11,-63],[-6,-40],[-16,-139],[-6,-80],[-6,-52],[-8,-64],[-5,-97],[0,-81],[-6,-46],[-3,-35],[-14,-40],[-11,-29],[-19,-40],[-17,-23],[-5,-23],[-17,-29],[-17,-46],[-14,-29],[3,-23],[3,-40],[-8,-41],[-9,-46],[-22,-57],[-25,-29],[-36,-6],[-50,0],[-39,6],[-47,0],[-42,11],[-39,12],[-47,6],[-33,0],[-42,-12],[-108,0],[-42,-6],[-61,-23],[-15,-5]],[[45276,64182],[21,276],[38,149],[30,66],[47,35],[43,150],[16,138],[28,64],[9,50],[-11,38],[27,75],[32,114],[15,73],[38,113],[5,25],[-4,29],[-15,-25],[-16,-41],[-19,-33],[8,40],[15,60],[34,62],[53,69],[110,234],[42,41],[37,98],[14,88],[4,200],[13,106],[24,83],[29,150],[22,68],[15,136],[16,53],[28,24],[40,69],[60,42],[71,89],[33,53],[23,79],[24,158],[42,166],[22,125],[1,2],[37,66],[26,83],[43,37],[90,18],[134,69],[120,104],[34,42],[37,83],[60,108],[114,130],[52,72],[79,182],[53,150],[44,97],[30,86],[21,87],[12,140],[-8,55],[-33,89],[-23,24],[-6,42],[12,75],[0,128],[7,204],[37,165],[91,217],[17,88],[10,142],[1,50],[114,200],[67,154],[23,37],[59,70],[205,154],[116,109],[68,80],[40,94],[112,371],[110,521],[9,61],[49,17],[35,7],[28,19],[34,40],[33,-16],[-16,-27],[0,-64],[23,-75],[41,-85],[75,-107],[58,-43],[83,-26],[96,47],[54,1],[27,20],[28,-30],[55,-9],[52,16],[40,45],[25,51],[4,-25],[1,-28],[8,-16],[15,-66],[9,-25],[30,4],[26,-13],[59,6],[57,-11]],[[47587,67774],[0,-96],[0,-118]],[[47587,67560],[1,-96],[0,-114],[0,-114],[0,-130],[0,-129],[0,-94],[0,-66],[-57,0],[-51,0],[-52,0],[-52,0],[-52,0],[-51,0],[-52,0],[-52,0],[-52,0],[-51,0],[-52,0],[-52,0],[-52,0],[-52,0],[-51,0],[-52,0],[-52,0],[-41,0],[0,-69],[0,-78],[0,-79],[0,-78],[0,-78],[0,-79],[0,-78],[0,-79],[0,-78],[0,-79],[0,-78],[0,-78],[0,-79],[0,-78],[0,-79],[0,-78],[0,-79],[0,-69],[-2,-63],[-17,-19],[-40,-33],[-40,-34],[-52,-16],[-17,-11],[-33,-46],[-44,-59],[-37,-51],[-25,-67],[-9,-37],[-4,-39],[3,-37],[14,-74],[3,-37],[2,-65],[3,-71],[2,-76],[3,-76],[2,-81],[3,-81],[2,-82],[2,-61],[3,-76],[-42,0],[-64,0],[-63,-1],[-64,0],[-64,0],[-64,0],[-63,0],[-64,0],[-64,-1],[-63,0],[-64,0],[-64,0],[-63,0],[-64,0],[-64,-1],[-64,0],[-63,0],[-36,0],[-11,-108],[-10,-77],[-6,-63],[4,-53]],[[45264,63828],[-14,29],[25,300],[1,25]],[[55651,76513],[-36,-17],[-7,-25],[-17,3],[-21,0],[-7,-16],[10,-27],[7,-31],[-5,-43],[-2,-6]],[[55573,76351],[-5,2],[-30,-25],[-22,-12],[-20,-6],[-9,12],[-5,17],[1,47],[-4,16],[-6,7],[-14,-11],[-16,-36],[-15,-42],[-22,-45],[-18,-42],[-19,-53],[-14,-44],[14,-25],[9,-35],[-3,-26],[3,-15],[-5,-46],[-1,-28]],[[55372,75961],[-43,46],[-18,64],[-63,109],[-73,74],[-4,12],[4,14],[4,11],[-15,1],[-11,-9],[-10,3]],[[55143,76286],[-11,27],[-11,24],[0,22]],[[55121,76359],[5,2],[7,9],[15,23],[3,13],[-1,18],[-21,60],[-3,38],[-3,72],[4,17],[8,8],[38,9],[-1,56],[2,17],[8,23],[5,21],[21,31],[28,36],[12,1],[11,-5],[12,-31],[14,4],[2,37],[-17,49],[-9,31],[3,18],[6,9],[15,-6],[14,-9],[10,6],[14,5],[8,-2]],[[82411,80543],[-26,-80],[-52,-161],[-44,-135],[-23,-77],[-17,-58],[-18,-56],[-3,-33],[-19,-54],[-37,-64],[-8,-70],[1,-63],[-3,-57],[-41,-35],[-32,-32],[10,-107],[16,-41],[26,-43],[28,-35],[24,-30],[27,14],[22,45],[44,40],[24,1],[16,-9],[38,-3],[38,14],[31,3],[39,-9],[14,-10],[33,-17],[35,-38],[25,-43],[18,-8],[9,14],[20,37],[27,37],[34,60],[26,45],[20,7],[38,0],[18,11],[29,6],[26,-17],[71,-9],[20,-23],[34,-70],[19,-37],[33,-19],[21,-13],[18,-10],[17,-18],[5,-22],[7,-33],[11,-19],[20,-19],[16,-11],[4,-25],[5,-11],[14,-17],[42,-72],[20,-20],[31,-41],[13,-35],[1,-36],[8,-28],[20,-41],[10,-29],[-4,-38],[4,-34],[-8,-35],[-34,-25],[-11,-13],[-24,-1],[-41,13],[-39,-7],[-47,14],[-37,31],[-20,25],[-32,14],[-15,-7],[-18,-32],[-21,5],[-19,-5],[-49,6],[-26,8],[-42,-22],[-24,-7],[-45,-27],[-27,-47],[-20,-11],[-19,2],[-14,17],[-21,21],[-30,-1],[-9,-9],[-4,-19],[-10,-58],[0,-26],[-6,-17],[-18,-6],[-32,2],[-49,4],[-33,15],[-20,-7],[-27,-31],[-20,-5],[-15,-14],[-13,-46],[-20,-29],[-24,-36],[-26,-77],[-14,-44],[4,-24],[3,-28],[-12,-33],[-24,-30],[-20,-6],[-29,-29],[-40,-53],[-30,-44],[-40,-11],[-27,-11],[-62,-14],[-15,-3],[-68,-7],[-50,24],[-26,-4],[-24,-13],[-11,-15],[-5,-28],[-4,-25],[-19,-40],[-38,-53],[-32,-35],[-24,-45],[-14,-17],[-27,-17],[-15,-10],[-35,-40],[-28,-36],[-18,-10],[-22,9],[-14,3],[-43,14],[-29,2],[-41,9],[-95,42],[-31,20],[-27,54],[-24,27],[-34,3],[-49,0],[-23,10],[-37,-10],[-41,-54],[-19,-41],[-17,-41],[-20,-89],[-9,-60],[-8,-33],[-21,-53],[-3,-30],[8,-26],[16,-29],[9,-46],[23,-49],[22,-38],[43,-61],[12,-33],[14,-36],[3,-36],[-2,-24],[-16,-18],[-29,-9],[-15,-25],[-21,-33],[-26,-39],[-13,-2],[-14,-10],[-74,-48],[-27,-13],[-22,-16],[-27,-49],[-20,-36],[-25,-48],[-11,-21],[-23,-48],[-30,-55],[-16,-30],[-9,-17],[-8,-23],[-31,-18],[-26,-19],[-38,-28],[-55,-32],[-45,-30],[-29,-25],[-42,-31],[-29,-10],[-57,1],[-72,-8],[-52,-6],[-39,7],[-59,5],[-45,6],[-30,-12],[-72,-12],[-16,-3],[-126,-30],[-56,-16],[-52,-7],[-37,-12],[-22,-14],[-31,-21],[-17,-9],[-56,-41],[-125,-84],[-84,-69],[-13,-12],[-57,-48],[-32,-19],[-23,-43],[-18,-27],[-19,-12],[-34,28],[-24,-2],[-77,11],[0,125],[-53,-17],[-86,-29],[-79,-26],[-73,60],[-56,47],[-48,40],[-74,26],[-65,23],[-116,38],[-51,33],[-26,45],[-46,99],[-15,20],[-22,14],[-24,8],[-50,0],[-62,8],[-88,21],[-71,16],[-120,32],[-29,3],[-62,-27],[-81,-36],[-145,28],[-64,13],[-130,26],[-147,30],[-142,31],[-104,-17],[-57,-9],[-67,-14],[-9,15],[-3,59],[-12,46],[-36,50],[-25,47],[-46,63],[-15,40],[-5,62],[-43,162],[-27,109],[-6,22],[-12,36],[-15,18],[-32,12],[-8,19],[0,38],[5,52],[6,38],[-5,9],[-83,-10],[-51,25],[-43,27],[-60,70],[-36,27],[-46,73],[-67,17],[-25,28],[-32,62],[-27,40],[-39,25],[-62,23],[-105,21],[-35,9],[-58,-14],[-43,-2],[-70,16],[-40,19],[-49,0],[-32,0],[-43,4],[-20,13],[-19,15],[-36,-4],[-25,16],[-24,28],[-24,13],[-27,0],[-11,-13],[-10,1],[-7,39],[-25,62],[-4,28],[-15,32],[-9,29],[3,40],[10,78],[24,71],[16,18],[10,21],[20,37],[12,29],[-2,40],[-14,41],[-10,54],[2,31],[15,37],[17,81],[-1,21],[-7,17],[-2,38],[-3,51],[-21,77],[-11,41],[-20,18],[-23,11],[-20,55],[-25,66],[-16,41],[-5,25],[-3,45],[-12,56],[-12,30],[-9,23],[-5,34],[-5,12],[-34,15],[-24,25],[-10,33],[-4,27],[-7,16],[-19,5],[-14,-24],[-22,-12],[-14,2],[-15,14],[-9,16],[-15,17],[-22,55],[-22,14],[-42,-2],[-37,-26],[-22,4],[-19,9],[-22,27],[-14,23],[-22,7],[-44,40],[-29,28],[-3,56],[-14,39],[-28,11],[-29,39],[-42,22],[-27,16],[-23,10],[-3,15],[1,13],[11,21],[11,20],[2,19],[-9,16],[-23,17],[-31,15],[-6,26],[-19,26],[4,21],[14,16],[15,12],[3,19],[-10,19],[-5,28],[2,20],[-3,27]],[[52066,77044],[-17,-10]],[[52049,77034],[1,12],[4,7],[5,3],[6,-5],[1,-7]],[[23015,66797],[-5,-119],[-17,-97],[-55,-203],[-24,-126],[-44,-360],[-14,-236],[-3,-111],[-4,-15],[4,-17],[-10,-245],[5,-210],[-3,-32],[-17,-63],[-11,-88],[5,-39],[-1,-27],[17,-133],[5,-100],[50,-171],[28,-60],[34,-51],[13,-30],[-6,-72],[-14,-37],[-6,-59],[-7,49],[2,62],[11,34],[1,25],[-21,26],[-37,86],[-45,153],[32,-244],[11,-39],[9,-16],[14,-17],[4,-27],[0,-19],[40,-170],[45,-175],[3,-48],[18,-58],[114,-246],[70,-184],[25,-174],[15,-54],[7,-75],[46,-83],[14,-54],[24,-30],[20,-90],[38,-53],[-9,-1],[-33,27],[2,-18],[28,-37],[54,-37],[13,0],[-21,19],[-18,26],[6,4],[38,-32],[105,-11],[47,-75],[60,-32],[32,-96],[38,-100],[24,-5],[19,0],[56,17],[88,63],[30,30],[59,42],[90,8],[28,-12],[67,26],[33,32],[11,29],[5,22],[62,30],[13,6],[63,6],[31,11],[35,7],[26,-45],[0,-22],[-17,-21],[8,-20],[31,-34],[56,-13],[19,5],[26,49],[46,48],[-1,55],[-9,31],[-13,2],[-3,17],[9,40],[-2,14],[-29,-39],[-6,0],[3,18],[6,15],[83,85],[22,35],[28,31],[60,115],[13,218],[12,38],[40,67],[4,20],[3,45],[-1,114],[2,90],[-2,102],[7,90],[7,26],[23,145],[47,64],[82,76],[19,13],[261,80],[37,20],[45,52],[33,17],[60,-1],[18,7],[4,7],[0,7],[11,7],[34,-7],[65,-31],[24,-8],[58,-36],[63,-15],[10,6],[8,11],[6,22],[-6,18],[-6,-1],[-11,-10],[-13,-1],[-25,15],[5,13],[25,-1],[17,6],[24,22],[26,-16],[35,-75],[24,-24],[2,-108],[4,-19],[8,-29],[-12,-84],[-13,-69],[-17,-57],[-37,-89],[-45,-71],[-56,-159],[-13,-75],[1,-59],[9,-58],[-3,-21],[-6,-22],[-12,2],[-22,-28],[-28,-82],[-1,-25],[13,-23],[16,11],[21,1],[12,7],[12,-2],[-3,-47],[-13,-33],[-8,-11],[-15,-5],[-17,-19],[-9,-18],[1,-54],[9,-4],[20,40],[12,-2],[2,-17],[-26,-139],[-16,-143],[-23,-82],[-8,-121],[-11,-51],[-14,-51],[-8,3],[-21,96],[-23,25],[-4,23],[12,117],[-6,65],[-11,-3],[-15,-35],[-19,-31],[0,-45],[-22,-73],[-6,-25]],[[25473,62483],[-21,6],[-25,-3],[-17,-18],[-18,-89],[-43,-126],[-18,-62],[-14,-21],[-11,-8],[-13,15],[-29,34],[-24,-17],[-8,-39],[1,-50]],[[25233,62105],[-59,0],[-99,0],[-126,0],[-122,0],[-102,1],[0,-113],[-1,-100],[0,-112],[-56,1],[-60,1],[5,-12],[20,-21],[27,-50],[31,-78],[38,-63],[44,-46],[29,-46],[14,-44],[8,-38],[0,-32],[16,-24],[29,-17],[15,-28],[0,-22],[-9,-52],[-3,-57],[4,-52],[-21,-1],[-51,0],[-76,0],[-71,0],[-56,0],[-84,0],[-23,-80],[-38,-132],[-35,-119],[-29,-101],[-5,-26],[0,-22],[36,-94],[-6,-27],[-13,-15],[-4,-22],[1,-36],[-9,-47],[3,-33],[5,-41],[-8,-35],[-6,-34],[-7,-15]],[[24379,60221],[-8,13],[-74,157],[-78,172],[-30,56],[-29,43],[-40,79],[-104,174],[-54,80],[-50,95],[-45,53],[-45,34],[-20,20],[-17,26],[-10,2],[-5,-35],[16,-18],[19,-15],[14,-1],[16,-13],[46,-48],[7,-25],[-130,97],[-53,9],[-6,15],[27,50],[-9,18],[-9,3],[-28,-35],[-11,-2],[-2,23],[1,21],[-18,32],[-11,-1],[-10,-22],[-25,-42],[1,-17],[49,-18],[16,-10],[-3,-11],[-42,0],[-51,-19],[-92,-116],[-86,-50],[-122,-113],[-54,-5],[-29,-18],[-82,43],[-105,105],[-158,33],[-107,138],[-106,57],[-67,132],[-41,6],[-26,21],[-96,48],[-95,32],[-93,115],[-61,37],[-52,46],[-115,79],[-43,43],[-41,68],[-66,69],[-28,59],[-32,21],[-45,109],[-23,47],[-20,21],[-21,8],[-62,-9],[-91,48],[-43,12],[-88,72],[-118,80],[-39,91],[-32,86],[-60,113],[-37,48],[-64,57],[-36,46],[-55,35],[-93,91],[-29,77],[-18,68],[-49,83],[-55,156],[-14,57],[-10,88],[-13,51],[-15,39],[8,29],[27,36],[46,8],[33,39],[4,32],[-2,19],[-21,49],[-26,13],[-20,1],[-5,18],[15,20],[18,48],[25,58],[18,53],[4,75],[-3,76],[7,63],[-62,74],[-7,31],[-19,84],[-34,98],[1,195],[-41,173],[-42,86],[-22,30],[-59,134],[-46,77],[-46,146],[-45,93],[-58,156],[-41,78],[-189,262],[11,0],[55,-64],[9,5],[2,32],[-7,37],[-10,9],[-15,-8],[-20,8],[-10,12],[-29,8],[-38,44],[-16,45],[-1,52],[-54,110],[-20,62],[10,-5],[14,-25],[15,-7],[17,0],[12,10],[-4,18],[-12,15],[-78,58],[-26,41],[-64,68],[-15,24],[-10,65],[-16,3],[-13,-18],[-38,-18],[-10,21],[-1,20],[27,22],[24,61],[0,22],[-14,-25],[-20,-28],[-21,-15],[-32,-13],[-16,9],[-14,14],[-22,54],[-11,176],[20,61],[23,61],[20,35],[11,-27],[12,-3],[-9,31],[-19,28],[-7,29],[-1,26],[-9,48],[-57,102],[-54,-8],[-22,3],[-20,39],[-17,65],[-9,55],[-1,29],[-5,29],[-93,48],[-28,41],[-27,51],[-12,42],[-11,32],[-9,54],[-7,63],[11,82],[13,39],[-64,30],[-24,1],[-21,-16],[-18,21],[-37,24],[-45,85],[-53,155],[-57,50],[-19,54],[-24,48],[-20,60],[-4,26],[-6,15],[-29,42],[-32,71],[-9,57],[-8,87],[-22,31],[-21,14],[-5,41],[2,24],[-7,44],[-44,105],[-23,87],[-12,27],[-11,39],[-6,81],[-18,101],[-36,120],[-29,82],[-15,82],[7,83],[-5,51],[-4,12],[3,17],[10,-9],[8,15],[-1,53],[-10,16],[-29,17],[-12,11],[-70,22],[-39,30],[-3,70],[-19,32],[-16,20],[-52,41],[-9,-21],[-7,-39],[-21,-8],[-19,-2],[-32,27],[-79,103],[-17,17],[-25,9],[-12,16],[-53,55],[11,-29],[15,-30],[14,-87],[-16,-63],[-10,-220],[11,-44],[23,-70],[16,-112],[5,-82],[14,-66],[-4,-155],[5,-47],[22,-77],[41,-73],[9,-38],[53,-55],[33,-72],[65,-98],[20,-42],[58,-152],[2,-46],[11,-56],[33,12],[15,-42],[-2,-20],[4,-15],[17,3],[15,-11],[31,-166],[17,-22],[21,-10],[24,-18],[1,-42],[-1,-34],[21,-49],[-4,-66],[17,-56],[-3,-55],[7,-43],[50,-97],[62,-77],[13,-101],[26,-93],[25,-23],[27,-39],[-4,-40],[2,-24],[35,-73],[6,-94],[30,-61],[9,-4],[6,9],[-22,61],[-10,40],[-2,63],[8,8],[62,-99],[7,-74],[21,-42],[1,-56],[13,-34],[4,-49],[20,-80],[1,-112],[10,-82],[40,-125],[32,-26],[6,-61],[33,-159],[38,-87],[19,-73],[3,-45],[-14,-68],[-2,-47],[21,-143],[31,-73],[35,-18],[6,-10],[-3,-20],[12,-18],[13,23],[7,32],[-7,37],[-1,27],[6,19],[11,3],[67,-98],[11,-38],[25,-43],[23,-55],[9,-42],[19,-36],[9,-81],[46,-37],[25,-68],[2,-43],[-12,-110],[-11,-31],[-37,-47],[-27,-56],[-27,-34],[-27,-21],[-23,4],[-23,65],[-26,193],[-18,41],[-12,61],[-20,50],[-75,76],[-37,81],[-37,53],[-39,78],[-106,129],[-44,66],[-29,65],[-19,-1],[-14,-7],[-6,18],[-1,33],[-6,22],[-62,98],[-13,55],[-3,62],[14,162],[6,95],[-4,49],[-6,6],[-6,27],[-2,78],[-15,84],[-56,174],[-41,34],[-37,25],[-101,154],[-27,76],[-7,44],[-3,89],[-14,-52],[-19,-38],[-42,3],[-48,-43],[-29,40],[-15,46],[-24,55],[-26,11],[-17,2],[-31,68],[-26,21],[-36,9],[-32,34],[-9,38],[-5,53],[-12,32],[-49,62],[-39,69],[-38,45],[-11,36],[-1,25],[59,-7],[71,-27],[34,8],[21,25],[20,18],[3,-19],[-4,-37],[20,-33],[26,-27],[19,3],[-18,29],[-12,60],[5,22],[0,29],[-26,-6],[-4,15],[23,45],[25,120],[13,118],[-27,103],[-46,72],[-98,210],[-59,108],[-17,40],[-16,19],[-48,25],[-40,60],[-71,85],[-30,44],[-21,104],[-16,14],[5,71],[-7,127],[-12,32],[-38,31],[-9,86],[-2,82],[-8,57],[-65,96],[-3,46],[0,44],[-7,44],[-35,91],[-42,79],[-14,38],[-2,77],[-15,21],[6,5],[13,-2],[8,10],[1,54],[-63,84],[-18,116],[-34,61],[-8,23],[-18,109]],[[25850,63538],[-15,-18],[-7,64],[11,61],[14,36],[28,4],[18,12],[2,-16],[-15,-48],[-36,-95]],[[20416,64291],[-8,-47],[-21,19],[-8,30],[-1,48],[11,9],[17,-21],[4,-14],[6,-24]],[[19190,62638],[-17,-12],[-24,36],[6,27],[14,19],[14,-35],[7,-35]],[[19287,66246],[8,-65],[-15,10],[-18,35],[-13,44],[1,20],[3,4],[26,-26],[8,-22]],[[18568,68578],[-2,-10],[-29,35],[-64,122],[-23,61],[-4,28],[2,64],[22,-8],[25,-42],[12,-40],[0,-45],[48,-21],[7,-98],[6,-46]],[[18008,68012],[-4,-19],[-47,39],[26,67],[-4,70],[12,15],[10,-23],[13,-90],[-6,-59]],[[18832,68551],[-21,-136],[-21,2],[-44,43],[-5,27],[17,157],[13,21],[39,21],[6,-19],[4,-47],[12,-69]],[[17155,68514],[-12,-22],[-32,120],[0,29],[9,15],[15,-3],[0,-30],[13,-26],[5,-24],[2,-59]],[[25913,64077],[4,-28],[-4,4],[-7,21],[-4,26],[4,1],[3,-9],[4,-15]],[[24532,62601],[-31,-13],[-6,13],[63,58],[11,-2],[4,-8],[-33,-28],[-8,-20]],[[19498,65755],[-6,-3],[-14,31],[-6,75],[3,8],[27,-93],[-1,-11],[-3,-7]],[[18140,70106],[-9,-2],[-17,26],[1,25],[4,2],[17,-21],[6,-19],[-2,-11]],[[19139,66831],[3,-20],[-2,-6],[-11,14],[-19,-86],[-6,-8],[12,118],[12,17],[13,3],[-2,-32]],[[18972,65894],[-3,-27],[-84,108],[20,10],[23,-8],[44,-83]],[[18873,65982],[-6,-7],[-24,67],[-3,46],[-10,19],[-24,15],[21,93],[17,193],[8,-35],[-18,-195],[1,-26],[8,-24],[10,-40],[1,-44],[16,-40],[3,-22]],[[66014,40043],[-36,-17],[-39,6],[-15,31],[-3,13],[13,12],[-1,39],[7,63],[8,26],[20,23],[8,51],[17,34],[22,4],[22,-63],[16,-66],[-3,-65],[-16,-25],[-5,-38],[-15,-28]],[[45451,63194],[-17,-56],[-8,22],[-3,37],[15,52],[8,28],[14,9],[-9,-92]],[[45406,60966],[0,258],[15,97],[5,85],[33,187],[38,153],[36,204],[14,197],[-5,193],[-11,172],[-18,113],[-17,164],[-26,87],[-47,76],[-11,44],[11,16],[29,12],[18,59],[-38,-23],[44,181],[14,123],[-2,81],[9,50],[-35,108],[-26,136],[-14,22],[-14,11],[-1,-32],[-8,-29],[-17,18],[-29,99],[-41,161],[-15,17],[-12,-23],[-7,-21],[-14,-134]],[[47587,67560],[53,-63],[52,-64],[52,-64],[52,-64],[53,-63],[52,-64],[52,-64],[52,-63],[53,-64],[52,-64],[52,-63],[52,-64],[53,-64],[52,-64],[52,-63],[52,-64],[44,-53],[67,-86],[63,-80],[63,-81]],[[48660,66241],[-97,0],[-130,0],[-89,0],[-91,0],[-85,-1],[7,-131],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[8,-143],[8,-144],[7,-143],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[7,-144],[8,-143],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[8,-143],[8,-144],[8,-143],[7,-143],[8,-143],[8,-139],[33,-73],[42,-92],[-12,-129],[-15,-155],[-16,-169],[-58,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-53,0],[-32,4],[-12,13],[-4,87],[-10,-5],[-11,-26],[-6,-28],[2,-36],[-2,-31],[-36,-12],[-49,-21],[-52,-16],[-52,6],[-18,7],[-19,12],[-42,12],[-22,2],[-26,-3],[-31,-7],[-10,-16],[-23,-66],[-22,-75],[-15,0],[-16,42],[-45,78],[-55,102],[-24,51],[-14,7],[-26,-37],[-22,-35],[-23,-50],[-11,-47],[-8,-57],[-4,-66],[-8,-78],[-19,-62],[-23,-47],[-16,-22],[-7,-13],[-49,37]],[[54046,72495],[-10,-19],[-26,1],[-24,29],[0,61],[27,-12],[25,-41],[8,-19]],[[53975,72596],[-16,-9],[-17,17],[-4,11],[23,9],[12,-8],[4,-15],[-2,-5]],[[48660,66241],[85,-110],[77,-104],[91,-124],[91,-123],[91,-123],[91,-124],[90,-123],[91,-123],[91,-124],[91,-123],[91,-123],[91,-124],[91,-123],[91,-123],[91,-124],[91,-123],[91,-123],[91,-124],[41,-55],[3,-23],[4,-46],[-2,-52],[0,-43],[12,-29],[23,-31],[89,-91],[7,-18],[3,-37],[11,-47],[19,-27],[22,-20],[26,-14],[81,-14],[17,-22],[35,-84],[19,-16],[54,-25],[38,-13],[17,-8],[35,-23],[38,-38],[20,-35],[0,-11],[0,-30],[0,-91],[7,-50],[8,-36],[-1,-22],[-9,-16],[-8,-19],[-4,-25],[-11,-32],[-9,-36],[4,-27],[15,-18],[23,-34],[19,-14],[9,-1],[12,1],[11,4],[68,26],[63,25],[88,34]],[[50060,60432],[-58,42],[-68,43],[-47,-27],[-8,10],[-6,18],[-23,10],[-36,-5],[-26,-12],[-41,-64],[-31,-55],[-8,-13],[-43,-33],[-80,-78],[-46,-57],[-10,-11],[-21,-13],[-31,-3],[-26,-14],[-23,-151],[-16,-15],[-95,61],[-19,-9],[-17,-18],[-53,-88],[-27,-71],[-14,-95],[2,-29],[0,-32],[-9,-18],[-13,-7],[-12,1],[-44,20],[-14,-9],[-6,-46],[1,-102],[-10,-69],[-26,-22],[-20,-27],[-16,-8],[-14,7],[-77,103],[-26,17],[-29,-12],[-28,-44],[-12,-28],[-17,-34],[-20,-45],[5,-39],[14,-44],[10,-55],[-1,-50],[-70,-70],[6,-24],[10,-28],[0,-51],[-2,-89],[-14,-33],[-18,-31],[-12,-42],[-11,-20],[-20,-25],[-27,-25],[-48,-23],[-38,-15],[-14,-14],[-20,-30],[-16,-36],[-4,-39],[3,-44],[6,-37],[7,-25],[4,-31],[-6,-85],[-14,-97],[-13,-44],[-21,-24],[-19,-27],[6,-64],[4,-92],[-6,-73],[0,-45],[-8,-48],[-5,-33]],[[48465,57848],[-9,8],[-38,-3],[-42,-26],[-14,-20],[-3,-27],[-10,-19],[-13,-20],[-13,-26],[-23,4],[-22,18],[-11,17],[-1,10],[7,25],[6,27],[1,18],[-8,43],[-6,47],[3,23],[-6,70],[-3,3],[-29,-18],[-10,-4],[-6,-8],[-2,-13],[7,-44],[-5,-8],[-16,1],[-23,15],[-25,40],[-6,-13],[-3,-32],[-1,-38],[6,-69],[-7,-25],[-16,5],[-23,0],[-19,-7],[-13,-2],[-8,-24],[-4,-28],[8,-31],[-1,-12],[-6,-12],[-8,-7],[-6,0],[-18,34],[-22,13],[-50,19],[-6,47],[-8,1],[-12,24],[-11,32],[-10,-1],[-8,-9],[-28,3],[-24,-49],[-18,-61],[-20,-29],[-21,-13],[-8,0]],[[47780,57697],[4,38],[-3,28],[-6,25],[-62,67],[-10,28],[-9,76],[-7,76],[1,44],[4,40],[-2,31],[-6,24],[-19,22],[-20,11],[-24,-30],[-12,-5],[-11,2],[-6,10],[1,16],[27,81],[13,34],[16,26],[10,14],[7,20],[1,15],[-3,12],[-17,14],[-28,38],[-14,4],[-12,18],[-13,59],[-6,11],[-13,6],[-12,15],[1,77],[0,66],[-27,108],[-10,67],[-13,69],[-12,33],[-22,27],[-26,19],[-24,4],[-18,-6],[-8,-8],[0,-13],[15,-44],[2,-24],[-2,-24],[-5,-16],[-13,-2],[-23,-13],[-28,-27],[-19,-22],[-16,-58],[-11,-8],[-18,8],[-53,42],[-44,35],[-30,21],[-18,-13],[-9,-7],[-26,-23],[-34,-86],[-8,-28],[-7,-9],[-9,-15],[-9,0],[-7,10],[-3,6],[-17,62],[-20,68],[-15,30],[-20,2],[-17,-22],[-18,-43],[-22,-41],[-14,-12],[-13,7],[-30,51],[-22,36],[-3,18],[8,28],[8,42],[8,34],[8,15]],[[70393,53704],[-6,-1],[-4,10],[1,14],[5,10],[7,1],[4,-9],[-2,-14],[-5,-11]],[[70419,54242],[-4,-6],[-5,2],[-2,7],[3,10],[3,13],[3,14],[4,7],[3,-2],[0,-8],[-2,-11],[-1,-14],[-2,-12]],[[78361,55438],[48,-22],[18,-18],[54,-178],[71,-126],[30,-46],[23,-23],[32,-67],[28,-84],[61,-237],[10,-105],[5,-159],[-14,-240],[-16,-119],[3,-57],[22,-86],[-6,-82],[4,-68],[-2,-189],[13,-55],[15,-36],[76,-112],[6,-41],[37,-143],[70,-310],[19,-139],[-2,-38],[-8,-15],[-21,-14],[-17,27],[-6,20],[2,24],[-7,24],[-16,28],[-10,26],[3,-42],[0,-55],[-21,-5],[-28,17],[-34,-15],[-40,-68],[-19,-2],[-15,58],[-8,39],[-12,28],[-127,142],[-47,37],[-50,107],[-112,119],[-71,116],[-30,71],[-73,64],[-31,74],[-16,15],[-15,27],[16,72],[-7,76],[-8,64],[-51,126],[-25,88],[-49,87],[-19,51],[-18,58],[11,21],[11,12],[-10,43],[-27,74],[-13,85],[0,160],[-39,226],[-34,313],[6,110],[-9,119],[-22,114],[-29,82],[-11,67]],[[82659,54245],[-11,1],[-24,12],[-48,61],[-49,22],[-71,2],[-41,8],[-16,-9],[-14,0],[-10,12],[-11,6],[-27,-36],[-13,11],[-14,16],[-23,5],[-28,-5],[-32,-37],[-34,34],[-10,-1],[-7,-8],[-15,-46],[-29,-35],[-14,-64],[-9,-61],[-7,-21],[-3,-119],[-4,-57],[7,-76],[-1,-32],[-13,-49],[-2,-11],[-6,-77],[2,-21],[-1,-25],[-11,-54],[-20,-15],[-20,-9],[-18,19],[-16,-30],[-20,-46],[-8,-31],[0,-29],[2,-19],[-4,-20],[-1,-21],[1,-30],[14,-13],[14,-26],[-1,-25],[-7,-17],[-18,-27],[-33,-55],[-37,-47],[-14,-11],[-5,-22],[-2,-29],[8,-64],[7,-18],[5,-23],[-5,-26],[-4,-23],[-14,-15],[-13,-10],[-5,-19],[-7,-76],[-8,-40],[-18,-59],[-6,-27],[-9,-9],[-35,28],[-31,-17],[-41,-11],[-35,2],[-27,-12],[-19,-31],[-21,-40],[-22,-29],[-16,-14],[-30,41],[-16,-3],[-27,14],[-65,47],[-16,13],[-17,2],[-5,13],[3,23],[-3,29],[-13,11],[-129,-4],[-38,-26],[-25,-20],[-18,-23],[-5,-59],[-11,-54],[-14,-58],[-43,-17],[-32,-59],[-11,-7],[-21,9],[-24,5],[-17,-17],[-17,1],[-55,28],[-51,4],[-30,-14],[-16,-5],[-89,-81],[-31,-9],[-12,12],[-17,33],[-24,32],[-55,112],[-21,26],[-14,27],[-13,32],[-18,35],[-17,24],[-23,48],[-22,53],[-5,93],[-18,17],[-7,24],[-2,28],[25,76]],[[80452,53011],[18,-80],[7,-18],[40,-54],[33,-27],[36,-11],[37,-2],[15,4],[14,10],[14,-11],[76,-88],[30,-15],[31,6],[13,-8],[44,-67],[13,-8],[22,5],[-28,30],[-18,22],[-8,41],[4,44],[18,29],[12,31],[5,94],[8,48],[14,46],[5,43],[-16,34],[-4,57],[3,47],[10,33],[15,-22],[15,-19],[15,2],[11,7],[2,25],[-3,43],[1,78],[19,63],[31,43],[29,21],[108,35],[172,89],[51,35],[19,18],[15,25],[27,80],[50,125],[35,103],[74,151],[59,139],[8,26],[9,76],[1,36],[-2,36],[8,17],[12,10],[3,0]],[[81684,54488],[8,-16],[21,-22],[15,-28],[10,-37],[8,-34],[0,-29],[10,-24],[26,-4],[8,-30],[18,-52],[17,-37],[10,-14],[13,7],[19,34],[14,42],[10,56],[-8,9],[14,42],[2,22],[-6,21],[-8,20],[-3,51],[-5,66],[-4,29],[11,22],[22,27],[22,31],[23,25]],[[81951,54665],[1,-45],[-1,-75],[7,-63],[15,-110],[18,-15],[21,-10],[12,3],[8,7],[2,9],[-13,44],[-3,102],[-11,67],[-17,67],[-7,19]],[[81983,54665],[65,19],[14,21],[26,46],[10,26],[7,58],[-32,34],[-12,44],[-1,48],[38,88],[13,21],[6,-31],[17,-8],[15,-1],[16,2],[22,44],[12,64],[39,91],[14,70],[8,72],[99,226],[12,36],[59,227],[7,7],[16,-22],[4,-72],[-2,-31],[-9,-47],[-6,-49],[7,1],[28,30],[29,79],[17,69],[14,30],[28,-17],[6,-12],[-2,-49],[3,-29],[11,-61],[24,-37],[33,-24],[31,-34],[10,-22],[6,-27],[7,-45],[0,-44],[-22,-44],[10,-71],[-2,-41],[-7,-35],[-33,-33],[88,33],[22,18],[30,47],[16,-41],[15,-69],[-12,-18],[-38,-26],[-2,-10],[13,-36],[16,3],[31,24],[29,38],[14,0],[15,-8],[29,-24],[16,-20],[13,-26],[9,-53],[33,-19],[68,-75],[12,-7],[14,-1],[35,9],[13,-10],[9,-27],[3,-34],[-1,-36],[-4,-27],[-8,-22],[-25,-34],[-61,-45],[-66,-34],[-34,2],[-47,29],[-17,-3],[-17,-14],[-21,-92],[39,-92],[66,-96],[9,-24],[-2,-29],[-11,-18],[-14,-9],[-37,-16],[-38,-11],[-30,-17],[-31,-21],[-31,7],[-43,43],[-12,3],[-13,-22],[-13,-60],[-8,-17]],[[78950,53416],[-14,-6],[-7,4],[-5,23],[11,51],[4,9],[11,-56],[0,-25]],[[77857,54893],[-7,-16],[-20,9],[4,94],[11,12],[18,-17],[8,-16],[-14,-66]],[[77735,55567],[19,-62],[-9,-27],[-5,-8],[-12,9],[-11,-24],[-11,-4],[-11,42],[-13,17],[-3,30],[18,5],[10,-10],[20,20],[8,12]],[[82539,55972],[-17,-31],[-6,37],[1,47],[23,44],[33,8],[4,-35],[-4,-40],[-7,-21],[-27,-9]],[[78143,53564],[-14,-10],[0,15],[2,21],[10,20],[5,-12],[-3,-34]],[[80941,53234],[-9,-8],[-13,21],[-3,175],[9,15],[6,-2],[7,-32],[-1,-76],[1,-68],[3,-25]],[[82745,54254],[-39,-11],[-27,1]],[[82679,54244],[5,20],[-1,27],[13,7],[15,-6],[34,-38]],[[63760,44681],[13,-60],[15,-58],[46,-140],[20,-53],[17,-57],[8,-114],[30,-178],[28,-266],[8,-273],[9,-126],[21,-118],[36,-122],[11,-136],[-21,-140],[-32,-132],[-8,-25],[-15,-34],[-6,1],[-26,34],[-20,56],[-26,132],[-10,66],[-10,11],[-31,-6],[-22,-41],[-4,-27],[5,-74],[8,-66],[4,-68],[0,-85],[9,-26],[12,-22],[12,-55],[3,-133],[-8,-67],[-22,-58],[2,-32],[8,-32],[-8,-20],[-29,-25],[-11,-22],[-16,-59],[-25,-120],[-3,-61],[16,-186],[-5,-132],[-32,-252],[-18,-119],[-26,-143],[-40,-189],[-39,-237],[-34,-243],[-25,-147],[-28,-144],[-38,-255],[-33,-258],[-48,-285],[-68,-317],[-7,-41],[-14,-163],[-15,-140],[-18,-140],[-37,-230],[-5,-71],[-8,-68],[-36,-144],[-16,-54],[-10,-57],[-6,-72],[-11,-70],[-27,-129],[-39,-110],[-27,-40],[-58,-59],[-30,-11],[-65,-2],[-64,-33],[-66,-64],[-63,-73],[-25,-35],[-27,-20],[-83,-4],[-26,16],[-84,120],[-32,20],[-62,17],[-18,10],[-17,16],[-25,62],[-50,54],[-12,16],[-7,37],[-5,39],[-13,45],[-10,84],[-16,59],[-45,104],[-5,33],[-4,110],[2,75],[-5,136],[5,65],[16,58],[-6,62],[-17,66],[-6,68],[-13,62],[-48,112],[-11,55],[-8,57],[-18,178],[-2,62],[3,130],[7,68],[11,47],[3,35],[8,30],[11,24],[7,28],[18,168],[23,37],[33,21],[27,44],[16,59],[15,121],[42,121],[15,63],[34,96],[30,135],[9,64],[7,65],[8,143],[5,71],[-1,70],[-17,72],[-41,132],[-1,24],[3,98],[-4,70],[-15,71],[-19,66],[-19,124],[-10,205],[2,74],[-5,65],[-14,63],[10,109],[123,397],[4,47],[-5,121],[2,71],[5,26],[9,15],[21,7],[99,18],[13,12],[25,33],[34,65],[15,19],[14,-7],[8,-28],[11,-15],[40,29],[16,1],[16,-5],[7,27],[4,36],[6,26],[11,14],[51,8],[33,11],[43,25],[9,-5],[34,-91],[11,-8],[13,-4],[12,17],[-28,48],[-4,26],[1,31],[15,65],[25,50],[56,76],[57,88],[17,6],[14,-14],[11,-103],[-1,-17],[9,-3],[10,13],[10,42],[0,34],[-7,34],[-4,28],[0,26],[29,61],[23,58],[10,70],[10,32],[24,36],[7,-6],[6,-29],[3,-31],[-6,-31],[-9,-31],[-4,-40],[14,-8],[13,10],[19,73],[21,70],[13,36],[16,25],[27,-5],[26,-15],[-43,73],[-10,101],[50,174],[1,37],[7,11],[3,14],[-26,59],[-5,29],[4,44],[12,40],[12,27],[16,11],[13,-15],[28,-49],[19,-7],[23,46],[18,58],[28,40],[32,25],[49,91],[32,191],[2,56],[-7,67],[-11,65],[-19,80],[5,18],[27,-11],[9,11],[28,71],[48,136],[16,0],[13,-25],[5,-37],[10,-28],[32,-65],[16,-48]],[[63428,44145],[0,-21],[-36,8],[-6,72],[18,3],[4,29],[11,4],[11,-64],[-2,-31]],[[63871,42106],[-32,-106],[9,89],[36,127],[11,10],[-24,-120]],[[56206,76217],[43,-86],[23,-34],[28,-27],[32,-19],[11,-19],[20,-91],[10,-34],[13,-11],[3,-10],[1,-13],[-15,-64],[-6,-144],[-4,-11]],[[56365,75654],[-16,0],[-21,-3],[-8,-11],[-8,-77],[-34,-22],[-30,-13],[-26,3],[-45,18],[-15,2],[-13,-10],[-40,-5],[-18,-14],[-42,-90],[-42,-32],[-14,-15],[-33,20],[-15,2],[-22,-23],[-49,-3],[-13,-4],[-38,-3]],[[55823,75374],[-2,12],[-7,18],[-17,9],[-36,-7],[-9,13],[-15,77],[-11,12],[-13,26],[-22,83],[-1,37],[2,32],[-12,74],[7,19],[11,12],[0,30],[-3,46],[14,90],[3,6]],[[55712,75963],[4,-4],[32,-7],[8,11],[6,18],[1,66],[8,30],[78,58],[23,2],[18,-27],[14,-17],[8,1],[3,17],[10,33],[16,19],[48,16]],[[51699,80714],[-3,-15],[1,-35],[8,-34],[18,-34],[14,-25],[19,-20],[33,-19],[13,-4],[1,-25],[-2,-27],[-11,-15],[-11,-21],[-8,-26],[-8,-50],[-1,-35]],[[51762,80329],[-19,14],[-10,10],[-17,3],[-17,-8],[-12,-18],[-18,-5],[-14,5],[-9,13],[-7,8],[-22,8],[-9,19]],[[51608,80378],[7,9],[6,15],[5,19],[7,19],[-21,50],[-5,16],[-17,28],[0,14],[4,14],[-1,11],[2,25],[12,24],[8,30],[14,40],[31,49],[21,-8],[10,0],[6,-17],[2,-2]],[[55805,83690],[32,66],[12,43],[8,61],[8,20],[0,-28],[-3,-46],[-20,-80],[-21,-41]],[[55898,83677],[0,4],[-9,42],[10,64],[-19,93],[-30,113],[-2,121],[-2,27]],[[55846,84141],[74,68],[94,73],[22,6],[86,44],[12,3],[78,-8],[62,-10],[51,1],[29,11],[26,-9],[20,-33],[22,4],[21,21],[116,-19],[26,0],[29,-3],[54,-19],[32,-18],[68,11],[30,0],[15,7],[47,49],[21,9],[19,8],[17,-7],[11,-42],[35,-72],[38,-13],[106,-27],[21,-15],[59,-64],[36,-31],[22,-25],[35,-49],[20,-35],[33,-27],[39,-18],[15,-3]],[[57387,83909],[-1,-26],[-7,-44],[-13,-56],[-14,-44],[-3,-17],[10,-14],[52,-7],[22,-7],[4,-12],[-11,-15],[-17,-13],[-7,-12],[-13,-42],[-86,5],[-12,-9],[-5,-19],[-4,-23],[-12,-28],[-23,-23],[-35,-9],[-29,-16],[-22,-49],[-16,-67],[0,-47],[2,-26],[-2,-15],[-11,-17],[-18,-43],[-14,-48],[-6,-26],[3,-12],[16,-1],[24,-10],[13,-19],[4,-22],[0,-24],[-4,-13],[-19,-10],[-30,0],[-17,12],[-4,9],[8,22],[-6,29],[-12,16],[-25,-24],[-24,0],[-29,-21],[-19,-34],[-18,-13],[-49,7],[-13,-15],[-10,-69],[-6,-14],[-40,3],[-40,-28],[-45,-22],[-22,15],[-13,18],[-24,-3],[-27,-8],[-17,4],[-20,-1],[-39,-14],[-48,4],[-21,12]],[[52646,79072],[3,-9],[1,-12],[3,-12],[1,-16],[4,-16],[8,-15],[3,-14],[-4,-18],[-4,-11]],[[53195,70957],[43,-37],[43,-14],[130,-136],[40,-17],[91,-16],[107,56],[40,10],[71,-52],[31,-15],[52,-4],[89,-47],[22,-17],[52,-75],[25,-23],[184,-69],[25,-46],[26,-87],[1,-109],[14,-79],[23,-102],[28,-72],[30,-61],[35,-37],[81,-56],[91,-21],[92,-8],[158,-76],[133,-89],[33,-44],[67,-43],[134,-208],[74,-72],[52,-14],[46,13],[83,72],[34,43],[84,180],[27,94],[11,66],[-3,67],[-10,61],[-23,63],[-17,84],[-9,151],[13,104],[16,63],[25,64],[69,122],[70,86],[122,113],[71,1],[30,12],[58,80],[24,3],[33,-20],[97,6],[42,-22],[51,-50],[64,-31],[45,-30],[48,-40],[11,-98],[-5,-29],[-1,-38],[50,-68],[142,-32],[28,-18],[39,-52],[25,-16],[97,-7],[57,11],[54,-18],[20,-18],[21,-40],[25,-99],[10,-33]],[[56986,70077],[-11,-16],[-15,-35],[-10,-30],[-26,-50],[-21,-53],[2,-79],[5,-79],[14,-78],[13,-86],[-4,-56],[-11,-70],[-12,-58],[-42,-119],[-7,-28],[3,-41],[25,-141],[2,-44],[16,-138],[14,-112],[15,-87],[2,-25],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129]],[[56661,63073],[-133,137],[-134,136],[-133,136],[-133,136],[-133,137],[-133,136],[-133,136],[-133,137],[-133,136],[-133,136],[-133,136],[-133,137],[-133,136],[-133,136],[-134,137],[-133,136],[-92,94],[-99,-92],[-77,-72],[-103,-95]],[[53324,65390],[-26,102],[-30,114],[-40,142],[-24,87],[-8,14],[-111,69],[-117,67],[-69,-41],[-12,3],[-19,26],[-20,35],[-10,49],[-28,66],[-25,150],[-2,119],[-6,43],[-61,168],[-55,153],[-37,102],[-7,46],[4,57],[15,51],[54,60],[48,66],[7,45],[3,125],[-16,39],[-12,74],[-11,101],[-2,64],[22,128],[25,134],[-16,149],[-12,297],[8,235],[-7,85],[-4,36],[-16,110],[-21,114],[-9,40],[-26,92],[-43,114],[-22,70],[30,37],[28,29]],[[47143,56730],[14,3],[24,17],[14,-8],[6,-23],[3,-20],[72,51],[6,11],[4,-2],[9,-47],[5,3],[5,14],[5,1],[5,-6],[6,-22],[9,-19],[16,-14],[10,-19],[-2,-49],[4,-49],[7,-11],[4,-28],[1,-32],[4,-17],[3,-32],[-1,-34],[2,-24],[12,-41],[7,-53],[0,-37],[-4,-39],[-8,-35],[-13,-39],[-1,-16],[8,-10],[12,-2],[10,8],[25,-18],[14,-25],[12,-32],[10,-16],[5,-20],[18,6],[21,19],[4,9],[7,-5],[13,-2],[10,35],[7,40],[17,43],[8,16],[2,28],[1,36],[6,30],[13,17],[15,0],[8,-6],[4,-30],[11,-23],[10,-15]],[[47642,56197],[5,-7],[9,-18],[8,-60],[31,-194],[-2,-54],[-6,-35],[0,-35],[-2,-33],[-19,-56],[-56,-114],[4,-10],[13,-13],[14,-6],[11,3],[14,-28],[16,-36],[16,-18],[23,-17],[20,-2],[17,7],[24,-7],[26,-30],[9,-49],[7,-42],[9,-22],[1,-36],[18,-33],[26,-6],[34,-38],[9,2],[4,5],[4,-8],[8,-109],[7,-58],[-3,-23],[-5,-19],[0,-88],[-16,-51],[-2,-56],[-5,-18],[-16,-16],[0,-42],[-4,-52],[-2,-55],[4,-144],[1,-107],[8,-20]],[[47904,54349],[-32,9],[-94,82],[-73,47],[-242,267],[-68,108],[-77,160],[-173,322],[-39,51],[-50,25],[-31,28],[-21,30],[-18,89],[-43,53],[-80,75],[-60,126]],[[59963,71101],[-8,-10],[-15,-26],[-14,-22],[-30,-33],[-7,-20],[-6,18],[-13,-12],[-11,-75],[-23,-26],[-29,3],[-23,7],[-32,-5]],[[59752,70900],[13,44],[13,57],[13,77],[24,64],[49,217],[28,87],[10,125],[43,109],[33,32],[15,31],[0,47]],[[55846,84141],[-9,109],[5,217],[11,108],[51,63],[26,49],[15,65],[5,61],[10,49],[75,144],[60,15],[80,40],[90,33],[17,-42],[9,-32],[108,-117],[27,-40],[42,-135],[100,-68],[79,22],[34,33],[63,61],[28,45],[6,43],[-11,184],[-17,80],[6,50]],[[56756,85178],[11,-2],[27,24],[88,44],[17,2],[20,9],[56,34],[18,-18],[14,-20],[9,-1],[4,8],[-2,13],[4,10],[16,-6],[65,-55],[24,-13],[17,-4],[20,-26],[55,-18],[7,-13],[4,-17],[51,-71],[23,-35],[46,-33],[20,-7],[79,33],[23,11],[18,1],[19,-18],[42,-23],[39,-8],[7,2]],[[57818,84183],[-8,2],[-24,-8],[-38,-32],[-56,-78],[-14,-17],[-15,-59],[-3,-6],[-33,2],[-9,2],[-33,-1],[-71,15],[-28,-10],[-36,-60],[-14,-9],[-42,-8],[-7,-7]],[[79866,60313],[-15,-23],[-14,-59],[-10,-4],[-24,21],[-9,-11],[-15,-43],[-27,-47],[-13,0],[-9,5],[-11,-20],[-15,-36],[-7,1],[-26,-9],[-10,12],[-12,30],[-21,31],[-18,22],[-10,15],[-9,26],[-8,16],[-15,-36],[-26,-35],[-24,7],[-12,5],[-9,-50],[-7,-9],[-44,-9],[-8,-8],[7,-46],[26,-79],[7,-45],[-16,-73],[-45,2],[-20,30],[-19,41],[-7,21],[-57,41],[-39,-28],[-12,1],[-18,30],[-11,23],[-11,34],[-6,34],[0,16]],[[77811,63546],[2,32],[15,125],[18,81],[22,38],[22,16],[24,-6],[20,7],[16,19],[-1,12],[-19,3],[-8,21],[4,41],[8,26],[13,13],[13,40],[12,70],[15,35],[18,1],[30,30],[42,59],[16,57]],[[78093,64266],[16,-26],[-6,-66],[9,-14],[4,-23],[-2,-37],[3,-32],[7,-15],[9,-8],[45,27],[27,2],[12,-17],[10,-11],[13,-9],[11,-11],[6,3],[15,28],[5,5],[1,13],[-11,25],[-11,21],[0,46],[5,80],[1,41],[-1,100],[-2,27],[-10,33],[-27,61],[-7,38],[-5,38],[1,24],[-7,27],[-4,26],[13,13],[14,29],[7,45],[7,33],[10,14],[9,5],[6,-3],[23,-59],[28,30],[22,-1],[19,-15],[10,-19]],[[69707,76179],[-15,26],[0,27],[16,46],[14,23],[6,44],[20,29],[20,47],[25,38],[46,28],[25,-9],[24,7],[38,23],[7,1],[15,1],[96,-36],[32,-1],[74,-46],[34,-10],[24,-13],[11,-20],[18,-25],[93,-19],[26,-13],[9,-22],[26,-27],[23,-6],[-20,106],[8,63],[30,173],[15,26],[30,23],[46,26],[18,36],[38,-4],[16,3],[12,6],[6,21],[43,-35],[72,-71],[54,-45],[64,-43],[88,-39],[75,-13],[13,10],[30,59],[14,2],[26,-5],[79,-3],[81,-3],[38,6],[83,25],[12,1],[19,-2],[50,-33],[37,-5],[25,0],[14,-2],[31,1],[50,-4],[61,-22],[75,4],[23,4],[42,-4],[32,-20],[42,-22],[26,-9],[17,-5],[31,-2],[19,7],[11,-10],[10,-53],[26,-35],[20,-34],[17,-36],[17,-15],[30,-1],[57,-10],[33,-15],[41,-63],[39,-65]],[[72280,76146],[5,-35],[5,-40],[-3,-10],[-5,-6],[-86,-10],[-19,-11],[-20,-56],[-73,-45],[-42,-23],[-17,1],[-40,-37],[-113,-91],[-55,-58],[-28,-24],[-22,-27],[-4,-27],[-1,-25],[-62,-118],[-46,-15],[-39,3],[-27,-18],[-38,-18],[-83,12],[-28,-2],[-55,17],[-21,-9],[-24,-24],[-32,-95],[-13,-22],[-6,-21],[-5,-46],[-12,-49],[-16,-38],[-11,-36],[-23,-34],[-22,-22],[-17,45],[-14,-13],[-14,-18],[-26,6],[-16,-9],[-37,-39],[-54,1],[-6,14],[-11,108],[-9,51],[-8,11],[-10,2],[-77,-85],[-36,-15],[-30,-3],[-39,25],[-8,-6],[-7,-14],[-3,-17],[12,-48],[-3,-10],[-18,1],[-24,-11],[-19,-22],[-56,-78],[-47,-26],[-43,-10],[-18,-9],[-8,-9],[-15,-37],[-15,-58],[-8,-29],[-6,-16],[1,-22],[12,-27],[9,-63],[-2,-16],[-9,-26],[-14,-25],[-30,-16],[-23,-7]],[[63409,68907],[-16,-13],[-10,6],[-11,31],[-17,77],[10,29],[-1,12],[2,9],[5,6],[6,36],[7,12],[12,-25],[33,-88],[0,-37],[-2,-14],[-18,-41]],[[62925,68603],[45,94],[21,51],[38,109],[19,78],[19,87],[16,67],[4,12],[9,23],[21,24],[30,22],[51,9],[36,1],[8,-1],[22,-11],[63,-54]],[[63327,69114],[-2,-21],[9,-64],[20,-69],[17,-56],[2,-27],[-15,4],[-12,11],[-22,11],[-42,-75],[-26,-40],[0,-14],[34,-16],[25,1],[17,11],[15,-18],[10,-46],[4,-37],[23,-133],[19,-45],[24,-80],[9,-41],[5,-35],[15,-51]],[[55712,75963],[5,26],[-2,55],[-15,91],[-10,30],[-22,30],[-16,19],[-30,17],[-15,50],[-23,57],[-11,13]],[[98046,53645],[-17,-19],[-6,3],[21,27],[0,-3],[2,-8]],[[98011,53600],[-20,-22],[-6,12],[8,0],[14,22],[16,1],[-2,-11],[-10,-2]],[[98060,52906],[1,-14],[-16,37],[-9,23],[0,10],[5,-6],[5,-12],[3,-9],[11,-29]],[[98063,52832],[-10,-3],[7,9],[2,11],[-1,36],[4,-3],[1,-15],[1,-21],[-4,-14]],[[98064,52426],[15,-23],[-2,-15],[-5,-18],[-20,-46],[-6,4],[19,42],[8,27],[-11,21],[-5,-5],[-1,0],[-4,20],[4,0],[8,-7]],[[98474,51381],[-9,-16],[-4,14],[5,18],[-8,73],[-12,10],[-8,22],[4,0],[12,-20],[10,-9],[6,-48],[4,-44]],[[98547,51145],[2,-30],[-7,4],[-2,11],[-2,30],[-7,30],[8,-8],[6,-23],[2,-14]],[[98065,52616],[-7,-2],[5,11],[31,13],[3,4],[5,-7],[0,-7],[-2,-3],[-16,-1],[-12,-6],[-7,-2]],[[97097,51339],[-3,-1],[-5,6],[0,7],[4,4],[5,-6],[-1,-10]],[[2163,49244],[1,-4],[4,1],[4,1],[-2,-4],[-8,-2],[-3,10],[4,8],[4,1],[1,-2],[-1,-2],[-1,0],[-3,-2],[0,-5]],[[2476,50037],[-1,-5],[-2,4],[1,6],[2,6],[1,-3],[-1,-8]],[[2435,49272],[-3,-3],[-3,1],[-2,4],[0,6],[3,4],[3,-1],[3,-6],[-1,-5]],[[1524,49150],[3,-8],[0,-4],[-1,1],[-5,2],[-1,5],[3,-3],[2,1],[-4,6],[-2,5],[-3,2],[0,3],[3,-1],[5,-9]],[[6957,49488],[-1,-4],[-4,5],[-6,9],[-6,9],[0,4],[8,5],[10,5],[2,-6],[-2,-9],[-1,-18]],[[7838,45252],[-2,-9],[-5,3],[-2,12],[-1,12],[2,11],[2,-1],[4,-12],[2,-16]],[[6704,48601],[-6,-2],[-8,0],[-3,7],[-1,6],[3,1],[2,-2],[11,-1],[3,-4],[-1,-5]],[[6294,52912],[46,-67],[-20,-5],[-48,32],[-44,66],[13,15],[7,-24],[20,-22],[12,46],[7,11],[-35,48],[14,-3],[33,-32],[-5,-65]],[[5739,54103],[22,-49],[-4,-24],[-16,2],[-7,8],[12,5],[2,9],[-6,14],[-7,10],[-5,0],[-2,-20],[-8,16],[5,15],[6,10],[8,4]],[[2306,50249],[9,-11],[7,-15],[4,-20],[-1,-5],[-5,0],[-6,6],[-5,9],[-2,2],[-1,2],[6,-1],[6,-9],[5,-4],[-1,10],[-5,18],[-4,6],[-4,5],[-5,3],[-4,-3],[-1,-2],[-1,5],[1,3],[1,4],[6,-3]],[[61387,50599],[-11,-5],[6,33],[30,43],[13,-10],[2,-10],[-1,-8],[-5,-9],[-34,-34]],[[59796,55006],[-1,-19],[0,-27],[7,-16],[10,-11],[15,12],[12,16],[13,3],[77,-43],[12,-38],[0,-40],[3,-30],[-6,-29],[-6,-90],[2,-82],[23,-60],[20,-48],[16,-67],[13,-21],[16,-10],[53,-3],[78,-4],[75,-4],[7,-2],[16,-9],[69,-91],[63,-82],[54,-72],[52,-70],[51,-68],[39,-57],[39,-17],[62,-8],[44,-3],[40,-23],[60,-22],[44,-12],[27,-12],[75,-14],[12,8],[33,63],[37,101],[15,56],[47,56],[84,77],[59,55],[66,55],[30,-48],[41,-76],[18,-38],[15,-17],[23,-11],[27,0],[15,2],[30,10],[71,9],[41,-1]],[[61536,50866],[-40,-99],[-33,-45],[-45,-21],[-13,4],[-18,14],[-7,-24],[-5,-37],[-10,8],[-7,11],[4,-66],[5,-32],[-7,-44],[-22,-38],[-2,-32],[-47,-85],[-66,-10],[-35,-42],[-16,-34],[-12,-75],[5,-116],[-19,-88],[-3,-45],[-35,-57],[-15,-53],[-11,-54],[-10,-24],[-12,-120],[-16,-73],[-4,-25],[-4,-22],[-12,-43],[-8,-29],[-6,-20],[-41,-187],[-32,-85],[-24,10],[-17,-33],[-2,-15]],[[63939,77681],[-9,-17],[-15,3],[-28,61],[8,62],[10,13],[14,8],[2,-13],[-20,-28],[-2,-35],[17,-39],[23,-15]],[[63975,77748],[-10,-8],[-6,37],[11,31],[15,4],[-5,-49],[-5,-15]],[[64633,78001],[-5,-6],[-18,16],[-12,26],[15,31],[14,-5],[9,-33],[-3,-29]],[[64581,75910],[-7,60],[-3,94],[1,30],[15,79],[16,54],[13,56],[5,73],[-11,118],[-13,26],[-16,9],[-17,2],[-30,-5],[-14,-9],[-25,40],[-30,6],[-16,-11],[-16,-6],[-17,11],[-15,24],[-10,25],[-7,29],[-23,57],[-24,31],[-28,7],[-46,-1],[-15,3],[-1,33],[6,72],[0,38],[-3,35],[-8,29],[-10,25],[-27,42],[-21,58],[-35,120],[-30,135],[-13,21],[-27,21],[-60,17],[-39,18],[-15,17],[-7,29],[1,32],[3,38],[9,31],[31,25],[67,5],[58,-3],[53,-56],[17,-13],[18,-4],[37,18],[19,5],[46,-6],[-14,27],[-17,14],[-18,-1],[-16,11],[-25,52],[-45,59],[-10,24],[-3,39],[8,34],[32,34],[26,47],[13,63],[11,28],[23,45],[34,-8],[54,32],[87,-6],[105,9],[29,-3],[67,-32],[39,-14],[46,-7],[34,14],[-32,44],[-69,51],[-17,44],[31,119],[43,109],[26,129],[-7,128],[-13,35],[4,42],[15,35],[11,35],[-9,42],[-19,65],[-10,22],[-33,35],[-66,2],[-54,19],[-17,-16],[-10,-24],[-13,-15],[-42,-32],[-14,-6],[-14,6],[-21,36],[-18,-4],[-56,22],[-26,49],[-10,7],[-90,38],[-32,8],[-71,-40],[-52,-52],[-15,-7],[-27,-32],[-15,-6],[-16,6],[-14,-2],[-32,-49],[-57,-57],[-28,-35],[-31,-23],[-35,-14],[-36,-2],[-13,-13],[-41,-4],[-25,-11],[-1,-19],[5,-43],[-21,15],[-22,-30],[7,-28]],[[74256,80118],[-26,11],[-51,3],[-30,-7],[-15,-4],[-21,-24],[-16,-24],[-6,-40],[8,-45],[-11,-94],[-15,-36],[-32,-61],[-19,-14],[-30,-11],[-30,-18],[-58,-18],[-63,-9],[-22,-13],[-16,-42],[-12,-35],[-7,-27],[-17,-88],[-11,-78],[10,-98],[8,-108],[-1,-37],[16,-56],[7,-34],[-3,-48],[-22,-38],[-13,-51],[-13,-21],[-36,-10],[-34,-6],[-34,-43],[-27,-30],[-43,-38],[-20,-7],[-11,19],[-8,43],[-14,19],[-21,2],[-17,0],[-53,12],[-35,-1],[-25,-9],[-30,-5],[-51,16],[-33,13],[-22,13],[-53,38],[-70,45],[-28,13],[-17,-14],[-3,-25],[-4,-62],[-8,-39],[-49,-197],[-30,-137],[-38,-131],[-12,-88],[-23,-112],[-22,-81],[-9,-44],[-1,-18],[4,-25],[35,-28],[36,-17],[8,-10],[4,-29],[-1,-47],[-7,-44],[-11,-35],[-10,-17],[-12,-2],[-23,23],[-20,25],[-16,7],[-40,-13],[-37,-20],[-12,0],[-22,12],[-21,25],[-9,49],[-19,22],[-24,-22],[-75,-37],[-82,-44],[-51,-23],[-21,3],[-40,-5],[-35,-12],[-26,-17],[-52,-24],[-47,-16],[-30,-36],[-22,-35],[1,-13],[16,-20],[18,-17],[36,4],[35,3],[30,-22],[26,-14],[7,-18],[-7,-18],[-15,-4],[-6,-12],[3,-17],[-10,-43],[-5,-65],[5,-65],[3,-59],[-2,-30],[-1,-43],[11,-29],[10,-55],[18,-34],[27,-119],[16,-70],[15,-79],[-11,-42],[1,-25],[17,-21],[8,-40],[8,-25],[-2,-24],[-8,-10],[-37,15],[-31,-24],[-32,-25],[-4,-13],[-1,-14],[3,-13],[19,-22],[26,-14],[-2,-22],[-32,-10],[-48,-34],[-13,-36],[-11,-39],[-1,-24],[5,-61],[8,-69],[13,-72],[1,-22],[-7,-16],[-6,-10]],[[60770,71066],[20,-127],[19,-125],[20,-129],[20,-125],[-21,-12],[16,-96],[28,15],[29,11],[13,-62],[-41,-68]],[[59708,68751],[9,76],[-3,40]],[[59714,68867],[14,134],[8,63],[5,47],[20,94],[-3,31],[5,109],[-2,21],[9,60],[17,86],[17,74],[7,33],[17,71],[16,86],[-9,47],[-2,10],[6,54],[8,89]],[[59847,69976],[4,48],[9,63],[17,54],[-8,126],[1,68],[11,78],[-6,91]],[[59875,70504],[5,129],[1,12],[6,16],[4,8],[35,27],[14,3]],[[87046,72697],[-12,-21],[-24,7],[-14,31],[5,35],[25,27],[23,-54],[-3,-25]],[[88428,73630],[-26,-2],[-7,6],[16,14],[1,24],[10,42],[0,13],[-21,2],[1,48],[16,48],[43,75],[11,14],[2,-33],[-13,-77],[-3,-28],[34,-6],[-22,-93],[-42,-47]],[[87480,71594],[-30,-49],[-26,3],[-13,22],[-4,27],[25,43],[21,60],[19,27],[16,15],[12,-1],[-27,-84],[7,-63]],[[86283,69275],[-32,-12],[-17,13],[-16,71],[30,45],[41,-44],[8,-13],[-14,-60]],[[86377,69352],[-24,-6],[-1,34],[19,75],[2,55],[18,70],[8,15],[6,6],[6,-22],[-7,-85],[-18,-65],[-9,-77]],[[86133,70408],[-22,-20],[-3,19],[-9,9],[16,28],[0,12],[-11,19],[12,71],[-3,30],[44,12],[8,-29],[1,-87],[-33,-64]],[[85910,71499],[-18,-23],[-8,35],[8,102],[34,-21],[0,-31],[-16,-62]],[[85940,71632],[-6,-28],[-19,19],[-8,18],[17,87],[-2,34],[1,16],[35,45],[6,-8],[2,-13],[-3,-20],[2,-43],[-27,-71],[2,-36]],[[85740,70727],[10,-15],[16,9],[13,2],[9,-8],[11,-40],[4,-24],[-20,-3],[-9,-5],[-11,-30],[-16,11],[-10,14],[-2,19],[5,70]],[[86216,70520],[-24,-3],[-11,7],[-4,18],[35,37],[26,-6],[-11,-34],[-11,-19]],[[89186,77956],[-11,-37],[-14,55],[-3,58],[8,0],[16,-9],[3,-28],[1,-39]],[[89248,77833],[-19,-4],[-23,24],[-3,30],[17,24],[16,-9],[16,-31],[5,-16],[-9,-18]],[[88744,76083],[-6,-3],[-7,5],[-6,43],[5,23],[18,16],[17,5],[-14,-80],[-7,-9]],[[87319,71706],[-5,-11],[-5,3],[-18,-26],[-4,25],[-13,17],[-2,13],[40,9],[13,-7],[-6,-23]],[[88737,71846],[-3,-27],[-15,6],[-7,18],[1,32],[16,0],[8,-29]],[[85854,70760],[-7,-6],[-9,52],[-6,18],[10,10],[21,94],[4,-37],[8,-37],[8,-6],[-8,-27],[-12,-10],[-9,-51]],[[85969,70980],[-19,-27],[-15,0],[13,32],[2,15],[11,43],[21,15],[9,2],[-17,-44],[-5,-36]],[[86054,71283],[-20,-24],[-14,19],[7,51],[5,17],[16,-17],[6,-46]],[[86826,71494],[-8,-23],[-24,7],[10,20],[7,24],[6,5],[4,-26],[5,-7]],[[86740,71396],[13,-21],[32,9],[4,-6],[-9,-19],[-14,-19],[-26,14],[-16,1],[-2,31],[2,12],[16,-2]],[[86032,70078],[-9,-10],[6,45],[22,40],[2,-26],[-21,-49]],[[89496,67175],[-5,-1],[-18,61],[5,3],[10,-9],[12,-36],[-4,-18]],[[89950,77256],[35,-3],[16,2],[26,-8],[106,-88],[32,-11],[33,-1],[23,7],[20,24],[64,106],[67,97],[8,-4],[0,-27],[-5,-29],[-30,-89],[-33,-119],[-7,-60],[11,-59],[20,-49],[17,-66],[19,-93],[26,-11],[14,-2],[27,28],[25,35],[22,4],[22,-6],[-30,-24],[-28,-30],[-24,-57],[-9,-10],[-28,3],[-16,-2],[-32,-24],[-29,-27],[-27,-33],[-30,-17],[-32,-4],[-49,-27],[-32,-2],[-59,23],[-29,-6],[-63,-53],[-58,-77],[-50,-86],[-42,-104],[-17,-54],[-10,-60],[-2,-40],[-4,-38],[-9,-27],[-12,-22],[-35,13],[-57,55],[-110,81],[-117,123],[-66,62],[-123,-19],[-117,-118],[-11,10],[-44,81],[-22,32],[-26,9],[-19,-1],[-19,-6],[-26,-41],[-10,-30],[-7,-34],[-2,-24],[3,-24],[25,-53],[31,-40],[13,-8],[30,3],[14,-4],[49,-80],[55,-74],[12,-25],[-20,-26],[-22,-13],[-26,3],[-25,10],[-44,32],[-18,-27],[-29,-56],[-16,-60],[-13,-28],[-32,-36],[-34,-19],[-17,6],[-14,23],[-7,27],[-4,32],[7,69],[17,62],[7,63],[-14,89],[-9,18],[-36,53],[-17,50],[-4,63],[2,35],[9,77],[9,39],[16,13],[18,8],[28,27],[30,36],[29,41],[29,51],[15,55],[-25,68],[-5,40],[4,38],[26,20],[27,-15],[55,-56],[11,-5],[37,-3],[51,-12],[30,3],[14,8],[22,46],[10,59],[-4,75],[0,75],[14,61],[43,99],[12,57],[4,141],[16,62],[12,64],[6,135],[-17,129],[-18,64],[-20,60],[3,58],[16,53],[0,16],[4,14],[31,11],[14,11],[14,26],[16,15],[12,-15],[10,-26],[43,-65],[68,-116],[80,-176],[50,-86],[53,-78],[59,-79],[63,-69],[39,-32],[29,-52],[18,-8]],[[86437,71199],[37,-17],[16,-1],[14,7],[23,23],[23,17],[17,-9],[14,-20],[8,-28],[-4,-30],[-26,-63],[-22,-68],[50,-13],[50,1],[-12,-42],[-1,-36],[15,-18],[13,-23],[-4,-21],[-7,-21],[27,-32],[-2,-21],[-7,-22],[-68,-145],[-20,-73],[-13,-81],[-13,-59],[-9,-61],[-8,-66],[-12,-68],[4,-61],[-4,-62],[-34,-153],[-25,3],[-30,18],[-19,-3],[-10,-34],[17,-70],[-54,-83],[-60,-56],[-1,26],[6,20],[9,16],[6,19],[9,66],[-5,65],[-18,83],[-1,29],[12,12],[9,4],[4,11],[1,27],[-6,21],[-17,6],[-17,1],[-11,-31],[-16,-59],[-8,-59],[3,-33],[7,-29],[22,-49],[-6,-29],[-9,-22],[-77,50],[-17,4],[-14,11],[-15,67],[32,16],[9,8],[3,22],[5,65],[-15,55],[-12,19],[-11,23],[7,46],[-4,58],[-1,81],[6,14],[29,16],[21,44],[19,49],[27,87],[22,94],[-21,5],[-18,17],[19,45],[-6,56],[-29,69],[-17,81],[-26,36],[-14,13],[-17,-19],[-14,-23],[13,-53],[-1,-46],[2,-47],[13,-2],[16,11],[13,-8],[7,-24],[2,-32],[-5,-31],[-12,-15],[-15,1],[-14,17],[-12,24],[-27,13],[-28,-28],[-28,-58],[-23,-29],[11,42],[5,47],[-11,32],[-27,54],[-6,31],[-2,38],[5,37],[28,-43],[14,-53],[20,-23],[25,-1],[-19,79],[-7,20],[-28,35],[-37,59],[-23,29],[8,62],[14,12],[12,-3],[39,-22],[4,31],[-6,16],[-3,20],[26,26],[42,22],[9,11],[8,22],[10,11],[30,0],[25,21],[20,58],[5,31],[8,27],[51,46],[13,7],[34,-6],[32,-26],[16,-55],[13,-60],[33,-40]],[[87321,71576],[38,-24],[39,6],[0,-105],[5,-35],[11,-32],[-5,-46],[18,-16],[-53,-52],[-48,-70],[-20,-47],[-17,-50],[-11,-53],[-6,-58],[-16,23],[-46,93],[-29,26],[-47,13],[-15,-3],[-96,-87],[-13,-63],[-26,-96],[-12,-32],[-14,-9],[-10,-16],[-11,-82],[-30,-51],[-18,-1],[-31,14],[-14,-8],[19,81],[-30,9],[-30,-1],[0,52],[-18,30],[13,39],[0,31],[8,18],[3,25],[-1,22],[-18,6],[-12,16],[2,57],[-10,2],[-26,-10],[-54,-44],[-15,0],[23,31],[48,43],[21,25],[48,69],[29,33],[16,58],[5,36],[10,31],[9,49],[15,17],[27,43],[15,-4],[17,-53],[23,-40],[16,3],[30,21],[14,5],[34,-3],[30,26],[13,30],[4,37],[-11,63],[15,-6],[14,3],[33,40],[34,23],[35,6],[40,-22],[39,-36]],[[89229,75675],[11,-11],[52,29],[-10,-88],[-5,-89],[4,-148],[4,-67],[9,-65],[22,-46],[29,-33],[42,-105],[23,-129],[16,-63],[11,-66],[4,-30],[0,-30],[-3,-41],[4,-33],[-5,-105],[-19,-121],[-2,-62],[-16,-12],[-10,-29],[-9,-13],[-9,-10],[-14,-3],[-9,-11],[-4,-33],[-6,-31],[-12,-28],[-9,-31],[-8,-75],[-3,-77],[-11,-54],[-28,-14],[-32,1],[-40,-25],[-9,-15],[-32,-94],[-9,-56],[0,-59],[9,-73],[12,-72],[9,-133],[-10,-203],[-9,-65],[-20,-44],[-16,-20],[-13,-25],[-17,-66],[-29,-132],[-2,-34],[0,-34],[-8,-45],[-5,-44],[5,-51],[9,-48],[38,-123],[15,-36],[17,-34],[-65,-36],[-12,-17],[-39,-70],[-12,-67],[1,-73],[-7,-27],[-10,-23],[-12,-15],[-43,-34],[-28,-33],[-27,-52],[-11,-28],[-21,9],[-13,24],[12,31],[-3,35],[6,93],[-7,37],[22,28],[10,45],[24,35],[16,32],[3,26],[-15,28],[-15,20],[-22,0],[-21,-6],[-13,-27],[-5,-36],[1,-16],[-2,-15],[-32,-49],[4,-52],[10,-26],[12,-13],[-4,-17],[-15,-42],[-11,-4],[-20,58],[-25,32],[-31,0],[-31,-12],[-25,-39],[-8,-32],[-5,-33],[2,-81],[-10,-68],[-19,-59],[-10,-22],[-23,-40],[-17,-5],[-12,18],[-9,28],[12,101],[-1,57],[28,29],[-23,41],[-28,16],[-39,-21],[-11,-25],[-8,-33],[-21,-41],[-24,-39],[-26,-66],[-18,-79],[-58,26],[-32,6],[-32,-2],[-57,9],[-63,-16],[-71,-30],[4,22],[59,47],[2,14],[-6,26],[-14,1],[-35,-9],[-18,4],[-8,28],[-12,12],[-7,-12],[2,-54],[-9,-7],[-11,14],[4,42],[-8,61],[-1,39],[12,32],[-12,14],[-14,-5],[-17,-16],[-14,-22],[-32,-112],[-12,-64],[23,-52],[63,-72],[10,-17],[1,-31],[-8,-32],[-17,-15],[-69,-24],[-59,-46],[-18,-47],[-54,-183],[-43,-125],[-62,-43],[-67,39],[-16,43],[-14,54],[-25,48],[-22,53],[-13,63],[2,101],[-10,61],[9,16],[37,37],[12,21],[21,48],[8,27],[1,41],[-17,21],[-44,-1],[-43,-13],[-31,18],[-41,49],[-12,11],[-43,3],[-31,-9],[-31,-18],[-32,-6],[-11,-9],[-37,-60],[-29,-38],[-26,-19],[-55,-5],[-28,-12],[-29,-20],[-8,1],[-30,-27],[-35,-24],[-19,-24],[-34,16],[-68,-43],[-33,-5],[-34,23],[-31,38],[-30,-16],[-21,-56],[-10,-113],[-12,-50],[-4,-61],[-15,10],[-91,109],[-6,4],[-74,-19],[-19,-9],[-23,-22],[-25,-10],[-23,16],[-22,26],[-21,-8],[-22,-18],[-8,165],[4,21],[14,29],[14,25],[36,9],[36,-9],[25,12],[22,32],[23,47],[26,37],[35,30],[34,34],[30,48],[28,52],[26,39],[28,32],[43,77],[57,87],[22,64],[13,18],[49,35],[65,28],[31,-2],[30,-56],[17,8],[16,14],[34,8],[34,-9],[34,0],[33,7],[65,19],[34,22],[33,29],[118,20],[82,48],[12,-3],[13,-11],[1,-36],[-10,-39],[10,-24],[16,-14],[76,-5],[22,-8],[32,26],[30,33],[31,44],[22,49],[-20,61],[-4,67],[17,73],[24,62],[30,37],[27,42],[54,121],[40,98],[14,121],[-8,142],[34,106],[33,18],[66,49],[34,14],[5,-21],[-1,-28],[-51,-89],[-30,-36],[-17,-12],[-16,-16],[-7,-31],[26,-53],[7,-38],[-2,-37],[1,-34],[30,-36],[34,-12],[14,0],[13,10],[39,89],[8,15],[111,65],[55,50],[30,13],[28,26],[64,100],[23,46],[21,51],[18,59],[13,64],[18,40],[101,95],[32,52],[11,25],[12,73],[9,75],[12,59],[16,56],[22,57],[25,52],[15,54],[21,128],[10,72],[7,25],[11,22],[9,27],[7,31],[3,30],[5,93],[-3,72],[-16,61],[-14,17],[-15,1],[-23,-5],[-19,24],[4,22],[20,4],[13,12],[9,21],[18,66],[11,71],[1,31],[-14,58],[-11,69],[0,37],[12,43],[17,34],[16,9],[17,2],[15,13],[14,20],[8,21],[13,59],[4,33],[-7,90],[8,24],[11,15],[16,-11],[15,-2],[19,3],[17,-9],[4,-23],[11,-151],[6,-21],[13,-16],[14,3],[13,23],[8,32],[17,6],[51,-34],[18,24],[11,37],[11,66],[-5,60],[-13,21],[-12,-4],[-11,-16],[-13,-9],[-75,-31],[1,66],[16,99],[9,31],[12,15],[32,-17],[15,-11],[34,-48]],[[84525,65965],[-16,-91],[-14,-13],[-14,7],[-14,51],[10,19],[14,-10],[11,4],[25,74],[7,-12],[-9,-29]],[[84413,65829],[-18,-8],[-21,10],[-19,2],[0,18],[20,17],[0,25],[5,13],[46,-30],[-2,-22],[-11,-25]],[[84845,66096],[-24,-15],[-25,8],[4,81],[9,-11],[5,-28],[19,-16],[12,-19]],[[85627,67196],[-27,-27],[-10,-31],[-25,-11],[-24,-44],[-23,-9],[0,-35],[10,-30],[-15,-6],[-17,-36],[-1,-27],[6,-22],[-1,-11],[-20,-31],[-22,-2],[-1,35],[2,25],[20,63],[0,73],[19,8],[7,10],[29,52],[6,22],[-16,21],[1,25],[4,11],[24,-8],[10,-19],[5,-2],[14,14],[6,25],[27,50],[11,49],[21,-41],[-6,-52],[-14,-39]],[[85832,67811],[-12,-11],[-15,15],[-5,66],[7,32],[12,7],[11,-57],[7,-24],[-5,-28]],[[85958,68092],[-24,-47],[-25,42],[-31,29],[15,7],[8,11],[1,18],[20,27],[40,20],[12,2],[14,19],[5,17],[6,9],[25,24],[7,-28],[-1,-21],[-19,-12],[-19,-29],[-17,-36],[-16,-15],[-5,-11],[4,-26]],[[85922,68032],[2,-13],[-27,11],[-11,53],[18,-10],[6,-18],[12,-23]],[[88844,70884],[-5,-6],[-13,19],[-2,17],[2,10],[9,2],[18,-20],[-9,-22]],[[28538,62475],[34,-21],[35,-11],[15,0],[14,-7],[32,-49],[26,-28],[97,-60],[33,-105],[6,-33],[-25,-19],[-32,-7],[-30,-1],[-28,20],[-12,16],[-29,7],[7,14],[-13,7],[-16,-2],[-12,-40],[-14,-32],[-25,3],[-10,27],[-13,-12],[-11,-20],[-13,-75],[-21,37],[-23,31],[-28,13],[-57,2],[-28,11],[-22,63],[-9,18],[-23,17],[-22,72],[-8,10],[-62,16],[-12,40],[4,36],[20,44],[10,12],[34,-1],[32,13],[14,19],[15,12],[117,-32],[27,0],[26,-5]],[[52903,78839],[7,-6],[28,-1],[31,-4],[19,-31],[19,-10],[28,-3],[18,4],[9,11],[11,36],[19,45],[31,22],[52,5],[27,8],[27,-1],[20,-7],[21,1],[54,31],[56,25],[8,-4],[1,-9],[-10,-18],[-10,-25],[7,-29],[31,-57],[17,-44],[17,-33],[25,-17],[33,-11],[28,-4],[30,-12],[100,-31],[51,-8],[39,-2],[58,-20]],[[53811,78103],[17,23],[-43,82],[-19,0],[-26,-35],[-72,36],[-14,-15],[-10,-28],[-25,-35],[-35,-15],[-40,-38],[-41,-27],[-32,-21],[-18,4],[29,44],[-13,1],[-38,-31],[-22,-27],[-7,-44],[-7,-74],[17,-19],[30,-97],[36,-41],[-7,-40],[-9,-31],[-22,-27],[-19,20],[-11,0],[-8,-64],[16,-168],[25,-119],[25,-51],[57,-81],[60,-42],[108,-136],[59,-42],[15,-24],[36,-104],[31,-121],[33,-189],[24,-94],[48,-105],[100,-151],[90,-111],[84,-68],[66,-12],[155,15],[27,-6],[29,-19],[6,-47],[-10,-32],[-33,-33],[-33,-46],[-4,-63],[31,-44],[150,-117],[153,-98],[48,-50],[55,-78],[134,-107],[22,-52],[82,-111],[36,-87],[7,-67],[-17,-67],[-8,-48],[-14,-48],[-35,18],[-39,49],[-59,197],[-108,20],[-22,15],[-39,34],[-2,22],[-10,28],[-9,10],[-42,6],[-28,-32],[-34,-76],[-38,-109],[-39,-160],[-2,-64],[21,-63],[63,-35],[48,-56],[32,-58],[3,-140],[14,-80],[-21,-45],[-41,11],[-54,-29],[-39,-51],[-16,-49],[4,-128],[-8,-48],[-73,-92],[-38,-94],[-10,-39],[-14,-45],[-93,-1],[-21,55],[-1,81],[16,50],[34,24],[22,104],[-7,75],[14,33],[12,23],[26,14],[37,13],[3,105],[-28,48],[-10,66],[-14,124],[-47,157],[-25,140],[-19,69],[-30,37],[-54,-1],[-27,10],[-96,98],[-6,15],[0,25],[16,40],[-10,52],[-12,50],[-18,43],[-21,22],[-43,-14],[-15,-10],[-27,4],[-21,-19],[-12,-1],[33,75],[-9,17],[-33,31],[-45,5],[-12,4],[-8,-20],[-8,11],[1,33],[-53,150],[-35,61],[-17,11],[-32,-13],[-54,27],[-32,6],[-17,-7],[-27,-19],[-13,12],[-5,20],[-48,63],[-61,35],[-118,197],[-36,74],[-75,81],[-47,119],[-39,43],[-56,35],[-13,-4],[-17,-13],[-13,-2],[-10,15],[10,16],[12,7],[-4,45],[-64,118],[-38,37],[-10,24],[-8,32],[-8,20],[-18,13],[-15,-3],[-21,8],[1,57],[4,43],[-3,37],[-20,96],[-36,82],[-20,195],[-17,55],[-39,42],[-88,46],[-122,126],[-26,2],[-74,49],[-46,8],[-59,-43],[-72,-121],[-59,-125],[-21,-25],[-75,-43],[-67,-20]],[[52081,77054],[-1,32],[-2,24],[11,27],[19,31],[17,40],[7,28],[-3,19],[-8,28],[-11,2],[-63,-23],[-15,6],[-47,36],[-50,46],[-19,32],[-7,32],[5,21],[-4,20],[-10,27],[9,31],[16,39],[8,26],[13,7],[6,16],[-10,64],[-6,10],[-9,8],[-14,1],[-24,13],[-18,22],[-4,30],[-9,28],[-16,27],[-1,28],[17,15],[25,1],[17,-6],[39,46],[14,4],[13,10],[10,63],[9,19],[2,11],[-8,13],[-31,45],[-15,46],[-22,51],[-21,23],[-4,18],[-1,23],[5,19],[37,31],[23,34]],[[52887,76530],[9,-22],[1,-13],[-6,-15],[3,-33],[-24,28],[-35,-14],[-21,3],[-6,24],[5,15],[33,3],[11,7],[20,-3],[10,20]],[[53871,75291],[-12,-5],[-7,6],[-4,9],[5,22],[25,-13],[-1,-12],[-6,-7]],[[53347,73016],[-13,-6],[-18,19],[-1,28],[3,9],[22,-13],[6,-26],[1,-11]],[[54326,73859],[-19,-66],[-9,-25],[-67,-160],[-7,-37],[-5,-40],[-7,-35],[-9,-34],[-9,-42],[1,-48],[4,-23],[8,-16],[13,-14],[10,-22],[-16,-21],[18,-40],[14,-24],[2,-24],[0,-24],[-30,-46],[-12,-24],[-8,-31],[-3,-31],[3,-28],[-1,-28],[-30,4],[-32,17],[-31,-8],[-45,33],[-16,5],[-15,13],[-38,100],[-30,43],[-32,33],[-33,2],[-33,-4],[-29,20],[-59,68],[-63,55],[-27,35],[-12,24],[-14,16],[-36,16],[-33,37],[-14,2],[-32,-4],[-16,2],[-16,13],[-32,44],[-20,60],[-5,26],[14,69],[17,65],[15,19],[17,13],[11,20],[9,23],[32,-68],[15,-17],[14,4],[26,24],[2,27],[29,35],[36,0],[17,-6],[9,-31],[14,-9],[16,-5],[53,-59],[15,-9],[15,-2],[41,25],[31,9],[66,-13],[36,15],[25,1],[36,23],[28,38],[15,9],[15,3],[38,-2],[38,-9],[16,9],[13,25],[16,11],[17,-8],[44,43],[19,2],[18,-16],[-16,-27]],[[52675,75392],[14,-37],[31,-151],[3,-32],[-6,-34],[-8,-23],[-31,-76],[5,-63],[11,-39],[2,-43],[-6,-54],[-19,-328],[-9,-58],[-6,-50],[-21,-16],[-28,17],[-34,28],[-16,-2],[-16,-10],[-13,9],[-13,16],[-9,-113],[-16,-46],[-23,-29],[-23,-2],[-23,10],[-19,0],[-15,21],[-12,38],[-18,47],[-19,55],[-2,49],[-3,109],[5,24],[8,23],[4,49],[-3,43],[6,15],[11,-15],[8,5],[-1,22],[3,40],[-15,34],[-24,11],[-2,35],[2,35],[13,23],[4,30],[1,94],[-18,34],[-6,52],[-9,33],[-16,34],[-18,27],[-12,26],[-2,69],[6,58],[6,24],[6,-3],[18,-29],[15,-6],[29,-7],[29,9],[35,26],[34,31],[49,93],[30,18],[16,25],[5,33],[13,8],[15,-32],[19,-3],[29,-26],[12,-26],[11,-30],[10,-13],[11,-8],[2,-7],[-9,-7],[-10,-35],[6,-10],[16,-19]],[[52355,74347],[-16,-57],[-17,40],[-1,35],[3,10],[20,-15],[11,-13]],[[52301,75483],[-9,-26],[-13,2],[5,19],[12,39],[15,13],[6,-11],[-7,-23],[-9,-13]],[[59875,70504],[-19,3],[-23,28],[-4,25],[-7,8],[-16,3],[-31,13],[-35,-43],[-15,-70],[-4,-33],[-12,-70],[5,-42],[2,-55],[3,-45],[-3,-27],[-7,-15],[2,-10],[6,-4],[19,12],[21,-12],[20,-23],[1,-15],[-14,-9],[-33,-35],[-23,-41],[-6,-38],[-16,-81],[2,-16],[8,-10],[54,9],[48,32],[37,35],[12,-2]],[[59714,68867],[-19,-44]],[[59695,68823],[-10,50],[-21,142],[-16,98],[-21,121],[-36,147],[-3,35],[-8,51],[-25,134],[-20,96],[-23,123]],[[59512,69820],[29,48],[0,41],[49,94],[-1,9],[-13,25]],[[59576,70037],[2,4],[54,175],[35,173],[33,241],[23,122],[20,81],[9,67]],[[59512,69820],[-9,48],[-4,18]],[[59499,69886],[52,92],[25,59]],[[47236,82899],[-1,-17],[-21,21],[-10,22],[-56,11],[23,22],[12,-6],[40,-1],[11,-10],[2,-42]],[[48272,83e3],[12,-21],[5,-21],[-20,-7],[-22,4],[-10,-14],[-1,-26],[8,-34],[14,-24],[11,-55],[10,-60],[14,-37],[3,-45],[-2,-22],[3,-40],[-6,-14],[4,-38],[18,-78],[7,-43],[5,-94],[-12,-36],[-16,-33],[-11,-40],[-8,-43],[-5,-70],[-36,-81],[-15,-20],[-18,-13],[39,-56],[-32,-26],[-34,-8],[-38,14],[-23,-1],[-22,-19],[-8,-11],[-7,6],[-14,46],[-11,-48],[-22,-15],[-37,3],[-62,-13],[-24,-14],[-10,-21],[-8,-25],[-10,-14],[-11,-8],[-48,-18],[-9,-8],[-23,-40],[-29,-23],[-24,-7],[-21,23],[-9,14],[-10,8],[-33,-2],[10,-7],[7,-16],[3,-32],[-4,-31],[-16,-15],[-19,-3],[-31,-32],[-41,-9],[-22,-30],[-134,-50],[-7,0],[-19,13],[-20,5],[-20,-4],[-56,-28],[-28,6],[35,69],[47,35],[5,10],[-16,4],[-88,-24],[-31,-21],[-31,-6],[14,32],[40,43],[21,21],[14,8],[14,25],[42,29],[-135,-59],[-35,7],[-8,16],[-28,-7],[-10,40],[40,61],[24,26],[29,14],[27,20],[10,25],[-13,8],[-82,-6],[-39,5],[2,20],[8,22],[40,37],[22,6],[20,-4],[19,-9],[15,-13],[46,8],[-19,23],[-3,49],[-15,16],[19,22],[21,14],[36,47],[13,7],[71,11],[76,24],[76,34],[-39,19],[-19,25],[-30,-51],[-21,-19],[-61,-10],[-19,6],[-27,15],[-9,-6],[-8,-12],[-40,-24],[-42,-6],[49,45],[62,76],[14,25],[20,42],[-6,18],[-13,11],[45,87],[16,15],[29,3],[22,14],[9,0],[8,5],[19,26],[-29,16],[-29,9],[-92,-9],[-12,2],[-12,8],[-7,11],[-6,30],[-6,6],[-21,0],[-20,-9],[-15,1],[-14,13],[23,30],[-29,7],[-29,-6],[-25,9],[0,19],[11,19],[-15,18],[-3,23],[16,11],[16,-4],[35,17],[43,8],[-37,16],[-15,14],[-1,22],[3,18],[44,32],[46,13],[-4,21],[4,22],[-47,7],[-46,-16],[5,43],[11,38],[2,25],[-2,27],[-22,-11],[-3,38],[-9,26],[-32,-18],[1,35],[9,24],[17,11],[17,-5],[30,0],[30,19],[43,4],[69,-5],[47,-52],[12,9],[19,33],[9,3],[71,-14],[44,-18],[12,6],[-7,35],[-15,25],[19,33],[23,22],[16,11],[36,14],[15,13],[11,42],[16,35],[-90,-18],[-85,41],[14,29],[18,17],[31,13],[3,15],[15,13],[26,33],[-9,43],[5,32],[19,21],[6,30],[8,22],[38,8],[37,20],[13,-2],[43,5],[15,-8],[-4,36],[27,4],[10,-7],[5,-25],[12,-17],[3,-28],[-8,-22],[-13,-17],[12,-17],[-19,-31],[21,13],[29,31],[-1,25],[-5,31],[-9,28],[4,31],[17,20],[43,10],[-18,35],[16,3],[18,-7],[25,-28],[26,-21],[28,-17],[-27,-35],[-32,-23],[-13,-26]],[[62434,73238],[0,-4],[9,-41],[23,-153],[13,-19],[15,-16],[11,-23],[4,-23],[-1,-35],[0,-41],[6,-31],[9,-24],[8,-12],[12,-1],[14,-6],[9,-24],[31,-174],[3,-22],[13,-7],[21,3],[21,-18],[24,-28],[21,-53],[15,-9],[46,8],[63,-8],[29,-28],[-3,-16],[-23,-19],[-39,-22],[-12,-38],[-7,-48],[1,-27],[10,-30],[28,-60],[2,-21],[5,-30],[5,-21],[-6,-40],[-25,-27],[-34,-30],[-67,-132],[-5,-29],[0,-78],[-7,-23],[-21,1],[-17,4],[0,-28],[-11,-36],[-6,-32],[25,-75],[4,-40],[-4,-36],[-23,-63],[-13,-42],[3,-9],[18,-17],[56,-138],[17,-48],[24,13],[9,-1],[7,-8],[4,-16],[0,-21],[-6,-31],[30,-12],[11,-32],[35,-107],[-2,-32],[-16,-50],[0,-34],[3,-30],[5,-11],[52,-4],[22,-12],[53,-55],[61,-84],[50,-69],[43,-58],[45,4],[13,-11],[11,-18],[13,-48],[26,-109],[22,-37],[34,-87],[32,-82],[-21,-111],[-20,-116],[0,-149],[0,-80],[43,-3],[49,-4],[0,-96],[0,-96],[1,-110],[14,-5],[23,-23],[9,-36],[13,-19],[14,-3],[15,-18],[14,-32],[5,-24],[-4,-16],[3,-29],[10,-42],[13,-19],[18,-24]],[[63484,69102],[-25,-14],[-28,11],[-59,48],[-19,2],[-25,-19],[-1,-16]],[[65607,67350],[-26,-69],[-39,-58],[-17,18],[-12,0],[-28,-23],[-20,-3],[-37,-40],[-33,-20],[-23,2],[-8,4],[-5,27],[0,10],[15,-5],[51,36],[64,58],[6,26],[-10,43],[3,9],[41,-21],[46,42],[39,11],[19,-29],[-26,-18]],[[67017,72361],[5,-38],[-1,-23],[-9,-23],[-6,-29],[-7,-36],[-3,-28],[-13,-14],[-11,-9],[1,-36],[6,-31],[6,-36],[-7,-25],[-5,-28],[-10,-46],[3,-38],[-11,-33],[-14,-28],[-9,-23],[-2,-33],[-10,-11],[-19,-27],[-12,-19],[-18,-5],[-3,-16],[2,-15],[8,-9],[11,-33],[24,-57],[-68,-7],[-21,-51],[-23,-72],[11,-145],[-11,-75],[7,-42],[17,-29],[23,-16],[42,-1],[28,-12],[3,-19],[-16,-28],[-26,-54],[-14,-23],[-43,-107],[0,-45],[4,-37],[19,-116],[18,-112],[33,-202],[0,-46],[-11,-105],[0,-63],[4,-82],[-3,-43],[8,-95],[9,-7],[72,-18],[65,-17],[87,-23],[27,-56],[16,-122],[-1,-92],[-7,-47],[-63,-134],[-63,-136],[-63,-135],[-73,-156]],[[67107,66360],[-15,-4],[-12,-24],[-22,-30],[-47,23],[-37,24],[-124,57],[-13,28],[-8,48],[-21,13],[-31,-72],[-104,42],[-36,-13],[-21,22],[-57,2],[-44,45],[-64,-31],[-50,-6],[-69,79],[-74,22],[-60,-7],[-31,6],[-50,29],[-24,29],[-39,-22],[-18,41],[-110,38],[-21,74],[-15,68],[-1,70],[-27,123],[-9,177],[-10,70],[-15,60],[-20,51],[-27,55],[-24,22],[-103,42],[-20,-6],[-46,-27],[-49,-61],[-81,-34],[-17,-26],[-20,-59],[-26,-35],[-36,9],[-39,-35],[-72,-97],[-38,-29],[-32,2],[-34,46],[-76,62],[-49,20],[-69,-14],[-32,11],[-56,72],[-14,53],[-32,35],[-99,79],[-81,105],[-15,39],[-10,59],[-35,71],[-79,58],[-45,61],[-52,14],[-49,-2],[-21,11],[-20,27],[-67,127],[0,51],[-41,124],[-10,45],[-9,123],[-11,32],[-43,51],[-7,33],[10,44],[0,34],[-23,31],[-33,17],[-8,38],[6,73],[-5,47],[-30,73],[-43,76],[-44,111],[-17,28],[-11,73],[-16,87],[-24,6],[-119,-104],[-35,59],[-104,102],[-8,15],[-7,23],[13,14],[13,5],[26,-18],[16,21],[-6,35],[-26,21],[-36,-2],[10,-32],[-34,-30],[-7,-41],[5,-49],[3,-70],[-14,-33],[-10,-16],[-45,-4],[-21,-31],[-14,-7]],[[62449,74683],[5,-13],[45,-118],[20,-35],[12,-29],[8,-33],[13,-23],[18,-12],[23,-32],[15,-25],[25,-51],[26,-20],[96,-37],[54,-17]],[[62809,74238],[15,-5],[41,25],[48,-4]],[[62913,74254],[18,-1],[64,105],[19,36],[38,18],[21,42],[34,50],[42,48],[38,43],[30,26],[53,61],[33,21],[29,-1],[43,-71],[36,-65],[11,-28],[-18,-25],[-34,-25],[-6,-18],[-2,-23],[1,-22],[5,-18],[41,-42],[5,-23],[0,-23],[-5,-15],[-9,-8],[-29,-12],[-24,-13],[-9,-14],[-7,-16],[1,-17],[7,-20],[51,-55],[5,-20],[10,-27],[13,-17],[21,-4],[10,-11],[48,-101],[12,-7],[57,22],[8,-1]],[[63574,73983],[1,-25],[8,-143],[7,-74],[9,-72],[16,-66],[18,-62],[25,-39],[56,-47],[27,-13],[71,-9],[71,-21],[41,-22],[13,-15],[11,-23],[34,-110],[54,-78],[110,-117],[53,-39],[179,-74],[119,4],[328,142],[110,36],[41,0],[-25,-28],[-41,-17],[25,-20],[38,-3],[18,3],[13,18],[2,30],[-2,30],[-18,132],[-10,93]],[[77077,52687],[61,-162],[24,-22],[33,-74],[8,-25],[-9,-52],[-7,-147],[-15,-37],[-38,18],[-1,26],[-22,111],[-39,62],[-16,3],[-10,63],[-20,76],[-60,137],[46,-1],[22,33],[5,27],[4,7],[34,-43]],[[77545,50818],[-26,-3],[-55,69],[-13,31],[-3,42],[-52,159],[-7,37],[20,131],[54,31],[18,-22],[6,-59],[30,-106],[10,-57],[8,-26],[3,-19],[-2,-14],[22,-68],[15,-39],[2,-64],[-30,-23]],[[82399,46881],[-35,-120],[13,-19],[7,-18],[-58,-25],[-24,13],[-14,-3],[-59,22],[-42,28],[-5,21],[3,26],[13,-8],[32,-4],[13,11],[0,77],[-5,100],[44,82],[24,33],[27,20],[68,-46],[11,-12],[9,-18],[4,-30],[-26,-130]],[[82068,47145],[28,-31],[40,-89],[3,-25],[-12,-24],[-28,-38],[-63,-58],[-10,-28],[-14,-54],[-3,-23],[-4,-13],[-7,-9],[-14,-8],[-15,12],[13,34],[1,42],[-10,39],[-14,32],[-29,44],[-30,40],[-31,19],[-33,9],[-12,19],[-19,49],[-6,27],[-3,28],[2,27],[8,1],[32,-6],[59,-32],[30,-2],[16,7],[43,62],[11,-1],[41,-27],[30,-23]],[[79456,50881],[10,-40],[13,-35],[10,-39],[13,-185],[43,-159],[126,-63],[-21,-25],[-10,-23],[-8,-27],[-18,-110],[1,-24],[11,-37],[3,-41],[-16,0],[-17,10],[-15,15],[-13,20],[-14,16],[-15,10],[-26,32],[-34,22],[-36,17],[-17,47],[-8,58],[9,86],[-9,24],[-13,21],[-15,62],[-6,73],[-22,28],[-30,17],[-13,14],[-58,-26],[-14,6],[-12,20],[-32,21],[1,40],[15,32],[35,33],[16,27],[3,36],[-6,26],[3,28],[11,27],[13,21],[34,27],[16,-48],[7,-40],[10,-30],[14,42],[-9,72],[27,16],[26,1],[19,-20],[13,-31],[5,-44]],[[84216,49221],[6,-124],[-2,-32],[-15,47],[-6,10],[-4,-10],[-6,-5],[-8,0],[-10,-48],[-1,-45],[-8,-30],[-4,-101],[3,-28],[12,14],[7,3],[27,-39],[15,-28],[-4,-34],[-19,-35],[-21,-15],[-16,15],[-5,-7],[-9,-18],[-8,-24],[3,-24],[-19,-68],[-10,-19],[-22,21],[-14,-18],[-11,1],[-16,69],[0,32],[15,36],[1,26],[7,29],[17,40],[10,29],[0,19],[8,72],[2,30],[5,32],[8,66],[1,122],[26,101],[25,28],[11,5],[-2,-27],[31,-68]],[[84067,48807],[-7,-38],[-15,-30],[-13,-2],[-12,6],[-23,26],[-6,-27],[-18,1],[-6,35],[12,105],[19,39],[-2,41],[-15,88],[10,46],[43,34],[37,42],[12,9],[11,-32],[5,-149],[-40,-118],[8,-76]],[[80087,53968],[-38,-21],[-22,30],[24,36],[8,3],[6,7],[2,15],[-43,24],[-12,21],[-12,54],[0,34],[55,91],[13,10],[2,-38],[38,-95],[2,-64],[-1,-23],[-22,-84]],[[80057,50116],[-5,-61],[-6,-23],[-24,-30],[-7,-18],[-22,3],[-3,32],[-7,21],[-23,25],[-6,-6],[-4,-37],[-45,-26],[-13,-2],[6,49],[-11,38],[-1,47],[-2,21],[-6,12],[11,32],[-1,37],[12,39],[7,95],[47,21],[10,-17],[56,-21],[39,-58],[21,-77],[-23,-96]],[[87606,51467],[59,-22],[21,1],[21,-25],[26,12],[14,-8],[49,-88],[24,-58],[35,-50],[26,-17],[-19,-45],[-39,-24],[-15,-1],[-30,27],[-25,-5],[-21,34],[-4,52],[-21,119],[-29,-34],[-33,54],[-9,1],[-3,-9],[-14,19],[-12,37],[-1,30]],[[87631,50926],[110,-29],[29,4],[63,-12],[52,-38],[91,-7],[28,-12],[21,-26],[-51,-22],[-24,-20],[-45,-10],[-38,10],[-27,-12],[-10,20],[-39,20],[-51,41],[-105,49],[-5,30],[1,14]],[[86336,51840],[48,-24],[11,4],[70,-64],[11,-31],[-4,-21],[10,-29],[-22,-43],[-11,-5],[-12,16],[-22,10],[-25,-18],[-17,13],[-14,40],[-24,24],[-35,84],[-17,-3],[5,-33],[14,-21],[20,-64],[11,-6],[11,2],[16,-27],[-1,-41],[-40,-16],[-14,30],[-3,55],[-23,-19],[-9,-19],[-7,-2],[-15,57],[-43,3],[-29,30],[14,32],[2,30],[19,17],[19,-15],[19,22],[14,-6],[10,14],[38,9],[25,15]],[[85681,53025],[-44,-10],[-10,27],[-12,124],[31,99],[40,58],[27,15],[9,1],[24,-71],[-18,-144],[-21,-73],[-26,-26]],[[85597,50886],[-17,-23],[-8,-7],[-41,16],[-48,-3],[-50,-22],[-29,18],[-18,30],[1,32],[17,78],[37,60],[16,10],[26,-16],[45,-45],[36,-54],[32,-41],[1,-33]],[[85014,50431],[-4,-11],[-17,31],[-11,88],[-10,24],[-11,83],[3,24],[14,35],[11,0],[8,-21],[-5,-90],[25,-114],[-3,-49]],[[85006,50812],[85,-19],[-12,-21],[-92,-33],[-33,6],[-100,-20],[-12,1],[-2,32],[-11,23],[16,20],[21,4],[55,-7],[85,14]],[[84713,50860],[26,-20],[9,0],[9,24],[5,4],[12,-12],[2,-39],[17,6],[13,-14],[4,-9],[-1,-39],[-50,-6],[-36,-32],[-48,28],[-54,-48],[-33,-16],[-28,1],[-25,84],[14,99],[11,16],[18,8],[50,5],[85,-40]],[[86478,47235],[-4,-7],[-35,8],[-19,0],[2,43],[-10,33],[14,48],[0,56],[15,7],[2,32],[17,84],[10,19],[15,7],[17,49],[10,15],[10,37],[15,17],[-2,32],[9,17],[23,13],[16,-15],[10,-33],[-26,-40],[13,-99],[-19,-108],[-12,-33],[-23,-27],[-6,-27],[-27,-53],[-8,-46],[-2,-19],[-5,-10]],[[85222,47426],[3,-28],[0,-13],[-33,-9],[-32,-31],[-17,-36],[-13,-46],[-44,19],[-39,3],[-18,16],[-19,-1],[-24,-14],[-35,-40],[-8,-3],[3,60],[10,37],[36,88],[31,-19],[36,-6],[40,18],[29,39],[40,21],[33,-52],[21,-3]],[[84603,47153],[7,-35],[22,20],[21,4],[47,-3],[35,-8],[21,-15],[2,-70],[-10,-15],[-181,-53],[-18,17],[-7,17],[20,52],[-9,25],[10,40],[22,27],[18,-3]],[[86389,51085],[-10,-16],[-34,15],[-17,35],[-12,48],[-8,39],[-2,32],[-10,38],[1,14],[62,40],[12,-15],[26,-1],[12,-29],[-8,-127],[-12,-73]],[[76803,54855],[34,-5],[63,31],[35,-3],[32,-23],[30,-13],[72,17],[14,-5],[13,-13],[11,-20],[33,-75],[56,-92],[16,-59],[9,-67],[6,-15],[63,-127],[7,-54],[-9,-73],[19,-59],[61,-55],[36,-40],[8,-24],[5,-29],[21,-44],[25,-28],[78,-74],[103,-156],[59,-74],[48,-112],[18,-54],[14,-58],[29,-84],[50,-105],[13,-31],[13,-46],[16,-43],[19,-39],[22,-30],[22,-10],[37,-75],[20,-24],[-3,59],[-17,51],[0,32],[3,27],[14,24],[16,6],[31,-21],[49,-89],[21,-52],[16,-72],[13,-75],[20,-37],[27,-13],[31,-5],[28,-23],[65,-104],[22,-48],[16,-57],[12,-68],[7,-71],[4,-16],[42,-85],[22,-36],[27,-18],[78,-19],[28,-30],[23,-49],[10,-50],[-17,-44],[-61,-68],[-66,-47],[64,16],[32,20],[30,31],[30,39],[46,55],[17,11],[21,-4],[18,-16],[28,-53],[26,-57],[20,-66],[12,-73],[-22,-39],[-33,-28],[-45,-71],[-4,-28],[9,-18],[-11,-52],[25,-32],[4,-28],[-22,-39],[2,-24],[26,-103],[13,-24],[40,-52],[60,-53],[34,-25],[38,-19],[17,1],[28,8],[6,-20],[12,-102],[6,-64],[9,-137],[11,-57],[-1,-69],[15,-59],[30,-38],[32,-31],[15,-30],[0,-45],[-5,-36],[-11,-28],[-33,-60],[-6,-25],[-5,-65],[6,-30],[13,-2],[10,16],[40,87],[11,16],[15,12],[15,8],[72,0],[31,-13],[27,-29],[25,-36],[88,-228],[40,-126],[3,-31],[1,-33],[-7,-25],[-37,-86],[-4,-23],[-12,-94],[2,-67],[13,-29],[9,-30],[0,-28],[-25,-139],[-2,-23],[15,-226],[1,-61],[-3,-77],[2,-124],[-19,-384],[-4,-23],[-15,-59],[-20,1],[-16,10],[-12,22],[-6,28],[-9,23],[-48,71],[-13,-12],[-49,-88],[-13,-13],[-16,11],[-25,26],[-81,93],[-5,-30],[-1,-40],[16,-101],[2,-44],[-15,-9],[-8,2],[-33,59],[-31,65],[-35,87],[-26,42],[-23,46],[-66,177],[-17,27],[-101,124],[-20,30],[-26,51],[-28,46],[-61,72],[-106,184],[-46,105],[-51,170],[-17,43],[-86,128],[-47,77],[-20,44],[-45,155],[-14,52],[-16,46],[-28,37],[-24,44],[-49,140],[-15,55],[-11,61],[2,120],[-103,366],[-26,114],[-23,158],[-6,16],[-56,142],[-19,45],[-24,43],[-20,50],[-38,162],[-15,45],[-20,33],[-73,61],[-27,34],[-22,48],[-13,62],[-14,131],[-35,199],[-38,267],[-26,119],[-30,94],[-9,21],[-133,169],[-22,25],[-24,15],[-34,11],[-27,43],[-10,78],[-6,105],[-7,63],[-7,35],[-56,75],[-21,58],[-18,65],[-17,50],[-61,172],[-21,45],[-26,32],[-76,33],[-23,29],[-37,98],[-22,50],[-67,109],[-114,230],[-23,57],[-18,60],[-14,64],[-48,177],[3,36],[8,37],[-1,31],[-6,31],[1,27],[15,16],[32,21],[34,-2],[31,-9],[30,-17],[29,-38],[51,-94],[30,-33],[33,-15],[67,-22]],[[84106,46882],[-40,-20],[-24,-20],[-23,-26],[-15,-5],[-27,-2],[-37,5],[-26,-9],[-71,-66],[-28,-6],[-24,-16],[-8,26],[-10,19],[-24,4],[-24,-1],[-24,-59],[-38,13],[-15,-6],[-14,-12],[-14,-5],[-15,4],[-56,45],[-64,27],[-64,-10],[-55,25],[-30,-19],[-29,-28],[-8,29],[-11,26],[-9,37],[0,44],[3,30],[8,27],[5,29],[3,31],[12,-15],[12,5],[38,34],[37,50],[34,19],[20,5],[16,-10],[17,4],[18,11],[28,-39],[11,-8],[38,-3],[34,-22],[30,-34],[44,-31],[27,-42],[20,-15],[15,-5],[13,6],[18,28],[20,12],[18,0],[32,7],[14,7],[15,15],[15,-9],[13,-15],[54,-74],[17,-2],[30,16],[10,20],[4,31],[9,25],[11,22],[14,17],[40,28],[28,28],[19,48],[-44,20],[9,34],[15,20],[20,-7],[17,-27],[7,-102],[-14,-15],[-8,-15],[-6,-20],[-26,-38],[10,-46],[-7,-20],[-10,-9]],[[83336,46442],[13,-25],[45,-50],[7,-21],[3,-35],[9,-26],[21,-4],[22,5],[16,-16],[15,-26],[21,-50],[19,-56],[23,-31],[14,-46],[-8,-41],[-30,-57],[-16,-12],[-21,-4],[-35,-34],[-12,18],[-39,12],[-30,24],[-26,45],[-15,47],[-19,43],[-33,28],[-58,83],[-37,7],[-15,-6],[-15,0],[-77,37],[-12,22],[-9,28],[-9,27],[-5,31],[10,27],[10,19],[43,32],[31,10],[35,-2],[53,10],[51,-16],[15,12],[25,34],[9,-12],[11,-31]],[[82844,47051],[14,-22],[13,2],[26,34],[16,13],[17,1],[17,-6],[16,-25],[6,-40],[6,-13],[10,49],[13,14],[14,8],[22,-3],[17,-23],[16,-69],[-1,-60],[6,-22],[11,-17],[8,-23],[-7,-24],[-7,-11],[-21,-11],[-9,4],[-9,17],[-10,6],[-23,-6],[-21,-13],[3,-22],[17,-10],[5,-11],[-1,-14],[-7,-3],[-22,19],[-15,-3],[-54,-26],[-14,1],[-9,24],[1,63],[-6,17],[-40,-77],[-12,-19],[-17,-9],[-16,3],[-59,-46],[-18,6],[-18,0],[-62,-50],[-33,-14],[-17,-1],[-17,4],[-15,-4],[-14,-21],[-28,-17],[-28,13],[-25,18],[-23,23],[-5,29],[1,35],[10,48],[-7,84],[5,39],[9,38],[15,14],[18,2],[31,34],[28,45],[16,-4],[37,-31],[22,-4],[37,5],[15,-19],[6,-44],[8,-16],[11,-11],[26,-74],[24,4],[21,-14],[38,45],[28,-1],[8,34],[-17,37],[-20,31],[-11,6],[-12,-2],[-11,5],[-45,67],[-14,37],[-8,43],[5,31],[31,28],[15,7],[55,-19],[9,-16],[14,-68],[11,-29]],[[84691,52416],[-53,-98],[-17,-47],[-14,-51],[-21,-56],[-24,-50],[-12,-15],[-29,-27],[-17,-10],[-32,-4],[-97,-39],[-31,-5],[-32,2],[-60,10],[-12,5],[-24,51],[-27,40],[-24,5],[-24,-4],[-175,-3],[-61,-8],[-61,-18],[-33,8],[-33,21],[-24,7],[-25,-2],[-115,-31],[-29,3],[-58,39],[-34,8],[-33,-10],[-31,-36],[-11,-23],[-32,-81],[-18,-58],[-14,-73],[-11,-75],[-7,-61],[0,-64],[5,-72],[9,-71],[10,-55],[39,-126],[8,-17],[44,-36],[25,-45],[25,-126],[17,-65],[17,0],[19,4],[33,-8],[33,-17],[32,39],[17,73],[18,55],[43,103],[25,48],[15,15],[16,-6],[13,-28],[16,-22],[32,-11],[33,7],[34,34],[12,20],[11,26],[29,22],[69,0],[36,-8],[64,9],[-1,19],[-12,20],[-4,16],[12,11],[41,23],[42,17],[31,-12],[27,-33],[11,-34],[4,-41],[-10,-105],[-5,-25],[-22,-12],[-20,14],[-21,54],[-28,20],[-41,-16],[-14,-16],[-13,-22],[-23,-56],[-19,-64],[-41,-100],[-48,-86],[-23,-33],[-26,-23],[-83,-57],[-22,-42],[-17,-55],[-19,-19],[-22,-6],[-16,10],[-33,31],[-11,-25],[-2,-39],[16,-14],[27,-43],[20,-61],[13,-13],[29,-20],[12,-19],[22,-52],[34,-122],[12,-66],[19,-53],[58,-91],[3,-26],[-3,-30],[4,-27],[21,-52],[5,-34],[-23,-43],[-1,-62],[-14,-83],[-3,-28],[0,-26],[10,-24],[11,-18],[16,-10],[14,-17],[26,-65],[14,-17],[8,-23],[0,-36],[12,-20],[11,-37],[16,-9],[8,10],[6,16],[14,-6],[8,-25],[4,-33],[2,-37],[-1,-69],[-7,-24],[-15,1],[-27,28],[-1,-20],[2,-20],[-14,-7],[-16,3],[-40,-3],[-73,-42],[-26,-26],[-17,-46],[-1,-31],[6,-68],[-9,-23],[-34,-9],[-47,18],[-28,18],[-16,15],[-21,45],[-8,58],[16,172],[4,22],[7,19],[8,31],[2,37],[-22,45],[-34,18],[-29,37],[-111,209],[-6,21],[0,34],[4,33],[37,114],[4,22],[5,91],[-1,74],[-4,75],[-17,46],[-31,15],[-32,2],[-31,-15],[-30,-37],[-57,-79],[-22,-46],[-2,-60],[13,-58],[17,-54],[8,-58],[13,-207],[-1,-23],[-14,-60],[-6,-135],[6,-190],[10,-116],[-4,-63],[-26,-136],[-8,-75],[-1,-31],[31,-142],[7,-56],[4,-58],[-33,28],[-15,-1],[-16,-9],[-34,-9],[-35,-1],[-12,-11],[-25,-38],[-15,-15],[-13,-3],[-44,47],[-27,52],[-24,56],[-4,63],[8,66],[12,70],[24,116],[-1,78],[8,64],[14,62],[5,58],[3,224],[-3,20],[-33,133],[-4,22],[0,36],[3,34],[1,31],[-7,24],[-14,22],[-16,9],[-34,-9],[-68,-36],[-20,31],[-15,49],[-10,68],[-5,71],[2,67],[10,65],[-8,45],[-12,49],[0,25],[7,23],[12,18],[15,11],[14,19],[37,66],[12,58],[1,72],[10,68],[19,63],[22,58],[7,60],[-11,96],[5,43],[-4,51],[0,50],[13,95],[42,194],[40,103],[16,27],[21,-47],[16,-57],[1,51],[-5,50],[-16,117],[-14,228],[4,21],[14,-3],[15,20],[7,36],[-15,84],[0,30],[28,119],[24,43],[10,27],[6,73],[12,27],[16,20],[20,50],[11,63],[7,5],[8,2],[12,-55],[14,-22],[28,-18],[24,21],[7,27],[9,24],[14,25],[12,28],[14,66],[18,59],[12,21],[15,13],[16,8],[16,1],[35,-37],[21,-7],[20,2],[14,-6],[10,-17],[9,-34],[11,-29],[10,-14],[12,-7],[76,12],[67,-33],[91,-8],[32,-19],[30,-26],[36,-44],[14,-10],[15,2],[19,42],[14,10],[15,1],[59,-8],[158,-52],[23,8],[96,99],[38,93],[34,26],[11,43],[7,51],[12,13],[29,15],[11,15],[21,62],[24,56],[11,16],[34,-8],[15,-25],[19,-81],[-3,-14],[-22,-40],[-7,-17],[-25,-115],[-17,-56],[-21,-50]],[[79825,48382],[28,-66],[25,-35],[29,-19],[30,-2],[30,-8],[35,-25],[35,-11],[17,4],[16,13],[11,1],[10,-12],[25,-56],[27,-51],[6,-26],[18,-123],[20,-35],[29,-10],[33,0],[33,-5],[77,-29],[30,4],[27,29],[24,-19],[65,-34],[32,-8],[36,10],[37,2],[17,-10],[17,-15],[14,-6],[15,1],[26,29],[18,52],[14,67],[11,69],[7,30],[10,26],[14,17],[14,11],[38,-7],[8,-16],[42,-118],[8,-10],[45,-8],[12,4],[27,24],[16,2],[28,-29],[13,-25],[13,-18],[70,-19],[28,-50],[13,-7],[49,6],[34,-5],[29,-13],[13,-72],[11,-73],[7,-25],[28,-25],[12,-23],[-3,-73],[3,-70],[61,-60],[65,-35],[69,-4],[70,12],[35,15],[45,26],[9,0],[87,-80],[8,-12],[9,-60],[0,-62],[-16,-149],[-1,-41],[1,-41],[18,-89],[9,-25],[31,-47],[1,-25],[-4,-24],[-35,17],[-21,20],[-12,33],[-17,19],[-33,-7],[-61,34],[-69,52],[-122,110],[-33,-1],[-32,-14],[-33,-28],[-35,-20],[-26,-7],[-26,5],[-65,27],[-66,17],[-168,11],[-47,25],[-79,12],[-63,22],[-62,30],[-158,149],[-51,36],[-159,71],[-24,6],[-58,-5],[-36,21],[-32,0],[-47,-23],[-15,-17],[-18,-35],[-33,2],[-32,7],[-84,33],[-31,21],[-30,30],[-28,40],[-14,14],[-72,41],[-60,14],[-122,18],[-27,12],[-22,15],[-12,33],[1,42],[9,36],[12,36],[8,34],[-89,73],[-71,40],[-30,7],[-31,0],[-34,-8],[-34,4],[-16,11],[-17,5],[-16,-9],[-13,3],[-4,33],[9,28],[17,32],[10,6],[4,-50],[5,-10],[16,-11],[6,3],[27,64],[8,31],[13,85],[14,-16],[14,10],[8,13],[23,196],[19,58],[26,47],[12,12],[26,-29],[51,-11],[30,-20],[31,-2],[29,-10],[42,-34],[15,3],[14,11],[23,38],[9,60],[32,-31],[48,-12],[11,-17]],[[82659,54245],[-3,-5],[-19,-16],[-9,-33],[27,-51],[1,-34],[21,-30],[24,-46],[1,-16],[9,-21],[4,-25],[-17,-26],[-24,-5],[-17,24],[-16,30],[-4,-37],[-13,-21],[-45,6],[-32,0],[-32,-10],[16,-5],[14,-12],[50,-96],[11,-35],[-17,-70],[8,-29],[19,-16],[24,-35],[17,-4],[12,-19],[0,-34],[7,-32],[-19,-12],[19,-8],[17,-16],[-9,-16],[-7,-20],[7,-10],[23,-19],[10,-16],[6,-45],[22,-73],[41,-95],[9,-34],[0,-32],[-6,-27],[-24,-32],[-19,-42],[-2,-15],[-26,-20],[12,-14],[9,-19],[18,-59],[42,-95],[22,-35],[87,-129],[46,-57],[60,-128],[31,-30],[6,-36],[-26,-54],[-38,-28],[-62,-15],[-62,20],[-32,15],[-28,32],[-22,63],[-29,35],[12,-39],[7,-39],[-4,-43],[-11,-33],[-20,-25],[-21,-20],[-9,-14],[-53,-224],[-9,-60],[-16,-252],[0,-71],[24,-133],[2,-69],[5,-30],[-4,-25],[-11,-15],[-46,-41],[-32,-34],[-26,-48],[-21,-59],[-19,-44],[-25,-20],[-18,3],[-14,20],[-10,38],[-6,42],[-4,-31],[1,-30],[8,-33],[4,-34],[-5,-35],[-11,-28],[-29,-30],[-16,-26],[-2,-46],[-8,-26],[-11,-20],[-40,-46],[-9,-18],[-7,-24],[22,4],[19,-4],[2,-45],[6,-34],[-8,-75],[-30,-50],[15,-11],[14,-16],[30,-12],[10,-53],[-4,-64],[-6,-58],[-21,-16],[-14,11],[-14,-1],[-10,-17],[-2,-30],[19,15],[-1,-75],[-5,-72],[-7,-40],[-11,-33],[-18,-10],[-16,24],[-4,-28],[5,-24],[24,-58],[-15,-13],[-10,-20],[-5,-29],[-26,-66],[-11,-49],[-5,-52],[-12,-41],[-194,-180],[-156,-151],[-12,10],[-7,23],[-6,235],[-19,121],[-3,68],[-22,-61],[-14,6],[-15,16],[-11,19],[0,26],[11,75],[-14,-41],[-16,-31],[-16,3],[-14,16],[-5,24],[-7,4],[-35,-67],[-45,-35],[-25,0],[-20,21],[1,50],[-2,50],[-5,29],[-13,10],[-11,-4],[-32,-25],[-12,3],[-7,-13],[-85,180],[-18,-146],[-59,-78],[-44,-45],[-43,17],[-45,29],[-44,-35],[-47,-86],[-13,-13],[-14,1],[-10,11],[3,65],[1,64],[-4,145],[-4,28],[-13,40],[-18,28],[-11,-21],[-9,-28],[-36,1],[-35,23],[-30,-13],[-60,-58],[-32,-8],[-17,12],[-11,31],[6,29],[14,21],[-25,-17],[-21,-29],[-9,-19],[-10,10],[-26,65],[-54,-24],[-8,-8],[-13,-22],[-13,11],[-7,24],[-2,136],[-28,262],[-7,134],[-6,31],[-32,49],[1,69],[16,57],[4,68],[-5,73],[-10,71],[-12,54],[-18,46],[-24,52],[-30,39],[-63,43],[-33,-4],[-13,17],[-8,23],[3,43],[12,30],[15,7],[2,17],[-33,35],[-26,48],[-9,28],[-2,31],[0,73],[8,46],[4,25],[8,76],[18,24],[-3,14],[-8,10],[-11,25],[-9,29],[-20,49],[-36,60],[-6,102],[-5,150],[3,68],[11,128],[21,40],[16,12],[12,17],[-10,2],[-9,-6],[-15,-4],[12,114],[6,33],[25,64],[30,57],[12,67],[17,58],[70,61]],[[85480,52331],[21,-13],[21,4],[10,26],[3,33],[11,62],[24,42],[17,7],[12,18],[-2,46],[1,45],[18,48],[57,68],[31,24],[42,7],[5,-25],[-5,-37],[8,-56],[-4,-150],[-10,-21],[-42,-52],[-47,-42],[-13,-17],[-12,-42],[1,-41],[38,-54],[59,-52],[13,-24],[8,-40],[2,-45],[14,-21],[20,-10],[13,-22],[11,-30],[-100,70],[-26,31],[-32,4],[-31,9],[-32,27],[-34,6],[-16,-19],[-7,-38],[-4,-43],[8,-53],[-1,-32],[-6,-58],[25,-171],[31,-137],[45,-142],[23,-49],[25,-44],[-41,13],[-12,48],[-52,47],[-10,28],[-34,135],[-10,25],[-31,46],[-14,33],[-5,46],[4,48],[-2,66],[1,65],[7,81],[-11,28],[-15,26],[-17,62],[-5,70],[1,40],[7,35],[10,31],[2,30],[-25,44],[-25,124],[-2,65],[32,124],[-1,60],[7,36],[3,38],[17,83],[28,70],[47,99],[18,21],[20,14],[2,-24],[-4,-21],[-34,-101],[-5,-22],[-1,-43],[17,-24],[18,-51],[3,-68],[1,-72],[-4,-73],[-7,-25],[-28,-73],[-65,-85],[-5,-21],[0,-24],[12,-29],[15,-22]],[[86042,50192],[64,-64],[33,-9],[56,8],[21,-6],[53,-82],[15,-56],[4,-48],[9,-46],[13,-11],[15,-5],[20,-66],[4,-21],[-15,-166],[-63,63],[-60,71],[-26,27],[-69,60],[-11,21],[-8,27],[-30,37],[-60,6],[-23,-1],[-9,-6],[2,-20],[0,-40],[-15,-12],[-37,26],[-34,9],[-29,25],[-39,14],[-4,12],[3,19],[-1,18],[-9,6],[-18,-3],[-17,-17],[-14,-21],[-20,-55],[-11,-21],[-34,-9],[-14,5],[-13,14],[-39,101],[-13,22],[-14,18],[-14,8],[-13,-16],[-8,-31],[-3,-37],[-4,-22],[-17,-59],[-13,-36],[-5,6],[7,57],[0,32],[-9,34],[-5,35],[65,165],[24,40],[103,13],[61,-8],[34,4],[22,12],[19,-5],[4,-33],[12,-24],[16,2],[29,25],[26,40],[15,17],[16,3],[16,-3],[16,-9],[43,-34]],[[85238,50064],[46,-45],[10,-29],[9,-35],[9,-20],[10,-15],[18,-31],[5,-46],[-4,-93],[-21,-8],[-19,-14],[-40,-54],[-20,-10],[-21,-4],[-15,-14],[-15,-6],[-39,30],[-38,35],[-54,61],[-10,15],[-9,32],[-25,59],[-6,38],[-2,106],[6,25],[11,13],[36,-25],[24,26],[69,22],[71,-2],[14,-11]],[[84740,46363],[-19,-30],[-10,-58],[-34,-54],[-37,-89],[-29,-46],[-26,-53],[-23,-36],[-28,-13],[-42,-7],[-56,-65],[-32,-28],[-31,-2],[-28,21],[-11,24],[2,31],[10,28],[12,22],[7,29],[-33,37],[-2,27],[12,75],[9,76],[12,52],[46,93],[28,46],[17,19]],[[84567,46549],[36,20],[20,22],[17,32],[51,53],[9,15]],[[87429,48555],[-2,-22],[-1,-41],[5,-38],[-12,-39],[11,-57],[2,-29],[-1,-41],[-3,-18],[-8,-54],[-9,-19],[-6,-5],[-7,-16],[-54,18],[-24,37],[-21,40],[-4,17],[-25,46],[-6,16],[0,25],[20,7],[21,-1],[-1,22],[13,80],[-33,51],[-6,21],[12,15],[26,-18],[32,89],[10,19],[4,50],[18,6],[13,-6],[8,-31],[3,-27],[-3,-24],[15,-13],[13,-60]],[[87370,48132],[-4,-41],[-5,-45],[-25,-51],[-16,-78],[-9,-19],[-34,-35],[-30,43],[-9,37],[13,172],[13,-6],[9,1],[2,12],[-19,19],[-4,98],[1,38],[15,8],[18,-29],[24,-52],[27,-40],[33,-32]],[[88481,47077],[-66,-76],[-87,13],[-31,2],[-51,-19],[-11,15],[10,71],[41,190],[49,168],[20,43],[29,41],[31,33],[69,34],[62,-7],[9,-13],[27,-56],[18,-44],[7,-63],[-27,-107],[-29,-102],[-49,-80],[-21,-43]],[[89159,46590],[-14,19],[-39,64],[-34,74],[-23,68],[-25,62],[-108,184],[-27,61],[-6,16],[3,16],[12,32],[22,92],[-23,-57],[-27,-45],[-40,-3],[-39,-11],[-37,-27],[-37,-10],[-18,14],[-11,34],[-6,35],[-3,36],[-15,-59],[-31,-33],[-41,-69],[-12,14],[-7,27],[-3,27],[8,29],[6,31],[8,73],[19,44],[12,84],[8,30],[4,30],[-11,34],[-18,12],[-13,20],[-15,57],[-9,20],[-16,23],[-13,28],[14,20],[19,8],[15,-1],[27,-13],[13,0],[31,21],[-17,-7],[-18,1],[-57,37],[-35,38],[-33,77],[0,15],[23,14],[51,16],[-16,39],[-23,34],[-8,61],[-15,38],[-34,61],[-23,64],[-19,129],[-20,98],[5,35],[17,25],[-26,3],[-23,19],[12,47],[27,28],[-25,-7],[-23,-14],[-11,-2],[-11,4],[-6,19],[-1,27],[3,48],[-4,46],[-21,22],[-17,33],[-10,13],[-13,-1],[-12,22],[-10,32],[-126,139],[-8,40],[-11,-18],[-12,-8],[-14,23],[-16,15],[-16,-2],[-15,12],[-16,7],[-17,1],[-66,43],[-63,68],[-51,29],[-31,38],[-33,31],[-73,30],[-74,20],[-27,1],[-22,-7],[-22,2],[-122,147],[-21,67],[2,39],[6,33],[50,9],[-36,9],[-14,-4],[-29,-27],[-16,-2],[-22,18],[-21,22],[-35,-20],[-17,34],[-7,35],[-9,17],[-13,-2],[-17,-13],[-18,2],[-11,25],[-8,32],[-12,23],[-15,17],[-24,42],[-12,56],[1,98],[4,36],[24,57],[16,54],[-20,6],[-19,-25],[-8,-25],[-3,-31],[-2,-103],[-15,-30],[-22,2],[6,-60],[-9,-57],[-26,-67],[-2,-31],[4,-33],[-6,-32],[-42,-94],[-14,-5],[-32,1],[-32,-15],[-15,22],[-13,28],[-9,34],[-13,70],[-10,71],[32,88],[-11,80],[-21,68],[-55,94],[-57,90],[-26,18],[-43,8],[-13,9],[-13,33],[-10,39],[26,17],[46,46],[26,-3],[70,-24],[21,-23],[20,-13],[48,75],[38,99],[24,21],[20,7],[20,-9],[41,-34],[32,-16],[23,-4],[12,-30],[13,-14],[3,46],[12,54],[22,17],[12,3],[8,14],[-2,50],[-30,6],[17,43],[14,21],[5,21],[1,26],[-59,-50],[-62,-21],[-36,5],[-37,1],[-73,-33],[-27,1],[-65,13],[-36,17],[-27,-13],[-27,-1],[-28,38],[-23,48],[-12,34],[-16,25],[-7,33],[-17,126],[-2,89],[-27,2],[-28,9],[-121,85],[-15,-21],[-17,-11],[-17,-4],[-17,5],[-17,13],[1,23],[13,58],[12,21],[17,17],[11,30],[18,92],[1,31],[-2,32],[1,24],[11,12],[46,30],[95,45],[24,27],[20,43],[24,26],[10,27],[12,21],[74,57],[32,4],[32,-6],[65,-34],[61,-54],[53,-72],[57,-52],[70,-8],[35,5],[34,-7],[14,-15],[24,-44],[-7,-29],[-4,-60],[13,-58],[20,-58],[16,-62],[3,-30],[-6,-65],[-5,-31],[-20,-53],[-11,-58],[7,-71],[4,-71],[-1,-66],[4,-65],[10,-65],[47,-180],[27,-122],[9,68],[-2,76],[9,27],[14,15],[17,-16],[4,-30],[2,-67],[14,-131],[19,-6],[21,20],[3,-40],[-1,-74],[10,-59],[8,-23],[34,-48],[15,-9],[44,-12],[33,-3],[32,17],[21,44],[18,47],[65,110],[18,53],[18,80],[7,18],[63,87],[8,31],[9,59],[14,58],[10,30],[62,28],[64,16],[64,53],[27,46],[2,30],[-14,53],[-1,23],[15,23],[56,67],[66,69],[53,47],[29,0],[27,-42],[28,-34],[150,-101],[24,-31],[21,-42],[30,-29],[33,-14],[31,-27],[28,-35],[64,-64],[86,-79],[21,-5],[80,4],[14,-15],[13,-21],[12,-5],[91,-14],[14,-15],[13,-21],[8,-57],[62,-2]],[[88581,47010],[-14,-7],[-69,17],[-8,24],[-1,12],[16,24],[15,40],[24,14],[10,0],[28,-94],[-1,-30]],[[78251,53040],[16,-47],[3,-31],[-11,-35],[-4,-54],[-33,-42],[-28,10],[-9,15],[-18,82],[2,69],[11,27],[26,-4],[27,38],[18,-28]],[[78451,52413],[-13,-18],[-15,28],[-13,39],[-6,41],[-6,68],[-2,48],[8,28],[5,-1],[23,-28],[15,-49],[9,-15],[1,-45],[-5,-52],[-1,-44]],[[78469,52683],[2,-74],[-20,20],[-17,29],[-25,22],[-32,7],[-23,19],[-16,34],[0,16],[1,13],[5,10],[119,-67],[6,-29]],[[78618,52273],[-5,-22],[-11,16],[-54,25],[-18,2],[-47,28],[-14,14],[-10,19],[3,35],[7,21],[4,59],[12,24],[23,-44],[26,-38],[15,-17],[46,-38],[16,-19],[7,-65]],[[78657,52344],[-9,-17],[-14,4],[-14,20],[-20,35],[-21,31],[-28,20],[-17,5],[-6,8],[6,60],[18,4],[58,-56],[19,-31],[28,-83]],[[78689,52155],[-31,-4],[-9,8],[4,54],[9,33],[14,-1],[16,-49],[-3,-41]],[[78735,52225],[-5,-7],[-24,73],[6,42],[6,11],[13,-26],[10,-27],[8,-32],[-14,-34]],[[78895,52523],[18,-25],[14,16],[-1,-21],[-3,-21],[-17,-59],[-28,13],[-7,19],[-2,15],[4,9],[3,29],[12,0],[7,25]],[[79051,52543],[1,-43],[16,-21],[4,-32],[-3,-51],[-14,-59],[-7,-15],[-20,12],[-6,19],[-3,16],[3,11],[-15,14],[10,22],[-7,32],[-40,-20],[-12,-1],[-2,36],[2,15],[31,45],[18,9],[20,-10],[24,21]],[[79104,51741],[8,-9],[10,30],[19,-41],[11,-21],[15,-20],[-15,-1],[-6,-19],[-4,-4],[-59,66],[-38,-21],[-25,19],[-8,14],[14,36],[13,83],[26,-21],[6,-26],[-2,-7],[17,-16],[18,-42]],[[79020,51650],[26,-56],[6,-20],[-13,-31],[-10,-44],[-6,-9],[-20,16],[-14,-43],[-9,69],[-20,44],[12,44],[5,4],[6,-2],[6,-11],[31,39]],[[78815,51642],[-36,-20],[-41,15],[5,34],[20,41],[17,-2],[31,-27],[12,-23],[-8,-18]],[[80474,51163],[-55,-59],[-13,3],[-10,21],[6,113],[7,34],[39,4],[23,-17],[12,-18],[5,-38],[-2,-23],[-12,-20]],[[81623,47750],[-6,-9],[-47,5],[-30,-47],[-21,-14],[-76,0],[-9,6],[-7,0],[-4,-10],[-24,7],[-77,42],[-10,38],[12,42],[27,58],[56,12],[252,4],[27,-51],[3,-16],[-55,-35],[-11,-32]],[[87489,51200],[-13,-11],[-15,12],[-15,44],[5,34],[17,23],[15,-23],[4,-30],[11,-2],[-9,-47]],[[85346,51557],[-17,-15],[-19,1],[-4,61],[6,78],[18,13],[27,-16],[-10,-20],[8,-42],[-9,-60]],[[85434,51659],[32,-86],[-21,-82],[15,-46],[40,-2],[10,-17],[7,-21],[4,-28],[-10,-23],[-23,-20],[-26,29],[-7,28],[-5,10],[-35,-21],[-10,-2],[-6,39],[8,55],[-24,25],[-23,57],[-1,24],[9,39],[-1,32],[13,3],[23,-43],[11,40],[9,17],[11,-7]],[[86923,48443],[-22,-50],[21,117],[4,59],[20,36],[29,179],[7,-5],[10,-17],[-15,-131],[-41,-92],[-13,-96]],[[86890,48472],[-17,-55],[-11,19],[-7,1],[-4,32],[4,68],[-14,76],[19,-1],[5,-23],[6,-8],[18,-73],[1,-36]],[[85631,49726],[-7,-21],[-16,-14],[-14,1],[5,21],[-4,11],[-10,-5],[-16,-16],[-20,-33],[-13,16],[-2,26],[1,11],[24,45],[29,8],[40,43],[18,-2],[-4,-27],[-6,-20],[-4,-20],[-1,-24]],[[85226,54166],[-11,-12],[-18,4],[-2,30],[18,52],[12,56],[-13,14],[-12,35],[-1,41],[11,76],[15,-6],[14,-33],[6,-62],[10,-47],[-20,-64],[-9,-84]],[[84904,53822],[-7,-18],[-34,32],[2,51],[-4,25],[-9,27],[-4,26],[4,28],[20,-36],[12,-57],[16,-55],[4,-23]],[[86350,47051],[-24,-18],[16,45],[52,104],[18,-19],[25,-4],[-37,-47],[-38,-19],[-12,-42]],[[86065,47261],[-16,-53],[-18,3],[-34,71],[2,50],[3,16],[13,5],[43,-15],[9,-40],[-2,-37]],[[85506,47177],[48,-23],[28,3],[6,-21],[-27,-49],[-56,38],[-10,40],[11,12]],[[86208,50869],[4,-34],[16,-32],[-5,-49],[-7,-7],[4,-23],[7,-17],[-13,-12],[-10,6],[-15,-16],[-10,-22],[-32,-9],[-11,20],[-57,24],[-37,53],[-5,16],[71,62],[32,17],[26,-1],[33,23],[9,1]],[[78435,48687],[-23,-3],[-42,71],[-7,22],[12,21],[13,-2],[48,-45],[9,-22],[-10,-42]],[[77895,50009],[11,-84],[-33,58],[1,40],[-5,26],[-20,33],[-15,40],[-7,96],[5,20],[13,1],[58,-126],[4,-21],[-1,-45],[-8,-14],[-3,-24]],[[77834,50264],[-20,-47],[-33,1],[-6,29],[1,70],[-8,22],[0,9],[6,40],[6,9],[53,-98],[1,-35]],[[77733,50493],[2,-15],[-45,50],[-22,14],[-19,56],[5,26],[1,37],[3,15],[14,5],[18,-27],[13,-66],[23,-61],[7,-34]],[[77349,51537],[-17,-27],[-25,26],[9,37],[4,51],[15,41],[5,47],[-29,130],[14,5],[12,-14],[19,-87],[17,-52],[-7,-70],[-17,-87]],[[76795,53202],[-18,-5],[-16,12],[-14,33],[-75,96],[-23,1],[-16,25],[-20,8],[-21,64],[-5,35],[16,16],[9,35],[25,-15],[28,-62],[29,-23],[8,-12],[14,-34],[66,-85],[7,-28],[5,-29],[1,-32]],[[83900,48710],[-18,-15],[-33,66],[-14,54],[3,31],[10,26],[5,7],[-2,28],[13,14],[15,-2],[9,-38],[11,-10],[6,-36],[-5,-125]],[[84225,51168],[6,-36],[-10,-31],[11,-59],[28,78],[27,10],[15,-13],[10,-15],[6,-30],[-10,-63],[-18,-30],[-22,-5],[-11,37],[-15,4],[-10,-81],[-5,-12],[-13,-10],[-12,22],[-2,12],[17,37],[-9,108],[-13,-20],[-34,-99],[-26,-44],[-8,23],[-14,67],[6,86],[21,58],[18,-4],[52,18],[15,-8]],[[83850,51608],[12,-25],[-7,-30],[-9,7],[-26,0],[-9,-2],[-12,-18],[-7,0],[5,27],[21,41],[14,-6],[18,6]],[[83479,48215],[-11,-96],[-6,33],[-2,88],[-7,43],[5,49],[-1,126],[8,58],[16,-74],[4,-38],[-6,-189]],[[82048,47827],[-22,-10],[-21,21],[0,27],[5,25],[32,13],[17,0],[18,-18],[12,-18],[6,-21],[-34,-1],[-13,-18]],[[82306,49614],[-59,-107],[-9,28],[5,109],[-17,67],[2,51],[11,89],[15,68],[34,46],[8,5],[-2,-83],[7,-31],[2,-27],[-3,-23],[6,-105],[4,-26],[-8,-33],[4,-28]],[[84152,45559],[-26,-1],[-8,6],[-3,51],[8,28],[60,37],[23,34],[34,70],[20,18],[5,8],[4,-1],[3,-54],[9,-31],[1,-17],[-30,-27],[-26,-62],[-59,-41],[-15,-18]],[[84523,47045],[-17,-36],[-11,-62],[-11,-19],[-22,-11],[-14,62],[-24,-3],[12,54],[11,21],[16,0],[7,-22],[4,-4],[36,92],[7,1],[6,-4],[5,-11],[-5,-58]],[[84423,47077],[-39,-15],[-24,-72],[-19,1],[-11,-32],[-2,-14],[1,-12],[-2,-13],[-8,-12],[-17,20],[-16,-25],[-6,-7],[-23,30],[-21,-2],[-6,5],[26,52],[36,50],[6,18],[-14,5],[-8,7],[-2,12],[23,7],[16,2],[12,-16],[8,1],[48,58],[20,-14],[14,-14],[8,-20]],[[84254,47030],[-6,-25],[-75,2],[2,33],[21,36],[7,12],[23,11],[33,-20],[-5,-49]],[[87420,48070],[-15,-6],[-8,48],[13,12],[14,-29],[-4,-25]],[[78728,52447],[2,-32],[-19,8],[-13,37],[11,26],[7,10],[7,-36],[5,-13]],[[78840,52304],[2,-17],[-25,34],[-1,24],[3,11],[15,-26],[6,-26]],[[78955,52323],[-18,-17],[-22,53],[1,12],[2,9],[4,6],[13,-27],[16,-10],[4,-26]],[[79080,51877],[2,-14],[-13,16],[-8,10],[-5,8],[-29,79],[12,-5],[32,-69],[9,-25]],[[79523,53661],[-1,-39],[-19,23],[-4,44],[7,14],[13,-8],[4,-34]],[[79377,53492],[-12,-2],[-3,17],[1,29],[-2,24],[-3,17],[0,30],[11,-15],[8,-14],[10,-10],[7,-6],[4,-5],[-7,-42],[-14,-23]],[[80246,53516],[-14,-30],[-14,19],[22,61],[5,4],[1,-54]],[[80264,50910],[-32,-25],[-10,55],[21,16],[22,-14],[-1,-32]],[[79853,50172],[-11,-14],[-7,14],[-2,16],[5,20],[15,2],[7,-6],[-7,-32]],[[79690,50111],[-5,-11],[-15,6],[-11,16],[-7,15],[-2,16],[15,20],[32,-20],[-7,-42]],[[81780,47733],[-4,-22],[-14,5],[-13,38],[6,10],[8,4],[9,-4],[8,-31]],[[81310,48495],[-6,-20],[-26,1],[-5,24],[17,41],[12,3],[10,-15],[-2,-34]],[[79236,48018],[-17,-13],[-13,11],[-6,16],[19,40],[10,10],[9,3],[5,-22],[-7,-45]],[[77037,53038],[-2,-13],[-29,61],[-32,34],[13,8],[27,-9],[11,-9],[10,-30],[2,-42]],[[76489,55191],[-6,-16],[-16,8],[-18,52],[6,10],[12,-5],[21,-12],[2,-20],[-1,-17]],[[84332,50861],[-19,-4],[-13,17],[1,85],[12,18],[5,-3],[4,-25],[5,-23],[10,-21],[-5,-44]],[[84233,49473],[-27,-69],[-19,4],[-23,45],[-6,50],[-1,18],[16,28],[52,-9],[9,-25],[-1,-42]],[[84401,50716],[5,-23],[-17,1],[-7,43],[1,24],[18,-45]],[[84208,50796],[-20,-47],[-2,25],[4,23],[5,16],[9,9],[4,-26]],[[83184,46808],[-11,-6],[-11,8],[4,52],[-6,34],[11,28],[3,48],[5,15],[6,-15],[4,-10],[5,-5],[13,-1],[3,-21],[-1,-19],[-5,-21],[-15,-23],[-11,-25],[6,-39]],[[83075,47097],[-12,-1],[-2,23],[4,24],[12,11],[5,0],[8,-22],[2,-11],[-8,-15],[-9,-9]],[[82113,46791],[-8,-20],[-22,35],[-6,16],[17,23],[6,3],[14,-24],[-1,-33]],[[82745,54254],[9,-55],[2,-21],[-52,-29],[-31,68],[6,27]],[[82682,53732],[-3,-19],[-24,47],[-7,33],[3,27],[25,2],[12,-17],[-6,-73]],[[84458,48402],[-3,-28],[-10,32],[-9,15],[1,34],[13,-12],[8,-41]],[[84340,48806],[-1,-58],[-11,3],[-9,20],[-3,20],[1,15],[5,13],[18,-13]],[[83548,47742],[-29,-3],[-8,5],[-3,56],[32,-24],[10,-2],[-2,-32]],[[82654,47023],[-7,-1],[-12,11],[5,24],[-7,40],[2,32],[16,18],[33,2],[1,-24],[-31,-102]],[[82339,49847],[-10,-99],[-17,56],[19,67],[9,13],[-1,-37]],[[85380,52298],[-9,-18],[-9,6],[-6,24],[2,18],[8,11],[9,-8],[5,-33]],[[87325,50619],[-8,-8],[-3,25],[5,33],[5,6],[6,-2],[8,-12],[-13,-42]],[[87102,49397],[14,-31],[-33,24],[-47,51],[-3,34],[40,-52],[29,-26]],[[86362,51395],[-7,-30],[-14,-19],[-119,-36],[10,21],[5,21],[8,11],[12,-3],[6,7],[5,2],[7,-3],[12,9],[24,-6],[25,5],[-2,28],[28,-7]],[[86284,51538],[-16,-1],[-28,25],[16,22],[11,5],[9,13],[5,0],[12,-11],[7,-19],[-16,-34]],[[85985,51735],[-12,-2],[-10,34],[-28,37],[-17,65],[65,-107],[2,-27]],[[85403,51839],[-1,-17],[-9,24],[-6,6],[6,62],[4,11],[5,-43],[1,-43]],[[85394,52213],[-10,-7],[-3,2],[-3,24],[5,39],[12,0],[5,-6],[1,-29],[-7,-23]],[[85360,51393],[-3,-12],[-29,15],[-8,8],[15,82],[14,-2],[12,-78],[-1,-13]],[[85755,49800],[0,-25],[-2,-8],[-15,9],[-11,-1],[-10,44],[3,10],[20,-12],[7,-5],[8,-12]],[[85711,49777],[-48,-30],[11,56],[6,15],[24,-15],[7,-26]],[[85199,54075],[1,-25],[-17,56],[-7,65],[14,-23],[15,-49],[-6,-24]],[[85236,54013],[-5,-6],[-10,15],[-6,17],[1,17],[7,9],[14,-26],[0,-15],[-1,-11]],[[84835,53370],[-3,-13],[-11,68],[9,34],[12,-13],[3,-12],[-11,-32],[1,-32]],[[86661,47694],[-4,-28],[-12,15],[-11,33],[-17,5],[-13,8],[-7,16],[47,7],[17,-56]],[[85741,47705],[-13,-15],[-20,30],[-6,13],[13,29],[14,9],[9,-13],[4,-13],[-2,-14],[1,-26]],[[85393,47451],[-17,-13],[5,43],[-1,34],[29,-11],[0,-27],[-3,-10],[-13,-16]],[[84281,45908],[-25,-20],[0,42],[20,54],[17,18],[10,-22],[1,-9],[-26,-20],[3,-43]],[[83856,45742],[-14,-7],[-30,17],[-6,10],[25,28],[20,39],[23,4],[14,-8],[-5,-47],[-27,-36]],[[87449,48136],[-7,-4],[0,28],[8,25],[8,14],[9,1],[-18,-64]],[[87409,47955],[-5,-9],[-7,18],[-1,12],[10,32],[9,18],[11,1],[-3,-26],[-14,-46]],[[85551,50151],[-14,-48],[-24,2],[-4,7],[29,30],[13,9]],[[85445,49933],[7,-25],[-28,16],[-12,25],[12,15],[7,4],[14,-35]],[[84160,46920],[-9,-34],[-16,10],[4,33],[8,19],[22,28],[22,5],[13,-10],[4,-11],[-34,-11],[-14,-29]],[[71402,72067],[33,36],[35,37],[36,38],[41,44],[35,37],[28,31]],[[71610,72290],[1,-2],[2,-5],[12,-14],[12,-6],[14,13],[18,10],[9,-6],[1,-17],[-11,-82],[1,-33],[18,-66],[23,-109],[22,-102],[12,-66],[13,-28],[52,-28],[43,-23],[26,-37],[28,-36],[20,-22],[9,-29],[2,-25],[-1,-18],[-11,-22],[-50,-59],[-6,-18],[-1,-24],[10,-73],[6,-45],[1,-92],[4,-86],[17,-40],[15,-25],[8,-24],[18,-31],[15,-24],[13,-14],[6,-31],[-3,-37],[-6,-32],[2,-17],[10,-12],[16,-32],[2,-47],[-1,-32],[6,-29],[2,-32],[-5,-80],[1,-33],[0,-4],[-14,-2],[-12,-12],[-17,-51],[-19,-13],[-22,-4],[-22,31],[-19,32],[-5,18],[-4,34],[-10,23],[-20,-11],[-29,-4],[-31,-8],[-6,-7],[-1,-15],[8,-30],[7,-40],[3,-56],[9,-37],[3,-12],[50,-111],[13,-23],[3,-14],[-4,-41],[-9,-47],[2,-38],[16,-41],[14,-29],[-13,-39],[-8,-45],[9,-21],[-5,-65],[4,-12],[10,-5],[15,4],[15,18],[13,3],[7,-5],[11,49],[9,7],[17,-13],[35,-93],[30,-78],[8,-15],[6,-9],[29,-41],[20,-26],[27,10],[36,1],[22,-25],[12,-17],[1,-3],[2,0],[43,-62],[19,5],[12,-18],[4,-43],[-6,-46],[2,-21],[19,-4],[41,-30],[37,-26],[19,-9],[20,-19],[18,-32],[35,-40],[31,-31],[7,-42]],[[74474,67897],[-3,20],[3,16],[9,9],[37,12],[42,24],[17,13],[12,14],[13,20],[12,0],[38,-30],[13,-19],[7,-58],[5,-22],[-5,-58],[-22,-142],[4,-53],[19,-38],[16,-27]],[[74691,67578],[-2,-11],[-34,-46],[-6,-24],[7,-24],[14,-20],[6,-20],[6,-60],[17,-16],[34,-39],[30,-28],[51,18],[14,-12],[25,-14],[20,-4],[11,-10],[7,-9],[-1,-13],[1,-12],[28,-3],[15,-7],[49,13],[50,17],[23,54],[11,4],[28,20],[29,-22],[31,-32],[17,-9],[33,-5],[32,4],[77,14],[43,-7],[39,44],[8,0],[17,-34],[43,-3],[22,16],[25,13],[16,4],[12,0],[15,-3],[15,12],[6,23],[-1,34],[-11,38],[-9,22],[-1,12],[3,27],[7,39],[15,44],[-11,43],[-15,49],[-11,5],[-28,-12],[-30,3],[-23,29],[-18,37],[-4,31],[5,38],[8,34],[2,13]],[[75453,67833],[22,0],[31,-7],[24,-10],[19,0],[34,45],[16,2],[18,9],[7,8],[6,-6],[20,-6],[20,3],[18,12],[19,19],[32,40],[7,23],[0,21],[-6,14],[-6,7],[2,18],[14,31],[50,47],[42,57],[24,43],[10,52],[14,57],[13,22],[30,14],[84,21],[27,23],[39,42],[20,33],[11,27],[1,30],[26,10],[23,48],[28,49],[48,41],[43,56],[15,-9],[16,-26],[8,-29],[2,-15],[55,-18],[9,3],[40,-26],[38,-32],[20,-8],[10,1],[9,10],[10,28],[10,20],[7,8],[-1,32],[54,61],[49,45],[42,32],[12,-13],[14,-25],[18,-62],[11,-16],[29,9],[5,-7],[-5,-22],[-19,-28],[-25,-26],[-16,-20],[5,-68],[-1,-24],[7,-7],[51,67],[25,14],[9,-16],[2,-37],[21,-74],[8,-38],[-51,-91],[-19,-47],[1,-16],[-1,-16],[-14,-24],[1,-9],[11,-15],[13,-11],[6,1],[11,22],[48,31],[14,-6],[34,-48],[16,-3],[41,-14],[27,18],[19,-16],[40,-60],[9,-11]],[[77033,68097],[-3,-36],[-2,-40],[10,-32],[1,-28],[-2,-25],[-8,-18],[-23,-10],[-18,-30],[-31,-45],[-24,-35],[-17,-32],[-7,-32],[2,-42],[5,-43],[56,-159],[0,-28],[-18,-8],[-23,18],[-21,26],[-22,68],[-19,21],[-18,4],[-109,-35],[-23,-10],[-36,-25],[-25,-52],[-18,-47],[-19,-18],[-28,-37],[-76,-112],[-44,-48],[-29,-18],[-20,-25],[-11,-42],[-8,-29],[-3,-73],[5,-90],[11,-58],[6,-12],[1,-17],[-11,-31],[-15,-26],[-7,-17],[-6,-82],[-13,-40],[-23,-59],[-21,-45],[-33,-35],[-13,-28],[-12,-52],[-7,-44],[0,-16],[4,-14],[13,-16],[17,-15],[8,-23],[1,-28],[-12,-68],[-22,-95],[-26,-74],[-26,-71],[-6,-24],[-23,-87],[-21,-120],[-13,-81],[-12,-56],[-15,-2],[-18,18],[-43,23],[-27,19],[-21,17],[-14,0],[-19,-12],[-19,-7],[-12,8],[-27,50],[-8,-6],[-5,-24],[18,-143],[12,-53],[-2,-88],[-5,-109],[-7,-119],[-4,-28],[-12,-31],[-15,-9],[-14,13],[-11,-3],[-3,-20],[3,-52],[-14,-58],[-10,-51],[3,-49],[5,-49],[16,-108],[0,-39],[-3,-36],[-9,-14],[-14,2],[-7,-15],[-6,-22],[-16,-81],[-16,-9],[-15,12],[-23,55],[-14,16],[-9,-1],[-4,-15],[-6,-32],[-6,-22],[-16,-19]],[[75714,64503],[-3,40],[-8,209],[-7,66],[-5,92],[-7,28],[-10,51],[-10,43],[-9,19],[-5,81],[-2,99],[0,47],[-13,97],[-12,110],[-16,-4],[-10,26],[-7,0],[-23,-25],[-18,8],[-14,-3],[0,-51],[3,-54],[-6,-19],[-36,-64],[-9,-42],[1,-45],[4,-59],[-6,-31],[-16,-28],[-21,-14],[-18,7],[-12,24],[-11,62],[-10,34],[-10,8],[-8,-9],[-1,-39],[0,-33],[-2,-3],[-6,5],[-6,16],[-17,155],[-25,119],[-1,46],[8,59],[11,91],[29,56],[4,24],[5,19],[7,4],[37,-5],[13,9],[11,27],[16,21],[16,9],[13,3],[20,-21],[9,12],[6,38],[9,37],[5,18],[14,8],[18,2],[5,7],[5,13],[4,49],[23,111],[8,49],[1,8],[-1,55],[7,8],[37,-27],[16,1],[9,11],[3,20],[-5,23],[-26,41],[-47,55],[-43,34],[-80,-5],[-79,-11],[-23,6],[-29,15],[-70,-2],[-86,-9],[-32,5],[-17,0],[-32,-6],[-52,16],[-37,20],[-32,22],[-38,20],[-9,0],[-5,7],[-4,18],[-1,23],[8,106],[-7,161],[6,59],[-31,132],[-11,25],[-15,1],[-9,-17],[-3,-31],[5,-35],[-12,-38],[-23,-13],[-27,13],[-22,18],[-29,40],[-21,55],[-2,61],[-10,40],[-13,19],[-10,5],[-9,-4],[-8,-21],[7,-22],[9,-30],[-3,-20],[-8,-3],[-12,9],[-19,-5],[-19,16],[-11,1],[-11,6],[0,35],[-17,45],[-28,50],[-28,31],[-14,-4],[-6,-35],[1,-12],[10,-7],[14,-20],[3,-20],[-2,-19],[-17,-33],[-13,-31],[-27,-46],[-23,-52],[-6,-40],[-9,-36],[-4,-39],[6,-27],[12,-17],[29,-13],[31,-52],[24,-72],[14,-21],[26,-24],[48,-3],[8,-20],[7,-52],[9,-18],[25,-25],[2,-18],[-6,-21],[-11,-16],[-20,-11],[-20,-4],[-19,6],[-29,5],[-33,0],[-23,-131],[-16,-46],[-10,1],[-25,22],[-11,-4],[-29,-116],[-4,-28],[-2,-21],[16,-45],[18,-37],[22,-14],[17,11],[14,-15],[17,-37],[28,-25],[40,-12],[23,-29],[2,-25],[-1,-26],[-4,-67],[-4,-39],[-21,-102],[-16,-87],[8,-42],[6,-17],[5,-13],[17,-33],[12,-32],[-10,-83],[6,-22],[23,-14],[25,-11],[9,-14],[-22,-84],[5,-59],[9,-55],[6,-90],[1,-9],[-2,-23],[15,-69],[21,-136],[2,-51],[-1,-54]],[[74736,64569],[-7,-90],[-22,1],[20,-60],[6,-44],[3,-60],[-24,-7],[-16,7],[-14,52],[-7,-48],[-24,-44],[-9,22],[-5,23],[-1,41],[13,157],[-2,17],[-7,12],[-13,6],[-5,32],[-21,-167],[9,-68],[-4,-32],[-38,-26],[-39,63],[-5,20],[-3,-35],[-7,-43],[-36,8],[-19,33],[12,58],[23,137],[4,62],[-30,45],[-26,27],[-15,63],[6,-69],[14,-24],[20,-17],[21,-35],[-15,-43],[-15,-27],[-29,-101],[-34,-57],[-41,-42],[-132,-63],[-28,-25],[-41,-78],[-26,-74],[-5,-75],[15,-81],[12,-127],[10,-26],[-14,-47],[-25,-49],[-20,-66],[2,-37],[-5,-24],[-70,-82],[-15,-47],[-19,-48],[-23,27],[-14,0],[19,-38],[-3,-25],[-6,-14],[-18,-14],[-101,-60],[-77,-57],[-22,3],[4,17],[14,15],[-1,66],[-15,12],[-12,4],[-59,-79],[-23,-79],[5,-15],[13,4],[39,44],[19,-12],[1,-18],[-60,-68],[-126,-220],[-6,-44],[-17,-49],[-22,-46],[-41,-112],[-78,-167],[-21,-62],[-125,-128],[-23,-39],[-51,-125],[-53,-102],[-62,-85],[-106,-108],[-65,-102],[-20,-68],[-2,-25],[7,-33],[12,-30],[3,-25],[-6,-44],[-3,-24],[-19,-60],[-33,-43],[-105,-90],[-14,3],[-86,18],[-32,-17],[-13,-42],[-30,-174],[-28,-46],[-11,-42],[-4,-29],[-17,1],[-14,13],[-11,-10],[-12,59],[-21,12],[-17,4],[-73,-59],[-25,-47],[-53,-223],[-14,-144],[13,-159],[18,-127],[4,-57],[-2,-75],[-10,-36],[-6,-43],[8,-88],[23,-116],[5,-48],[1,-51],[17,-115],[-12,20],[-9,49],[-21,62],[-26,-62],[14,-44],[49,-53],[15,-44],[-32,-386],[-24,-138],[-29,-90],[-16,-34],[-34,-142],[-24,-172],[-5,-67],[11,-74],[-12,-43],[-16,-34],[30,15],[10,-40],[3,-42],[1,-246],[-3,-257],[-23,-11],[-25,-2],[-22,7],[-16,10],[-39,-14],[-21,-28],[-17,-47],[1,-81],[-72,-203],[-16,-67],[-6,-65],[10,-34],[18,-35],[24,-14],[47,-14],[23,-19],[15,-34],[-55,36],[-65,8],[-155,-95],[-41,-66],[-23,-57],[-15,-131],[-3,-88],[-18,-73],[-81,-112],[-51,-34],[-19,-30],[-60,39],[-66,98],[-27,53],[-97,253],[-18,32],[-19,108],[-4,41],[-5,16],[-9,11],[-5,16],[-21,124],[-9,130],[-14,144],[11,-10],[17,-47],[8,-70],[1,-96],[12,-11],[11,9],[-31,222],[-28,55],[-7,4],[-7,36],[-1,44],[2,22],[-21,72],[-8,44],[-48,220],[-22,157],[-33,175],[-22,62],[-34,135],[-28,63],[-30,84],[-24,38],[-9,19],[-70,292],[-21,162],[-18,76],[-9,58],[-25,247],[0,44],[-3,49],[-17,105],[-31,113],[-9,70],[1,28],[-20,110],[-4,50],[-13,47],[-15,42],[-16,34],[-37,112],[-14,27],[-25,72],[-18,134],[-23,52],[36,0],[-22,49],[-11,32],[-12,20],[17,50],[-27,-1],[-15,30],[-20,93],[-37,105],[-6,57],[-32,177],[-27,426],[-26,189],[2,54],[-30,165],[-15,110],[-6,93],[-8,61],[-7,121],[-12,39],[-1,23],[8,55],[22,85],[8,54],[-10,77],[-20,-80],[-18,-23],[-9,60],[0,80],[-2,20],[5,27],[49,-13],[-56,49],[-6,29],[-3,22],[12,40],[-20,33],[-8,103],[-6,24],[-2,19],[11,142],[48,280],[4,63],[-5,90],[-10,71],[-5,76],[-3,19],[-17,7],[-16,28],[-19,112],[17,36],[13,21],[-18,-9],[-15,3],[29,52],[25,39],[59,46],[25,30],[-37,-27],[-38,-10],[-83,6],[14,104],[14,35],[16,19],[-23,-6],[-27,9],[9,106],[21,22],[22,5],[28,15],[-30,17],[-31,9],[-37,-18],[-34,13],[-42,0],[17,-14],[17,-33],[-8,-57],[-9,-36],[-23,-24],[-18,-38],[-6,-32],[-10,-24],[18,-16],[19,-12],[11,-26],[13,-39],[-1,-75],[-49,-177],[-17,-39],[-124,-107],[-48,-58],[-104,-75],[-40,-14],[-44,15],[-66,57],[-99,147],[-26,48],[-79,189],[-57,99],[-44,93],[-54,88],[-51,118],[-10,54],[3,54],[19,30],[22,-12],[18,-46],[12,-21],[11,-8],[76,71],[29,-3],[20,35],[25,-7],[52,55],[22,3],[26,11],[42,140],[31,89],[20,19],[-1,22],[-5,28],[-16,-7],[-10,-27],[-8,-33],[-8,-19],[-24,18],[-17,-3],[-20,-11],[-75,-52],[-31,-47],[-20,-9],[-119,51],[-117,118],[-49,79],[-31,100],[-31,120],[10,33],[48,72],[42,56],[-37,-25],[-41,-35],[-20,-24],[-22,-51],[-31,-12],[-11,76],[-8,74]],[[76080,55778],[-17,-48],[-33,145],[-15,9],[0,69],[8,28],[38,30],[10,-17],[20,-134],[-11,-82]],[[76036,56080],[-26,-54],[-12,33],[5,22],[11,13],[11,17],[11,-31]],[[75872,56595],[8,-22],[-15,4],[-15,32],[4,31],[6,12],[12,-57]],[[75956,56381],[-22,-1],[-6,24],[-9,26],[6,25],[12,6],[16,-40],[4,-28],[-1,-12]],[[75982,56484],[-13,-22],[-4,3],[-1,16],[-1,12],[-2,20],[-2,37],[11,30],[10,-6],[-5,-31],[7,-59]],[[75774,57106],[-13,-4],[-7,20],[-1,23],[7,15],[6,7],[7,-1],[7,-39],[-6,-21]],[[75694,57923],[-8,-20],[-29,15],[3,60],[-7,58],[5,24],[21,42],[18,18],[12,-56],[5,-55],[-20,-86]],[[75747,58399],[-13,-12],[-14,15],[11,23],[2,47],[13,-26],[0,-30],[1,-17]],[[75756,58488],[-7,-14],[-9,15],[-25,104],[-5,66],[-7,23],[9,33],[12,11],[6,37],[3,57],[10,46],[5,13],[20,0],[6,6],[-3,44],[-12,20],[-4,12],[0,106],[3,43],[8,30],[-6,64],[4,24],[15,33],[7,72],[-6,21],[14,110],[-1,73],[19,74],[29,33],[9,1],[1,-62],[3,-21],[-17,-37],[16,-49],[-2,-17],[-6,-39],[-11,-37],[-15,-16],[-11,-50],[-7,-19],[22,-53],[7,-180],[-16,-49],[-19,-10],[4,-120],[-3,-26],[-19,-59],[-4,-26],[-11,-24],[5,-30],[9,-13],[0,-25],[-8,-64],[-1,-72],[-11,-59]],[[75837,58776],[13,-79],[-22,35],[-8,24],[11,17],[6,3]],[[75754,59253],[-9,-37],[-1,80],[4,10],[4,3],[6,-8],[-4,-48]],[[70216,58296],[-2,-4],[0,10],[2,17],[3,11],[1,-1],[0,-11],[-2,-15],[-2,-7]],[[70296,56606],[-4,-7],[-4,-3],[-3,1],[-1,7],[0,6],[4,-7],[5,6],[5,18],[1,6],[1,-3],[-1,-10],[-3,-14]],[[45682,89993],[32,-3],[52,20],[22,13],[53,45],[32,13],[49,-3],[23,3],[1,-5],[-30,-18],[-24,-6],[-35,-27],[-32,-62],[-25,-30],[1,-13],[29,-24],[32,-13],[30,12],[13,-5],[12,-17],[6,-18],[2,-17],[-6,-36],[-17,-37],[-24,-30],[3,-10],[19,-5],[92,20],[10,-1],[5,-10],[1,-19],[5,-16],[9,-15],[-3,-15],[-40,-48],[48,30],[37,9],[65,-15],[26,-18],[15,-30],[23,10],[9,-1],[15,-17],[0,-18],[-10,-27],[-4,-24],[-11,-10],[-21,-7],[-6,-9],[9,-18],[14,-18],[19,-1],[3,-9],[1,-10],[-3,-12],[-6,-8],[-10,-4],[-13,-13],[48,-29],[6,-10],[1,-16],[-4,-17],[-8,-18],[-15,-11],[-34,-2],[-22,-12],[7,-20],[0,-26],[-6,-29],[-28,-46],[-26,-24],[-25,-15],[-45,5],[-24,12],[2,-39],[-25,-24],[5,-20],[9,-10],[-5,-26],[-11,-26],[-20,-27],[-23,-17],[-45,-21],[-38,-35],[-26,-14],[-65,1],[-67,-22],[-93,-47],[-64,-38],[-48,-43],[-65,-69],[-48,-30],[-27,-7],[-54,-7],[-45,-19],[-150,-35],[-50,-19],[-7,-18],[-21,-27],[-1,-9],[9,-8],[2,-9],[-19,-32],[-37,-22],[-17,0],[-21,20],[-10,-1],[-3,-3],[0,-6],[12,-24],[-23,-10],[-97,-28],[-166,20],[-65,22],[-81,33],[-49,9],[-68,2],[-56,47],[-26,29],[-2,12],[3,14],[5,9],[9,5],[19,0],[2,5],[-14,23],[-14,-8],[-36,-33],[-16,2],[-21,16],[-1,16],[-41,6],[-36,20],[-36,28],[-5,11],[17,16],[-3,3],[-13,3],[-26,-5],[-39,-36],[-17,-9],[-257,-8],[-65,-4],[-13,-5],[-11,23],[-10,53],[-4,34],[3,17],[9,20],[14,-4],[13,-15],[12,-23],[14,-11],[89,28],[37,18],[15,18],[18,29],[20,16],[9,14],[18,46],[13,21],[14,16],[18,10],[40,7],[-27,11],[-24,0],[-85,-48],[-28,0],[1,7],[12,14],[29,24],[-20,1],[-8,11],[-1,22],[15,37],[69,47],[24,7],[7,10],[-9,7],[-14,5],[-70,-49],[-50,-17],[-15,3],[-26,19],[-8,9],[-12,22],[2,13],[24,38],[-4,8],[-17,3],[-44,36],[-71,-4],[-174,21],[-36,-9],[-59,-30],[-36,-10],[-16,6],[-15,16],[-14,22],[-12,27],[5,19],[23,11],[17,5],[47,-6],[58,19],[37,4],[10,3],[22,20],[11,5],[16,-7],[8,-14],[59,22],[20,10],[2,7],[9,8],[28,-12],[24,0],[29,8],[52,3],[115,2],[18,18],[8,15],[10,39],[-4,8],[-73,-36],[-16,1],[-84,19],[-30,21],[10,18],[44,37],[46,30],[67,32],[16,13],[2,15],[-45,26],[-85,-7],[-22,31],[-70,19],[-47,-12],[-25,19],[-61,-26],[-134,-38],[-54,-27],[-28,-8],[-33,21],[-57,25],[-64,7],[-6,14],[37,44],[26,8],[26,-4],[49,-30],[34,-10],[-43,45],[1,17],[-3,26],[-13,11],[-13,29],[5,9],[17,4],[34,-10],[82,-50],[40,9],[22,18],[29,14],[-8,7],[-70,1],[-38,10],[-19,14],[-17,25],[6,11],[20,10],[60,-3],[-40,43],[-27,24],[-3,12],[2,15],[3,10],[6,5],[69,-25],[15,-1],[-14,16],[-30,24],[-2,9],[13,7],[6,14],[1,11],[21,9],[21,1],[21,-9],[66,-46],[10,-13],[3,-17],[-3,-22],[2,-8],[26,7],[21,-9],[10,2],[26,32],[17,-7],[11,-15],[3,-14],[2,-18],[-5,-39],[1,-5],[18,22],[31,1],[4,11],[1,41],[-3,34],[-3,7],[-101,48],[-17,11],[-22,24],[5,11],[19,11],[30,4],[68,-1],[7,5],[-13,13],[-32,8],[-7,7],[-4,14],[-38,-8],[-42,0],[-40,8],[-1,11],[16,15],[33,26],[15,7],[46,-5],[46,8],[37,-9],[29,-26],[42,-45],[57,-29],[5,-9],[30,-24],[60,-63],[60,-37],[3,-10],[-10,-11],[-23,-13],[5,-7],[31,-9],[21,-25],[2,-11],[-20,-78],[-10,-16],[-13,-9],[-56,15],[14,-25],[40,-26],[9,-15],[-6,-14],[4,-4],[15,8],[6,-8],[-3,-24],[-6,-20],[-10,-16],[3,-7],[16,2],[14,-4],[23,-22],[19,-67],[9,-21],[7,19],[8,49],[8,25],[7,1],[7,8],[5,15],[11,55],[38,41],[18,12],[16,3],[9,-5],[28,-43],[17,-7],[9,2],[12,29],[15,56],[3,63],[-8,69],[5,49],[18,30],[23,9],[29,-12],[22,-18],[42,-68],[34,-36],[29,-39],[15,-12],[29,-7],[7,3],[6,9],[2,15],[-6,98],[8,31],[12,22],[53,12],[28,14],[28,22],[22,12],[19,2],[19,-9],[19,-19],[31,-37],[39,-61],[50,-46],[26,-73],[5,-13],[6,-1],[7,9],[4,14],[1,32],[-14,43],[-46,109],[-1,20],[6,17],[33,1],[75,-9],[25,-17],[51,-66],[15,-16],[8,-5],[4,9],[20,12],[13,15],[23,36],[51,66],[10,2],[15,-5],[26,-18],[12,-13],[24,-11],[25,4],[35,23],[38,14],[14,32],[2,15],[-31,97],[13,20],[68,24],[59,2],[14,-7],[38,-47],[25,-23],[13,-19],[3,-42],[15,-16],[29,-17]],[[55251,78301],[-1,0],[-19,-12],[-31,-7],[-16,5],[-28,-54],[-8,-10],[-27,-17],[-22,-8],[-19,7],[-7,0],[-84,3],[-43,12],[-28,21],[-19,23],[-9,27],[-21,15],[-34,6],[-27,26],[-19,46],[-26,37],[-32,27],[-26,38],[-19,50],[-34,44],[-50,40],[-15,8]],[[54470,78838],[44,62],[22,18],[26,-3],[8,5],[2,9],[4,21],[3,19],[2,18],[-3,10],[-12,3],[-6,45],[6,17],[6,12],[-7,54],[2,18],[20,3],[16,12],[14,13],[4,17],[11,34],[-10,42],[-58,27],[-3,11],[13,12],[15,17],[8,13],[11,2],[16,-7],[28,-30],[10,-5],[11,9],[11,2],[30,-1],[26,7],[-6,32],[0,24],[-4,19],[3,20],[10,16],[3,36],[17,25]],[[25739,59319],[2,61],[-23,25],[-12,50],[-11,34],[3,21],[-1,24],[-31,19],[-30,-14],[-17,9],[-12,13]],[[25607,59561],[21,30],[2,18],[-7,14],[-7,8],[2,34],[4,40],[12,94],[-4,17],[-20,28],[-25,3],[-27,-9],[-13,14],[-12,32],[-20,16],[-34,-26],[-37,-39],[-11,-14],[-10,2],[-4,29],[-2,35],[-2,8],[-20,12],[-23,9],[-11,10],[-11,23],[-28,30],[-6,22],[-37,52],[-7,25],[-8,19],[-18,23],[-14,-5],[-46,29],[-7,3]],[[25177,60147],[6,26],[15,39],[32,45],[2,36],[-8,68],[-8,45],[4,20],[10,80],[8,19],[46,40],[4,6],[37,57],[40,63],[42,69],[47,78],[26,45],[12,20]],[[25492,60903],[27,-16],[21,37],[12,12],[29,44],[9,10],[48,18],[23,-1],[21,-44],[16,-25],[30,21],[26,5],[105,-42],[42,19],[76,4],[35,-11],[49,59],[31,12],[37,27],[-5,29],[-9,12],[56,-12],[83,-60],[89,11],[32,32],[21,9],[91,-61],[24,-47],[19,-4],[14,10],[4,10],[-18,10],[-8,15],[72,-29],[135,-222],[3,-18],[-58,65],[-31,-5],[-8,-10],[2,-36],[3,-17],[13,-2],[10,10],[24,-12],[15,-24],[19,-36],[12,-40],[12,-1],[12,24],[23,3],[15,-26],[11,1],[-15,42],[-35,41],[9,1],[77,-74],[21,-92],[19,-21],[18,-29]],[[25994,61277],[-44,-45],[-14,1],[20,35],[33,30],[28,14],[23,-6],[-46,-29]],[[26147,61325],[-21,-33],[-4,15],[10,31],[13,17],[12,-1],[-3,-14],[-7,-15]],[[30061,63201],[6,-17],[13,-116],[1,-38],[-13,-56],[2,-22],[28,-52],[0,-18],[-3,-19],[-24,-49],[-18,-34],[6,-39],[15,-36],[2,-31],[-5,-41],[-22,-50],[-12,-18],[-34,-2],[-3,-7],[16,-49],[19,-56],[31,-43],[7,-41],[-8,-38],[-1,-95]],[[30064,62234],[-23,46],[-26,38],[-16,15],[-16,10],[-123,-5],[-14,-7],[-11,-12],[-11,-6],[-34,-12],[-34,-2],[-79,31],[-31,16],[-31,10],[-36,-3],[-36,-10],[-29,-22],[-21,-40],[-4,-36],[-13,-10],[-29,59],[-27,41],[-30,31],[-62,45],[-12,27],[-5,32],[26,101],[28,19],[16,3],[35,-12],[35,-23],[31,-15],[49,-6],[27,-25],[187,-38],[35,-12],[14,4],[12,15],[10,27],[12,21],[56,4],[11,9],[8,29],[0,29],[-33,40],[-51,86],[-45,103],[20,34],[-8,63],[8,58],[10,57],[-44,49],[-53,49],[-73,15],[-22,13],[-12,36],[11,49],[23,28],[27,16],[28,12],[67,14],[67,-16],[57,-50],[59,-40],[73,-13],[34,-14],[15,12]],[[29776,62659],[-5,-40],[-71,48],[-57,61],[2,33],[30,7],[28,-20],[41,-40],[32,-49]],[[29815,63385],[12,-13],[-5,-17],[-28,10],[-29,19],[-9,-5],[-6,2],[-17,18],[15,14],[15,4],[17,-1],[35,-31]],[[33328,56767],[10,-9],[40,-92],[23,-20],[4,0],[0,24],[21,-10],[52,-63],[77,-103],[108,-195],[31,-75],[20,-35],[33,-85],[9,-41],[-1,-166],[-28,-112],[-7,-84],[-2,-113],[-16,-64],[22,35],[6,101],[19,62],[24,67],[33,16],[35,-28],[28,-5],[24,-20],[53,-108],[52,-86],[18,-68],[55,-34],[32,-54],[10,-47],[7,-122],[-11,-185],[3,-9]],[[34310,52961],[-12,-8],[-10,-12],[-15,9],[-21,-5],[-21,-12],[-19,-7],[-37,21],[-11,2],[-8,9],[-15,40],[-8,5],[-19,-19],[-24,-13],[-12,3],[-14,-14],[-12,-18],[-25,-78],[-12,-27],[-14,-13],[-27,1],[-29,-3],[-21,-19],[-21,-10],[-10,-1],[-3,-42],[-5,-20],[-6,-12],[-16,-3],[-14,1],[-9,18],[-15,9],[-15,7],[-9,10],[-7,-3],[-6,-18],[-5,-15],[-4,-28],[-22,-9],[-9,-16],[5,-52],[-2,-20],[-5,-16],[-26,-4],[-22,2],[-12,-20],[-16,-22],[-10,-4],[-11,1],[-15,26],[-14,32],[-37,23],[-36,18],[-24,51],[-6,25],[-11,11],[-28,61],[-16,39],[-17,10],[-19,17],[0,28],[-1,27],[-8,11],[-12,7],[-4,15],[1,36],[2,92],[-3,88],[-26,30],[-11,21],[-20,130],[-9,58],[-1,44],[7,129],[7,56],[20,113],[12,38],[1,28],[-2,37],[-6,72],[35,46],[14,19],[3,30],[18,39],[8,37],[7,29],[-2,15],[-8,9],[-10,27],[-19,79],[-7,16],[-6,22],[3,35],[7,38],[-1,16],[-11,21],[-25,34],[-20,2],[-16,13],[-23,1],[-18,4],[-10,13],[2,21],[4,16],[16,40],[10,42],[2,42],[3,55],[4,47],[3,54],[-25,35],[-7,29],[-10,25],[-11,0],[-17,11],[-26,-33],[-21,6],[-14,-13],[-32,3],[-21,16],[-25,-11]],[[46186,59143],[-1,-46],[16,-66],[-2,-49],[-7,-47],[-6,-18],[-9,-11],[-25,1],[-10,-10],[-17,-18],[0,-21],[13,-21],[11,-28],[13,-23],[21,-25],[2,-29],[1,-72],[-1,-57],[-61,-41],[-47,-7],[-40,4],[-17,-17],[-35,-43],[-42,-25],[-22,-2],[-10,-15],[-17,-44],[-46,-192],[-15,-46],[-12,-30]],[[45821,58145],[-14,40],[11,76],[-12,-1],[-23,-61],[-12,-2],[2,72],[-13,3],[-15,-5],[-21,37],[-2,28],[1,40],[13,25],[-2,10],[-12,3],[-14,-6],[-8,11],[14,51],[49,43],[24,5],[26,9],[-14,37],[-30,15],[-24,-10],[-12,-27],[-15,-5],[-25,63],[1,31],[9,38],[14,16],[57,0],[22,21],[9,4],[8,19],[-2,12],[-9,1],[-21,-25],[-69,10],[-22,-15],[-38,-58],[-47,-31],[-34,13],[11,77],[-5,10],[-10,13],[-50,-25],[-38,35],[-15,43],[3,53],[17,36],[3,18],[-19,3],[-34,-22],[-77,86]],[[45523,58213],[-22,-8],[-10,28],[-2,11],[12,10],[5,0],[9,21],[11,14],[5,5],[5,-1],[4,-46],[-5,-20],[-12,-14]],[[45584,58227],[-3,-16],[-16,2],[4,16],[-4,5],[5,49],[2,7],[8,-18],[1,-8],[3,-37]],[[45631,58303],[0,-23],[-11,4],[-4,7],[7,43],[11,19],[12,-3],[4,-6],[-2,-16],[-6,-14],[-11,-11]],[[45679,58488],[-2,-13],[-16,11],[23,49],[15,8],[-1,-37],[-11,-8],[-8,-10]],[[45582,58447],[-13,-18],[-13,9],[-7,16],[1,29],[15,41],[14,-6],[3,-71]],[[45559,58687],[-15,-70],[-17,7],[-13,42],[-1,18],[36,6],[10,-3]],[[46307,57055],[-3,17],[10,53],[-8,28],[-28,55],[-2,27],[-9,34],[-36,71],[-35,-4],[10,59],[-1,79],[-11,43],[3,44],[-7,-2],[-11,-31],[-18,10],[-38,47],[-18,46],[-3,38],[-4,15],[-11,-8],[-24,1],[-71,69],[-51,174],[-1,39],[7,67],[-1,19],[-23,-45],[-5,30],[-18,70],[-5,40],[-17,17],[-14,4],[-10,-14],[-14,-81],[-11,0],[-10,18],[2,61]],[[47780,57697],[-6,-22],[-18,-33],[-17,-26],[-5,-28],[3,-53],[0,-119],[2,-103],[14,-38],[16,-19],[19,4],[18,7],[-1,-62],[-5,-69],[22,-22],[11,-21],[6,-19],[-35,-37],[-10,-22],[-4,-57],[1,-54],[46,-38],[18,-45],[8,-46],[3,-88],[-4,-20],[-12,0],[-14,27],[-10,26],[-12,0],[-24,6],[-26,10],[-33,-2],[-12,-5],[-8,-16],[-2,-27],[-3,-89],[11,-20],[21,-22],[14,-9],[12,3],[9,-15],[2,-38],[-7,-28],[-11,-26],[-15,-67],[3,-25],[0,-37],[-25,-98],[-7,-19],[-33,19],[-22,7],[-16,-25]],[[25233,62105],[-3,-140],[-3,-162],[-2,-119],[-3,-159],[-3,-162],[-5,-222],[-2,-143],[1,-3],[33,7],[49,-6],[12,0]],[[25307,60996],[15,-12],[12,-4],[24,-32],[30,-25],[18,50],[-9,29],[-8,15],[1,14],[102,-128]],[[25177,60147],[-6,6],[-10,2],[-23,-10],[-11,-2],[-9,-11],[-1,-25],[6,-40],[3,-21],[-7,-9],[-28,-25],[-11,-23],[-11,-38],[-12,-15],[-13,3],[-9,-6],[-19,-27],[-30,-54],[-15,-40],[-1,-30],[3,-27]],[[24973,59755],[-106,95],[-36,16],[-150,-2],[-64,37],[-73,72],[-50,66],[-115,182]],[[32856,58762],[-18,-2],[7,21],[2,37],[10,44],[15,30],[15,-8],[-6,-98],[-25,-24]],[[57738,72899],[-6,-9],[-14,26],[0,14],[14,16],[7,3],[2,-10],[0,-23],[-3,-17]],[[55725,73953],[4,-67],[19,-12],[26,-60],[-2,-31],[-6,-10],[-43,28],[-10,-13],[-13,5],[-7,34],[1,11],[-8,20],[-5,9],[-17,-26],[-11,-5],[0,24],[16,66],[7,11],[13,-22],[10,8],[8,36],[1,36],[3,11],[14,-53]],[[55802,73620],[29,-56],[-23,14],[-26,-39],[-31,45],[-20,46],[-4,18],[20,43],[19,-44],[22,-7],[14,-20]],[[55746,74083],[-11,-5],[-9,3],[-9,-2],[-8,-11],[1,45],[10,57],[11,33],[17,15],[7,-26],[-1,-92],[-8,-17]],[[55766,73922],[-14,-6],[-17,55],[-7,38],[7,2],[7,-5],[8,-14],[0,-15],[3,-15],[7,-19],[6,-21]],[[55577,74557],[6,-32],[-35,20],[-25,29],[-21,71],[-45,81],[0,24],[17,18],[36,12],[15,-13],[9,-13],[3,-16],[-20,-31],[-5,-14],[16,-28],[0,-11],[7,-55],[8,-20],[20,-16],[14,-6]],[[56504,74284],[15,-62],[15,-21],[31,-25],[15,-4],[52,-45],[62,-8],[8,-13],[7,-35],[13,-27],[3,-22],[-7,-23],[9,-72],[16,-68],[23,-33],[29,-10],[28,1],[7,-14],[-3,-59],[-12,-24],[-9,-5],[-9,6],[-7,14],[-8,7],[-16,1],[-12,24],[-29,33],[-5,19],[-1,31],[-13,22],[-11,43],[-11,11],[-6,22],[-1,9],[-43,6],[-35,0],[-30,24],[-9,63],[-18,17],[-13,18],[-11,25],[-29,45],[-31,39],[-30,25],[-32,16],[-26,-19],[-15,4],[-3,13],[33,27],[44,50],[31,16],[15,2],[29,-44]],[[56605,74374],[-12,-20],[-20,9],[-20,65],[52,-54]],[[56635,74399],[-13,-7],[13,46],[23,24],[-9,-38],[-14,-25]],[[56854,74198],[-30,-14],[-8,2],[7,18],[0,7],[-29,33],[4,42],[3,11],[22,-22],[5,-37],[26,-40]],[[56881,75238],[-35,-20],[-37,39],[1,23],[19,47],[10,14],[27,-4],[15,-32],[4,-15],[-5,-26],[1,-26]],[[56541,73689],[-11,-14],[-12,1],[-9,5],[-4,11],[5,6],[7,23],[6,6],[9,-3],[5,-9],[4,-26]],[[56403,72689],[-3,-25],[-28,17],[-8,26],[-2,57],[8,28],[5,9],[13,-32],[27,-47],[-12,-33]],[[57548,72272],[-10,-32],[-11,27],[5,31],[-13,50],[24,74],[0,36],[18,19],[-4,-62],[-14,-49],[14,-40],[7,-46],[-16,-8]],[[57505,73132],[-28,-8],[5,46],[-13,36],[21,-20],[14,-24],[7,-5],[-2,-15],[-4,-10]],[[57485,72999],[-8,-1],[10,28],[29,38],[43,34],[14,3],[24,-21],[-44,-34],[-12,-18],[-32,-4],[-24,-25]],[[57096,73137],[-25,-22],[-17,32],[-10,50],[46,72],[11,-6],[6,-19],[-1,-65],[-10,-42]],[[57021,73195],[-22,-44],[-18,5],[-8,20],[12,42],[24,24],[11,-7],[-1,-31],[2,-9]],[[57078,72806],[-13,-30],[-18,11],[7,11],[5,15],[0,22],[-5,13],[3,5],[17,-22],[4,-25]],[[57050,72968],[-5,-9],[-21,37],[-8,21],[10,18],[31,-42],[-7,-25]],[[57451,73623],[34,-19],[9,2],[16,-6],[5,-35],[-22,-6],[-37,-32],[-15,7],[-19,28],[-30,3],[-9,8],[16,33],[29,16],[23,1]],[[57230,73461],[-13,-2],[4,23],[25,40],[34,2],[32,20],[7,0],[-15,-31],[-25,-30],[-49,-22]],[[57183,73035],[-25,-4],[-8,4],[15,10],[11,10],[5,13],[25,23],[16,29],[18,-20],[-23,-13],[-34,-52]],[[57350,72917],[-22,-14],[-14,-29],[-17,21],[0,28],[18,-9],[13,16],[-4,18],[15,-9],[11,-22]],[[56765,73488],[-19,-28],[-3,42],[12,44],[16,3],[6,-19],[-12,-42]],[[56787,73354],[-16,-17],[6,40],[-8,21],[7,17],[10,15],[5,-15],[9,-24],[-13,-37]],[[56815,73020],[0,-34],[-1,-12],[-57,-16],[5,38],[3,13],[19,-18],[7,9],[3,10],[21,10]],[[56928,73440],[-1,-60],[-8,1],[-4,9],[0,23],[3,36],[10,-9]],[[56942,73594],[-9,-39],[-21,45],[-24,31],[-9,27],[-14,16],[-4,36],[17,15],[8,1],[18,-44],[28,-5],[-2,-27],[8,-35],[4,-21]],[[57015,73501],[-10,-37],[-18,6],[-29,40],[-10,18],[-5,18],[12,2],[14,-19],[37,-10],[9,-18]],[[56866,73111],[-5,-3],[-7,25],[-2,22],[3,13],[10,2],[13,-43],[-12,-16]],[[57248,73858],[-27,-33],[-29,47],[-5,15],[21,19],[11,30],[-8,36],[-31,53],[-1,38],[46,16],[27,-33],[14,-3],[-5,-31],[2,-10],[2,-96],[-13,-13],[-2,-26],[-2,-9]],[[57336,74498],[-5,-34],[38,-57],[13,-36],[5,-35],[-3,-10],[-15,19],[-12,6],[4,-25],[13,-21],[-22,-13],[-22,1],[-64,30],[-14,32],[38,48],[8,19],[-27,-2],[-29,-57],[-46,25],[-14,23],[-4,12],[19,51],[32,-2],[17,11],[21,16],[1,24],[50,6],[18,-31]],[[57134,75130],[-31,-15],[-35,47],[34,19],[15,-14],[11,-16],[6,-21]],[[57065,74874],[-10,-19],[-8,-34],[-4,-47],[-16,-2],[-10,10],[-3,18],[-1,23],[-7,-1],[-6,-25],[-5,-11],[-16,-2],[-18,15],[1,33],[-4,38],[2,14],[49,3],[14,-28],[18,16],[7,18],[21,11],[-4,-30]],[[57056,73397],[-27,-3],[2,44],[10,11],[31,-22],[-1,-14],[-15,-16]],[[56812,73228],[-11,-9],[-17,13],[5,32],[11,13],[13,-10],[2,-14],[-3,-25]],[[57734,72539],[-21,-12],[-6,2],[-9,26],[12,65],[-11,41],[-1,18],[17,24],[11,36],[27,40],[72,46],[17,5],[-1,-37],[-24,-92],[-21,-46],[6,-37],[-34,-11],[-34,-68]],[[56625,72312],[19,-4],[26,1],[6,3],[16,34],[20,1],[9,-34],[-20,-15],[-5,-9],[4,-7],[16,-13],[21,5],[1,-26],[4,-22],[11,-13],[11,-2],[26,4],[25,8],[25,17],[26,9],[79,-9],[28,-36],[53,-5],[50,-19],[26,13],[45,12],[7,-13],[-6,-82],[3,-24],[13,-11],[12,5],[16,27],[37,21],[39,0],[33,54],[10,3],[-6,-26],[-5,-63],[-7,-37],[-3,-29],[-22,-15],[-33,-3],[-61,6],[-60,-10],[-113,-28],[-113,-14],[-15,9],[0,37],[-3,25],[-7,18],[-35,15],[-33,26],[-130,36],[-31,14],[-50,-8],[-18,1],[-13,13],[-9,22],[-4,69],[7,69],[10,18],[5,-21],[13,-9],[12,21],[0,31],[6,29],[9,-12],[7,-45],[16,-12]],[[57232,75303],[-7,24],[-43,43],[-100,25],[-48,32],[-21,-6],[-40,36],[-28,-16],[-59,-63],[-31,7],[-34,38],[-22,7],[-26,-20],[-42,-73],[-42,-36],[-38,14],[-51,0],[-5,-41],[10,-28],[27,-48],[-13,-37],[10,-36],[18,-7],[28,2],[50,-47],[22,-50],[14,-54],[-30,39],[-21,37],[-28,14],[-40,32],[-25,5],[-26,-22],[-3,-25],[29,-47],[26,-29],[14,-23],[9,-52],[-5,-17],[-10,-17],[-31,33],[-47,116],[-66,23],[-11,-24],[13,-61],[9,-24],[58,-67],[-5,-14],[-8,-6],[-65,38],[-19,58],[-4,73],[-59,50],[-56,55],[-13,53],[12,19],[8,38],[-31,-7],[-19,-24],[-32,-23],[-1,-39],[5,-36],[-10,-52],[-10,-90],[6,-48],[68,-136],[23,-99],[16,-37],[35,-42],[36,-76],[15,-41],[11,-65],[-30,-41],[-18,-2],[-9,19],[13,44],[-2,28],[-47,42],[-20,-15],[-22,-27],[13,-51],[14,-34],[8,-46],[28,4],[-38,-52],[-35,-27],[-35,-1],[-23,-5],[-7,-13],[18,-10],[15,-1],[24,-28],[68,-34],[33,-42],[32,-4],[32,-78],[56,-21],[31,-79],[43,-16],[36,-29],[11,-27],[5,-50],[2,-107],[8,-79],[0,-25],[-2,-37],[-9,-19],[-14,0],[-26,58],[-40,61],[-42,73],[-12,13],[-10,1],[-23,-25],[-63,-19],[-29,-26],[-11,-6],[-4,-14],[14,-15],[17,-33],[0,-45],[14,-56],[18,-14],[24,1],[13,-10],[4,-22],[14,-26],[9,-19],[-1,-13],[-66,-37],[-13,-16],[-12,-9],[-17,18],[-1,44],[-22,23],[-21,21],[-25,9],[-21,30],[-14,-25],[11,-85],[24,-60],[40,-158],[18,-93],[4,-46],[-9,-75],[19,-56],[14,-57],[-15,2],[-13,20],[-21,24],[-42,92],[-15,57],[-17,4],[-30,-8],[-34,-122],[1,-70],[-18,17],[-14,22],[1,76],[-1,32],[-40,104],[-19,12],[-8,35],[-15,38],[-19,-8],[-16,-15],[-4,-56],[-2,-51],[-11,-38],[-43,72],[-43,126],[-1,68],[31,63],[-4,45],[-30,89],[-43,57],[-24,17],[-11,60],[-23,31],[-19,15],[-4,22],[6,16],[45,62],[27,97],[13,5],[27,-23],[31,6],[25,57],[21,31],[36,-4],[80,-76],[87,-44],[43,-38],[25,-38],[13,-8],[20,-5],[-1,28],[-6,25],[17,14],[46,-1],[9,14],[8,21],[-9,24],[-16,12],[-16,3],[-11,8],[-17,-8],[-28,19],[-14,16],[-8,16],[-47,32],[-45,54],[-10,-31],[-19,-16],[-25,-3],[-73,35],[-45,-27],[-24,-6],[-19,-1],[-23,-12],[-26,-7],[-23,50],[-9,39],[-7,7],[-1,-37],[-7,-29],[-33,-16],[-20,23],[-15,68],[-18,87],[-33,70],[-27,18],[-3,39],[3,30],[32,8],[50,-32],[11,6],[11,15],[-2,33],[-7,29],[-14,2],[-10,-4],[-31,6],[-39,-16],[-19,15],[-6,19],[-33,46],[-29,62],[-46,41],[-31,126],[-25,55],[-28,40]],[[55555,74717],[6,0],[11,-6],[19,-22],[21,-5],[12,15],[7,13],[4,21],[2,26],[3,8],[16,-3],[5,6],[0,23],[-10,28],[-10,35],[0,16],[8,7],[13,15],[6,19],[14,9],[19,2],[22,8],[15,20],[2,19],[9,55],[5,27],[10,24],[5,33],[10,31],[21,13],[19,15],[14,40],[8,34],[0,20],[-12,35],[-9,33],[3,43]],[[56365,75654],[30,-6],[37,-2],[23,36],[37,3],[17,5],[28,-8],[28,1],[35,15],[33,25],[26,-2],[10,4],[6,5],[7,34],[48,2],[17,-3],[27,-1],[28,18],[8,-2],[14,-49],[8,-14],[15,-13],[34,-37],[6,10],[14,12],[41,-17],[39,-28],[33,-42],[36,12],[40,21],[27,6],[28,3],[17,8],[38,-10],[40,22],[19,20],[6,29],[-3,50],[-9,49],[-10,19],[-3,19],[5,18],[6,12],[26,11],[34,-16]],[[50329,55350],[-22,-22],[-16,-33],[-12,-50],[-16,-55],[-55,-29],[-22,-1],[-114,-1],[-108,-109],[-61,-39],[-38,-61],[-51,-44],[-36,-53],[-74,-25],[-122,-83],[-38,-33],[-38,-58],[-63,-68],[-24,1],[-49,63],[-37,32],[-90,49],[-67,18],[-33,21],[-8,4]],[[49135,54774],[7,23]],[[49142,54797],[19,1]],[[49161,54798],[20,-7],[14,18],[22,2],[6,18],[2,46],[0,37],[7,16],[2,44],[-11,96],[-7,11],[-39,14],[-3,19],[-7,21],[-8,49],[-8,74],[-14,92],[-27,151],[-6,54],[-5,54],[-1,66],[6,24],[-1,33],[-2,34],[18,77],[37,94],[7,34],[7,24],[1,34],[7,110],[17,132],[11,51],[7,27],[9,44],[3,21],[33,52],[16,14],[3,20],[-5,23],[2,15],[8,8],[12,6],[9,21],[-14,164],[-11,163],[-1,14],[-7,23],[-6,67],[-12,39],[-16,12],[1,37],[16,63],[4,37],[-8,11],[-1,28],[5,47],[-2,28]],[[49251,57304],[-3,31],[-17,71],[-4,51],[9,29],[-1,65],[-9,100],[-1,63],[6,26],[-3,25],[-12,24],[-1,23],[10,23],[-1,17],[-13,13],[-11,31],[-10,48],[2,78],[19,144],[2,12],[22,-1],[0,-6],[68,2],[77,1],[92,2],[83,2],[4,6],[14,8],[84,-15],[53,8],[22,-5],[17,-10],[36,6],[20,-3],[14,-36],[6,0],[8,15],[15,18],[15,13],[11,28],[6,22],[10,-5],[13,2],[10,18],[3,27],[64,-29]],[[52115,79258],[-14,8],[-10,38],[3,58],[15,76],[4,56],[-7,35],[9,54],[25,71],[16,75],[9,78],[12,52],[23,36],[56,100],[5,8],[-2,50],[-15,7],[-22,15],[-56,18],[-52,11],[-24,14],[-21,38],[-13,1],[-25,-14],[-32,-9],[-22,8],[-15,-2],[-8,-7],[-4,6],[-6,33],[-12,9],[-18,7],[-12,-3],[-8,-16],[-12,-12],[-12,4],[-35,75],[-9,17],[-3,15],[-8,28],[-22,27],[-21,9],[-10,-3]],[[51699,80714],[1,11],[15,53],[52,49],[-5,48],[-1,30],[-13,19],[-25,8],[-7,13],[-3,14],[19,29],[-23,24],[-10,24],[-31,30],[-4,11]],[[51999,82535],[-13,26],[-27,28],[6,59],[9,45],[27,57],[22,15],[96,9],[105,-4],[44,-84],[-16,-44],[25,-20],[13,7],[9,38],[6,42],[9,13],[33,-32],[12,-21],[0,-69],[12,93],[-9,66],[6,63],[14,34],[12,21],[77,-23],[86,12],[32,-25],[73,-123],[24,-20],[31,-6],[-42,26],[-89,149],[-26,19],[-41,5],[-26,15],[-16,23],[-4,20],[1,150],[-16,22],[-20,8],[-12,-10],[-25,-1],[-5,34],[6,26],[51,17],[33,23],[2,41],[-22,32],[-25,58],[-30,56],[-3,64]],[[52408,83469],[52,-1],[13,-3],[78,-30],[19,-21],[24,-1],[44,20],[33,8],[12,-12],[18,-5],[4,0]],[[52705,83424],[2,-10],[40,-16],[17,-24],[19,-37],[2,-54],[-24,-38],[-20,-24],[76,9],[8,-22],[11,-24],[41,17],[103,-70],[63,34],[16,2],[14,-57],[-16,-57],[-55,-61],[13,-38],[17,-8],[52,8],[82,-37],[17,11],[67,86],[26,18],[88,14],[16,33],[35,33],[23,36],[55,70],[56,-13],[33,-13],[37,-7],[33,-74],[83,-81],[77,7],[27,-77],[12,-96],[24,-30],[20,-19],[63,-21],[2,-1]],[[54113,81139],[-3,-9],[-9,-14],[-12,-2],[-18,10],[-12,13],[3,34],[-8,3],[-10,20],[-4,23],[-11,9],[-39,10],[-13,6],[-10,-5],[-8,-15],[5,-15],[8,-14],[21,-22],[-2,-9],[-47,-21],[-29,-23],[-27,-12],[-28,-23],[-55,-26],[-40,-7],[-8,-6],[-15,-44],[-10,-9],[-10,4],[-7,8],[-10,-6],[-9,-15],[-11,-6],[-8,1],[-16,-39],[-46,-11],[-5,-20],[-9,-23],[-6,-5],[-21,9],[-29,5],[-16,-13],[-20,-7],[-24,-2],[-26,-25],[-27,-44],[-14,-39],[-8,-14],[-13,36],[-16,26],[-11,13],[-10,0],[-2,-6],[0,-19],[10,-32],[13,-21],[2,-16],[8,-29],[19,-32],[30,-25],[20,-25],[15,-35],[0,-10],[-4,-14],[-7,-13],[-6,-18],[-17,-35],[5,-15],[14,-19],[12,-23],[15,-37],[21,-66],[14,-27],[19,-28],[18,-21],[28,1],[30,-41],[33,-58],[24,-27],[17,-8],[14,-22],[12,-30],[5,-18],[11,-12],[30,2],[38,-48],[23,-35],[13,-28]],[[53837,79934],[-3,-11],[-2,-35],[0,-38],[-3,-19],[-17,-26],[-9,-6],[-5,-5],[-52,34],[-4,-6],[-4,-4],[-14,-99],[-9,-18],[-15,-18],[-30,-17],[-20,-7],[-17,-8],[-51,-41],[-23,-25],[-15,-31],[0,-18],[25,-52],[29,-55],[0,-47],[-13,-36],[-3,-14],[9,-5],[16,-2],[13,-6],[6,-25],[-2,-44],[-5,-41],[-4,-17],[-13,-2],[-25,18],[-19,21],[-8,12],[0,15],[4,10],[-7,19],[-24,17],[-25,-8],[-19,-11],[-12,0],[-13,17],[-20,13],[-27,8],[-16,9],[-4,-5],[2,-36],[-5,-16],[-130,-21],[-40,-19],[-28,-25],[-22,-11],[-5,-16],[-21,-20],[-24,-6],[-6,6],[-15,-9],[-26,-9],[-17,3],[-8,16],[-16,25],[-7,18],[1,11],[-37,2],[-23,14],[-49,-4],[-12,6],[-2,-6],[-8,-71],[-9,-30],[-16,-30],[-20,-17],[-16,-3],[1,22],[4,27],[-12,6],[-17,3],[-8,8],[2,20],[-4,12],[-7,14],[-18,18],[-36,27],[-25,14],[-10,-14],[-18,-15],[-28,5],[-7,-6]],[[53808,83169],[7,-39],[-8,-19],[-31,32],[-32,0],[-18,-51],[-14,-2],[-49,46],[-7,23],[-2,18],[7,65],[-1,20],[15,22],[2,32],[27,34],[24,1],[8,-28],[11,-20],[40,-22],[6,-10],[4,-14],[-19,-27],[-6,-14],[6,-23],[30,-24]],[[53948,82874],[-12,2],[-34,-6],[-34,9],[-7,34],[6,34],[-14,22],[-13,14],[-2,19],[2,20],[59,-54],[48,-48]],[[53134,83189],[-43,-1],[-16,23],[-17,6],[9,29],[12,10],[41,-19],[13,-36],[1,-12]],[[52307,83402],[-6,-12],[3,82],[30,86],[13,-2],[-13,-23],[-4,-16],[-5,-33],[2,-17],[70,-5],[-8,-15],[-71,-10],[-11,-35]],[[52385,83359],[-11,-14],[-26,2],[-15,13],[5,14],[14,11],[11,2],[18,-7],[4,-21]],[[61530,75758],[53,108],[16,65],[1,39],[0,49],[-27,102],[-24,144],[-25,151],[-19,45],[-81,52],[-19,59],[-62,77],[-87,33],[-17,14],[-76,96],[-59,62]],[[62897,75973],[-7,-20],[-16,-38],[-13,-19],[-14,-3],[-14,-8],[-5,-20],[0,-26],[2,-19],[4,-7],[14,-6],[14,-54],[22,-28],[34,-31],[31,-36],[15,-33],[-3,-23],[-10,-50],[-25,-41],[-22,-10],[-7,3],[-14,13],[-28,32],[-30,25],[-24,-8],[-15,-10],[-31,12],[-35,21],[-19,22],[-8,16],[5,28],[-81,50],[-40,14],[-17,-15],[-60,-76]],[[62500,75628],[-7,-8],[-46,-10],[0,-7],[10,-16],[-2,-5],[-77,-2],[-25,-10],[-68,13],[-23,-6],[-19,-12],[-47,-13],[-32,-16],[-41,-9],[-43,0],[-14,-5]],[[45343,59368],[-2,49],[-15,111],[21,48],[22,29],[15,-23],[5,-45],[12,-31],[39,-20],[40,14],[24,-6],[-1,25],[8,33],[48,15],[50,9],[52,20],[41,-1],[12,6],[-3,8],[-36,10],[-78,-23],[-80,-7],[-60,-60],[-24,6],[-25,60],[-9,74]],[[53692,53088],[-1,-40],[-22,-99],[-11,-76],[-2,-81],[6,-65],[10,-46],[7,-51],[-5,-35],[-11,-15],[8,-18],[16,-4],[27,15],[42,27],[55,39],[36,21],[60,-13],[32,-15],[16,-28],[18,-116],[8,-17],[15,-50],[12,-59],[2,-30],[-1,-22],[-12,-32],[-14,-47],[-5,-29],[-11,-21],[-14,-21],[-40,-8],[-6,-13],[-12,-50],[-21,-43],[-9,-40],[-9,-53],[2,-67],[-4,-96],[-5,-64],[11,-23],[48,-16],[9,-13],[13,-40],[16,-38],[43,-23],[17,-29],[14,-32],[2,-26],[-10,-104],[-10,-99],[4,-76],[4,-73],[5,-105],[-2,-65],[-13,-39],[0,-31],[6,-37],[-11,-103],[-7,-17],[-20,-20],[-10,-27],[-3,-44],[-11,-59],[-10,-22],[0,-27],[10,-21],[0,-30],[-20,-37],[-11,-28],[-26,-14],[-30,14],[-7,21],[7,32],[-2,25],[-11,27],[-16,69],[-14,15],[-7,-28],[-25,-53],[-42,-67],[-30,-6],[-55,21],[-47,32],[-21,79],[-14,65],[-20,76],[-22,36],[-24,23],[-10,1],[-34,-42],[-10,-16],[0,-36],[3,-33],[5,-16],[5,-21],[-1,-33],[-6,-44],[-2,-49],[-106,-47],[-19,17],[-13,22],[-16,-4],[-46,-25],[-17,18],[-17,12],[-7,-10],[-1,-21],[8,-114],[-3,-44],[-10,-57],[-6,-38],[29,-11],[10,-18],[10,-29],[13,-27],[1,-16],[-15,-30],[-6,-37],[8,-28],[19,-30],[28,-32],[14,-20],[-2,-19],[-13,-40],[-5,-33],[-9,-31],[2,-28],[13,-26],[-2,-23],[-8,-18],[-18,4],[-14,-3],[-13,8],[-42,90],[-9,3],[-60,-70],[-15,-28],[-12,-41],[-17,-89]],[[53091,49587],[-27,51],[-24,95],[-27,58],[-58,94],[-15,69],[-66,153],[-95,152],[-69,133],[-10,29],[12,-3],[66,-66],[9,7],[7,15],[-28,34],[-27,28],[-26,17],[-26,-2],[-14,28],[-9,43],[-5,36],[-11,38],[-37,79],[-9,30],[-19,41],[12,6],[39,-40],[3,16],[-3,23],[-39,38],[-22,2],[-5,27],[3,30],[-28,115],[-29,85],[-4,41],[78,-186],[11,-4],[13,2],[33,21],[-6,25],[-15,26],[-14,-12],[-19,-2],[-9,11],[-5,19],[19,90],[-8,-4],[-6,-16],[-10,-8],[-16,-5],[-39,49],[-34,130],[-9,27],[-9,46],[-9,18],[-39,186],[15,-14],[18,-53],[35,11],[13,31],[12,-1],[12,7],[15,29],[45,128],[12,169],[-4,100],[-7,100],[15,32],[6,-21],[3,-36],[7,-26],[16,-23],[29,-7],[46,-36],[16,-24],[4,47],[53,40],[-16,14],[-47,-15],[-64,59],[-21,38],[-20,72],[-20,38],[1,34],[46,31],[12,-4],[5,-37],[12,-15],[5,5],[2,31],[0,86],[-14,122],[5,23]],[[52664,52437],[12,9],[11,16],[8,3],[16,-3],[8,-29],[4,-15],[15,-7],[13,-15],[11,4],[10,17],[13,4],[42,0],[38,-1],[75,0],[76,-1],[75,0],[57,0],[0,69],[0,108],[-1,127],[0,122],[0,113],[-1,133]],[[53146,53091],[3,38],[4,16],[-1,22],[58,2],[106,-10],[46,1],[13,-1],[58,6],[47,-8],[20,-10],[18,-4],[56,-6],[73,7],[25,-2],[14,-18],[6,-36]],[[52633,76500],[-7,-84],[5,-25],[10,-18],[5,-19],[8,-225],[-2,-18],[-34,-91],[-7,-26],[-2,-113],[-6,-30],[-12,-30],[-21,-96],[-19,-43],[-51,53],[-30,22],[-14,25],[-10,17],[6,23],[14,23],[2,19],[-32,21],[-15,14],[0,24],[11,38],[-5,32],[-18,-2],[-15,5],[-1,17],[10,21],[14,27],[-1,30],[-16,13],[-15,25],[-6,33],[12,23],[18,15],[-13,34],[-10,1],[-7,7],[6,16],[14,24],[21,71],[28,33],[50,22],[14,9],[12,25],[14,16],[16,-2],[16,-9],[9,-11],[8,11],[6,31],[-4,27],[2,75],[9,42],[15,3],[13,-24],[-1,-20],[5,-49],[1,-32]],[[52081,77054],[-15,-10]],[[52049,77034],[-32,-21],[-23,-21],[-88,-127],[-41,-38],[-8,-22],[-8,-42],[-24,-36],[-22,-17],[-52,-18],[-53,-38],[-23,16],[-62,-1],[-38,46],[-74,29],[-24,67],[-33,4],[-22,-2],[-13,10],[-4,23],[0,22],[-23,-10],[-18,0],[-11,-9],[-8,-10],[-10,7],[-6,-3],[1,-13],[-22,-3],[-23,8],[-61,35],[-9,5],[-42,13],[-17,14],[-14,35],[-11,10],[-6,7],[-39,-17],[-14,-27],[-21,-32],[-146,-155],[-27,-64],[-31,-96],[-2,-44],[13,-142],[30,-75],[4,-18]],[[50473,76326],[3,13],[7,18],[0,11],[-9,16],[-39,18],[-18,4],[-12,-12],[-9,-15]],[[49501,76847],[45,17],[41,73],[39,263],[28,311],[20,58],[26,17],[-21,42],[-13,-21],[-5,-23],[-7,-12],[15,285],[11,105],[19,109],[39,-43],[32,-44],[17,-39],[21,-127],[15,-27],[24,-26],[-9,29],[-17,22],[-25,170],[-16,48],[-25,40],[-80,85],[-8,17],[-4,32],[27,-1],[23,-16],[-3,18],[-7,19],[-10,69],[-9,161],[1,28],[-4,34],[-26,7],[-20,2],[-22,13],[-110,95],[-37,98],[-39,72],[-9,32],[1,32],[20,67],[-18,43],[-17,8],[-15,21],[14,35],[11,23],[22,6],[30,-8],[28,-20],[21,-5],[-64,54],[-105,-18],[-23,7],[-19,12],[-7,40],[15,18],[13,34],[-15,23],[-20,9],[-31,-1],[-29,-7],[-7,14],[17,37],[-15,14],[-20,-7],[-29,-7],[-28,11],[-26,42],[-17,0],[-12,-5],[-18,16],[-19,4],[-13,-5],[-18,24],[-109,49],[-47,6],[-43,-22],[-24,7],[-18,32],[-14,52],[-70,41],[14,27],[32,6],[37,19],[14,23],[-29,28],[-22,7],[-9,10],[-9,24],[13,12],[9,-6],[26,-4],[45,6],[-16,25],[-18,6],[-8,6],[-36,3],[-17,-9],[-37,4],[-9,27],[-3,23],[11,51],[53,46],[131,51],[56,-7],[40,9],[47,31],[20,28],[67,16],[63,-29],[59,-109],[28,-37],[68,64],[102,-2],[21,-36],[8,30],[19,36],[15,-16],[8,-22],[107,6],[17,6],[-29,26],[-23,62],[-5,229],[-30,64],[-34,102],[-16,60],[-1,21],[5,30],[42,-1],[32,-8],[62,23],[30,-16],[-2,-47],[9,-60],[11,-28],[15,-33],[50,3],[54,-19],[68,-3],[99,-34],[42,20],[41,41],[78,27],[7,14],[-45,-6],[-42,26],[-5,29],[5,25],[16,58],[120,92],[85,28],[89,50],[45,52],[30,68],[10,14],[12,13],[-12,24],[8,256],[9,46],[17,38],[27,29],[40,32],[148,44],[22,17]],[[50701,81276],[3,-27],[11,-35],[7,-19],[-6,-25],[5,-21],[20,-37],[25,-35],[22,-23],[7,3],[16,6],[28,23],[24,7],[13,-17],[7,-10],[15,-40],[4,-41],[7,-34],[12,-14],[44,-5],[33,-13],[9,-11],[11,-76],[6,-11],[9,9],[8,12],[11,2],[19,-5],[26,-1],[26,-8],[36,-44],[-1,-14],[-7,-25],[-3,-20],[6,-8],[10,-20],[-2,-24],[-10,-17],[-3,-14],[0,-9],[3,-7],[8,-6],[53,-9],[49,9],[31,24],[5,25],[9,29],[18,25],[13,8],[12,-10],[-20,-102],[14,-26],[2,-39],[6,-34],[17,1],[21,-6],[15,-13],[18,-20],[25,-19],[18,-6],[6,-16],[15,-18],[22,-37],[20,-25],[10,0],[19,10],[28,6],[22,-1]],[[49672,78285],[-10,-50],[-18,46],[-25,41],[-5,37],[0,10],[29,-27],[29,-57]],[[62549,44368],[-17,-5],[-8,15],[-5,36],[5,35],[1,28],[-14,49],[14,28],[12,-32],[6,-2],[18,-23],[-5,-42],[1,-13],[-8,-42],[0,-32]],[[65499,39550],[-40,-17],[-27,6],[-54,49],[-15,33],[-21,91],[5,32],[17,57],[38,23],[41,-9],[18,-15],[21,-66],[28,-68],[-4,-80],[-7,-36]],[[33103,60192],[-2,-33],[-7,-6],[-11,27],[-45,-4],[-7,25],[-1,11],[22,42],[-26,11],[-10,18],[-22,87],[2,26],[9,13],[15,2],[28,-28],[20,-40],[7,-1],[3,-11],[-4,-29],[12,-24],[5,-17],[12,-69]],[[32964,61192],[-32,-6],[-22,5],[-5,41],[11,35],[-8,42],[5,25],[11,17],[18,-22],[3,-32],[11,-29],[51,-61],[-43,-15]],[[32891,61063],[-22,-26],[-11,8],[-14,50],[-9,138],[7,22],[5,9],[30,-17],[12,-19],[13,-13],[-7,-25],[4,-103],[-8,-24]],[[32991,60996],[-15,-2],[-7,5],[-2,34],[12,24],[7,6],[10,-27],[3,-22],[-8,-18]],[[34956,54930],[20,30],[27,152],[19,54],[20,7],[109,-126],[51,-11],[103,-68],[38,-88],[86,-145],[45,-45],[1,-39],[-10,-60],[29,53],[45,-84],[13,-41],[14,-76],[-5,-49],[-6,-25],[-1,-19],[14,27],[7,21],[3,51],[10,63],[15,1],[12,-38],[24,-163],[9,-33],[4,-52],[-2,-23],[2,-22]],[[35652,54182],[-9,-12],[-23,-27],[-11,-37],[-6,-34],[-14,-24],[-14,-30],[-4,-24],[-13,-19],[-3,-32],[-32,-112],[-13,-50],[-19,-54],[-11,-20],[-16,-32],[-8,-36],[0,-39],[-11,-45],[-6,-40],[-10,-23],[-28,-124],[-1,-43],[-7,-26],[-19,-59],[-13,-36],[-23,-27],[-25,-29],[-9,-31],[-17,-17],[-12,-1],[-20,12],[-28,5],[-13,-3],[-7,16],[-9,36],[-13,25],[-9,-9],[-19,-25],[-21,-15],[-15,5],[-33,17],[-15,9],[-4,16],[-5,11],[-7,-5],[-10,-19],[-13,-20],[-19,-26],[-40,-48],[-11,-17],[-11,10],[-17,9],[-18,1],[-39,30],[-22,22],[-10,28],[-12,11],[-7,8]],[[34402,78779],[-6,-5],[-19,8],[9,18],[7,5],[9,2],[4,-5],[-1,-13],[-3,-10]],[[34370,78823],[-24,-25],[-9,14],[2,17],[13,39],[-1,11],[-14,76],[2,13],[4,5],[21,-16],[3,-21],[-10,-46],[7,-31],[9,-23],[-3,-13]],[[1066,44162],[-4,-4],[-5,22],[7,34],[6,12],[6,-26],[-10,-38]],[[543,43595],[-16,-4],[-16,7],[-9,33],[4,14],[10,-7],[10,-24],[17,-11],[0,-8]],[[32497,62251],[-32,0]],[[32465,62251],[3,13],[14,14],[11,-2],[4,-5],[0,-20]],[[32546,62140],[-4,-1],[-3,5],[-3,9],[-2,8],[1,6],[2,-3],[18,-5],[-2,-7],[-3,-7],[-4,-5]],[[7926,42247],[-5,-4],[-6,10],[-2,16],[2,26],[13,-17],[6,-11],[-8,-20]],[[8385,41736],[-9,-15],[-11,11],[-5,14],[-2,15],[2,19],[26,-3],[8,-8],[-9,-33]],[[7942,42120],[-11,0],[-10,9],[2,59],[3,12],[15,-20],[13,-52],[-12,-8]],[[8522,41653],[40,-27],[7,-44],[-8,-29],[-21,7],[-10,16],[-14,52],[-39,-12],[-27,11],[-15,67],[0,31],[6,19],[29,20],[36,-15],[13,-38],[3,-58]],[[11382,46258],[42,-30],[13,3],[-13,-29],[-42,-16],[-14,-15],[-16,10],[-9,34],[39,43]],[[11372,46122],[-20,-45],[-1,48],[8,6],[7,0],[6,-9]],[[11486,45785],[-10,-9],[-1,61],[13,-12],[5,-9],[-2,-17],[-5,-14]],[[11091,46710],[-27,-14],[-13,3],[-10,47],[3,29],[5,9],[46,-11],[4,-22],[-1,-20],[-7,-21]],[[11090,46413],[-6,-11],[-11,35],[-2,14],[20,18],[11,-9],[-12,-47]],[[10886,41557],[2,-11],[-11,1],[-3,4],[1,20],[7,25],[6,21],[11,20],[21,19],[11,8],[3,-5],[-4,-2],[-35,-41],[-10,-29],[-5,-20],[1,-6],[5,-4]],[[11234,46693],[-18,-5],[-3,29],[6,15],[8,7],[13,-9],[8,-12],[-1,-11],[-13,-14]],[[10921,41255],[3,-21],[-6,10],[-22,20],[-2,17],[27,-26]],[[10880,41365],[2,-16],[-10,11],[-10,29],[-17,36],[-4,15],[13,-14],[9,-21],[17,-40]],[[12140,41160],[-5,-12],[-1,12],[-7,6],[-11,12],[-15,14],[-8,3],[-4,8],[6,4],[9,-6],[12,-13],[15,-13],[9,-15]],[[11952,41277],[0,-11],[-26,55],[10,-4],[16,-40]],[[11526,39828],[-8,-11],[3,15],[-6,32],[-6,5],[6,9],[9,-25],[2,-25]],[[10413,42571],[-5,-7],[7,46],[7,6],[-9,-45]],[[10155,42269],[15,-28],[-20,19],[-25,8],[9,5],[15,0],[6,-4]],[[10119,42260],[-11,-3],[-27,34],[11,0],[15,-21],[12,-10]],[[9708,42709],[-2,-26],[-5,25],[-17,40],[-7,18],[8,-3],[23,-54]],[[9587,42436],[1,-10],[-6,1],[-10,29],[-4,25],[-6,29],[-9,21],[-1,19],[0,30],[10,-46],[9,-37],[8,-31],[8,-30]],[[95611,40180],[31,-36],[34,15],[42,-57],[108,-172],[37,-37],[23,-14],[16,-28],[16,-40],[20,-28],[9,-26],[2,-36],[8,-22],[37,-57],[22,-50],[32,-26],[13,-30],[17,-14],[18,-31],[30,-24],[68,-88],[53,-84],[26,-52],[29,-46],[36,-37],[34,-42],[17,-99],[-9,-35],[-20,-18],[-18,-1],[-17,-12],[-56,64],[-14,9],[-15,-4],[-8,14],[-6,21],[-35,24],[-32,37],[-9,26],[-5,32],[-8,19],[-45,28],[-31,31],[-22,44],[-34,31],[-54,63],[-27,20],[-24,31],[-65,115],[-23,21],[-20,51],[-55,120],[-27,50],[-29,44],[-22,52],[-17,61],[-40,88],[-5,38],[2,38],[-10,25],[-16,15],[-8,26],[1,35],[5,18],[40,-60]],[[96539,38811],[-9,-22],[-11,5],[-8,8],[-6,12],[6,44],[24,-22],[4,-25]],[[94430,40718],[-4,-12],[-2,92],[8,34],[5,-71],[-7,-43]],[[96669,39498],[13,-10],[22,1],[-5,-98],[-32,-16],[-11,1],[-7,21],[-18,14],[1,33],[-18,76],[31,11],[17,20],[0,-18],[2,-22],[5,-13]],[[96262,39919],[-15,-5],[18,52],[1,33],[7,63],[-1,22],[12,-3],[12,-18],[-14,-16],[-5,-28],[0,-34],[6,-7],[-9,-37],[-12,-22]],[[96499,39653],[-15,-4],[-20,41],[-39,21],[-17,36],[-11,43],[22,11],[22,58],[-15,22],[-26,3],[3,23],[42,27],[18,-16],[8,-18],[-2,-92],[19,-29],[20,-65],[-1,-18],[-8,-43]],[[69217,23554],[23,-4],[13,6],[62,76],[16,2],[-2,-59],[16,-26],[-20,-6],[-38,2],[-9,-33],[39,-42],[19,-6],[15,0],[29,10],[23,15],[36,36],[22,14],[41,0],[21,34],[10,10],[24,-1],[21,-13],[13,-31],[7,-37],[-5,-37],[-15,-36],[-26,-22],[6,-26],[-7,-13],[-13,-1],[-12,6],[-16,31],[-20,16],[-48,-1],[-22,-2],[-3,-23],[-12,-18],[-12,-10],[-16,4],[-3,-10],[9,-24],[21,-31],[36,-22],[21,-5],[3,42],[26,4],[23,-12],[16,-30],[-13,-10],[-12,-16],[-3,-21],[-23,-23],[-13,-2],[-44,11],[-26,25],[-6,18],[-16,7],[-18,-23],[-19,-5],[-37,19],[-35,31],[-22,12],[-33,8],[-19,-71],[-26,-30],[-33,-3],[-16,6],[-9,28],[2,29],[5,29],[11,29],[6,32],[-2,30],[-12,22],[6,40],[-12,30],[4,23],[20,16],[-9,13],[-10,4],[-7,18],[-6,22],[7,41],[12,39],[-2,45],[19,42],[17,47],[12,19],[15,3],[7,-13],[3,-26],[-6,-17],[14,-7],[4,-55],[-9,-22],[-1,-22],[-19,-46],[5,-37],[37,-16]],[[69244,23583],[-17,-5],[-5,19],[1,25],[-10,20],[-5,22],[4,20],[28,3],[28,-7],[8,-35],[-21,-48],[-11,-14]],[[64398,25092],[-20,-5],[-18,11],[-11,32],[23,27],[12,-19],[9,-20],[5,-26]],[[55552,86607],[9,0],[3,5],[15,-4],[23,-22],[4,-12],[16,-6],[5,-13],[-18,-39],[-11,0],[-8,4],[-15,-4],[-8,-7],[-3,-16],[0,-34],[-65,-7],[-15,10],[-20,77],[4,20],[14,8],[12,2],[1,-41],[18,4],[5,27],[1,20],[-4,9],[-12,8],[-7,13],[10,21],[18,9],[16,-28],[12,-4]],[[55461,86513],[2,-13],[-11,3],[-8,-4],[-6,-16],[-12,5],[-5,23],[9,34],[22,2],[9,-34]],[[55725,86428],[-2,-13],[-23,-3],[-10,12],[-21,-2],[-3,6],[8,12],[17,8],[22,-3],[12,-17]],[[57721,86714],[-10,-2],[-26,-20],[-40,-5],[-17,-14],[-61,42],[-11,3],[-36,-11],[-34,-31],[-64,-9],[-32,-10],[-20,-14],[-4,33],[9,43],[14,29],[1,18],[-10,-1],[-21,-42],[-11,-49],[-21,-25],[-48,-10],[-47,39],[-23,0],[14,-28],[10,-31],[-1,-17],[-25,3],[-28,-19],[-25,-27],[-11,0],[-17,38],[-30,-18],[-26,-24],[-52,-7],[-31,-31],[-55,-22],[-30,1],[-69,-25],[-23,-40],[-20,-14],[-29,12],[-88,-19],[-84,-25],[-36,1],[-36,11],[-38,-35],[-40,-47],[-45,-16],[-16,6],[13,24],[29,25],[21,35],[2,28],[-13,12],[-19,3],[-24,30],[-23,64],[-13,3],[-6,-17],[-7,-49],[-7,-14],[-12,-11],[-15,-12],[-14,-5],[-51,1],[-7,24],[0,11],[9,32],[-7,6],[7,26],[12,-2],[14,4],[7,13],[0,16],[-20,4],[-1,11],[18,45],[2,12],[-7,3],[-11,-5],[-73,14],[-90,57],[-22,3],[-14,51],[-21,-6],[-32,-30],[-24,22],[-25,15],[-7,24],[0,34],[-2,41],[-7,47],[-5,68],[5,53],[20,39],[8,25],[9,64],[3,74],[-6,26],[2,17],[16,0],[-4,14],[-7,8],[-8,17],[7,9],[19,0],[2,6],[2,8],[-15,43],[-2,21],[-21,62],[-23,60],[-36,43],[13,71],[14,64],[-3,31],[-5,37],[-44,41],[-7,58],[-10,63],[4,38],[7,29],[14,29],[73,92],[4,48],[50,4],[-23,42],[-6,24],[-1,29],[71,19],[27,-16],[62,20],[55,38],[-1,20],[-8,18],[-12,35],[8,10],[21,-7],[-10,17],[2,18],[22,-7],[36,51],[1,39],[63,21],[71,79],[33,25],[32,18],[69,80],[29,3],[15,54],[58,72],[17,9],[27,64],[71,75],[45,95],[25,33],[8,36],[28,3],[25,27],[54,18],[53,-5],[22,-12],[21,4],[-2,32],[-15,20],[12,19],[28,14],[-2,32],[-7,20],[-23,25],[12,58],[2,63],[11,73],[-29,39],[-112,65],[-21,-2],[-24,8],[-26,50],[11,43],[2,16],[-11,-1],[-16,-21],[-36,-23],[-46,18],[-23,-4]],[[56109,86599],[-20,-3],[-29,29],[-3,11],[11,6],[-8,23],[3,10],[22,-18],[12,-21],[-12,-5],[20,-22],[4,-10]],[[55893,88272],[3,-11],[17,3],[21,20],[16,-9],[-2,-28],[-10,1],[-3,4],[-14,-16],[-2,-9],[-16,-7],[-29,28],[-18,45],[42,0],[-4,-11],[-1,-10]],[[56159,86618],[35,-13],[15,5],[17,-30],[-29,-20],[-2,-24],[12,-14],[4,-22],[-29,0],[-13,18],[-6,23],[-13,16],[-18,13],[9,16],[5,24],[13,8]],[[55958,86710],[-4,-27],[-19,3],[-19,-5],[-15,27],[-9,45],[3,9],[12,10],[9,-24],[42,-38]],[[56064,86486],[-28,-20],[-10,5],[3,33],[16,15],[28,2],[-9,-35]],[[56007,86467],[-24,-6],[-15,17],[6,12],[17,14],[18,-2],[4,-16],[-6,-19]],[[56902,89280],[-42,-19],[-33,12],[-1,37],[21,18],[37,7],[52,-18],[7,-10],[-29,-7],[-12,-20]],[[99999,42529],[-42,-77],[-15,-39],[-13,-44],[-36,-47],[-15,-63],[1,-63],[36,66],[40,54],[12,11],[13,0],[-1,-19],[-6,-18],[-5,-48],[11,-45],[-30,5],[-29,-4],[-35,-25],[-34,-11],[-13,-1],[-13,9],[-8,13],[-6,29],[-6,5],[-28,-1],[-40,-59],[-14,-49],[-16,-3],[-18,11],[-23,-38],[-26,-14],[-12,32],[-7,40],[-10,29],[-29,7],[4,36],[8,15],[7,21],[5,24],[14,-16],[14,-9],[16,18],[17,1],[17,53],[26,33],[37,26],[37,19],[19,3],[18,11],[32,50],[21,25],[24,15],[22,9],[20,-8],[17,5],[42,35],[0,-9]],[[99521,41836],[0,-26],[8,-11],[8,-2],[21,-48],[31,-42],[19,-32],[1,-28],[-6,-29],[8,-51],[4,-54],[14,-86],[-20,-16],[-30,-2],[-7,-15],[-11,8],[-25,-6],[-25,-28],[-23,-38],[-27,0],[-30,-8],[-30,5],[-21,21],[-38,22],[-49,19],[-21,15],[-17,25],[-16,63],[-3,31],[3,30],[15,10],[12,15],[1,19],[6,14],[7,5],[3,9],[-5,32],[-1,29],[29,53],[31,45],[56,42],[34,-4],[52,33],[17,15],[16,-10],[9,-24]],[[0,42174],[30,49],[9,7],[10,-45],[-12,-49],[-30,-43],[-7,-22],[0,103]],[[99999,42071],[-21,-21],[-8,21],[10,50],[19,52],[0,-42],[0,-60]],[[99579,40913],[0,-25],[-36,-16],[-12,20],[-8,4],[-21,-36],[-6,-15],[-2,-11],[-6,-6],[-39,-17],[-17,17],[12,12],[14,23],[14,-3],[15,22],[14,33],[21,8],[14,13],[24,-10],[19,-13]],[[281,41487],[-8,-8],[-6,2],[-7,9],[-4,16],[9,14],[13,-16],[3,-17]],[[344,41339],[-3,-10],[-15,17],[-6,12],[16,9],[8,-3],[0,-25]],[[486,41501],[-16,-6],[-14,25],[9,26],[13,-7],[7,-25],[1,-13]],[[290,41893],[-7,-20],[-6,7],[8,33],[1,15],[-12,17],[-1,12],[3,8],[15,-20],[9,-15],[1,-8],[-2,-15],[-9,-14]],[[407,40802],[-3,-5],[-8,6],[-6,8],[-1,8],[3,10],[6,6],[3,-2],[-2,-3],[-3,-4],[0,-11],[5,-6],[4,-1],[2,-6]],[[56,40932],[0,-17],[-4,1],[-5,8],[-2,-4],[-2,-5],[-1,-12],[-1,-7],[-4,3],[0,11],[1,9],[2,12],[7,11],[9,-10]],[[99231,41965],[-15,-9],[8,45],[8,15],[5,3],[9,3],[-4,-32],[-11,-25]],[[99839,41839],[-10,-16],[-4,79],[9,0],[7,-8],[4,-20],[-6,-35]],[[99818,41415],[-2,-5],[-24,46],[0,19],[5,16],[9,15],[9,-26],[7,-44],[-4,-21]],[[99673,41630],[-14,-10],[-8,35],[11,35],[12,4],[6,-36],[-7,-28]],[[99999,42315],[-4,-1],[0,11],[-99995,19],[16,28],[12,5],[-8,-27],[0,-14],[-20,-21],[99999,0]],[[0,42538],[9,15],[6,0],[-3,-13],[-12,-11],[0,9]],[[99199,44639],[-10,-6],[-18,5],[-4,9],[6,2],[11,6],[14,-3],[3,-6],[-2,-7]],[[98507,39346],[-2,-7],[-8,2],[-2,13],[5,7],[7,-4],[0,-11]],[[358,39937],[0,-1],[-1,0],[-2,2],[-2,4],[0,4],[0,4],[1,0],[2,-4],[1,-4],[1,-5]],[[60145,60055],[5,1],[38,28],[37,5],[36,-20],[23,-5],[11,10],[10,26],[9,41],[15,23],[20,5],[26,-47],[43,-125],[11,-7],[7,3],[21,100],[17,78],[31,144],[18,83],[16,-24],[17,-42],[18,-20],[20,-12],[10,-2],[12,-17],[44,-103],[15,-24],[20,-2],[86,33],[51,60],[7,24],[14,0],[17,-27],[7,-25],[11,-34],[20,-5],[49,24],[23,14],[21,-12],[26,-9],[16,0],[38,-34],[47,11],[22,-2],[22,-15],[37,-53],[47,-65],[68,-47],[14,-19],[33,-74],[51,-142],[67,-136],[73,-107],[39,-75],[26,-91],[26,-83],[26,-35],[24,-29],[26,-63],[18,-52],[24,-60]],[[61771,59024],[-27,-82],[-37,-110],[-42,-127],[-13,-32],[-37,-77],[-7,-22],[-7,-56],[0,-101],[5,-130],[4,-119],[21,-14],[23,-9],[27,16],[31,13],[40,8],[43,24],[26,20],[27,-2],[24,-21],[12,-19],[17,-6],[21,1]],[[56756,85178],[2,23],[37,113],[7,89],[13,13],[4,12],[-6,29],[-38,18],[-15,-3],[-14,-30],[-14,-22],[-34,-14],[-29,23],[-67,32],[-18,41],[-4,42],[-35,40],[-15,48],[6,33],[32,22],[9,19],[-40,-3],[-9,5],[-2,17],[-18,58],[16,23],[7,22],[-13,19],[4,22],[10,22],[-6,50],[40,27],[40,19],[83,10],[-8,46],[34,2],[57,56],[56,-10],[82,38],[157,0],[22,22],[-4,22],[0,24],[30,-7],[49,4],[186,-46],[45,0],[63,-47],[34,-13],[101,0],[154,-21],[31,32],[3,9]],[[56282,85611],[20,-14],[18,4],[18,10],[40,-9],[92,-71],[8,-19],[-54,-8],[-13,-22],[-13,-15],[-15,-5],[-27,-30],[-35,-29],[-8,-17],[-64,3],[-35,-11],[-29,-33],[-11,-62],[-21,-49],[-21,-18],[-22,-3],[-6,19],[3,18],[46,69],[10,23],[-23,10],[-20,24],[-42,28],[-8,22],[10,2],[10,7],[11,19],[5,21],[-34,64],[18,10],[21,-2],[22,-19],[24,22],[11,3],[17,-8],[17,42],[40,14],[20,13],[20,-3]],[[56367,85729],[-23,-28],[-13,11],[-7,14],[-30,-65],[-33,-11],[-19,13],[2,24],[-19,63],[-29,19],[-40,1],[-30,26],[113,18],[12,30],[23,32],[17,3],[15,-7],[2,-25],[4,-10],[51,-13],[20,-41],[8,-50],[-24,-4]],[[56484,85570],[-23,-6],[-55,41],[13,27],[15,11],[47,-17],[6,-42],[-3,-14]],[[60724,62214],[84,-333],[34,-196],[30,-206],[23,-308],[21,-157],[34,-78],[23,-146],[21,-6],[14,-40],[25,-138],[18,-51],[9,44],[-1,25],[-7,43],[7,54],[14,33],[31,-44],[18,-34],[5,-68],[7,-37],[33,-80],[28,-23],[37,-6],[30,-17],[25,-29],[46,-81],[104,-71],[85,-216],[49,-151],[163,-227],[28,-110],[15,-106],[34,5],[59,-117],[17,-89],[48,-32],[9,52],[23,-43],[9,-67]],[[61976,59163],[-31,-26],[-34,-24],[-4,1],[-12,-31],[-16,-84],[-17,-25],[-10,-2],[-53,79],[-8,4],[-11,-15],[-9,-16]],[[61132,61107],[9,-56],[-27,21],[-5,12],[12,22],[3,13],[8,-12]],[[61150,60884],[11,-30],[8,3],[7,10],[4,21],[44,-42],[-3,-29],[-26,-1],[-30,12],[-28,-4],[-33,12],[-8,48],[21,-23],[11,6],[2,6],[-15,33],[-21,6],[1,26],[10,10],[6,12],[-13,36],[24,-9],[15,-21],[10,-25],[3,-57]],[[52426,54008],[7,-3],[41,2],[12,-30],[-1,-45],[-43,-131],[-8,-55],[-17,-46],[-14,-4],[-49,27],[-9,17],[-3,22],[5,52],[4,16],[23,10],[8,9],[13,56],[4,51],[10,39],[17,13]],[[52664,52437],[2,13],[-25,35],[-18,3],[-16,11],[13,90],[17,80],[25,61],[13,14],[4,30],[20,99],[25,80],[-8,81],[6,136]],[[52722,53170],[7,-4],[1,-13],[2,-19],[9,-16],[31,-27],[91,0],[54,0],[80,0],[85,0],[64,0]],[[25607,59561],[-7,-8],[5,-58],[-16,-35],[-14,-25],[-26,-7],[-44,-2],[-66,28],[-48,39],[-26,0],[8,-13],[21,-8],[27,-27],[-8,-8],[-99,57],[-114,112],[-68,18],[-78,30],[-46,71],[-35,30]],[[56986,70077],[21,-70],[43,-12],[142,62],[157,-62],[86,-24],[133,-54],[81,-95],[23,-12],[58,2],[38,-56],[152,-27],[81,-62],[46,-50],[28,-15],[24,2],[33,19],[42,35],[45,48],[94,125],[33,22],[22,-6],[27,2],[11,33],[14,23],[8,27],[15,31],[48,9],[98,54],[-11,-25],[-89,-61],[38,-8],[39,21],[45,13],[8,26],[6,49],[9,6],[30,-9],[92,-74],[23,-2],[65,41],[13,9],[21,-23],[48,-93],[-17,2],[-51,80],[-4,-40],[-29,-70],[36,-30],[30,-11],[16,-39],[10,-35],[29,15],[21,47],[-11,27],[-8,27],[10,1],[20,-23],[58,-89],[20,-19],[22,3],[48,26],[13,-4],[63,33],[8,-25],[10,-24],[51,27],[80,0],[66,29],[76,71],[6,11]],[[59695,68823],[-15,-26],[-32,-93],[-33,-296],[-47,-231],[-5,-144],[-8,-52],[-23,-73],[-27,-72],[-49,37],[-79,126],[-46,120],[-49,77],[-47,103],[-13,73],[1,48],[-21,115],[-15,55],[-57,123],[-16,65],[-13,29],[-12,41],[-21,160],[-23,101],[-25,-28],[4,-43],[-22,-59],[-14,-68],[11,-56],[46,-85],[10,-37],[11,-80],[-2,-110],[7,-37],[35,-81],[13,-48],[7,-42],[12,-38],[34,-71],[50,-134],[47,-91],[35,-44],[14,-44],[3,-113],[-2,-55],[30,-101],[11,-52],[29,-42],[13,-48],[12,-78],[18,-231],[26,-56],[77,-303],[66,-192],[32,-144],[48,-174],[95,-383],[56,-118],[22,-66],[41,-51],[44,-74],[-42,7],[-10,-5],[-15,-12],[-7,-45],[-3,-37],[5,-194],[11,-98],[37,-188],[28,-56],[14,-36],[18,-27],[88,-63],[52,-136],[115,-170],[11,-47],[0,-11]],[[27687,49891],[6,8],[40,29],[17,29],[20,26],[18,41],[11,39],[28,180],[26,114],[-5,54],[-21,74],[-5,109],[2,33],[-3,25],[-14,-45],[4,-160],[-13,-72],[-17,-18],[-12,13],[7,117],[-13,-22],[-21,-79],[-34,-59],[-1,-19],[-9,-25],[-26,23],[-20,24],[-65,132],[-43,28],[-25,46],[-6,19],[-3,27],[26,27],[28,37],[2,82],[0,65],[-20,109],[9,144],[-5,56],[-23,119],[17,60],[60,44],[20,29],[13,95],[14,56],[27,-22],[21,2],[-28,21],[-24,85],[-3,40],[44,116],[24,30],[28,62],[25,93],[6,147],[-10,105],[-8,111],[15,28],[36,15],[30,36],[15,33],[36,-5],[41,51],[66,26],[91,58],[20,52],[-9,92]],[[28094,52681],[9,-12],[25,-44],[16,-43],[26,-27],[21,-22],[55,-88],[37,-44],[40,-41],[57,-42],[36,7],[8,-32],[7,-34],[13,-19],[21,-17],[12,-5],[4,-9],[12,-122],[8,-17],[29,-20],[35,-7],[14,4],[31,-34],[23,-16],[25,-12],[17,-3],[8,5],[3,12],[14,-2],[21,-16],[30,-3],[19,15],[2,25],[2,43],[7,15],[21,25],[11,-5],[57,-54],[11,-19],[15,-38],[26,-55],[29,-36],[44,-15],[42,-58],[50,-40]],[[27741,50130],[-5,-22],[-27,2],[-7,7],[0,25],[6,81],[7,34],[22,32],[18,16],[23,-3],[25,-29],[-29,-55],[-16,-8],[-6,-7],[-11,-73]],[[28080,52564],[-15,-4],[-7,28],[19,32],[6,6],[-3,-62]],[[24907,51398],[-15,-1],[-43,56],[3,55],[17,37],[56,18],[23,-34],[-2,-66],[-19,-48],[-15,-9],[-5,-8]],[[25161,51318],[-33,-24],[-11,11],[-7,11],[-2,15],[19,35],[17,20],[16,41],[29,24],[9,-6],[5,-8],[2,-14],[-9,-33],[-18,-23],[-17,-49]],[[24604,51577],[-28,-10],[-24,20],[-10,31],[-2,46],[2,15],[52,16],[17,-38],[0,-57],[-7,-23]],[[24882,51071],[-11,-1],[-16,24],[12,45],[13,-11],[9,-12],[5,-18],[-12,-27]],[[24646,51857],[18,-37],[9,-106],[56,-112],[7,-62],[-5,-29],[2,-11],[27,-44],[18,-47],[-30,-108],[-62,-46],[-67,2],[-13,12],[-18,41],[-4,37],[11,35],[34,54],[53,48],[6,37],[-21,35],[-14,71],[-34,50],[-16,152],[-11,8],[-23,-21],[-11,18],[-2,10],[25,35],[5,24],[36,12],[15,-20],[9,-38]],[[24840,51650],[-13,-17],[-52,20],[-16,33],[13,46],[11,18],[31,-17],[32,-51],[-6,-32]],[[30061,63201],[12,10],[8,34],[11,31],[14,17],[17,10],[32,-1],[44,-27],[13,1],[43,24],[35,14],[34,-16],[13,-21],[28,-33],[14,-10],[43,1],[12,-3],[37,-55],[30,-22],[18,-1],[32,21],[16,-1],[18,-47],[4,-67],[15,-61],[24,-39],[115,16],[25,-32],[-8,-27],[-17,-14],[-54,6],[-24,-3],[-5,-26],[0,-25],[32,-6],[31,-12],[32,-20],[33,-13],[36,-9],[36,-14],[61,-49],[66,-109],[18,-25],[12,-34],[-6,-43],[-24,-69],[-13,-22],[-20,-14],[-13,-28],[-13,-49],[-8,-4],[-9,2],[-16,28],[-12,42],[-32,39],[-38,-5],[-56,24],[-34,-12],[-34,-2],[-35,12],[-35,4],[-35,-15],[-34,-25],[-12,-17],[-22,-39],[-12,-15],[-82,-20],[-24,29],[-22,40],[-32,5],[-46,-30],[-28,-11],[-12,-14],[-3,-14],[0,-56],[-7,-33],[-45,-127],[-25,-90],[-10,-28],[-12,-6],[-23,52],[-14,19],[-17,9],[-7,27],[0,39],[-5,38],[-10,29],[-16,20]],[[32977,60627],[-26,-13],[-11,100],[-18,72],[3,45],[3,17],[38,-28],[12,-33],[7,-89],[-8,-71]],[[61976,59163],[4,-27],[47,-114],[15,-56],[16,-102],[-9,-56],[-12,-37],[-18,-33],[-62,-81],[-69,-52],[-44,-103],[-33,7],[5,-39],[12,-5],[19,8],[38,30],[34,14],[37,1],[33,-13],[23,-38]],[[41679,99979],[267,-35],[141,-40],[30,1],[191,-15],[182,-19],[302,-51],[42,-16],[-32,-14],[-75,-9],[-386,-16],[-700,-21],[-401,-39],[-127,-2],[-11,-59],[54,-3],[89,8],[314,59],[117,9],[219,-5],[285,-22],[114,8],[205,-6],[239,17],[283,37],[77,-82],[104,-81],[83,9],[70,-5],[24,-26],[39,-12],[80,6],[245,-23],[168,-42],[63,-19],[30,-28],[18,-22],[-27,-28],[-105,-49],[-133,-45],[-179,-34],[-207,-22],[-1588,-73],[-54,-17],[-31,-44],[21,-57],[74,-9],[173,32],[300,31],[221,-2],[527,-26],[155,-68],[82,-105],[183,24],[39,18],[29,31],[22,33],[18,36],[19,24],[21,13],[45,11],[105,13],[274,13],[66,-4],[48,-49],[10,-28],[3,-38],[-1,-45],[-6,-55],[-24,-54],[-76,-94],[-61,-52],[-66,-37],[-126,-84],[-44,-23],[-138,-99],[-35,-45],[-2,-34],[24,-6],[40,31],[15,23],[26,23],[205,62],[44,17],[133,74],[86,28],[70,29],[37,20],[206,146],[107,43],[112,0],[20,-73],[135,-12],[59,3],[94,-18],[41,-14],[70,-8],[73,-17],[63,18],[19,12],[62,54],[83,47],[77,59],[26,15],[41,13],[42,5],[115,28],[29,2],[62,-9],[273,-5],[150,-14],[208,-40],[145,-21],[67,-20],[97,-41],[79,-43],[37,-13],[-2,-13],[-27,-19],[-195,-66],[-64,-45],[-185,-83],[-90,-29],[-98,-11],[-109,-2],[-71,-12],[-10,-12],[50,-34],[22,-25],[-3,-22],[-53,-32],[-20,-8],[-192,-24],[-97,-41],[-126,-5],[-89,5],[-123,-44],[48,-36],[44,-16],[137,-32],[1,-19],[-66,-38],[-89,-44],[-105,-31],[-40,-5],[-50,8],[-46,-2],[-101,-14],[-97,-2],[-173,20],[-93,23],[-49,8],[-62,-2],[-24,-9],[-98,-56],[-48,-38],[-31,-39],[-13,-42],[5,-46],[12,-32],[19,-17],[23,-10],[41,-6],[89,6],[35,-3],[11,-10],[19,-29],[-3,-28],[-17,-39],[-12,-45],[-9,-52],[5,-29],[36,-6],[17,2],[19,-9],[23,-21],[17,-22],[11,-23],[-6,-19],[-23,-15],[-52,-17],[-128,-33],[-13,-10],[-10,-21],[-7,-30],[-16,-28],[-23,-25],[-22,-15],[-42,-6],[-54,-1],[-61,-14],[-144,-84],[-2,-9],[54,-27],[-2,-24],[-67,-101],[-18,-50],[-14,-68],[-24,-58],[-33,-47],[-33,-55],[-31,-61],[5,-47],[41,-33],[56,26],[69,86],[74,38],[81,-12],[70,-17],[90,-34],[76,-21],[65,-28],[26,-23],[27,-33],[1,-20],[-48,-12],[-16,4],[-119,54],[-58,14],[-77,-16],[-67,-25],[60,-99],[65,-45],[117,-21],[62,-22],[44,-28],[35,-14],[47,6],[64,28],[88,1],[40,-13],[28,-26],[13,-47],[-3,-70],[-9,-52],[-16,-35],[-32,-47],[-27,-9],[-37,3],[-35,9],[-32,17],[-49,13],[-98,14],[-98,31],[-56,8],[-117,-4],[-127,-20],[-5,-25],[-182,-89],[-37,1],[-50,30],[-71,30],[-41,0],[-62,-38],[-15,-14],[1,-14],[45,-32],[18,-7],[24,-6],[80,-8],[36,-8],[33,-100],[52,-61],[23,-13],[19,-5],[65,3],[83,20],[28,-16],[61,-20],[36,-6],[43,1],[49,-7],[67,-57],[-26,-72],[42,-57],[67,-59],[15,-21],[7,-39],[1,-26],[5,-24],[9,-21],[9,-42],[9,-62],[-2,-51],[-15,-39],[-27,-29],[-42,-18],[-34,5],[-26,27],[-37,29],[-48,31],[-80,3],[-117,-90],[-52,-5],[-42,-9],[-46,-39],[-66,-24],[-59,9],[-103,46],[37,-30],[54,-36],[33,-19],[25,-4],[27,4],[39,15],[88,41],[23,6],[20,-3],[16,-12],[19,-35],[21,-58],[-3,-49],[-26,-41],[-23,-26],[-18,-12],[0,-9],[49,-10],[69,53],[22,66],[32,76],[56,25],[64,-25],[52,-71],[72,-131],[31,-14],[39,-31],[17,-39],[-4,-45],[-9,-33],[-12,-21],[-15,-13],[-27,-8],[-50,-7],[-111,14],[-58,0],[7,-45],[-117,-39],[-133,-15],[-125,30],[-104,47],[34,65],[20,72],[-51,48],[-11,1],[18,-74],[-15,-28],[-57,-35],[-40,-15],[-3,-10],[19,-8],[13,-15],[6,-23],[-7,-23],[-19,-24],[-11,-19],[-2,-16],[18,-20],[38,-22],[41,-11],[191,-5],[77,-13],[182,-53],[8,-17],[-31,-96],[-17,-92],[-35,-17],[-191,-4],[-62,-14],[-90,-42],[-87,-51],[-45,-1],[-178,45],[-68,29],[-147,84],[-110,128],[-51,-53],[-30,-26],[-32,-13],[-31,-2],[-30,9],[-34,20],[-56,47],[-68,46],[-47,22],[-1,-6],[27,-27],[41,-32],[103,-92],[37,-23],[-4,-16],[-65,-15],[-79,-31],[-39,-24],[-60,-56],[-20,-9],[-90,-14],[-29,3],[-67,32],[-99,20],[-59,18],[-82,33],[29,-36],[157,-55],[17,-17],[-32,-33],[-20,-12],[-37,-3],[-56,7],[-56,-1],[-58,-10],[-24,-12],[8,-15],[13,-14],[20,-12],[18,0],[44,38],[33,2],[88,-9],[89,29],[64,13],[48,3],[175,44],[37,50],[58,20],[131,15],[126,-8],[65,-6],[53,-47],[70,-34],[59,-37],[69,-13],[40,-50],[111,-57],[71,-12],[44,-27],[4,-114],[5,-49],[-19,-136],[-57,-31],[11,-72],[-15,-58],[-57,22],[-58,38],[-139,59],[-130,38],[-50,35],[-59,26],[-81,109],[-52,135],[-23,67],[-44,4],[-57,-18],[-49,-19],[-24,-32],[-168,-45],[-61,-30],[-35,0],[-125,-45],[50,-22],[23,-3],[51,12],[31,16],[114,44],[92,7],[33,19],[70,26],[48,8],[7,-7],[5,-12],[33,-165],[-14,-44],[-38,-19],[-80,-31],[-21,-15],[23,-27],[76,25],[50,27],[26,-10],[43,-41],[49,-21],[123,-64],[59,-35],[82,-34],[93,-47],[24,-17],[85,-24],[18,-8],[36,-83],[29,-10],[85,-5],[-15,-32],[-83,-72],[-43,-22],[-10,-15],[4,-25],[2,-42],[17,-78],[20,72],[13,34],[19,10],[17,2],[58,32],[58,-17],[15,-81],[8,-76],[-5,-66],[6,-101],[-2,-35],[14,-29],[14,-124],[14,-37],[-29,-33],[-88,-14],[-35,16],[-87,-6],[0,30],[-5,33],[0,24],[-6,21],[-4,122],[-25,-31],[-1,-24],[-7,-25],[-15,-132],[-22,-32],[-70,8],[-69,-5],[-38,5],[-129,60],[-50,54],[-44,82],[-28,76],[-10,71],[-31,57],[-51,45],[-61,36],[-70,28],[-62,35],[-53,44],[-58,33],[-64,25],[-90,10],[-133,-4],[-89,27],[-22,-2],[-21,-14],[16,-40],[103,-18],[79,-5],[105,3],[64,-10],[24,-23],[16,-42],[9,-59],[-21,-47],[-76,-52],[-39,-25],[-117,-47],[-39,-10],[-97,-4],[-75,5],[-98,23],[-55,5],[-115,3],[-27,-8],[30,-25],[49,-14],[34,-17],[4,-32],[-13,-48],[-13,-33],[-21,-25],[-75,-47],[-31,-15],[-141,-50],[-10,-10],[33,2],[89,17],[26,0],[146,-43],[116,2],[236,40],[19,-1],[16,-6],[15,-15],[16,-23],[-19,-23],[-54,-22],[-84,-22],[-36,-15],[-35,-22],[-64,-53],[-19,-56],[68,-21],[30,27],[36,59],[33,35],[76,24],[94,-12],[72,14],[148,58],[26,4],[217,-34],[197,-65],[103,-25],[138,-14],[246,7],[22,-11],[-8,-23],[-14,-20],[-41,-27],[-50,-18],[-31,-5],[-27,-13],[-59,-13],[-15,-10],[21,-45],[-10,-7],[-52,-1],[-88,-29],[-72,2],[-15,-5],[14,-10],[14,-21],[16,-32],[-9,-22],[-32,-13],[-24,-4],[-85,18],[-14,-3],[13,-13],[7,-20],[2,-28],[-21,-23],[-43,-18],[-81,-51],[-35,-15],[-74,-12],[-15,-7],[30,-39],[-4,-16],[-49,-42],[-76,-27],[-10,-14],[-7,-38],[-6,-15],[-20,-22],[-71,-42],[-51,-21],[-25,-17],[-31,-28],[-40,-16],[-47,-1],[-45,-11],[-74,-30],[-51,-10],[-163,-53],[-76,-8],[-66,-19],[-137,-50],[-64,-16],[-45,-19],[-49,-5],[-80,12],[-43,1],[-27,-8],[-24,-15],[-40,-42],[-34,-4],[-112,34],[3,-15],[29,-36],[-1,-26],[-67,-26],[-36,-7],[-52,11],[-70,28],[-90,59],[-109,89],[-53,30],[4,-29],[12,-28],[20,-27],[5,-20],[-13,-12],[-16,-6],[-20,0],[-3,-7],[33,-43],[25,-44],[-2,-41],[-31,-39],[-26,-23],[-22,-7],[-130,-98],[-37,-13],[-16,-12],[-14,-18],[-38,-81],[-15,-25],[-30,-32],[-13,-6],[-4,-13],[6,-21],[-9,-34],[-22,-49],[-76,-133],[-61,-125],[-27,-41],[-20,-17],[-12,6],[-30,-3],[-15,-22],[-13,-40],[-15,-30],[-16,-21],[-122,-89],[-32,-17],[-28,11],[-34,-4],[-70,47],[-12,17],[-45,39],[2,-20],[8,-11],[6,-17],[16,-20],[34,-105],[-27,-22],[-25,-25],[-63,-42],[-68,-70],[-25,-19],[-5,57],[3,17],[-39,27],[1,-19],[-4,-19],[-27,-74],[-8,-13],[-14,3],[-30,-14],[-30,7],[-26,33],[-11,18],[-47,-48],[-23,1],[-4,-40],[-22,-37],[-30,-16],[-41,1],[-25,-21],[-55,23],[-13,44],[44,60],[12,25],[-8,30],[11,39],[84,125],[57,63],[-3,12],[-77,13],[-68,22],[-66,8],[-29,-8],[46,-36],[66,-35],[-33,-34],[-27,-36],[-29,-97],[-19,-40],[-72,46],[-33,16],[21,-51],[63,-48],[4,-16],[0,-57],[-121,-50],[-125,-8],[-91,-14],[-152,-18],[-59,0],[-5,-19],[149,-89],[22,-16],[-21,-30],[-31,-19],[-48,-65],[-25,-23],[-63,-31],[-115,35],[-59,-16],[-57,11],[-1,-38],[17,-27],[17,-69],[38,6],[48,21],[38,-52],[24,-87],[43,-45],[19,-34],[8,-33],[-27,-32],[-55,-46],[-62,-8],[4,-36],[-27,-26],[-56,7],[-26,18],[-28,9],[-112,10],[113,-70],[40,-32],[18,19],[39,5],[58,-18],[-10,-118],[26,-95],[3,-21],[-62,-57],[-1,-54],[-36,-15],[-40,4],[-2,-59],[-27,-36],[5,-23],[8,-20],[-25,-38],[-22,-45],[-31,-39],[-17,4],[-50,-3],[-60,3],[-49,52],[-20,17],[-23,11],[9,-33],[14,-20],[45,-37],[82,-46],[-2,-33],[-22,-14],[-52,-89],[-18,-1],[-23,-23],[-72,7],[-30,9],[-88,-5],[-30,7],[-26,-3],[24,-25],[51,-23],[57,-23],[87,-17],[-3,-32],[-22,-27],[13,-39],[-10,-29],[-4,-34],[-20,-78],[23,-54],[26,-26],[-3,-35],[12,-55],[-38,-50],[-33,2],[-45,-11],[-16,-22],[73,-20],[-7,-38],[-19,-46],[-21,-100],[-42,-172],[-20,-171],[-91,-141],[-32,-3],[-8,-6],[-45,7],[-69,33],[-54,10],[-36,1],[-5,-16],[30,-27],[46,-10],[37,-18],[66,-16],[23,-31],[16,-33],[-3,-19],[0,-21],[12,-117],[-31,-40],[-24,-37],[-82,5],[-15,13],[-79,38],[5,-18],[57,-52],[20,-26],[-13,-5],[-23,-2],[-33,-18],[-58,10],[3,26],[11,27],[-27,-4],[-29,-14],[-18,5],[-14,-1],[-8,13],[-12,53],[14,27],[48,69],[15,37],[-13,16],[-34,-39],[-36,-63],[-16,-38],[-22,-8],[-55,20],[-158,88],[5,53],[-2,45],[46,5],[34,20],[30,23],[33,43],[31,71],[-4,6],[-90,-91],[-56,-30],[-27,-6],[-14,14],[-44,29],[-29,13],[-67,22],[-12,11],[-19,9],[-27,93],[35,113],[23,32],[15,38],[9,50],[-6,22],[-20,-8],[-9,-17],[1,-27],[-11,-18],[-80,-43],[-79,-35],[-38,-33],[-24,-26],[-19,-25],[-29,2],[-41,-5],[-27,-16],[-41,10],[-26,24],[-32,3],[-35,-12],[-25,1],[2,-16],[16,-41],[-27,-3],[-52,-1],[-26,11],[-20,16],[-17,22],[10,28],[83,52],[38,30],[-24,10],[-80,-9],[-14,7],[-53,-4],[2,77],[-13,19],[-1,9],[-18,21],[-18,6],[-11,7],[-90,18],[-12,43],[-6,44],[-17,55],[-43,14],[-24,24],[19,24],[8,31],[-20,14],[-13,22],[2,14],[-16,38],[-5,30],[18,27],[51,32],[17,13],[9,14],[58,23],[-50,16],[-31,3],[-23,-8],[-21,-31],[-19,-20],[-77,-7],[-11,11],[-5,43],[4,34],[32,47],[-37,23],[-33,8],[-39,22],[-35,23],[-30,27],[-29,31],[-10,4],[11,34],[6,27],[1,58],[-12,25],[26,50],[36,54],[78,82],[-83,-39],[-68,-86],[-15,-4],[-5,16],[-26,55],[-19,15],[-9,17],[-39,29],[-17,23],[-24,44],[-34,52],[-48,103],[-78,119],[-20,67],[25,84],[-27,58],[74,27],[106,31],[55,25],[32,7],[68,5],[22,25],[-37,-6],[-25,3],[-2,12],[9,21],[6,27],[-13,-5],[-66,-46],[-97,-37],[-76,-21],[-13,1],[-26,-13],[-16,-3],[-11,3],[-27,36],[-8,23],[49,63],[36,86],[48,56],[33,7],[57,-3],[20,-5],[-7,33],[3,16],[46,20],[53,8],[38,-6],[24,-39],[31,-72],[41,-24],[-2,34],[-21,45],[-8,68],[-27,29],[-22,14],[-61,-7],[-36,50],[-9,19],[0,24],[-37,72],[-12,36],[-19,47],[-10,3],[13,-60],[17,-42],[24,-93],[12,-38],[-16,-29],[-31,-30],[-27,-17],[-64,-21],[14,46],[8,45],[-32,-16],[-30,-33],[-10,-45],[-20,-41],[-57,-101],[-23,-56],[-21,-27],[-24,-8],[-21,22],[-18,51],[-9,41],[-1,104],[3,49],[-10,65],[-31,153],[-7,54],[-52,29],[-1,9],[-14,31],[-10,31],[9,12],[12,8],[78,46],[58,51],[70,80],[28,25],[102,19],[45,3],[-1,14],[-15,6],[-68,-4],[-92,-32],[-16,-12],[-40,-50],[-31,-27],[-87,-62],[-56,0],[-58,74],[-65,-14],[-44,5],[-13,11],[-10,102],[36,119],[-38,1],[-8,5],[-20,27],[-13,8],[9,14],[94,56],[141,111],[61,43],[37,19],[29,21],[34,47],[11,20],[20,16],[40,19],[44,28],[72,63],[9,23],[-15,5],[-34,-21],[-68,-58],[-49,-32],[-166,-145],[-71,-52],[-38,-34],[-30,-32],[-32,-23],[-33,-14],[-71,-10],[-35,-12],[-21,9],[-10,69],[7,40],[-3,40],[18,58],[26,40],[11,22],[5,16],[55,42],[30,18],[21,42],[121,15],[31,-1],[16,5],[13,13],[-12,9],[-36,7],[-97,-2],[-89,8],[-40,7],[-20,-4],[-32,12],[-35,23],[-55,86],[22,110],[2,53],[69,46],[37,15],[53,35],[71,59],[84,36],[43,7],[36,-6],[131,-51],[68,-10],[60,13],[75,-18],[132,-74],[25,11],[-7,18],[-148,78],[1,23],[38,6],[40,22],[-22,14],[-98,-12],[-29,-18],[-95,-10],[-49,16],[-45,8],[-67,33],[-56,-11],[-35,-13],[-62,-13],[-23,-8],[-122,-106],[-51,-22],[-37,7],[26,69],[7,27],[0,30],[11,40],[62,77],[40,84],[16,53],[31,6],[42,-8],[126,-34],[105,-40],[77,-11],[51,-1],[22,13],[17,22],[7,15],[5,32],[6,12],[17,13],[34,49],[11,34],[-11,20],[-24,-2],[-45,-13],[-6,-6],[1,-10],[-44,-54],[-47,-12],[-110,-18],[-50,-1],[-89,25],[-13,9],[-9,19],[-109,-5],[-33,-5],[-26,2],[13,32],[34,35],[48,114],[41,29],[80,27],[84,-4],[145,-88],[44,-8],[40,7],[96,30],[18,12],[34,36],[40,63],[-2,15],[-61,-35],[-33,-10],[-28,0],[26,115],[10,87],[9,22],[82,-7],[111,12],[26,19],[0,9],[-45,11],[-21,25],[-38,-8],[-50,-16],[-62,2],[5,37],[46,79],[5,36],[18,72],[1,37],[24,36],[72,25],[31,16],[1,16],[-43,64],[11,18],[34,16],[13,11],[-9,8],[-31,7],[-49,-14],[-53,-7],[-47,21],[-37,10],[-24,-3],[-63,-36],[-23,-1],[-27,10],[-183,31],[-22,11],[-65,54],[-54,36],[-72,39],[-93,30],[-114,20],[-68,19],[-34,27],[-58,59],[-44,50],[-8,24],[26,30],[26,22],[50,18],[85,-6],[46,-8],[50,-17],[38,-3],[79,4],[80,-10],[48,-12],[63,-25],[172,-106],[72,-37],[32,-4],[129,-39],[20,0],[53,19],[6,12],[-18,11],[-57,10],[-67,43],[-42,34],[-4,57],[5,32],[10,15],[8,48],[-39,29],[-27,9],[-72,43],[-6,10],[34,5],[34,-3],[73,-21],[38,-3],[28,8],[3,9],[-44,24],[-56,44],[-115,6],[-75,-5],[-48,15],[-51,24],[-32,7],[-67,-16],[-34,-1],[-31,5],[-30,76],[8,23],[24,10],[18,25],[12,26],[40,25],[217,56],[55,42],[-2,7],[-37,-8],[-48,-19],[-31,-4],[-128,24],[-20,-5],[-52,-35],[-70,-38],[-32,2],[-44,23],[-7,16],[-3,19],[48,26],[15,14],[31,38],[-2,18],[-52,-10],[-7,17],[1,30],[-5,37],[-13,37],[-43,57],[-18,14],[-15,21],[-33,77],[10,19],[29,14],[5,7],[-69,-12],[-7,-13],[13,-20],[9,-26],[6,-32],[9,-29],[25,-31],[20,-16],[33,-43],[14,-48],[-4,-25],[-26,-26],[-40,-27],[-13,-23],[-5,-23],[-32,-21],[-19,8],[-16,1],[18,-37],[12,-39],[-14,-38],[-38,-24],[-20,0],[-41,-19],[-103,-10],[-36,4],[-66,20],[-78,10],[-31,26],[-40,47],[-21,42],[0,38],[11,27],[22,17],[27,109],[38,88],[96,91],[27,33],[9,17],[0,14],[-15,8],[-118,-112],[-73,-12],[-21,25],[6,45],[13,11],[59,-5],[23,25],[-37,38],[-39,10],[-9,9],[40,29],[93,-2],[21,20],[34,22],[37,40],[14,34],[3,29],[-8,23],[-1,23],[7,24],[-10,26],[-26,28],[-57,28],[-17,-31],[-18,-13],[-25,-3],[-24,13],[-24,5],[-24,12],[-24,3],[-10,10],[-6,26],[-1,34],[28,16],[39,13],[26,23],[17,34],[3,38],[-12,40],[-32,37],[-58,-36],[-23,-9],[-6,26],[-8,19],[-24,25],[-33,18],[-31,13],[-1,19],[7,21],[14,24],[18,52],[20,-5],[16,5],[-9,42],[-16,36],[-19,20],[-1,9],[-4,10],[-14,25],[-16,19],[-29,52],[-20,19],[-26,11],[-28,0],[-45,-13],[-83,-16],[-66,-8],[-11,4],[33,20],[49,21],[64,14],[19,34],[-7,29],[2,28],[-17,30],[17,16],[58,16],[27,3],[26,21],[-74,50],[-77,33],[-20,14],[-17,22],[-15,30],[-24,31],[-33,31],[-48,30],[-125,54],[-42,38],[-40,57],[-19,25],[-21,18],[-87,43],[-10,18],[89,50],[9,20],[-36,61],[-38,44],[-41,16],[-60,8],[-56,20],[-50,31],[-51,23],[-76,22],[-126,56],[-195,59],[-87,35],[-52,13],[-68,3],[-132,33],[-111,10],[-69,-4],[-22,5],[-51,33],[-79,19],[-41,-7],[-51,-36],[-62,-35],[-32,-4],[-49,32],[-24,22],[-23,8],[-23,-8],[-43,-29],[-41,-21],[-61,-25],[-49,-12],[-63,-3],[-16,-9],[-24,-1],[-32,8],[-31,17],[-28,24],[-25,14],[-22,2],[-50,-13],[-63,-37],[-29,-9],[-24,3],[-30,12],[-59,30],[-33,-3],[-24,-10],[6,-25],[56,-59],[50,-42],[-42,-5],[-368,57],[-46,14],[-68,34],[-56,21],[-96,54],[-74,30],[-24,22],[-6,16],[23,22],[149,72],[56,14],[116,18],[27,11],[9,8],[-30,16],[-151,-6],[-135,11],[-117,28],[-21,10],[-19,17],[-20,26],[5,28],[28,32],[16,22],[5,11],[-147,-77],[-60,-28],[-48,9],[-34,13],[-16,14],[1,16],[5,11],[10,7],[-78,33],[-35,25],[-4,26],[28,27],[27,19],[27,12],[72,11],[263,20],[188,-19],[64,64],[43,21],[127,21],[195,3],[138,-12],[64,-15],[88,-33],[5,10],[-21,30],[-2,25],[36,43],[16,27],[-11,29],[-38,29],[-69,38],[-36,3],[-41,-9],[-49,-21],[-102,-53],[-49,-11],[-80,-3],[-44,7],[-43,8],[-67,28],[-25,5],[-29,-12],[-35,-30],[-34,-21],[-32,-12],[-30,-5],[-43,2],[-173,47],[-40,21],[-2,31],[-53,30],[-60,5],[-8,11],[77,46],[57,19],[-10,6],[-82,1],[-56,-25],[-32,-4],[-74,-1],[-77,13],[-33,11],[-34,25],[-38,14],[-115,21],[-26,12],[-25,19],[-94,55],[-57,40],[-8,22],[66,49],[3,12],[-28,21],[-12,15],[10,22],[57,47],[22,13],[103,28],[104,40],[37,9],[34,3],[136,-3],[42,10],[36,20],[58,20],[123,30],[272,46],[18,6],[1,8],[-24,24],[-5,12],[55,21],[126,33],[86,16],[55,2],[45,7],[63,21],[35,4],[214,8],[95,-12],[46,1],[30,8],[40,24],[74,59],[38,36],[37,56],[48,88],[35,85],[24,83],[18,51],[13,18],[44,23],[47,18],[79,16],[-7,7],[-34,12],[-31,5],[-29,-3],[-53,-18],[-69,-13],[-67,2],[-48,-5],[-44,-17],[-71,-14],[-48,3],[-86,25],[-43,5],[-110,-3],[-32,10],[-28,17],[-23,25],[-16,32],[2,34],[40,60],[15,16],[107,68],[66,31],[66,24],[48,13],[45,7],[43,14],[80,47],[82,40],[102,75],[50,20],[173,32],[47,1],[40,-9],[38,-16],[106,-74],[9,2],[-19,28],[-39,84],[7,34],[61,37],[25,6],[64,-2],[103,-11],[70,-13],[52,-20],[63,-13],[32,1],[23,9],[33,32],[43,54],[17,66],[-8,78],[-13,58],[-16,36],[9,30],[52,36],[48,26],[114,38],[92,9],[55,-2],[72,-18],[100,-10],[91,-34],[146,-78],[97,-39],[81,-18],[79,-29],[117,-64],[62,-27],[36,-10],[32,-1],[-12,18],[-56,37],[-85,42],[-191,75],[-104,53],[-94,60],[-69,36],[-126,35],[2,14],[151,50],[278,44],[313,33],[105,-3],[184,14],[18,22],[39,9],[172,30],[49,0],[76,-15],[80,-27],[37,-24],[51,-42],[25,-59],[-4,-186],[1,-36],[10,-13],[35,20],[42,38],[37,26],[29,41],[20,56],[12,41],[-49,46],[-2,76],[24,41],[69,0],[284,-140],[111,-31],[127,-75],[149,8],[137,-9],[60,3],[30,11],[-42,32],[-195,85],[-88,67],[-62,84],[-15,45],[47,8],[217,-1],[327,-39],[418,-133],[205,-45],[369,-154],[111,-23],[45,-5],[34,19],[21,21],[1,27],[-18,35],[-10,39],[-3,46],[25,89],[60,30],[26,33],[-24,59],[-70,41],[-271,105],[-1,13],[55,14],[81,8],[671,-25],[116,-10],[50,-9],[21,-11],[28,-6],[144,15],[-3,26],[-18,16],[-779,45],[-145,16],[-74,1],[-77,-12],[-158,-6],[-73,2],[-95,54],[86,64],[72,-1],[137,-25],[82,35],[129,29],[128,10],[278,63],[52,5],[65,-3],[143,-16],[57,-15],[65,-33],[38,-10],[45,-2],[61,-15],[89,48],[81,52],[92,33],[131,-19],[83,-25],[75,-30],[107,-16],[182,-102],[34,0],[16,8],[17,19],[6,28],[22,38],[-16,14],[-152,42],[-29,17],[-29,26],[0,22],[28,18],[30,8],[98,-8],[32,6],[31,15],[37,27],[29,7],[66,1],[101,-18],[88,-1],[32,8],[5,17],[8,11],[10,5],[321,1],[79,4],[63,13],[76,2],[66,-8],[83,-17],[81,1],[122,27],[115,13],[634,-4],[208,-16]],[[35352,92133],[93,-47],[98,-32],[9,-15],[8,-22],[2,-12],[-3,-11],[-6,-10],[7,-12],[21,-16],[2,-19],[-25,-31],[-34,-35],[-183,-72],[-64,-13],[-160,-49],[-49,2],[-11,2],[-30,22],[-42,20],[-19,16],[-17,23],[7,14],[30,5],[44,0],[65,16],[-18,15],[-17,9],[-12,19],[-27,-3],[-20,11],[-38,7],[-101,7],[-66,19],[-20,11],[-17,20],[-15,28],[22,109],[15,27],[34,9],[84,-24],[11,11],[-92,40],[-33,23],[-10,19],[-6,28],[0,16],[4,16],[8,17],[23,22],[92,35],[102,-12],[175,-43],[22,-10],[54,-37],[103,-113]],[[35829,91907],[-43,-20],[-9,5],[-9,15],[-22,70],[-7,34],[5,41],[-8,29],[39,35],[32,5],[43,-8],[72,-35],[-5,-11],[-16,-18],[-44,-24],[-15,-53],[-3,-27],[2,-20],[-12,-18]],[[35129,92765],[-26,-4],[-75,29],[-12,11],[-5,14],[3,16],[24,30],[45,43],[32,8],[20,-27],[20,-37],[2,-18],[-1,-22],[-5,-19],[-9,-15],[-13,-9]],[[34717,93773],[-39,-39],[-32,-23],[-70,-66],[-12,-3],[-18,9],[-15,18],[-26,4],[-9,11],[-4,9],[-12,6],[-18,3],[-30,-7],[-27,7],[-21,29],[38,20],[24,17],[91,6],[25,-7],[16,0],[25,4],[54,21],[8,10],[48,-12],[4,-17]],[[30092,96385],[-99,-5],[-97,22],[-34,17],[2,27],[14,9],[53,9],[44,2],[29,-4],[70,-16],[50,-16],[33,-5],[-9,-24],[-56,-16]],[[37537,99126],[-56,-10],[-118,61],[-186,61],[-164,40],[-154,107],[-12,38],[21,33],[135,5],[108,15],[274,-66],[138,-56],[46,-45],[-7,-92],[-25,-91]],[[42935,92696],[10,-34],[1,-16],[-2,-14],[-6,-9],[-13,-9],[25,-22],[7,-15],[2,-12],[-16,-24],[-110,-31],[-31,-15],[-38,-37],[-47,-31],[-16,0],[-18,33],[-74,24],[-139,-13],[-162,-30],[-58,-14],[-29,7],[-9,12],[0,15],[19,47],[8,12],[37,15],[25,41],[-8,44],[10,62],[25,10],[64,-22],[41,-5],[73,-3],[99,8],[79,25],[144,71],[25,-1],[19,-25],[13,-12],[43,-20],[7,-12]],[[44815,98989],[-29,-18],[-73,7],[-94,52],[-62,43],[-5,50],[32,22],[50,4],[69,-43],[71,-58],[41,-59]],[[45107,97825],[-117,-66],[-174,5],[-103,31],[-30,45],[40,51],[125,41],[156,25],[142,-15],[20,-51],[-59,-66]],[[44723,96758],[-37,-20],[-25,61],[-22,81],[-5,92],[57,45],[29,11],[20,-11],[-5,-40],[0,-82],[19,-55],[-31,-82]],[[44838,95646],[-32,-16],[-108,239],[0,87],[7,66],[49,5],[42,-36],[20,-137],[22,-208]],[[44999,95280],[22,-61],[10,-56],[35,-35],[73,5],[29,-66],[-53,-26],[-214,10],[-88,-5],[-61,41],[2,71],[8,71],[61,41],[51,-36],[62,26],[63,20]],[[45012,96567],[-54,0],[-20,15],[13,27],[75,85],[25,7],[37,-9],[11,-44],[-24,-44],[-63,-37]],[[39713,89591],[-43,0],[-14,45],[4,50],[49,15],[26,-34],[-10,-50],[-12,-26]],[[37148,86855],[-32,-70],[-32,15],[-16,31],[-31,15],[-34,-4],[-1,12],[110,74],[53,20],[-4,-31],[-10,-27],[-3,-35]],[[35645,92658],[-37,-2],[-86,11],[-7,6],[-1,13],[12,37],[38,5],[45,-20],[49,-29],[6,-13],[-19,-8]],[[48160,87445],[-6,-22],[-7,1],[-26,26],[-21,15],[-7,13],[-6,21],[12,2],[14,-4],[36,-20],[10,-20],[1,-12]],[[48139,87237],[5,-18],[-6,2],[-19,20],[-33,48],[-11,39],[-2,18],[8,-2],[7,-16],[31,-11],[8,-8],[0,-19],[10,-23],[2,-30]],[[48003,87637],[25,-22],[9,-16],[-14,-15],[-18,-4],[-21,3],[-34,17],[-12,38],[24,-1],[28,7],[13,-7]],[[48158,87688],[-7,-77],[-12,0],[-20,22],[-15,4],[-5,-11],[1,-14],[8,-9],[24,-52],[2,-15],[-3,-7],[-23,15],[-57,67],[-44,110],[60,18],[43,-29],[48,-22]],[[48220,87706],[-13,-42],[-20,7],[-5,4],[-5,11],[3,31],[-1,45],[22,-37],[19,-19]],[[53491,83977],[0,-58],[-7,-17],[-10,-11],[-28,-11],[-24,-17],[-22,-29],[-7,-41],[16,-30],[31,-16],[8,-58],[-26,-28],[-64,-28],[-7,-68],[2,-54],[-1,-39],[-5,-54],[-52,-24],[-34,82],[0,33],[-11,38],[-1,33],[-12,52],[-50,14],[-19,2],[-27,-9],[-6,3],[-33,72],[6,79],[-17,40],[-3,18],[1,20],[-14,16],[-18,9],[-8,44],[20,11],[48,-5],[15,3],[13,9],[39,73],[-1,16],[4,21],[42,8],[19,-28],[-3,-46],[2,-57],[26,-16],[10,-3],[10,43],[8,21],[10,12],[4,39],[-6,24],[-13,17],[48,49],[50,38],[29,2],[29,-9],[27,-13],[15,-11],[8,-18],[-18,-43],[-5,-23],[12,-77]],[[52408,83469],[-3,48],[-6,34],[-18,51],[27,12],[-5,100],[-10,52],[-75,53],[-60,51],[14,174],[6,46],[-23,91],[3,105],[9,164],[19,7],[14,-1],[53,-30],[22,-3],[15,-26],[18,-11],[13,28],[5,48],[42,62],[30,23],[20,11],[20,-25],[16,-28],[4,61],[12,117],[-40,19],[-33,-16],[-32,-74],[-29,-94],[-47,-8],[-37,-27],[-34,28],[-22,24],[0,35],[5,22],[39,76],[54,73],[53,-1],[39,23],[24,3],[72,-5],[38,16],[33,34],[73,141],[41,59],[82,21],[76,68],[22,1],[-36,-51],[-6,-19],[-4,-30],[25,-66],[-5,-40],[2,-78],[-24,-41],[-28,-87],[-12,-13],[-2,-101],[3,-25],[-4,-92],[28,-38],[29,-20],[99,1],[10,-16],[13,-29],[-9,-49],[-11,-36],[-28,-31],[-37,-23],[-23,-1],[-31,44],[-15,-14],[-15,-23],[-26,-119],[-12,-81],[-6,-7],[-15,12],[-25,1],[-31,-19],[16,-17],[17,-30],[-7,-15],[-28,-16],[-24,-32],[-11,-25],[-31,-29],[-19,-37],[9,-46],[4,-40],[9,-45],[-8,-35],[-38,-51],[-14,-45],[32,1],[21,-10],[12,-13],[12,-19],[-8,-23],[10,-59]],[[52956,83876],[12,-30],[14,-64],[23,-72],[-10,-30],[7,-38],[-7,-41],[-44,-46],[-51,-2],[-52,22],[-74,44],[-6,24],[-10,13],[-20,74],[1,92],[37,11],[81,43],[18,-6],[20,-23],[23,-1],[32,32],[6,-2]],[[53155,83462],[50,-36],[33,2],[22,-14],[6,-23],[2,-51],[-24,-15],[-26,5],[-36,-19],[-117,83],[2,69],[4,27],[56,7],[28,-35]],[[52981,83381],[-12,-3],[-17,46],[-2,15],[20,30],[12,34],[33,52],[19,61],[7,-1],[-8,-55],[-43,-151],[-9,-28]],[[53485,83505],[-10,-9],[-43,7],[-48,-40],[-18,12],[7,26],[5,9],[16,11],[11,16],[4,25],[10,-14],[30,-5],[14,-8],[12,-12],[10,-18]],[[53518,83868],[-26,-24],[-6,1],[-9,34],[14,20],[8,17],[6,0],[8,-19],[5,-29]],[[52912,83437],[-19,-6],[-21,12],[-35,48],[-4,12],[18,-8],[23,-25],[18,-5],[25,-21],[-5,-7]],[[52794,83459],[-29,-8],[-14,14],[-28,5],[-9,89],[2,5],[14,-6],[47,-41],[16,-45],[1,-13]],[[52946,83976],[-5,-11],[-17,11],[-2,37],[6,34],[-7,30],[8,19],[25,-45],[7,-21],[-9,-25],[-6,-29]],[[53070,84822],[-12,-13],[-38,19],[17,26],[42,13],[24,-4],[-27,-27],[-6,-14]],[[54190,83537],[-10,-10],[-46,17],[-56,40],[9,78],[14,34],[102,-88],[1,-33],[-14,-38]],[[54709,79837],[-7,13],[-13,48],[-14,6],[-19,4],[-14,7],[-31,28],[-16,8],[-18,2],[-18,-16],[-13,-19],[-41,0],[-45,9],[-65,63],[-16,1],[-18,-3],[-28,15],[-55,41],[-26,9],[-16,-5],[-14,-9],[-11,-2],[-6,14],[-20,16],[-21,2],[-6,-10],[-6,-90],[-7,-32],[-28,1],[-10,-15],[-22,-44],[-5,-41],[-38,8],[-18,7],[-16,-6],[-18,-23],[-49,2],[-39,13],[-17,52],[-18,21],[-22,18],[-8,4]],[[59445,72041],[-11,-4],[-17,16],[-10,5],[-10,-15],[-11,-11],[-10,-5],[-8,-2],[-14,-11],[-17,3],[-25,9],[-14,-22],[-3,3],[-2,55],[-9,23],[-11,13],[-16,-6],[-22,2],[-16,10],[-31,-16],[-26,-17],[-18,-17],[-14,1],[-24,16],[-18,17],[-2,14]],[[59086,72102],[17,-6],[30,12],[13,56],[4,65],[50,-19],[52,-9],[42,-4],[41,11],[126,69],[36,41],[23,14],[38,34],[40,19],[-25,-39],[-145,-174],[-10,-52],[7,-35],[20,-44]],[[59445,72041],[5,-11],[8,-33],[-32,-10],[-31,-3],[-18,4],[-17,-1],[-51,-95],[-28,-32],[-33,-19],[-33,-11],[-17,-1],[-15,-12],[-10,-22],[0,-22],[-5,-17],[-18,4],[-8,34],[-13,15],[-32,-8],[-16,1],[-52,33],[-16,13],[-10,28],[-27,101],[-4,75],[25,-19],[23,23],[23,38],[27,15],[16,-7]],[[27267,65185],[73,-26],[59,7],[28,16],[-3,-16],[26,-40],[10,-3],[38,20],[99,8],[10,-11],[18,-39],[25,-24],[26,-18],[28,-5],[27,8],[26,-4],[32,-37],[10,-5],[28,10],[-8,-34],[48,-49],[36,-95],[25,-39],[28,-35],[23,-24],[25,-11],[79,5],[18,-3],[17,-14],[15,-5],[9,5],[151,-149],[48,-79],[30,-41],[63,-59],[25,-13],[14,7],[-3,14],[-18,33],[-3,12],[24,-11],[43,-67],[12,-24],[21,-23],[22,-17],[-11,-26],[-17,-3],[-34,11],[27,-43],[5,-31],[12,-3],[19,35],[11,29],[48,-75],[25,-34],[-6,-20],[-2,-20],[28,18],[11,-2],[10,-11],[12,-32],[26,-7],[27,1],[55,-27],[51,-54],[49,-11],[49,-2],[24,-28],[11,-39],[-12,-27],[-7,-28],[18,-35],[-39,-15],[-6,-21],[2,-23],[8,-12],[23,11],[33,-10],[51,-8],[35,7],[71,-24],[21,-13],[42,-44],[19,-30],[42,-79],[35,-31],[31,-8],[11,5],[10,-8],[9,-11],[8,-35],[-5,-37],[-17,-29],[-10,-22],[-44,-2],[-62,-10],[-60,-32],[-29,-26],[-14,-17],[-31,-15],[-2,13],[0,17],[-8,31],[-7,-28],[-12,-21],[-19,-17],[-73,-1],[-29,23],[-30,17],[-109,16],[-27,-1],[-73,-18],[-73,-9],[-31,-11],[-30,-16],[-59,0],[-70,-18],[-70,-4],[45,131],[95,125],[17,27],[13,35],[3,26],[-4,23],[-23,39],[-4,29],[-7,19],[-33,17],[-33,10],[-35,0],[-73,13],[-39,1],[-33,27],[-55,96],[-26,26],[-13,22],[-10,24],[-13,140],[-11,68],[-17,58],[-25,45],[-27,15],[-101,-38],[-24,5],[-23,13],[-154,91],[-63,50],[-26,25],[-22,35],[-23,58],[-25,52],[0,-21],[-4,-14],[-129,-6],[-20,12],[-13,14],[-10,21],[-7,42],[-12,35],[-4,-38],[-6,-34],[-17,-20],[-20,-3],[-24,46],[-104,10],[-9,8],[-34,44],[-30,56],[29,19],[60,26],[13,18],[8,21],[-5,33],[-12,24],[-13,14],[-13,9],[-18,4],[-232,5],[-13,-17],[-21,-37],[-41,-46],[-28,-49],[-10,-25],[-12,-18],[-29,-30],[-24,-46],[-30,-21],[-16,13],[-16,0],[-11,-12],[-13,-5],[-59,-6],[-9,-11],[-8,-34],[-10,-64],[-9,-21],[-30,-8],[-28,-18],[-58,-62],[-15,-9],[3,45],[-3,44],[-16,2],[-19,-7],[-15,-13],[-29,-32],[-14,-9],[-14,17],[3,21],[95,79],[11,6],[17,-6],[17,3],[13,22],[-16,105],[6,71],[22,55],[45,83],[21,27],[219,174],[22,9],[142,35],[22,12],[66,51],[69,21],[73,-16]],[[28425,64488],[-11,-18],[-13,26],[-8,2],[-11,10],[-21,29],[-5,29],[17,2],[23,-5],[39,-16],[-4,-34],[-6,-25]],[[28326,64680],[-6,-10],[-15,22],[-22,9],[-13,33],[-12,13],[-1,12],[20,9],[14,-4],[16,-26],[9,-46],[10,-12]],[[28158,64834],[38,-13],[13,8],[13,2],[13,-5],[19,-48],[-16,-6],[-13,0],[-10,8],[-34,3],[-23,14],[-12,12],[-6,14],[18,11]],[[28367,64589],[-10,-2],[-27,24],[-9,20],[10,27],[2,30],[4,1],[4,-35],[22,-15],[1,-8],[13,-30],[-10,-12]],[[27066,64269],[-26,-31],[-55,-43],[-30,-1],[-30,16],[-20,36],[-12,35],[1,17],[19,-28],[16,-14],[13,9],[10,16],[-31,114],[2,25],[24,62],[65,-19],[11,-11],[10,-40],[14,-31],[17,-83],[2,-29]],[[27958,64898],[1,-15],[-49,42],[-21,44],[-8,10],[13,1],[55,-72],[9,-10]],[[55279,77689],[-18,-2],[-29,10],[-14,18],[-2,19],[0,17],[-9,29],[-23,29],[-49,5],[-18,9],[-18,11],[-20,8],[-19,-1],[-22,-8],[-40,13],[-13,-17],[-20,-20],[-18,0],[-34,46],[-10,3],[-30,-23],[-12,-1],[-9,7],[-40,18],[-18,3],[-14,-8],[-23,9],[-58,61],[-35,-46],[-73,11],[-21,-31],[-25,-60],[-20,-29],[-17,11],[-20,26],[-36,67],[-18,13],[-21,3],[-18,-8],[-10,-14],[-7,-98],[-7,-87],[0,-53],[40,-48],[47,-83],[15,-10],[7,-27],[11,-70],[12,-79],[24,-52],[22,-37],[26,-33],[33,-52],[27,-56],[7,-21],[52,-75],[51,-76],[46,-27],[7,-14],[0,-59],[5,-22],[30,-61],[62,-90],[7,-21],[2,-15],[-4,-12],[-16,-12]],[[54884,76577],[-13,13],[-58,88],[-55,56],[-63,104],[-84,41],[-58,46],[-34,-7],[-39,-14],[-23,-1],[-17,9],[-12,28],[2,22],[-2,28],[-34,46],[-46,44],[-43,56],[-87,151],[-18,49],[17,9],[13,0],[15,10],[24,0],[28,-10],[-25,32],[-31,32],[-80,127],[-24,59],[-3,65],[6,88],[-14,63],[-62,82],[-23,43],[-45,25],[-21,-2],[-12,-32],[-9,-71],[-40,-93],[-14,-41],[-21,-52],[-18,-4],[-11,5],[-33,88],[-32,68],[-4,31],[-3,40],[-24,144],[17,20]],[[54625,76610],[51,-16],[38,8],[34,-10],[21,-19],[5,-9],[-28,-1],[-31,8],[-35,-19],[-31,10],[-12,12],[-8,15],[-4,21]],[[54776,76685],[-20,-6],[-123,4],[-36,12],[-40,31],[-9,9],[41,9],[37,-9],[12,-22],[101,-18],[37,-10]],[[54662,76768],[-44,-1],[-38,10],[-19,18],[2,15],[6,25],[42,-3],[65,-18],[15,-21],[-4,-9],[-25,-16]],[[54230,77224],[5,-20],[-35,38],[-13,26],[-3,11],[46,-55]],[[54113,77751],[-34,-12],[-16,22],[-4,18],[-29,6],[-17,25],[-3,11],[24,28],[13,45],[16,-27],[20,-51],[11,-14],[19,-51]],[[54119,77625],[7,-25],[-26,23],[-23,9],[-5,17],[3,14],[5,14],[18,-2],[3,-14],[18,-36]],[[54218,77382],[-7,-16],[-18,29],[-16,20],[-12,23],[-23,30],[-8,34],[-34,69],[-6,19],[18,-28],[14,-18],[12,-4],[30,-44],[30,-57],[35,-49],[-8,-2],[-7,-6]],[[54219,77143],[4,-8],[-1,-6],[-14,8],[-4,-2],[-68,126],[-7,24],[24,-29],[66,-113]],[[54269,77173],[19,-43],[-18,9],[-18,27],[-11,28],[28,-21]],[[54024,77568],[-2,-22],[-17,28],[-9,51],[-21,82],[-3,23],[11,23],[0,23],[-15,72],[12,11],[8,2],[3,-50],[7,-29],[20,-35],[-4,-58],[4,-83],[4,-18],[2,-20]],[[54891,76479],[37,-39],[-111,51],[13,5],[12,1],[49,-18]],[[55143,76286],[-51,54],[-48,61],[-93,94],[-67,23],[-91,76],[-59,27],[23,6],[26,0],[140,-101],[-16,27]],[[54907,76553],[20,10],[17,-7],[11,-33],[22,-22],[35,-38],[22,-29],[50,-53],[12,-7],[25,-15]],[[49135,54774],[-37,15],[8,19],[36,-11]],[[48465,57848],[17,-38],[22,-26],[34,3],[24,-15],[21,-30],[14,-65],[15,-47],[7,-67],[24,-35],[19,-17],[26,-48],[27,-25],[27,6],[13,-26],[21,-18],[20,-1],[18,56],[24,22],[61,45],[23,20],[25,13],[58,4],[54,-13],[27,-11],[18,8],[18,-27],[18,-56],[14,-18],[15,-19],[12,-44],[13,-44],[7,-19],[16,-44],[14,0],[14,18],[6,14]],[[49161,54798],[-2,12],[-11,4],[-29,26],[5,83],[-13,4],[-11,-11],[-20,-101],[-10,-17],[-146,52],[-31,42],[-38,9],[-66,-5],[-54,-12],[-16,-25],[137,15],[15,-3],[7,-16],[-173,-33],[-67,-19],[-19,5],[-15,32],[-72,4],[-15,-11],[-8,-23],[28,5],[44,1],[12,-18],[-139,-24],[-97,-45],[-41,-33],[-135,-110],[-83,-52],[-22,-20],[-37,-53],[-48,-34],[-54,-64],[-33,-14]],[[26978,56492],[-19,64],[-26,61],[-23,37],[-2,88],[-9,48],[-34,44],[-30,30],[-21,-6],[13,-50],[34,-65],[3,-25],[-1,-33],[-23,5],[-21,14],[-26,4],[-17,20],[-36,77],[26,66],[8,43],[-1,90],[-6,43],[-28,67],[-44,72],[-61,60],[-29,47],[-73,37],[-27,24],[-22,45],[-3,33],[8,50],[-20,63],[-86,125],[-48,46],[-11,26],[-7,9],[7,-86],[21,-52],[55,-48],[15,-28],[6,-37],[-32,-70],[-16,-18],[-5,-38],[-10,-12],[-11,22],[-45,110],[-86,53],[-16,32],[-32,101],[-14,91],[5,61],[35,96],[11,41],[-2,26],[1,37],[-13,26],[-33,35],[-21,27],[6,14],[38,37],[2,33],[0,11]],[[26766,58131],[7,-23],[8,-36],[3,-46],[36,-155],[28,-86],[62,-158],[26,-29],[45,-127],[16,-21],[9,-37],[46,-31],[13,-23]],[[56657,45580],[-11,-11],[-6,-30],[-1,-23],[-19,-18],[-38,4],[-38,17],[-27,5],[-18,-4],[-67,-57],[-22,-7],[-73,4],[-41,12],[-30,2],[-20,-18],[-26,-42],[-22,-22],[-10,2],[-6,18],[-9,24],[-2,63],[-11,69],[7,36],[21,27],[8,53],[-7,81],[0,56],[6,33],[-8,79],[-22,126],[-30,102],[-39,79],[-25,76],[-12,72],[4,173],[12,153],[9,121],[-2,203],[-27,132],[-6,142],[15,152],[3,104],[-10,53],[-7,8],[-9,5],[-66,5],[-89,7],[-78,2],[-84,2],[-14,20],[-6,35],[0,35],[17,108],[-2,9],[-30,2],[-81,-18],[-54,-17],[-34,-6],[-59,-29],[-37,-62],[-12,-78],[1,-64],[-2,-47],[-17,-49],[-14,-56],[0,-30],[-8,-149],[-55,-20],[-55,0],[-13,1],[-68,36],[-25,0],[-22,-19],[-42,-18],[-39,-13],[-40,-45],[-11,-4],[-27,23],[-37,-2],[-38,-11],[-17,-5],[-12,14],[-35,111],[-46,149],[-25,94],[-10,24],[-16,32],[-22,61],[-9,58],[4,55],[-13,73],[-29,93],[-20,89],[-9,85],[-2,72],[4,60],[-5,45],[-16,28],[-9,37],[-7,15],[-13,34],[-29,38],[-33,20],[-70,0],[-93,1],[-84,-3],[-93,-3],[-94,-3],[-26,-6],[-72,-2],[-58,10],[-21,6],[-38,5],[-59,1],[-32,-4],[-77,0],[-7,-1],[-12,-11],[-33,15],[-32,-5]],[[53630,48464],[-19,17],[-39,-11],[-19,-13],[-31,-48],[-46,-25],[-17,2],[-12,8],[-27,53],[-20,50],[-8,28]],[[53392,48525],[12,7],[36,11],[27,5],[6,14],[4,156],[1,159],[-10,21],[-9,12],[-1,11],[14,20],[20,23],[6,11],[22,42],[43,97],[33,24],[30,25],[5,10]],[[53631,49173],[4,19],[14,-2],[4,-9],[7,-20],[12,-29],[21,-34],[22,-37],[11,-5],[17,19],[21,28],[30,20],[7,19],[4,40],[2,44],[3,51],[6,7],[11,5],[20,-15],[9,-15],[16,0],[10,14],[19,25],[25,10],[25,24],[25,31],[12,3],[12,-40],[11,-29],[2,-17],[-11,-34],[-12,-45],[10,-55],[3,-54],[-1,-32],[9,-13],[6,-7],[9,8],[17,-2],[21,-17],[21,2],[20,20],[37,81],[54,141],[44,88],[36,36],[24,43],[12,48],[21,33],[43,26],[32,29],[33,97],[44,174],[12,156],[7,94],[-4,326],[-3,107],[7,58],[16,40],[44,85],[30,70],[23,81],[44,186],[19,60],[8,26],[27,50],[37,43],[47,38],[73,129],[59,130],[-8,157],[13,129],[32,166],[11,174],[-11,184],[4,151],[31,175],[13,65],[4,106],[-1,169],[39,232],[37,138],[41,155],[15,94],[21,125],[-3,100]],[[55169,53846],[-4,116],[10,158],[-3,94],[-15,81],[7,51],[30,21],[36,81],[66,212],[71,104],[49,32],[52,-3],[33,-19],[16,-33],[39,-50],[62,-66],[46,-83],[26,-83],[20,-46],[25,-15],[40,6],[45,-19],[48,-47],[29,-17],[10,12],[23,-7],[52,-38],[42,21],[61,-16],[143,-68],[7,11],[4,3],[12,27],[31,137],[26,85],[12,31],[31,45],[35,11],[35,-4],[28,-19],[26,-23],[29,0],[30,22],[44,40],[46,26],[40,29],[65,50],[26,23],[33,10],[91,-46],[59,30],[24,-9],[51,33],[10,22],[32,111],[35,33],[52,-17],[30,-17],[98,-48],[127,-49],[38,-8],[15,-5],[13,7],[42,63],[14,9],[12,-1],[80,-51]],[[58059,50276],[0,-22],[1,-24],[13,-30],[25,-60],[19,-56],[1,-49],[-4,-82],[-1,-48],[2,-64],[0,-121],[-1,-86],[3,-44],[30,-106],[13,-118],[7,-86]],[[53692,53088],[67,-1],[66,-2],[73,1],[70,1],[55,-3],[26,25],[25,-38],[12,-9],[5,3],[9,-27],[31,3],[5,-6],[3,-33],[29,1],[14,-8],[12,1],[17,19],[12,-6],[22,-25],[15,-21],[22,7],[51,-4],[39,-20],[39,-57],[26,-33],[23,-48],[9,9],[8,13],[5,6],[-1,41],[-13,71],[-5,59],[3,49],[10,35],[17,22],[2,33],[0,4]],[[54495,53150],[19,79],[19,78],[22,92],[19,75],[-2,37],[1,56],[4,62],[-1,37],[6,25],[13,93],[7,53],[12,25],[17,17],[25,1],[66,11],[62,24],[21,11],[38,39],[15,2],[13,-15],[75,-45],[20,-17],[8,2],[11,-3],[17,-1],[18,6],[10,-6],[14,-29],[9,3],[12,21],[23,22],[43,25],[7,-11],[15,-54],[16,-19]],[[53631,49173],[-7,9],[-21,39],[-25,61],[-10,9],[-13,-1],[-22,-22],[-22,-35],[-39,-33],[-32,-18],[-3,-22],[-8,-39],[-11,-23],[-28,-8],[-11,-34],[-25,-66],[-16,-30]],[[53338,48960],[-4,13],[-10,16],[-21,51],[-20,63],[-5,29],[-6,17],[-1,64],[-30,75],[-77,135],[-8,40],[-65,124]],[[62354,44883],[14,-79],[0,-60],[-6,-19],[-13,12],[-23,48],[-43,46],[20,4],[12,-4],[12,4],[8,26],[1,16],[11,12],[7,-6]],[[62163,44753],[19,-35],[-54,15],[-8,31],[-1,24],[20,-5],[24,-30]],[[62073,44987],[-5,-8],[-25,33],[-15,8],[-21,53],[8,184],[7,24],[5,10],[12,3],[14,-23],[-4,-119],[19,-79],[12,-63],[-7,-23]],[[31423,52547],[-53,-26],[-4,4],[-3,15],[1,109],[0,124],[-9,51],[-24,81],[-31,108],[-9,31],[-14,18],[-16,2],[-11,-7],[-16,-20],[-15,-22],[-28,-65],[-29,-76],[-17,-17],[-16,-7],[-15,2],[-12,21],[-13,41],[-14,55],[-18,18],[-7,-17],[-6,-32],[-4,-32],[12,-41],[10,-32],[-18,1],[-56,0],[-66,0],[-65,0],[-58,0],[-55,0],[-21,3],[-21,18],[-20,9],[-10,-1],[-20,-18],[-24,-3],[-17,-17],[-14,2],[0,-95],[0,-135],[-1,-144],[15,11],[13,-1],[10,-10],[27,8],[14,-4],[14,-4],[13,-1],[8,-11],[11,2],[12,13],[13,-8],[15,-20],[10,-31],[8,-37],[9,-20],[-1,-35],[0,-28],[-3,-24],[4,-15],[2,-16],[0,-9],[-5,-4],[-11,-3],[-12,-3],[-8,1],[-6,14],[-6,2],[-9,-2],[-9,9],[-8,18],[-14,18],[-15,-8],[-11,-9],[-11,-11],[-9,-12],[-10,3],[-13,-9],[-10,-14],[-14,-10],[-15,-6],[-18,-5],[-17,-2],[-19,-4],[-1,-76],[-2,-148],[-1,-99],[0,-90],[7,-33],[34,-70],[26,-37],[22,-41],[23,-17],[9,-16],[6,-25],[3,-27],[3,-23],[-3,-24],[-5,-23],[2,-24],[8,-19],[2,-24],[6,-23],[3,-23],[7,-16],[8,-12],[11,-19],[2,-17],[-2,-21],[0,-15],[11,-35],[3,-25],[-5,-29],[-5,-101],[-12,-116],[-8,-88],[-12,-143],[-15,-167],[-18,-204],[-17,-201],[-18,-195],[-15,-176],[-17,-194],[-10,-117],[-5,-20]],[[28094,52681],[-8,40],[-38,57],[19,74],[46,56],[60,-44],[7,87],[-22,76],[4,144],[7,29],[16,39],[20,26],[12,8],[21,-13],[13,29],[49,-13],[15,12],[10,20],[12,14],[15,35],[9,40],[7,16],[17,-6],[1,18],[9,23],[30,53],[-1,23],[-8,51],[2,19],[17,6],[21,15],[10,48],[14,42],[15,63],[17,4],[9,72],[22,64],[46,189],[-13,-4],[-11,-26],[-13,3],[-14,15],[4,85],[-8,10],[-23,-65],[-19,67],[-2,40],[8,40],[-1,27],[-31,-20],[2,25],[19,26],[9,27],[17,29],[7,44],[4,69],[7,74],[-5,36],[-9,31],[-8,137],[2,80],[-4,62],[-8,54],[-37,69],[59,80],[21,60],[-27,124],[-35,105],[-1,62],[10,-8],[11,2],[11,132],[-3,41],[-19,67],[-24,1],[-21,83],[-13,19],[-9,52],[-34,102],[-27,53]],[[28507,56830],[8,-12],[23,-83],[37,-53],[38,-87],[16,-59],[12,-11],[11,-22],[-5,-16],[-12,-17],[-3,-35],[8,-19],[8,-12],[22,8],[12,40],[-8,178],[-13,89],[-15,27],[-13,35],[9,27],[24,12],[31,31],[115,170],[39,159],[30,58],[34,37],[41,-9],[33,20],[10,51],[-9,69],[-13,41],[12,61],[13,91],[-1,76],[16,46],[-6,18],[-23,-37],[-18,-16],[10,30],[33,76],[16,115],[13,48],[46,67],[10,32],[34,50],[56,108],[22,30],[108,-69],[34,4],[-6,-13],[-16,-4],[-23,-19],[-6,-41],[15,-44],[17,-12],[14,28],[14,80],[22,88],[6,92],[15,32],[24,11],[41,-18],[32,-19],[33,-3],[101,14],[164,240],[77,52],[47,50],[31,99],[8,74],[22,28],[24,0],[11,18],[3,23],[57,64],[33,8],[28,-1],[65,-56],[29,-98],[5,-68],[-40,-74],[-10,-32]],[[28301,53307],[-7,-13],[-14,23],[-5,29],[8,21],[12,-7],[5,-18],[1,-35]],[[82828,65953],[-10,-34],[-16,5],[0,25],[-4,7],[5,23],[3,7],[18,-20],[4,-13]],[[83850,69983],[-23,-16],[-72,49],[-51,55],[-31,65],[-4,28],[35,-5],[35,-24],[8,-36],[14,-11],[9,-21],[65,-49],[10,-15],[5,-20]],[[83970,69103],[-4,-12],[-34,33],[-37,7],[-13,29],[-2,46],[39,-2],[48,-41],[11,-21],[-8,-39]],[[83936,68939],[-1,-11],[-24,37],[-11,7],[5,21],[16,5],[13,-47],[2,-12]],[[84e3,69062],[-2,-27],[-8,4],[-10,47],[6,12],[14,-3],[0,-33]],[[83283,66507],[-21,-27],[-13,13],[0,36],[7,32],[-8,23],[7,28],[16,8],[5,-17],[9,-10],[3,-9],[0,-18],[-9,-30],[7,-16],[-3,-13]],[[80662,63993],[10,-20],[28,14],[5,-25],[-1,-12],[-9,-29],[-23,22],[-23,-5],[-16,2],[-5,14],[13,28],[21,11]],[[83680,68021],[-24,-13],[-9,0],[0,42],[20,39],[8,-13],[5,-21],[0,-34]],[[81542,64979],[3,-27],[-22,41],[-6,2],[-11,15],[-6,25],[17,1],[16,-30],[9,-27]],[[81330,64286],[-6,-11],[-8,20],[-2,30],[-6,16],[14,21],[6,22],[15,-4],[7,-7],[-14,-23],[-3,-10],[-3,-54]],[[81289,64308],[-27,-12],[-6,2],[10,30],[24,21],[-1,-41]],[[78093,64266],[3,8],[-6,72],[1,17],[-3,6],[-11,6],[-17,-11],[-51,-47],[-44,-87],[-20,-19],[-20,-8],[-24,15],[-27,10],[-37,-22],[-19,10],[-9,18],[-7,27],[4,34],[-2,25],[-16,13],[-17,11],[-10,32],[-5,36],[4,47],[3,50],[-9,23],[-26,12],[-64,23],[-57,12],[-24,-6],[-19,6],[-11,9],[-6,16],[0,22],[9,52],[11,51],[26,73],[2,51],[-2,59],[13,79],[23,59],[11,18],[-3,26],[-9,24],[-13,13],[-21,16],[-34,4],[-45,16],[-54,35],[6,67],[0,42],[-7,34],[-11,24],[-6,22],[10,60],[-13,65],[-14,27],[-15,33],[-2,37],[7,34],[37,73],[0,17],[-9,-1],[-10,-2],[-50,-26],[-6,16],[-18,10],[-37,2],[-43,-5],[-54,-26],[-50,-45],[-22,-32],[-20,-19],[-15,-7],[-19,14],[2,45],[34,82],[4,56],[-10,49],[-1,38],[-12,25],[-17,12],[-9,28],[0,80],[15,83],[24,26],[15,13],[4,16],[-8,57],[1,37],[15,72],[14,54],[28,-9],[12,13],[13,19],[15,33],[10,38],[12,90],[8,13],[35,-15],[10,11],[19,52],[18,64],[26,20],[18,2],[9,21],[-1,31],[-17,50],[-8,39],[2,24],[26,15],[6,29],[-4,63],[11,75],[6,89],[2,66],[0,50],[-3,53],[-4,96],[-11,84],[2,32],[-2,102],[-7,86],[-14,16],[-26,28],[-15,5],[-12,-10],[-5,-30],[-11,-28],[-15,6],[-6,29],[-10,37],[-30,175],[-4,50],[-5,51],[-10,25],[-11,14],[-25,59],[-13,25],[-6,4],[-14,-4],[-13,0],[-11,29],[-9,36],[-10,18],[-17,9],[-17,-3],[-10,-31],[-7,-18],[-12,-41],[-21,-58],[-10,-21]],[[75453,67833],[-1,24],[3,70],[-10,17],[-31,17],[-35,23],[-17,25],[-9,8],[-13,-4],[-21,-26],[-20,-30],[-16,-3],[-16,15],[-16,18],[-53,26],[-24,4],[-42,-5],[-35,6],[-5,8],[0,14],[5,29],[3,27],[-4,16],[-35,20],[-33,14],[-34,5],[-23,-10],[-23,-22],[-18,-39],[-27,-17],[-32,-29],[-16,-28],[-24,-58],[-34,-72],[-31,-71],[-16,-68],[-21,-43],[-22,-31],[-16,-85]],[[71610,72290],[-21,-9],[-42,-5],[-14,1],[-21,1],[-42,19],[-57,25],[-58,35],[-32,28]],[[70705,73169],[-4,5],[-8,15],[-34,46],[-1,12],[52,45],[31,18],[16,13],[3,-2],[8,-22],[20,-13],[14,3]],[[84544,74886],[-3,5],[-23,-51],[-45,-48],[-96,-10],[-30,34],[-11,-24],[-9,-31],[-25,-11],[-39,-2],[-22,-21],[-12,-23],[-54,-8],[-20,-31],[-34,-11],[-140,-135],[-30,-57],[-29,-66],[-21,-34],[-18,-23],[-16,-10],[-17,-23],[-16,-3],[-17,11],[-19,-4],[-12,-28],[10,-36],[-5,-16],[-37,-19],[-55,-13],[-23,-24],[-8,-14],[-12,-7],[-12,47],[-4,62],[23,15],[20,8],[116,86],[-14,64],[10,28],[26,45],[17,23],[-10,8],[-75,-15],[-44,1],[-22,5],[7,39],[-4,38],[-5,15],[38,44],[18,11],[13,-1],[-1,27],[-11,40],[12,52],[79,61],[19,55],[31,51],[58,128],[4,22],[16,60],[3,24],[-26,35],[-11,49],[-78,89],[-7,76],[-7,-3],[-12,-53],[-10,-18],[-36,-1],[-18,20],[-100,13],[-25,-34],[-23,-53],[-22,-38],[-23,-20],[-19,-35],[-81,-206],[-31,-16],[-144,-124],[-72,-49],[-56,-87],[-19,-52],[-17,-58],[-10,-88],[-51,-107],[-18,-23],[-18,-9],[-23,3],[-21,-7],[-35,10],[-43,-34],[-48,-29],[-42,73],[-30,19],[-48,-21],[-23,-33],[-47,-162],[-17,-93],[1,-38],[27,-116],[31,-64],[69,-74],[147,-51],[34,18],[37,0],[39,-48],[24,-80],[3,-55],[0,-19],[9,-16],[5,-27],[-15,-23],[-12,-12],[-10,-84],[0,-94],[12,-31],[32,-44],[49,-36],[45,-8],[86,17],[35,57],[-2,24],[1,32],[76,83],[43,74],[-7,19],[-8,13],[8,8],[23,5],[106,76],[83,-62],[47,-72],[47,-13],[33,-36],[37,-32],[49,-2],[41,-7],[13,30],[13,19],[14,-4],[17,-38],[47,-30],[43,2],[30,11],[18,-14],[-26,-49],[4,-79],[-20,-25],[-19,-40],[11,-26],[10,-12],[-1,-32],[-17,-18],[-32,-48],[-19,1],[-9,9],[-6,18],[-4,27],[-12,18],[-31,7],[-33,-6],[-73,-71],[-71,-57],[-75,-45],[-25,-28],[-18,-8],[-30,22],[-19,-2],[-4,-14],[24,-40],[6,-31],[-3,-23],[-13,-11],[-20,18],[-18,-25],[-8,-42],[0,-99],[-12,-22],[-33,-12],[-35,-32],[-13,15],[-5,17],[4,46],[-4,22],[-16,-1],[-25,-13],[-18,-31],[-6,-18],[24,-58],[23,-6],[6,-13],[-19,-29],[-45,-42],[-8,-36],[-13,-34],[-19,-27],[-13,-28],[-15,-15],[-25,-17],[-31,-68],[-23,-65],[-27,-32],[-21,-109],[-38,-58],[-14,-94],[10,-58],[41,1],[21,-21],[44,-76],[52,-49],[53,-28],[66,-71],[19,-29],[15,-61],[29,-174],[20,-86],[2,-46],[31,-85],[33,-146],[37,-127],[8,-99],[-13,-46],[1,-59],[37,-55],[85,-63],[13,-18],[17,-31],[0,-95],[13,-31],[12,-18],[51,-41],[21,-33],[23,-54],[6,-48],[3,-65],[-29,-2],[-23,7],[-91,84],[-24,3],[-33,-12],[-48,16],[-51,93],[-36,28],[-39,15],[-93,-81],[-24,6],[-7,-9],[-11,-14],[44,-17],[43,26],[42,39],[60,-21],[10,-35],[10,-59],[42,-40],[33,-18],[41,-52],[41,-83],[86,-95],[35,-90],[13,-59],[12,-83],[-30,-27],[-26,-4],[-41,-13],[-30,-29],[-31,-52],[-86,-82],[-17,-51],[-11,-44],[-21,-22],[-54,21],[-50,-2],[-56,-60],[-14,-24],[9,4],[9,8],[25,-9],[40,32],[38,-98],[76,16],[71,82],[27,1],[23,-13],[25,-32],[69,-142],[37,-16],[37,-33],[20,-4],[18,-10],[-49,-52],[-64,-113],[-28,-27],[-19,-30],[51,15],[37,54],[18,13],[15,-12],[7,-67],[-14,-205],[-18,-3],[-17,56],[-20,17],[-18,-11],[-33,0],[-13,-25],[-11,-36],[20,-7],[40,-62],[4,-33],[-11,-22],[-28,9],[34,-46],[-9,-48],[-11,-19],[-20,-12],[-12,-42],[18,-69],[18,-89],[2,-43],[-28,18],[-43,-54],[-23,-4],[-16,71],[-19,-11],[-13,-21],[-18,-77],[-21,-69],[-19,-19],[-22,5],[-18,-2],[5,-18],[19,-23],[0,-27],[-41,-84],[-7,-33],[1,-28],[-21,-34],[11,-57],[-6,-40],[-19,-54],[-19,-36],[-24,-58],[-29,-33],[-39,-122],[-11,-61],[-3,-63],[-13,-21],[-20,-28],[-24,14],[-1,42],[-10,4],[-6,27],[-2,35],[3,28],[-10,-8],[-6,-33],[-16,-27],[-16,11],[-18,22],[1,-32],[9,-31],[4,-32],[24,-6],[17,-37],[13,-55],[2,-21],[10,-25],[1,-21],[-23,-20],[-29,-36],[-35,-63],[-29,-42],[-26,0],[-15,5],[-23,24],[-26,10],[35,-85],[19,-15],[24,3],[23,32],[33,-3],[8,-49],[-9,-55],[-18,-72],[-3,-62],[22,-88],[1,-27],[-9,-13],[-26,23],[-21,29],[-22,-7],[-22,12],[-23,-10],[-10,-21],[7,-34],[20,-28],[12,-43],[-14,-15],[-58,10],[-14,-8],[-17,-47],[11,-71],[-13,-43],[-24,-11],[-32,-35],[-19,-8],[1,-15],[14,-16],[8,-21],[-18,-72],[-26,-23],[-42,12],[-32,-17],[-28,31],[-30,1],[-20,-39],[-2,-45],[-20,-4],[-11,3],[-15,-3],[2,-24],[8,-21],[41,-10],[7,-30],[2,-47],[-43,-80],[-18,-54],[-27,1],[-20,-43],[-11,-60],[-14,12],[-31,-9],[-10,-28],[8,-12],[1,-20],[-13,-67],[-14,-18],[-6,27],[-4,42],[-11,3],[-18,-39],[-22,-28],[-18,-11],[-14,26],[-34,13],[-13,-112],[-29,-40],[-13,-13],[-23,-4],[15,-15],[5,-29],[-9,-28],[-23,-6],[-13,-22],[-5,-100],[-14,-35],[-35,-2],[-26,23],[-8,-19],[-4,-17],[-14,-18],[-26,-5],[-59,-45],[-26,13],[-32,17],[-23,-17],[-7,-34],[-10,-26],[-32,0],[-26,32],[-26,24],[-29,-20],[-22,-42],[-27,-14],[-5,-26],[-12,-13],[-29,5],[-11,65],[-16,9],[-16,-32],[-6,-26],[-8,-19],[3,-53],[-16,-1],[-21,32],[-23,6],[-20,-30]],[[81740,64827],[-11,8],[-11,6],[-18,0],[-7,-8],[-13,-5],[-9,-16],[-1,-2]],[[81670,64810],[-23,11],[-29,44],[-20,73],[-26,39],[-12,35],[-4,62],[-5,29],[2,33],[7,29],[-28,-15],[-20,-27],[4,-34],[-5,-32],[-31,-16],[2,-14],[2,-14],[24,-43],[5,-36],[10,-20],[19,-56],[-1,-110],[11,-31],[-4,-30],[-7,-42],[-1,0],[-6,12]],[[81534,64657],[-9,-2],[-3,-14],[-1,-13]],[[81521,64628],[-1,-1],[-16,-9],[-14,-8],[-11,-11],[-17,-32],[-33,-8],[-16,76],[-23,-51],[-6,-104],[-9,-18],[-14,-15],[-26,37],[-23,-25],[-18,-25],[-8,-22],[-13,-25],[-25,24],[-21,36],[5,27],[-2,17],[-10,14],[-10,-2],[5,-35],[4,-67],[-10,-19],[-14,-15],[-31,12],[-21,25],[-26,21],[-22,4],[-5,-42],[-15,-35],[-13,-4],[-14,6],[-18,-37],[-8,-27],[-22,-29],[-58,-13],[-21,-29],[-27,5],[-21,-7],[-13,2],[-10,15],[-13,0],[-5,-47],[-33,-20],[-30,-5],[-33,-62],[-24,-37],[-17,-4],[-13,13],[-7,56],[-6,6],[-4,-52],[-6,-43],[-12,-24],[-38,-54],[-11,-54],[7,-49],[51,-12],[7,-27],[-5,-22],[-13,-19],[-3,-28],[55,-88],[2,-34],[-9,-19],[-10,-41],[-29,-35],[-62,-18],[-51,18],[-16,40],[1,28],[13,-8],[14,3],[-4,26],[-6,15],[-24,23],[-19,62],[4,51],[-11,40],[-11,34],[-12,20],[-6,25],[12,78],[-7,45],[22,56],[6,63],[39,22],[3,60],[-29,2],[-19,44],[-5,-18],[-15,-2],[-26,84],[-8,11],[-12,2],[6,-90],[-30,-33],[-25,-15],[-35,-6],[-20,-10],[-18,8],[4,27],[10,33],[-9,27],[-20,20],[-30,-1],[-21,6],[-20,-2],[-8,12],[-19,42],[-17,26],[-7,26],[7,31],[-6,18],[-32,2],[1,-43],[3,-52],[9,-39],[-6,-22],[-16,-15],[-17,42],[-8,10],[-9,-2],[-6,-41],[-15,-37],[-28,4],[-22,-23],[-26,-10]],[[80802,63359],[13,-26],[9,-37],[8,-68],[4,-63],[-28,-40],[-25,-16],[-50,-154],[-11,-48],[-8,-21],[-3,-21],[1,-21],[-13,-74],[-12,-91],[-7,-37],[-14,-28],[-19,-15],[-11,-2],[-11,-8],[-27,-49],[-30,-38],[5,-17],[0,-16],[-13,-18],[-14,3],[-42,-14],[-16,-28],[-16,-51],[-6,-7],[-25,-12],[-20,-5],[-33,36],[-16,11],[-44,15],[-43,24],[-30,28],[-61,69],[-7,123],[-11,67],[0,24],[4,206],[4,22],[8,20],[27,46],[31,37],[44,76],[33,35],[27,50],[-16,-2],[-12,6],[12,43],[12,23],[14,12],[29,-9],[27,9],[19,38],[19,8],[71,-12],[49,17],[24,35],[12,2],[36,-10],[14,-37],[-1,25],[1,23],[7,-2],[47,-45],[0,55],[3,15],[15,23],[7,-1],[19,-44],[17,-26],[23,-13]],[[81534,64657],[6,-13],[0,-1],[-13,-11],[-4,-3],[-2,-1]],[[81740,64827],[1,-2],[6,-22],[-2,-24],[11,-12],[3,-23],[-12,-13],[-1,-28],[-6,-17],[-36,30],[-29,16],[-27,-6],[-9,18],[-2,18],[31,32],[2,16]],[[81730,64637],[-7,-9],[-19,42],[-1,14],[15,2],[16,-19],[0,-17],[-4,-13]],[[81665,64637],[-33,0],[-7,5],[-4,13],[12,22],[45,30],[-11,-32],[-2,-38]],[[19644,36209],[-43,-18],[2,32],[11,27],[31,-16],[15,-3],[-16,-22]],[[28110,32461],[-50,-12],[-2,3],[3,10],[11,18],[14,21],[3,1],[5,-2],[6,-4],[15,-14],[4,-10],[-1,-8],[-8,-3]],[[30691,41759],[5,-66],[38,-87],[12,-99],[9,-13],[52,-49],[1,-12],[-8,-18],[-7,-24],[5,-34],[9,-46],[4,-42],[5,-44],[6,-68],[4,-61],[13,-90],[3,-56],[0,-34],[10,-33],[20,-39],[28,-39],[22,-47],[16,-31],[21,-26],[15,-23],[6,-16],[2,-13],[-6,-13],[-25,-61],[-34,-92],[0,-12],[33,-66],[5,-27],[0,-37],[-11,-45],[-35,-14],[-8,-12],[-1,-15],[8,-19],[-1,-44],[13,-49],[-7,-16],[-13,-23],[0,-22],[4,-24],[14,-20],[54,-69],[4,-9],[-1,-7],[-21,-46],[-2,-28],[1,-47],[3,-30],[7,-12],[27,-14],[34,-105],[32,-98],[0,-85],[3,-98],[21,-78],[3,-62],[6,-70],[25,-43],[10,-85],[2,-45],[-1,-29],[19,-92],[2,-79],[-5,-57],[1,-32],[2,-22],[17,-20],[7,-13],[24,-5],[35,-2],[61,21],[46,20]],[[31334,38697],[52,-104],[-22,-140],[-36,-224],[-28,-174],[-5,-23],[-5,-34],[-60,-49],[-88,-71],[-44,-38],[-57,-48],[-13,-39],[-17,-22],[-18,-27],[-6,-30],[-17,-19],[-15,-68],[0,-52],[9,-35],[17,-15],[6,-43],[5,-30],[12,-23],[-3,-19],[-10,-14],[-18,-8],[-12,-43],[-15,-105],[-2,-38],[16,-96],[9,-51],[23,-187],[4,-51],[-32,-71],[-13,-43],[-5,-38],[0,-30],[3,-28],[27,-87],[31,-79],[15,-41],[0,-55],[-7,-31],[-17,-12],[-36,-21],[-16,-32],[-16,-5],[-16,25],[-17,-6],[-21,-22],[-8,-53],[-19,-92],[-16,-25],[-12,-70],[-21,-100],[-10,-60],[-5,-44],[-22,-28],[-25,-56],[-19,-55],[-7,-15],[-15,-5],[-10,-49],[-36,-74],[-9,-85],[-13,-46],[-2,-82],[-20,-151],[-4,-33],[-20,-26],[-27,-58],[-8,-43],[12,-128],[15,-128],[1,-61],[-6,-82],[-4,-36],[10,-14],[17,-10],[6,-31],[-13,-22],[-5,-40],[-14,-44],[-40,-17],[-14,16],[-5,-15],[2,-31],[-9,-37],[-21,-100],[-13,-90],[-8,-39],[3,-33],[7,-19],[0,-18],[-11,-21],[-11,-35],[-11,-5],[-12,10],[-13,-21],[-3,-43],[-7,-54],[-3,-64],[-5,-81],[16,-56],[21,-101],[16,-25],[17,2],[14,-20],[8,-24],[-11,-42],[-18,-7],[-2,-24],[6,-53],[6,-52],[18,-25],[7,-70],[17,-23],[-2,-89],[17,-105],[18,-30],[8,-14],[-5,-46],[-15,-36],[-3,-58],[6,-43],[18,-40],[14,-4],[20,16],[21,-19],[3,-35],[3,-31],[-11,-41],[-12,-76],[-3,-75],[3,-114],[6,-89],[1,-56],[1,-25],[-7,-17],[-19,-9],[-16,-4],[-13,-14],[-3,-28],[-11,-47],[-11,-35],[-19,-51],[-12,-53],[-10,-35],[1,-24],[-7,-46],[-8,-39],[-15,-129],[-20,-27],[-17,-13],[-8,-18],[6,-35],[18,-10],[6,-29],[-3,-44],[12,-41],[-1,-50],[11,-93],[-10,-62],[3,-53],[0,-52],[-15,-41],[-29,-8],[-16,-38],[-28,-41],[-3,-33],[-5,-30],[-11,-11],[-18,0],[-14,-5],[-20,-38],[-22,-21],[-5,-32],[2,-38],[-11,-23],[-15,-44],[-9,-48],[9,-44],[10,-78],[2,-34],[-13,-65],[-10,-42],[10,-53],[8,-30],[-8,-66],[-6,-41],[5,-76],[20,-85],[19,-75],[2,-88],[5,-70],[9,-76],[19,-29],[15,-26],[-3,-36],[-11,-44],[-15,-33],[-38,-11],[-30,-30],[-25,-21],[-19,-25],[-13,-26],[-7,-29],[5,-127],[-3,-47],[-13,-67],[-12,-53],[-5,-16],[-1,-24],[-2,-22],[-14,-5],[-18,10],[-11,-6],[-8,-18],[7,-41],[7,-73],[9,-31],[-2,-24],[-4,-53],[-12,-42],[-17,0],[-10,-18],[-5,-30],[5,-39],[22,-31],[7,-21],[-3,-27],[-17,-11],[-10,-22],[-9,-49],[-13,-55],[-13,-41],[-3,-56],[19,-60],[-2,-59],[-2,-171],[-1,-58],[5,-97],[-7,-26],[-4,-25],[19,-71],[21,-113],[5,-45],[-3,-31],[-28,-27],[-23,-11],[-13,19],[-10,-8],[-10,-33],[-12,-27],[-5,-27],[13,-34],[7,-66],[-15,-29],[-10,-31],[4,-41],[4,-74],[-9,-123],[12,-44],[14,-21],[43,-25],[32,-12],[9,-41],[-4,-33],[-15,-16],[-24,-14],[0,-53],[20,-51],[23,-36],[5,-32],[-1,-34],[-16,-28],[22,-60],[10,-41],[-10,-32],[-15,-47],[-12,-23],[0,-26],[-5,-52],[-1,-51],[4,-31],[137,-24],[31,-9],[18,-31],[-3,-38],[-17,-40],[-11,-76],[-27,-13],[-27,20],[-29,-7],[-26,-5],[-36,-2],[-48,-10],[-30,11],[-2,-28],[8,-48],[64,-15],[60,-28],[18,-51],[24,-58],[25,-36],[1,-58],[-39,-61],[-5,-43],[-51,-13],[-15,-25],[-7,-84],[6,-66],[20,-23],[13,-43],[-15,-51],[-34,-35],[-19,-33],[12,-27],[15,-42],[5,-23],[8,-62],[10,-87],[-1,-42],[-9,-32],[-34,-49],[-24,-23],[-4,-61],[-2,-45],[2,-41],[15,-33],[-1,-33],[-20,-7],[-18,-16],[-17,-58],[-50,-60],[-17,-27],[1,-46],[-20,-65],[-16,-57],[-13,-53],[2,-56],[28,-24],[23,-54],[9,-69],[-17,-79],[-40,-30],[-23,-33],[-7,-25],[6,-83],[-2,-38],[-6,-37],[-10,-28],[-22,-31],[-38,-28],[-32,-19],[-14,-21],[-17,-48],[-15,-52],[3,-65],[-90,-8],[-6,-48],[-20,-38],[-6,-69],[20,-66],[9,-56],[-16,-67],[6,-69],[2,-54],[32,-61],[20,-76],[11,-63],[6,-50],[8,-30],[13,-34],[6,-39],[20,-13],[35,37],[25,25],[17,9],[51,-6],[31,23],[14,-3],[19,-13],[14,-27],[11,-62],[7,-69],[-9,-71],[-14,-16],[-5,-20],[5,-43],[16,-31],[-1,-43],[-17,-99],[-12,-41],[21,-46],[18,-40],[37,-31],[30,-43],[21,-35],[-5,-49],[14,-14],[56,-1],[84,-2],[131,-2],[128,-3],[145,-3],[69,-39],[62,-35],[79,0],[78,-41],[58,-27],[35,-11],[36,-10],[5,-38]],[[30988,21683],[-157,54],[-35,30],[-30,3],[-57,-36],[-32,-88],[-16,-25],[-40,-23],[-40,-5],[-134,-85],[-48,-7],[-33,-23],[-32,-32],[-12,-70],[5,-42],[-36,-152],[-9,-84],[0,-44],[10,-70],[-13,-120],[-25,-26],[-59,-34],[-41,24],[-69,22],[-50,46],[-63,33],[-21,20],[-56,92],[-6,31],[-4,39],[30,56],[16,4],[46,-2],[39,9],[25,-30],[6,-65],[-10,-34],[-10,-22],[3,-16],[28,23],[14,145],[94,72],[31,42],[30,66],[5,18],[2,25],[-20,20],[-44,27],[-142,-137],[-64,-36],[-42,-39],[-50,-71],[-9,-21],[-11,-46],[-5,-52],[-49,24],[-76,74],[-15,28],[15,38],[23,31],[2,107],[6,38],[16,30],[29,33],[14,7],[12,-14],[2,-25],[48,2],[93,94],[38,3],[51,-22],[57,13],[11,10],[11,22],[-42,26],[-41,13],[-115,10],[-25,-10],[-34,-51],[-11,13],[-7,25],[-39,18],[-19,-4],[-18,-24],[3,-37],[-10,-41],[-36,-39],[-25,-64],[1,-49],[-1,-26],[-9,-14],[-19,-16],[-60,11],[-34,52],[-13,35],[-38,39],[83,47],[29,27],[27,61],[20,39],[-14,27],[-17,0],[1,-43],[-18,-36],[-38,17],[-57,-52],[-35,14],[-56,-16],[-28,28],[-6,36],[10,38],[-10,63],[-16,15],[-16,-4],[-7,38],[-17,66],[-8,18],[-8,31],[9,7],[19,-8],[17,-20],[26,-3],[57,-43],[24,10],[13,10],[5,36],[0,34],[10,0],[32,-43],[21,4],[36,-12],[19,5],[34,16],[54,48],[27,49],[14,7],[16,-6],[12,-15],[0,-34],[12,-32],[17,-26],[5,-31],[-3,-32],[-31,-43],[-6,-16],[11,-16],[12,8],[18,21],[10,30],[2,16],[1,22],[-1,27],[-25,76],[-3,18],[0,35],[28,32],[8,25],[2,48],[-15,33],[-61,77],[-101,76],[-12,-8],[-8,-14],[10,-10],[13,-5],[90,-63],[24,-37],[15,-10],[19,-24],[-5,-36],[-91,-34],[-72,-76],[-55,-46],[-37,17],[-18,47],[-19,60],[-28,35],[-16,-4],[-13,7],[-11,18],[-21,-15],[-49,42],[-13,18],[35,58],[39,-22],[9,165],[-12,37],[-51,41],[-24,-5],[-34,5],[-23,19],[-26,8],[-22,11],[-29,25],[-34,14],[-47,104],[-20,55],[-11,60],[72,2],[42,10],[10,25],[-15,47],[-20,38],[15,36],[21,27],[22,-12],[56,-61],[9,-41],[39,-126],[10,-12],[4,-11],[82,-71],[11,1],[-5,59],[23,81],[23,26],[11,0],[1,13],[-22,34],[11,44],[-7,1],[-19,-28],[-40,-140],[-24,-26],[-33,64],[-18,45],[-10,17],[4,71],[65,-14],[-22,23],[-77,42],[-19,20],[-14,7],[-25,49],[-32,41],[55,74],[27,52],[88,-27],[17,16],[-15,38],[-17,-12],[-27,24],[-43,72],[2,36],[7,67],[17,14],[36,14],[41,-22],[17,-17],[16,8],[-16,49],[-27,19],[-29,35],[3,39],[9,33],[8,35],[5,50],[-3,39],[8,17],[13,8],[1,15],[-26,-3],[-9,-49],[-3,-45],[-19,-35],[-7,-41],[-5,-48],[-10,-55],[-23,21],[-13,21],[-5,15],[3,28],[-6,175],[-1,147],[11,114],[32,45],[14,13],[13,-6],[20,1],[14,16],[-45,28],[-28,-16],[-20,-22],[-37,17],[-7,58],[-21,51],[-4,65],[2,93],[51,-8],[42,-18],[110,2],[90,-90],[40,12],[-2,18],[-30,22],[-19,51],[-11,14],[-6,31],[-1,35],[-23,129],[-9,-3],[-9,-44],[-18,-74],[-26,-36],[-40,-15],[-40,-8],[-34,14],[-8,31],[1,35],[-15,17],[-39,16],[-11,8],[-13,32],[19,49],[15,29],[18,-6],[18,-13],[23,-38],[22,-7],[25,30],[5,21],[-16,13],[-14,5],[-23,16],[-44,58],[22,59],[52,68],[16,16],[-14,57],[16,63],[-16,51],[-29,56],[-39,12],[-8,-16],[-2,-23],[6,-17],[-3,-12],[-9,0],[-50,12],[-33,37],[-54,34],[-7,26],[-6,39],[19,67],[-10,1],[-35,-52],[-53,-27],[-40,-9],[-17,-20],[-7,-18],[11,-10],[22,-2],[17,-65],[-4,-25],[-8,-16],[-19,-4],[-38,45],[-20,51],[0,40],[14,54],[61,74],[17,31],[36,34],[48,78],[41,43],[-20,36],[-21,53],[2,75],[84,30],[37,-13],[47,3],[26,18],[18,3],[40,21],[17,29],[4,22],[0,20],[-4,23],[-7,62],[7,21],[17,24],[22,8],[10,-2],[27,-22],[-6,-32],[-10,-39],[-22,-153],[-11,-35],[-17,-30],[12,-62],[-18,-44],[-76,-47],[-10,-2],[6,-17],[44,4],[34,10],[34,39],[11,60],[14,117],[18,17],[22,3],[11,-27],[-4,-62],[0,-60],[-28,-176],[-35,-71],[-4,-19],[2,-22],[27,3],[21,38],[15,49],[15,68],[-2,49],[5,30],[6,100],[11,50],[-1,71],[-19,26],[-26,16],[-7,43],[14,86],[50,-3],[48,59],[31,21],[18,-5],[62,-56],[12,-1],[-2,21],[-9,14],[-25,19],[-45,60],[-61,10],[11,78],[12,72],[30,9],[49,24],[94,107],[17,81],[4,91],[-45,23],[-48,60],[-39,31],[-35,40],[7,59],[5,97],[43,21],[20,132],[-29,102],[7,76],[38,64],[6,45],[11,49],[33,5],[1,27],[-3,49],[-22,58],[-1,80],[21,94],[33,-6],[6,4],[-23,57],[-19,63],[3,25],[18,21],[21,12],[23,-32],[33,-103],[5,27],[-13,104],[-11,130],[-35,-17],[-31,9],[-12,20],[-12,30],[11,35],[11,27],[23,33],[49,12],[35,42],[11,87],[-11,-9],[-19,-76],[-32,-26],[-16,4],[-19,14],[-38,67],[-21,15],[-20,2],[-17,-17],[-44,-117],[-19,-20],[-78,-9],[-28,14],[-31,17],[3,29],[10,31],[17,16],[1,17],[-24,5],[-28,32],[-13,41],[-5,73],[-25,116],[-5,83],[17,59],[38,232],[12,119],[20,104],[0,68],[52,63],[20,38],[45,211],[6,114],[-71,346],[-11,66],[-3,82],[17,136],[2,52],[-15,75],[-40,122],[-1,62],[17,64],[-16,80],[8,49],[9,39],[63,-21],[29,10],[15,23],[12,65],[6,103],[4,44],[5,64],[31,26],[11,61],[26,84],[26,238],[27,58],[27,68],[-11,100],[18,46],[15,34],[14,61],[19,58],[46,83],[11,101],[35,176],[7,112],[11,76],[-3,71],[21,86],[20,73],[7,40],[46,97],[8,76],[-17,52],[0,81],[-13,112],[30,41],[12,31],[39,179],[-3,70],[11,87],[-25,103],[-4,231],[-14,179],[-23,188],[2,105],[-15,131],[0,76],[11,171],[74,108],[15,121],[9,163],[-3,119],[-8,54],[-36,87],[-10,157],[7,41],[31,44],[21,61],[11,95],[23,75],[9,181],[18,144],[10,50],[30,63],[5,17],[5,48],[-2,113],[5,70],[23,136],[3,63],[26,141],[6,101],[12,53],[-5,60],[8,134],[-18,76],[-4,44],[22,137],[16,34],[24,64],[11,72],[2,45],[-32,227],[-4,78],[7,180],[11,116],[-3,93],[3,48],[6,60],[21,72],[5,52],[-7,21],[-26,27],[-21,66],[-2,65],[7,47],[2,67],[31,13],[17,37],[16,70],[20,169],[9,209],[12,125],[8,63],[7,130],[12,85],[2,78],[-2,60],[-30,304],[0,112],[13,174],[0,244],[-2,57],[-12,54],[-3,72],[-18,127],[-17,253],[0,134],[-7,114],[-16,30]],[[30936,21513],[-1,-171],[0,-169],[-1,-157],[0,-158],[0,-152],[-1,-156],[-2,-175],[-2,-130]],[[30929,20245],[-41,0],[-12,-13],[-66,-19],[-112,29],[-28,27],[-38,58],[-13,-16],[-36,-25],[-36,-19],[-30,-2],[-28,24],[-6,12],[-6,3],[-60,-34],[-66,34],[-53,21],[-84,12],[-59,43],[-109,-4],[-19,14],[-7,42],[6,20],[23,11],[6,24],[24,-6],[30,-31],[9,1],[20,29],[30,26],[11,3],[54,-32],[22,4],[32,14],[5,12],[5,22],[9,13],[28,6],[27,-12],[3,-38],[-4,-41],[36,-11],[43,1],[30,-15],[4,25],[-48,65],[-20,40],[-26,24],[-35,12],[-28,75],[1,66],[-3,64],[62,36],[-14,55],[21,41],[25,16],[24,-153],[18,-54],[-23,-11],[-47,1],[27,-76],[43,-25],[37,-56],[1,-41],[20,-18],[50,-1],[34,8],[16,27],[19,9],[33,-34],[57,-25],[15,-17],[11,-30],[0,-31],[3,-16],[17,8],[23,42],[12,15],[14,7],[8,10],[1,12],[-42,31],[-220,141],[-28,56],[-18,71],[1,73],[16,23],[39,29],[72,41],[84,58],[10,11],[-1,37],[-10,25],[-33,18],[-35,4],[-33,-1],[-33,-8],[-60,-39],[-34,2],[-32,21],[-24,42],[-13,57],[0,36],[5,33],[15,35],[19,14],[18,-2],[17,8],[10,12],[8,16],[-3,13],[-6,12],[-27,24],[-10,23],[-23,38],[12,10],[41,6],[28,-26],[26,-30],[16,0],[15,13],[33,38],[28,49],[25,56],[21,34],[23,3],[69,-105],[24,-4],[80,57],[9,-3],[28,-29],[8,-12]],[[31366,20072],[-8,-22],[-17,-29],[-24,-23],[-23,-6],[-16,12],[-9,20],[-4,21],[-5,11],[-9,2],[-11,0],[-14,-8],[-29,-29],[-13,-8],[-9,-2],[-84,22],[-8,9],[-10,19],[-11,59],[-35,52],[54,29],[65,0],[125,-22],[49,-5],[39,-50],[6,-30],[1,-22]],[[29507,26874],[-21,-12],[-19,-3],[-20,9],[-35,-1],[-34,22],[-32,32],[-9,19],[3,26],[24,61],[22,116],[15,166],[-12,63],[1,26],[6,31],[2,33],[-1,32],[3,30],[24,64],[4,29],[0,31],[11,64],[-3,21],[-9,18],[7,16],[85,-47],[56,-11],[3,-49],[11,-38],[7,-68],[8,-16],[-4,-49],[-26,-21],[2,-45],[15,-42],[-22,-16],[-23,-9],[-6,-11],[-17,-10],[-20,-23],[6,-21],[26,-48],[29,-33],[16,-49],[21,-51],[-10,-33],[-19,-46],[-31,-31],[-27,-19],[3,-76],[-10,-31]],[[29312,23532],[2,-85],[-4,-85],[-11,-104],[2,-21],[12,-5],[4,-13],[-4,-55],[-7,-42],[-13,-35],[-7,-41],[-7,-9],[-30,-7],[-17,4],[-13,47],[-4,29],[1,38],[-16,51],[-1,19],[6,34],[14,16],[2,52],[6,15],[15,21],[2,9],[-1,8],[-5,1],[-61,-64],[-5,-18],[-3,-24],[-1,-84],[-10,-49],[-10,-9],[-28,-2],[-37,5],[-42,44],[-27,-12],[-6,54],[14,44],[51,-4],[8,77],[-16,18],[-18,32],[-10,28],[9,21],[30,31],[15,3],[15,-17],[36,13],[-2,49],[-32,22],[7,37],[41,35],[24,36],[2,41],[-10,40],[3,16],[20,34],[29,16],[13,-2],[26,-24],[24,-3],[5,-7],[5,-26],[15,-193]],[[29025,23753],[-32,-1],[-7,103],[36,149],[3,56],[-12,43],[-5,35],[3,14],[47,30],[14,-32],[18,-83],[33,-119],[-1,-114],[-18,-28],[-58,-29],[-21,-24]],[[29337,21357],[5,-5],[10,1],[16,-9],[58,-11],[52,-27],[27,-26],[35,-7],[29,-33],[13,-8],[15,-2],[39,-60],[2,-7],[44,-47],[2,-7],[-25,-3],[-51,22],[-25,1],[-19,7],[-4,4],[-4,27],[-5,13],[-49,63],[-21,14],[-35,12],[-40,-8],[-28,8],[-9,-3],[-40,50],[-40,42],[-17,50],[-25,38],[-1,11],[12,9],[27,-22],[27,-37],[15,-14],[10,-36]],[[29287,23852],[-6,-14],[-34,9],[-59,-15],[-25,52],[-11,83],[-8,18],[-14,47],[-8,31],[-15,48],[-6,51],[-3,16],[13,30],[62,29],[22,48],[19,-6],[-5,-98],[11,-33],[22,-28],[3,-11],[4,-35],[11,-53],[13,-26],[4,-15],[0,-13],[-5,-19],[15,-96]],[[29743,21035],[8,-46],[4,-9],[20,7],[34,4],[57,-17],[6,-6],[24,-51],[19,-22],[28,-47],[-28,-32],[-17,-45],[-1,-23],[-11,-13],[-17,-14],[-26,-27],[-31,-3],[-31,-14],[-15,-12],[-8,-1],[-10,7],[-11,13],[-4,15],[22,14],[28,50],[5,52],[-30,9],[-18,-7],[-14,0],[-15,16],[-9,-24],[-4,-24],[4,-36],[-3,-11],[-10,-7],[-26,14],[-26,24],[-2,14],[6,48],[-1,25],[-5,37],[-3,3],[-10,0],[-31,-7],[-31,46],[-16,49],[-57,14],[44,69],[67,10],[22,-35],[74,-24],[-4,37],[1,13],[10,16],[6,2],[9,-12],[14,-5],[7,-11],[6,-23]],[[29216,22102],[11,-112],[9,-16],[28,-8],[31,-57],[1,-16],[-37,-96],[-8,-69],[-43,5],[-19,68],[-27,66],[-10,77],[-15,66],[27,38],[26,-8],[1,50],[25,12]],[[30638,20207],[223,-57],[68,35],[55,-1],[16,-48],[-55,-49],[-5,-16],[8,-13],[57,-8],[14,-16],[13,-20],[-11,-31],[-1,-14],[6,-14],[42,-46],[18,-24],[9,-23],[3,-40],[-1,-32],[-9,-4],[-21,10],[-20,18],[-18,46],[-12,10],[-36,9],[-35,22],[-28,-1],[-25,10],[-23,-9],[-8,16],[-10,30],[0,14],[12,48],[0,13],[-7,1],[-26,-10],[-11,7],[-29,35],[-11,7],[-29,3],[-17,-62],[-1,-16],[17,-39],[33,-61],[-17,-1],[-47,19],[-13,11],[-14,31],[-28,18],[-10,11],[-3,13],[-1,40],[-6,6],[-40,-11],[-8,10],[-3,17],[-6,9],[-26,16],[-2,9],[11,12],[7,28],[10,104],[51,-22]],[[30169,20718],[62,-46],[40,0],[0,-28],[5,-49],[-6,-20],[-16,-20],[-9,-29],[-7,-5],[-45,35],[-47,48],[-24,-9],[-31,12],[-25,-3],[-16,-27],[-36,-14],[-7,54],[-33,51],[-33,41],[18,63],[22,10],[20,21],[81,-22],[42,-19],[45,-44]],[[29518,26270],[-14,-25],[-22,-4],[-33,-29],[-4,-25],[-1,-30],[23,-37],[11,-43],[14,-64],[10,-61],[-1,-19],[2,-31],[17,-50],[1,-22],[-1,-22],[-7,-41],[-5,-5],[-17,-4],[-1,-25],[-4,-8],[-46,-3],[-23,12],[2,74],[-29,30],[-20,49],[-23,85],[-19,27],[-22,67],[-33,58],[38,36],[-6,64],[22,22],[33,23],[25,-18],[22,6],[10,16],[-3,65],[7,52],[25,26],[26,3],[10,-29],[13,-28],[32,-23],[-1,-29],[-8,-40]],[[29726,26048],[-68,-46],[-33,15],[-13,34],[-7,29],[-7,48],[12,26],[24,37],[10,24],[4,28],[-2,27],[4,25],[14,9],[50,-28],[52,-43],[18,-29],[3,-23],[-22,-52],[-15,-42],[-24,-39]],[[29155,25984],[-7,-9],[-9,3],[-7,18],[-5,31],[10,12],[7,0],[9,-17],[4,-26],[-2,-12]],[[29082,22649],[-7,-53],[-23,5],[-7,13],[-4,34],[-7,16],[9,34],[7,37],[-2,29],[34,-2],[41,-7],[11,-8],[-12,-25],[-12,-16],[-25,-9],[-3,-48]],[[29137,23711],[-3,-46],[-41,-88],[-35,-52],[-32,-41],[-21,0],[-17,20],[19,33],[24,32],[-8,42],[-7,13],[-10,4],[-17,22],[5,33],[10,15],[14,12],[12,-7],[54,23],[17,18],[32,4],[4,-37]],[[29135,24286],[-20,-7],[-3,19],[-18,31],[16,21],[31,21],[24,-2],[22,-17],[3,-19],[-38,-25],[-9,-14],[-8,-8]],[[29258,26723],[-39,-10],[-9,17],[0,15],[7,12],[20,7],[13,-9],[7,-15],[2,-12],[-1,-5]],[[29546,26024],[-9,-7],[-8,1],[-8,20],[-3,26],[-18,39],[-5,18],[0,22],[10,32],[16,9],[10,-2],[13,-37],[3,-40],[4,-42],[-5,-39]],[[29289,22305],[-1,-48],[-8,-15],[-8,-5],[-20,15],[-11,1],[-18,-25],[-16,-13],[-23,3],[-31,17],[-27,-72],[-13,-25],[-27,-33],[-3,39],[17,60],[8,40],[16,60],[31,-22],[44,22],[41,41],[34,1],[12,-23],[3,-18]],[[29151,22870],[-54,-46],[-16,19],[-39,0],[10,50],[4,37],[6,14],[2,32],[12,58],[32,-19],[24,-6],[33,-19],[36,-12],[10,-51],[-34,-23],[-26,-34]],[[29497,26597],[6,-29],[-13,-4],[-19,5],[-10,-23],[-5,-4],[-45,20],[-7,9],[1,29],[48,3],[31,19],[4,-3],[9,-22]],[[29405,21928],[-9,-6],[-30,14],[-16,12],[-24,30],[-3,31],[-11,38],[7,0],[25,-15],[10,-11],[13,-24],[40,-34],[5,-10],[-1,-13],[-6,-12]],[[29357,25523],[-15,-26],[-27,-12],[-27,20],[-32,-9],[-3,43],[12,36],[24,43],[18,58],[-2,81],[14,18],[8,29],[31,18],[7,-61],[-8,-107],[20,-64],[3,-21],[-4,-24],[-19,-22]],[[31229,19648],[-10,-1],[-25,11],[-36,4],[-5,5],[0,8],[4,9],[20,7],[60,-6],[8,-4],[2,-7],[-10,-19],[-8,-7]],[[31535,20029],[-22,-25],[-16,1],[-6,9],[-1,12],[3,12],[7,11],[16,14],[5,2],[24,-14],[-10,-22]],[[30280,20237],[13,-37],[4,-6],[35,-15],[15,9],[37,4],[23,14],[32,7],[38,-90],[-4,-28],[-30,-30],[-20,-6],[-19,9],[2,15],[-4,13],[-13,17],[-12,-1],[-19,-13],[-10,2],[-19,14],[-35,10],[-7,13],[0,19],[-7,9],[-36,31],[-23,25],[-20,4],[-7,-3],[-7,-13],[-17,-11],[-5,2],[-6,9],[-3,14],[7,29],[11,3],[49,-6],[30,-13],[27,0]],[[31308,19713],[-10,-4],[-7,10],[-12,8],[-46,16],[-1,10],[5,14],[9,12],[18,13],[14,32],[7,-3],[6,-13],[11,-44],[14,-32],[-2,-11],[-6,-8]],[[56349,58133],[-11,4],[-25,16],[-29,13],[-36,11],[-35,-26],[-37,-33],[-12,-25],[-10,-14],[-16,2],[-15,-4],[-9,-24],[-13,-26],[-54,-54],[-11,-19],[-7,-20],[0,-21],[5,-44],[0,-55],[-12,-44],[-13,-30],[-16,-11],[-14,-6],[-8,-19],[-28,-100],[-12,-19],[-25,3],[-71,-150],[-7,-45],[-25,-62],[-33,-70],[-29,-34],[-3,-13],[-8,-13],[-18,-16],[-62,-85],[-75,4],[-33,-34],[-32,-15],[-47,-16],[-14,2],[-61,-7],[-70,2],[-27,-12],[-26,-32],[-19,-29],[-3,-9],[3,-12],[0,-9],[49,-70],[12,-34],[-12,-33],[-6,-5],[-1,-2],[-8,-26],[-29,-79],[-44,-93],[-22,-26],[-10,-17],[-11,-62],[-8,-9],[-30,-8],[-60,-6],[-83,-20],[-50,-7],[-31,5],[-43,-42],[-16,-11],[-10,-4],[-43,-41],[-36,-64],[-12,-12],[-51,-27],[-20,-44],[-9,-4],[-32,58],[-23,53],[-10,53],[-2,17],[-6,-3],[-17,-23],[-16,-27],[-7,-51],[-52,-35],[-45,-30],[-20,-37],[-31,-18],[-40,7],[-31,16],[-31,5]],[[54299,56177],[15,46],[6,35],[1,42],[-2,29],[-18,14],[-12,23],[-26,133],[-27,138],[-38,135],[-41,86],[-30,53],[-9,7],[-15,16],[-11,16],[-55,92],[-56,102],[-15,47],[-28,70],[-32,72],[-16,33],[-8,59],[22,54],[23,67],[29,45],[37,3],[61,-18],[67,-7],[65,14],[17,10],[17,-1],[35,-15],[61,3],[32,27],[-34,47],[-37,74],[-34,81],[-21,73],[-19,95],[-18,116],[-11,152],[2,85],[6,61],[18,100],[-12,58],[2,47],[-1,70],[-6,36],[-24,115],[-5,13],[-21,80],[-9,134],[-24,89],[-39,43],[-21,52],[-8,91],[-15,25],[-61,32],[-50,0]],[[54495,53150],[-13,54],[-8,63],[-4,73],[2,19],[-5,22],[0,4],[-7,55],[7,38],[-5,40],[-16,39],[-14,30],[-8,27],[-7,12],[-15,4],[-21,14],[-27,59],[-27,57],[-34,74],[-27,63],[-33,78],[-31,72],[-19,69],[-7,40],[9,4],[13,1],[6,7],[0,19],[-14,54],[-6,70],[-12,42],[-35,66],[-35,49],[-11,26],[-6,36],[-13,231],[-6,65],[-10,29],[-8,13],[-3,16],[1,41],[5,37],[-1,14],[10,32],[0,213],[-5,11],[-6,18],[-10,-1],[-11,2],[-11,31],[-9,39],[3,28],[9,23],[11,20],[13,17],[39,34],[11,17],[7,21],[4,29],[23,109],[33,109],[15,23],[14,72],[20,89],[8,41],[6,41],[10,33],[37,54],[28,96]],[[43008,61604],[-27,-11],[-12,5],[-3,46],[-6,30],[1,14],[63,59],[21,-10],[16,-47],[-11,-26],[-42,-60]],[[43487,60488],[-17,-53],[-36,4],[-19,22],[-22,66],[0,52],[8,44],[-1,39],[3,10],[11,-6],[2,-26],[34,-64],[12,-13],[25,-75]],[[43086,61530],[-22,-13],[-14,1],[-21,21],[7,22],[22,24],[15,5],[12,-43],[1,-17]],[[43634,61196],[23,-11],[8,4],[15,-2],[16,-30],[3,-33],[-8,-40],[-30,-33],[-18,4],[-21,30],[12,60],[0,51]],[[43247,60400],[-21,-22],[-15,10],[-15,23],[-7,33],[6,28],[29,33],[17,-11],[10,-51],[-4,-43]],[[43309,61418],[11,-17],[4,-12],[-17,-7],[-42,22],[-11,-13],[-11,-48],[-21,72],[2,27],[4,8],[30,-19],[51,-13]],[[43642,61439],[-9,-30],[-11,44],[-6,10],[-3,62],[16,19],[8,1],[0,-64],[5,-42]],[[43560,60562],[-8,-2],[-11,26],[2,36],[-1,9],[10,39],[20,-4],[6,-28],[0,-59],[-18,-17]],[[13151,83022],[26,-34],[61,22],[11,-4],[12,-13],[12,-28],[14,-42],[3,-46],[-5,-17],[-11,-18],[-98,-73],[-2,-7],[2,-7],[9,-7],[19,1],[77,18],[5,13],[5,57],[11,31],[0,23],[-7,55],[1,22],[54,5],[33,20],[35,38],[8,-1],[-5,-68],[-5,-21],[-33,-84],[-19,-73],[-9,-73],[-2,-120],[-8,-41],[-15,-25],[-93,-43],[-48,2],[-43,40],[-20,27],[15,33],[10,2],[30,-7],[24,-12],[10,0],[-2,7],[-66,63],[-49,28],[-14,32],[-1,24],[-4,14],[-38,86],[-8,34],[-5,48],[0,49],[10,80],[4,8],[16,-1],[27,-9],[66,-8]],[[13402,82485],[28,-53],[8,-48],[-3,-56],[-45,-22],[-23,17],[-11,-3],[-15,-17],[19,-7],[26,-28],[23,-36],[32,-6],[44,-25],[-33,-45],[-5,-26],[41,-72],[4,-18],[13,-4],[30,6],[4,-6],[0,-15],[-19,-42],[2,-8],[17,-7],[32,0],[8,-41],[-30,-38],[-55,49],[-25,48],[-14,45],[-17,25],[-52,57],[-78,121],[-21,18],[-20,48],[-6,23],[1,15],[7,9],[24,5],[0,24],[-90,42],[-10,8],[-12,30],[7,4],[49,-5],[53,14],[33,11],[13,13],[27,17],[11,-1],[28,-20]],[[14667,81013],[138,-72],[138,-35],[102,-42],[62,-13],[22,-9],[15,-15],[17,-36],[29,-85],[23,-55],[46,-94],[37,-67],[8,-27],[-8,-8],[1,-16],[28,-65],[52,-59],[41,-28],[86,-45],[53,-45],[16,-30],[23,-30],[9,-21],[19,-76],[35,-73],[36,-139],[7,11],[4,42],[4,9],[8,5],[7,-17],[6,-36],[23,-87],[-7,-26],[-7,-2],[-31,11],[-10,-15],[-15,-32],[-10,-13],[-6,6],[-90,31],[-55,29],[-72,45],[-87,47],[-50,33],[-41,33],[-29,29],[-5,24],[1,11],[56,77],[23,42],[9,31],[5,34],[-3,41],[-3,-3],[-5,-40],[-8,-34],[-10,-28],[-6,-9],[-67,-14],[-54,4],[-27,-33],[-8,-4],[-15,11],[-33,44],[-47,36],[5,9],[31,19],[16,26],[-3,5],[-11,-2],[-10,6],[-19,34],[-10,10],[-23,-16],[-10,-1],[-9,23],[13,53],[1,13],[-24,-20],[-8,7],[-7,17],[-7,7],[-19,-3],[-21,15],[-7,-6],[-3,-23],[-7,-6],[-31,39],[-8,1],[-15,-29],[-5,-2],[-9,13],[-4,71],[2,21],[4,7],[28,16],[79,18],[7,13],[-60,-7],[-15,10],[-17,24],[-17,0],[-9,8],[-10,18],[-25,64],[-17,17],[-29,10],[-15,12],[-6,-5],[-6,-19],[-9,-11],[-19,-7],[-19,5],[-14,18],[-8,22],[-4,25],[8,33],[0,14],[-3,15],[-7,12],[-9,10],[-5,-5],[-1,-20],[-5,-14],[-17,-11],[-13,19],[-9,27],[-11,19],[-57,0],[-27,-25],[-13,-2],[-13,6],[-2,13],[12,35],[-3,47],[-3,12],[-27,7],[-4,12],[15,57],[9,11],[12,4],[53,4],[17,-8],[26,-34],[-1,13],[-9,39],[-2,24],[18,26],[-17,8],[-63,6],[1,-17],[5,-24],[-37,-21],[-28,-4],[-26,4],[-21,12],[-37,51],[-23,51],[1,27],[13,29],[16,19],[39,18],[51,1],[57,-23],[143,-104]],[[10833,91964],[39,-9],[126,-19],[119,11],[221,-61],[137,-114],[111,-57],[45,-38],[72,-34],[169,-75],[53,-7],[98,-36],[61,5],[104,-9],[71,-28],[140,-79],[29,-7],[8,6],[-49,78],[-8,7],[-56,29],[-67,14],[-5,6],[-12,27],[4,11],[14,5],[50,-1],[29,5],[4,11],[-21,2],[-25,11],[-30,18],[-17,17],[61,115],[21,-11],[32,26],[58,-17],[10,10],[7,58],[9,14],[16,11],[80,10],[99,-10],[11,5],[-10,39],[-1,16],[6,35],[6,18],[12,10],[46,-8],[15,-17],[15,-30],[16,-17],[49,-17],[6,-11],[-19,-45],[-19,-24],[-41,-62],[-3,-16],[63,28],[71,38],[60,22],[51,4],[36,12],[22,21],[16,22],[31,70],[21,12],[87,-4],[21,2],[13,7],[-2,8],[-19,11],[-25,3],[0,5],[9,12],[14,6],[42,8],[29,-25],[19,-2],[63,28],[98,74],[39,21],[34,3],[29,-13],[22,4],[29,41],[12,23],[17,19],[73,43],[46,10],[29,-8],[33,-18],[28,-7],[37,5],[27,-2],[13,8],[47,50],[15,0],[14,-14],[24,-36],[0,-18],[-31,-44],[-225,-126],[-69,-54],[-34,-20],[-36,-11],[-69,-9],[-27,-11],[-46,-10],[-109,-17],[-21,-9],[-14,-10],[-39,-66],[-18,-22],[-38,-33],[-41,-20],[-58,-7],[-36,-31],[-42,-60],[-33,-42],[-39,-36],[-42,-46],[-11,-25],[13,-32],[7,-10],[42,-18],[16,4],[-15,17],[-35,25],[-5,9],[9,7],[166,-19],[36,19],[12,16],[-2,9],[-45,3],[-10,15],[-7,29],[-2,23],[4,17],[10,22],[49,35],[52,15],[40,20],[22,19],[60,32],[23,27],[13,20],[2,10],[-11,7],[9,18],[43,16],[20,1],[61,-15],[11,-12],[-6,-31],[8,2],[24,39],[13,13],[14,3],[13,-5],[14,-13],[8,-38],[1,-63],[3,-25],[16,43],[11,20],[59,93],[40,51],[46,50],[65,37],[152,61],[85,17],[43,15],[21,13],[14,17],[24,19],[4,-2],[-9,-39],[-6,-12],[-56,-24],[-5,-19],[6,-29],[9,-19],[13,-9],[23,6],[33,23],[41,34],[89,86],[8,16],[22,69],[51,31],[92,35],[22,22],[-80,19],[-17,13],[-3,8],[15,19],[-36,20],[-14,12],[1,36],[11,25],[24,24],[14,5],[36,-15],[30,-18],[104,-85],[42,-42],[25,-33],[58,-102],[26,-59],[21,-61],[21,-44],[20,-27],[100,-107],[52,-45],[44,-28],[49,-22],[57,-16],[38,-2],[60,46],[1,29],[-26,50],[-27,35],[4,21],[35,40],[-3,14],[8,42],[24,-8],[10,1],[13,15],[17,29],[22,24],[27,19],[7,12],[-26,9],[-16,0],[-12,4],[-8,8],[11,9],[57,22],[11,22],[19,14],[23,5],[15,-6],[16,-17],[1,-28],[-7,-46],[-2,-37],[18,-87],[16,-19],[63,-25],[-4,-22],[-72,-91],[-16,-23],[-7,-17],[2,-14],[13,-12],[24,-9],[63,-3],[18,8],[122,3],[22,6],[19,18],[28,44],[31,14],[10,12],[19,52],[10,61],[9,26],[14,16],[19,5],[48,-6],[22,5],[88,-5],[88,4],[92,-11],[58,-12],[54,-20],[104,-46],[41,-26],[145,-113],[43,-23],[79,-22],[274,-49],[34,-13],[72,-51],[50,-30],[59,-29],[73,-25],[144,-37],[24,-13],[26,-3],[30,5],[132,-22],[35,1],[25,-4],[31,-15],[45,-6],[-2,11],[-51,59],[2,9],[21,1],[64,-10],[15,17],[21,-1],[49,-8],[53,-18],[56,-28],[68,-24],[104,-60],[57,-50],[55,-62],[29,-43],[6,-24],[11,-12],[17,0],[7,-9],[-16,-53],[-9,-14],[-12,-9],[-49,-11],[-136,13],[-25,-43],[-76,-37],[-13,-16],[-4,-11],[6,-38],[-10,-12],[-62,-43],[-2,-12],[40,-18],[43,-30],[34,-7],[43,4],[54,-11],[65,-25],[45,-12],[25,2],[35,-4],[44,-12],[59,-4],[129,1],[39,-8],[54,-4],[105,1],[19,1],[33,21],[22,6],[38,1],[108,14],[38,0],[34,11],[45,23],[27,4],[10,-14],[19,-6],[27,2],[52,23],[120,71],[43,0],[32,22],[8,0],[8,-9],[30,-52],[9,-8],[20,-4],[20,-27],[20,-39],[16,-11],[113,-2],[39,-11],[12,-11],[13,-31],[7,-60],[5,-22],[16,-33],[11,-9],[10,9],[28,84],[10,13],[18,-4],[6,-5],[28,-62],[40,-46],[100,-84],[16,-31],[6,-23],[-6,-21],[-17,-18],[-27,-15],[-37,-11],[-34,4],[-32,19],[-10,1],[11,-17],[66,-70],[17,-28],[16,-18],[14,-10],[13,-15],[12,-21],[55,-56],[16,-27],[62,-84],[30,-33],[23,-19],[8,-1],[-5,15],[-79,111],[-41,70],[-5,17],[-3,26],[-2,85],[6,13],[28,11],[35,-39],[13,-5],[9,2],[5,10],[20,-9],[36,-29],[12,0],[-27,54],[-19,27],[-7,19],[18,28],[-10,14],[-45,41],[-24,42],[-21,65],[-2,25],[3,26],[-3,22],[-29,43],[-31,30],[-24,35],[-5,19],[3,50],[19,21],[36,29],[9,30],[-16,31],[-3,14],[10,-2],[70,15],[18,-5],[26,6],[35,19],[28,9],[36,-2],[20,5],[24,8],[13,9],[22,36],[12,6],[37,-4],[21,-8],[9,3],[-1,50],[7,18],[37,37],[39,4],[25,10],[30,20],[21,19],[21,29],[9,38],[-7,11],[-44,15],[-26,-8],[-59,-27],[-61,-34],[-24,-33],[-6,-41],[-12,-18],[-47,17],[-21,0],[-25,-7],[-27,-16],[-29,-25],[-42,-4],[-56,15],[-33,5],[-34,-26],[2,-20],[15,-28],[-15,-17],[-82,-6],[-21,4],[-44,-12],[-17,3],[-12,13],[-89,58],[-9,11],[22,47],[82,126],[9,8],[152,22],[91,23],[169,69],[32,6],[108,46],[45,12],[41,-8],[60,-24],[32,-21],[22,-26],[18,-37],[23,-81],[8,-69],[14,-26],[51,-48],[26,-18],[16,-6],[14,11],[9,2],[7,-4],[7,-31],[9,-3],[30,4],[32,-12],[5,-10],[-7,-37],[9,-16],[40,-34],[37,-12],[44,-6],[81,6],[68,16],[51,26],[42,-29],[84,-71],[50,-51],[41,-23],[84,-29],[19,-15],[31,-2],[43,12],[48,-5],[54,-21],[37,-9],[127,40],[20,2],[47,19],[31,6],[36,0],[27,5],[17,13],[68,-1],[122,-14],[84,-17],[49,-23],[41,-12],[32,-3],[31,4],[30,11],[32,20],[68,11],[11,5],[-1,11],[-14,17],[-39,32],[-27,31],[-5,20],[1,24],[8,14],[16,4],[26,-15],[34,-34],[98,-126],[24,-17],[13,-17],[90,-45],[42,-9],[50,29],[22,17],[11,17],[0,17],[4,24],[-5,14],[-13,20],[-36,26],[-59,34],[-53,10],[-48,-14],[-55,-29],[-23,12],[-68,81],[-17,31],[0,8],[31,-9],[2,9],[-19,40],[-12,13],[-39,62],[-5,18],[24,5],[11,7],[15,-1],[70,-37],[35,17],[83,23],[-33,36],[-7,35],[3,8],[27,5],[53,-29],[25,-4],[19,11],[19,1],[21,-10],[19,-15],[37,-43],[17,-26],[20,-39],[7,-6],[97,-3],[54,35],[-1,-12],[-12,-27],[-68,-105],[1,-13],[36,6],[17,8],[10,13],[9,29],[6,9],[101,49],[29,8],[-18,-53],[-37,-188],[-8,-65],[-8,-23],[-40,-72],[1,-25],[43,-61],[8,-17],[4,-50],[8,-9],[36,-1],[37,16],[44,11],[7,-11],[-24,-60],[1,-6],[42,16],[19,2],[8,-3],[31,-31],[3,-23],[0,-35],[-3,-24],[-11,-14],[-13,-6],[-16,-4],[-14,2],[-44,-5],[-26,6],[-25,19],[-18,5],[-21,-15],[-34,3],[-37,41],[-15,-4],[-5,-6],[0,-9],[17,-27],[132,-143],[20,-29],[4,-43],[3,0],[12,43],[-8,20],[-67,83],[-9,31],[3,8],[18,9],[96,-21],[38,4],[25,15],[13,18],[9,99],[17,63],[-10,57],[-26,90],[-21,54],[-47,53],[-5,20],[53,163],[9,14],[12,6],[42,2],[30,14],[47,-19],[26,-5],[33,17],[72,69],[28,21],[36,40],[43,59],[48,43],[76,40],[47,32],[10,12],[-44,2],[-10,6],[-9,30],[4,57],[-1,31],[-5,28],[-9,25],[-14,23],[-13,13],[-11,4],[-8,-2],[-4,-8],[-12,-54],[-15,-39],[-20,-21],[-43,-14],[-72,-10],[-30,19],[-4,16],[10,62],[25,27],[66,53],[42,42],[1,7],[-39,1],[-9,8],[-9,52],[3,20],[6,22],[27,16],[84,20],[65,23],[2,-8],[-52,-70],[-5,-16],[20,-16],[50,41],[32,34],[6,11],[-30,4],[-1,14],[5,26],[-2,17],[-33,22],[-40,-12],[-34,-23],[-28,-7],[-41,0],[-30,5],[-18,11],[-23,25],[-26,38],[-33,38],[-12,4],[-10,-4],[-22,-37],[-9,-4],[-130,52],[-56,28],[-26,22],[-34,13],[-39,4],[-32,11],[-24,16],[-19,23],[-15,31],[-27,38],[-62,77],[-16,49],[-2,19],[4,49],[58,82],[10,24],[20,17],[29,11],[21,4],[47,-11],[-28,26],[-3,13],[29,45],[-6,2],[-78,-34],[-20,2],[-28,21],[-52,75],[-1,47],[17,65],[5,38],[-15,33],[6,10],[16,9],[7,10],[-7,36],[11,20],[38,38],[36,33],[22,10],[19,-2],[19,-10],[21,-19],[34,-19],[26,-5],[19,10],[33,71],[11,18],[-11,8],[-63,0],[-28,5],[-16,7],[-11,27],[9,15],[62,50],[29,53],[86,73],[87,34],[43,11],[34,3],[15,-5],[18,-36],[4,-39],[47,-48],[38,-4],[24,7],[76,-2],[18,-14],[-1,-15],[-9,-24],[6,-21],[51,-40],[47,-28],[42,-34],[63,-72],[13,-21],[10,-22],[16,-80],[2,-31],[-6,-88],[-5,-17],[-16,-20],[5,-8],[50,-23],[39,-46],[21,-15],[49,-24],[9,-9],[12,-16],[28,-66],[46,-59],[3,-13],[-10,-28],[7,-9],[18,-10],[16,5],[14,21],[15,6],[17,-9],[12,-16],[17,-38],[25,-31],[-2,-10],[-12,-8],[-68,-8],[-37,6],[-35,15],[-25,16],[-22,24],[-9,-2],[-12,-20],[-25,-29],[-16,-27],[18,-12],[89,1],[19,-8],[23,-19],[-26,-31],[-60,-53],[-129,-103],[-38,-26],[9,-8],[14,-2],[45,5],[41,14],[51,-6],[22,-12],[-8,-11],[14,-17],[83,-42],[52,8],[53,40],[41,20],[51,-2],[14,-5],[-5,-10],[-38,-22],[-34,-25],[-3,-7],[42,10],[94,-16],[45,-4],[34,4],[31,-6],[29,-17],[9,-11],[-27,-6],[-25,0],[-22,-11],[-18,-20],[-13,-26],[-8,-33],[-19,-13],[-31,6],[-13,9],[7,13],[-9,2],[-25,-10],[-20,0],[-5,-9],[137,-104],[44,-91],[30,-38],[3,-10],[-20,-26],[-1,-19],[9,-56],[-4,-45],[-14,-78],[13,-25],[29,-22],[18,-27],[12,-10],[9,-22],[10,-14],[12,-6],[8,8],[5,20],[11,19],[31,34],[30,54],[5,17],[-5,42],[4,18],[28,64],[9,44],[8,69],[15,48],[32,40],[56,82],[20,16],[22,8],[40,-2],[28,-26],[39,-49],[49,-44],[90,-60],[25,-23],[51,-59],[21,-59],[15,-84],[13,-50],[10,-17],[5,-25],[-1,-34],[-4,-26],[-7,-19],[-11,-11],[-27,-4],[-34,6],[-9,8],[-18,40],[-7,2],[-31,-29],[-4,-16],[12,-54],[-2,-102],[3,-23],[33,-106],[55,-81],[138,-155],[8,-18],[15,-64],[7,-13],[9,-8],[11,-2],[15,6],[51,48],[44,51],[31,27],[18,2],[18,9],[21,17],[13,18],[7,19],[9,77],[8,37],[21,50],[8,14],[107,127],[9,16],[45,147],[17,67],[2,41],[-6,36],[3,30],[12,24],[13,16],[22,17],[13,24],[7,2],[19,0],[24,-16],[17,-3],[113,19],[0,9],[-66,31],[1,16],[5,21],[21,24],[26,7],[6,15],[0,19],[9,31],[-8,11],[-62,42],[-36,-2],[-9,5],[-31,35],[-11,50],[-1,20],[4,33],[4,9],[-2,15],[-8,20],[0,19],[6,16],[-4,19],[-14,22],[-6,18],[15,56],[1,17],[-15,24],[-10,9],[8,6],[25,2],[31,-7],[36,-18],[43,0],[52,17],[52,9],[91,-4],[21,-5],[90,-52],[70,-26],[32,3],[156,-11],[68,6],[35,-3],[68,-28],[-4,-24],[-30,-39],[-38,-8],[-34,-14],[32,-21],[92,-28],[22,-44],[6,-21],[-11,-18],[6,-10],[21,0],[55,16],[61,-10],[89,-35],[10,-7],[15,-27],[-2,-11],[-78,-67],[-41,-27],[-54,-27],[-1,-15],[75,-3],[58,-7],[27,-9],[14,-13],[19,-27],[3,-22],[-2,-29],[-6,-20],[-69,-59],[-31,-18],[-53,-21],[-23,-17],[-26,3],[-28,20],[-28,5],[-52,-17],[-29,1],[-13,-6],[-2,-13],[25,-37],[14,-14],[6,-11],[-11,-18],[3,-6],[8,-7],[47,-80],[10,-6],[10,3],[20,23],[13,9],[5,-1],[0,-12],[-22,-70],[-2,-19],[0,-17],[11,-35],[23,-38],[30,-35],[45,-46],[60,-49],[22,-24],[33,-56],[7,-22],[-9,-59],[-24,-97],[-15,-55],[-7,-14],[-45,-39],[-26,-9],[-42,1],[-14,-8],[-22,-31],[-30,-55],[-24,-35],[-17,-14],[-32,-17],[-50,-51],[-24,-20],[-86,-21],[-69,-68],[-28,-23],[-30,-12],[-32,-2],[-19,11],[-10,42],[-7,14],[-24,29],[-50,83],[-22,29],[-14,6],[-30,-5],[-14,3],[-33,26],[-11,17],[1,7],[25,9],[-11,14],[-43,37],[-18,20],[-2,6],[-43,26],[-43,7],[-53,-42],[-21,-29],[1,-9],[26,-11],[11,6],[22,26],[11,8],[33,-4],[28,-18],[10,-16],[4,-11],[75,-83],[26,-17],[12,-20],[8,-33],[16,-37],[36,-61],[39,-75],[8,-30],[-20,-14],[-10,-1],[-30,11],[-78,35],[-9,-1],[-20,-18],[-17,-42],[-5,-4],[-42,17],[-78,36],[-52,31],[-27,26],[-32,41],[-37,56],[-45,17],[-52,-20],[-76,-7],[-158,6],[-21,-5],[-8,-7],[14,-30],[-4,-9],[-10,-6],[-3,-9],[18,-32],[27,-23],[79,-30],[52,-25],[32,-22],[10,-19],[1,-20],[-15,-41],[-8,-15],[-183,-203],[-70,-82],[-35,-50],[-32,-33],[-27,-17],[-45,-9],[-62,-2],[-81,8],[-42,26],[-76,70],[-54,41],[-23,14],[-20,39],[-18,7],[-39,7],[-39,21],[-92,70],[-48,28],[-44,15],[-39,3],[-15,-4],[27,-36],[-12,-2],[-31,8],[-32,0],[-55,26],[-55,-4],[-39,5],[-48,14],[-51,7],[-82,0],[-29,-3],[-5,-7],[40,-31],[68,-37],[-9,32],[2,8],[23,11],[107,-19],[122,-42],[31,-4],[34,-15],[38,-25],[52,-51],[99,-116],[32,-29],[43,-27],[215,-40],[75,0],[149,-11],[79,-21],[22,-15],[7,-51],[-7,-26],[-43,-79],[-27,-58],[-168,-245],[-22,-57],[-9,-34],[-30,-34],[-76,-55],[-76,-46],[-46,-10],[-41,11],[-26,14],[-39,45],[-3,-4],[29,-72],[-7,-7],[-23,9],[-53,32],[-17,-6],[-10,-9],[-14,0],[-18,10],[-32,26],[-9,13],[-7,40],[-6,7],[-64,-23],[-10,-7],[26,-16],[9,-12],[25,-58],[2,-13],[-19,-8],[-61,23],[-7,-2],[30,-59],[12,-27],[1,-15],[-39,-66],[-25,-27],[-35,-10],[-21,6],[-24,17],[-18,-2],[-11,-22],[-20,-15],[-29,-9],[-37,4],[-45,17],[-120,62],[-37,9],[-70,9],[-9,9],[1,8],[10,8],[-3,7],[-15,6],[-15,-6],[-16,-16],[-28,-5],[-40,7],[-59,24],[-116,62],[-128,53],[-74,68],[28,-62],[-3,-20],[-14,-19],[-2,-18],[29,-44],[40,-15],[40,1],[1,7],[-16,11],[-15,16],[-7,24],[7,4],[36,-12],[23,-15],[177,-81],[53,-15],[40,-15],[11,-10],[-14,-20],[-71,-50],[-1,-8],[49,4],[59,45],[33,20],[32,13],[43,-22],[55,-56],[44,-32],[63,-18],[37,-19],[62,-53],[10,-27],[6,-111],[-2,-27],[-8,-27],[-14,-26],[-26,-15],[-38,-3],[-30,-11],[-65,-59],[-28,-9],[-117,18],[-45,16],[-21,-1],[-12,-13],[-12,-6],[-46,-5],[-8,-11],[3,-16],[9,-22],[11,-13],[18,-16],[26,-11],[53,-12],[6,-30],[-2,-10],[-18,-20],[-20,2],[-35,24],[-18,1],[-15,-13],[-21,-4],[-27,4],[-15,-10],[-3,-25],[-9,-19],[-31,-30],[-17,-22],[0,-18],[18,-12],[21,-28],[23,-45],[5,-19],[-15,5],[-19,18],[-24,29],[-36,27],[-80,35],[-15,-1],[8,-9],[53,-36],[20,-24],[3,-17],[-45,-38],[-1,-13],[12,-11],[3,-9],[-16,-18],[-26,-16],[-51,-2],[-4,-9],[19,-19],[6,-12],[-16,-16],[-11,-2],[-58,7],[15,-40],[9,-14],[18,-20],[32,-19],[1,-7],[-11,-16],[-19,-20],[-81,-59],[-56,-70],[-8,-22],[14,-45],[1,-12],[-15,-21],[-33,6],[-7,-8],[8,-22],[2,-31],[-5,-42],[-24,-66],[-43,-88],[-33,-81],[-23,-73],[-16,-36],[-31,-2],[-23,-23],[16,-12],[9,-14],[7,-21],[-7,-67],[-19,-111],[-13,-89],[3,-274],[-3,-121],[-9,-67],[-14,-37],[-24,-11],[30,-10],[20,-17],[9,-26],[8,-42],[12,-19],[13,3],[13,-4],[11,-12],[33,-59],[37,-17],[2,-33],[-15,-184],[0,-24],[17,46],[18,144],[23,63],[19,14],[77,7],[81,-16],[31,-2],[27,8],[28,-17],[6,-18],[8,-75],[8,-43],[48,-153],[23,-86],[29,-133],[10,-38],[59,-178],[11,-49],[5,-37],[-2,-26],[-11,-40],[-19,-54],[-18,-42],[-17,-28],[-18,-22],[-18,-14],[1,-3],[21,6],[20,15],[39,37],[15,8],[43,5],[1,-13],[-20,-28],[4,-2],[30,22],[64,31],[252,103],[59,9],[85,-19],[69,-43],[75,-56],[79,-41],[124,-38],[37,-18],[73,-19],[34,-21],[40,-52],[65,-67],[49,-42],[54,-39],[55,-73],[88,-164],[22,-20],[54,-27],[102,-35],[151,-81],[66,-32],[43,-13],[43,-22],[43,-32],[32,-35],[23,-38],[19,-25],[35,-28],[18,-19],[2,-30],[-42,-116],[-1,-10],[42,84],[24,24],[19,11],[39,-1],[59,-14],[53,0],[44,13],[39,6],[31,-1],[23,4],[14,10],[17,0],[68,-29],[27,-2],[99,-27],[63,10],[11,-5],[22,-36],[19,-3],[31,6],[31,-10],[51,-46],[23,-40],[23,-82],[2,-25],[-42,-190],[-13,-73],[-2,-65],[8,-36],[37,-62],[6,-17],[22,-91],[6,-39],[-3,-45],[-11,-75],[3,-56],[9,-85],[-3,-58],[-17,-31],[-11,-29],[-9,-54],[0,-21],[9,-40],[16,-23],[26,-25],[24,-38],[45,-92],[33,-51],[39,-75],[8,-38],[-11,-25],[-14,-17],[-32,-23],[-14,-17],[3,-4],[47,12],[27,-1],[23,-19],[19,-36],[32,-30],[43,-25],[44,-43],[74,-100],[13,-23],[19,-52],[26,-82],[13,-54],[1,-25],[-14,-25],[-49,-46],[-50,-81],[16,4],[32,34],[56,67],[30,13],[29,-7],[45,-20],[39,-27],[35,-36],[51,-95],[55,-76],[30,-65],[-9,41],[-20,48],[-51,76],[-22,39],[-5,19],[-2,21],[4,37],[10,55],[13,39],[16,22],[10,24],[6,25],[8,19],[44,33],[12,-3],[9,-41],[10,-8],[21,-6],[17,-15],[14,-21],[10,-23],[6,-22],[13,-73],[9,-34],[2,41],[11,65],[8,26],[27,39],[-2,17],[-11,22],[-56,97],[-1,24],[15,14],[11,26],[5,40],[12,28],[35,40],[30,62],[16,42],[12,23],[13,5],[-18,17],[-4,11],[-1,51],[-8,54],[-12,25],[-34,53],[-6,16],[-6,60],[4,30],[9,26],[-5,24],[-32,45],[-12,39],[-14,93],[-13,118],[-14,86],[-16,56],[-3,35],[9,14],[11,44],[10,10],[16,-2],[1,5],[-25,23],[-12,30],[1,11],[21,29],[-3,12],[-16,16],[-49,28],[18,10],[11,23],[-2,7],[-20,10],[-22,17],[-17,27],[-20,42],[-13,34],[-12,56],[-22,63],[-9,16],[-11,10],[-12,5],[0,10],[13,14],[210,106],[18,16],[103,59],[48,33],[48,48],[66,49],[32,31],[21,31],[105,122],[44,62],[26,53],[37,64],[49,75],[31,63],[13,54],[16,91],[4,82],[3,119],[-1,106],[-14,167],[-7,53],[-15,62],[-37,125],[-6,35],[-23,57],[-74,151],[-92,101],[-18,26],[-36,30],[-56,34],[-36,28],[-94,104],[-31,13],[-11,27],[-3,19],[4,50],[5,34],[7,26],[7,16],[52,77],[29,61],[20,34],[22,26],[41,34],[23,44],[-6,17],[-18,19],[-4,19],[31,47],[4,13],[-4,45],[6,10],[38,3],[54,-64],[13,5],[-17,18],[-21,43],[3,18],[40,47],[1,21],[-12,29],[-1,24],[23,55],[-6,12],[-65,11],[-11,16],[4,7],[31,19],[2,7],[-54,125],[-9,37],[23,46],[26,20],[-3,12],[-35,2],[-21,7],[-21,35],[8,23],[8,10],[20,54],[20,11],[-4,9],[-74,-23],[-35,19],[-35,-5],[-16,6],[6,19],[62,86],[29,47],[18,43],[10,28],[1,14],[-6,93],[3,26],[25,24],[37,44],[-51,41],[-32,39],[-21,20],[-16,19],[-21,40],[-15,53],[-17,106],[-3,58],[4,42],[7,21],[11,22],[47,41],[82,60],[64,24],[47,-13],[90,-15],[73,-34],[222,-86],[40,-38],[-37,-33],[5,-8],[84,62],[22,12],[19,3],[63,-24],[25,-4],[32,-20],[76,-66],[6,6],[-21,34],[12,15],[60,35],[62,29],[44,28],[47,37],[32,20],[16,2],[21,-11],[56,-49],[36,-25],[29,-26],[40,-47],[16,-10],[31,-32],[41,3],[13,-3],[4,-7],[7,-21],[4,-14],[0,-14],[-9,-42],[-30,-66],[13,-1],[18,14],[24,25],[19,9],[40,-20],[38,-32],[13,-17],[15,-28],[12,-15],[12,-27],[-1,-9],[-11,-14],[-46,-22],[9,-9],[53,14],[17,14],[11,24],[16,6],[63,-41],[9,-14],[-4,-11],[-10,-13],[-27,-14],[-24,-35],[-4,-15],[17,-11],[41,-4],[0,-8],[-24,-16],[-3,-20],[53,-71],[36,-32],[21,-5],[48,-2],[39,-12],[86,-40],[51,-8],[44,13],[29,2],[25,-16],[8,-11],[4,-23],[0,-34],[14,-24],[28,-14],[23,2],[31,27],[25,5],[9,20],[7,37],[8,20],[18,6],[15,-11],[9,-17],[16,-51],[4,-23],[-1,-20],[-8,-19],[-16,-20],[-23,-21],[-19,-31],[-22,-70],[-9,-46],[-2,-28],[1,-29],[4,-33],[9,-27],[21,-37],[1,-13],[2,-30],[-2,-14],[-12,-27],[-34,-26],[-46,-7],[-152,-1],[-41,6],[10,-24],[43,-8],[38,0],[145,-15],[20,-15],[17,-28],[12,-28],[12,-57],[2,-27],[-6,-31],[-15,-33],[-10,-44],[-5,-55],[8,-29],[78,-3],[15,-20],[-1,-15],[-28,-56],[-3,-15],[13,-38],[-2,-11],[-7,-11],[-8,-28],[-7,-46],[-9,-30],[-21,-22],[-11,-5],[-8,6],[-21,62],[-9,9],[-8,-6],[-4,-9],[0,-14],[-4,-14],[-7,-14],[-31,-23],[-50,-16],[1,-16],[34,-9],[43,-28],[25,-4],[38,22],[75,71],[31,19],[27,7],[30,1],[34,-5],[68,9],[17,-7],[20,-15],[25,-25],[17,-23],[9,-23],[15,-85],[21,-23],[4,-16],[2,-25],[-1,-49],[-23,-100],[-11,-36],[-31,-50],[-36,-23],[-64,-21],[-33,-18],[-25,-25],[-1,-13],[72,42],[79,20],[23,24],[17,22],[17,50],[32,130],[18,40],[25,7],[11,-14],[26,-76],[0,-19],[-7,-16],[-42,-74],[15,7],[43,70],[9,21],[5,32],[14,23],[5,-11],[13,-82],[0,-60],[3,-19],[-5,-56],[5,-10],[13,49],[4,37],[6,26],[7,16],[52,50],[61,40],[40,36],[33,17],[50,17],[31,33],[14,50],[12,35],[10,20],[33,34],[17,2],[17,-12],[20,-26],[21,-40],[13,-30],[4,-23],[4,-78],[4,0],[19,60],[3,21],[-2,23],[-6,22],[-20,49],[-7,31],[1,18],[22,11],[31,4],[5,8],[-23,21],[-1,11],[22,36],[13,1],[26,-5],[-5,18],[0,12],[7,5],[42,-11],[5,14],[36,1],[4,12],[-32,18],[-30,12],[-10,9],[-7,15],[-9,35],[2,9],[9,0],[14,-9],[9,18],[9,43],[9,18],[28,-21],[1,9],[-23,68],[4,13],[35,5],[21,-9],[55,-49],[11,5],[-9,14],[-28,29],[-26,19],[-23,9],[-17,16],[-19,45],[-3,18],[2,24],[13,50],[7,11],[14,8],[19,5],[21,-5],[44,-33],[7,11],[-23,18],[-13,16],[-6,21],[2,24],[19,49],[9,40],[39,109],[12,20],[12,12],[8,13],[31,3],[57,-39],[18,-23],[4,-32],[-30,-45],[-51,-33],[-16,-14],[10,-9],[49,27],[42,12],[34,0],[28,-53],[4,-73],[-16,-60],[21,30],[26,17],[22,-40],[2,-32],[12,-31],[24,-40],[25,-36],[-28,-37],[-33,-23],[7,-16],[46,-18],[6,-18],[-5,-24],[7,1],[32,36],[27,-5],[34,-79],[-25,-46],[-39,-21],[-30,-9],[-43,2],[-17,-7],[8,-15],[41,-1],[63,12],[47,19],[20,1],[22,-8],[7,-6],[-23,-13],[-1,-5],[8,-13],[18,-44],[-2,-10],[-17,-25],[27,-5],[38,12],[11,-14],[23,-52],[15,-53],[-64,-73],[-32,-15],[-48,-39],[-13,-31],[-28,-39],[18,0],[49,64],[24,15],[18,-4],[7,-11],[-3,-18],[16,3],[66,37],[28,7],[36,3],[3,-13],[-22,-89],[-38,-69],[-70,-42],[-24,-25],[-31,-40],[12,-7],[66,52],[45,21],[64,17],[28,-3],[51,-104],[28,-10],[24,5],[44,-30],[16,-29],[-4,-21],[-15,-13],[-7,-19],[18,-58],[-11,-33],[-32,-29],[-23,-14],[-24,-5],[-24,-25],[-10,-4],[-33,6],[11,-15],[16,-8],[26,-4],[30,8],[30,-1],[46,-19],[20,-23],[0,-6],[-10,-13],[-15,-42],[-10,-15],[9,-12],[23,-18],[17,-6],[23,6],[25,-8],[82,-99],[-4,-51],[-12,-40],[5,-44],[0,-55],[-44,-15],[-148,25],[-84,39],[-5,12],[24,26],[-21,2],[-24,-10],[-11,-10],[29,-41],[77,-36],[35,-44],[38,-4],[11,-8],[21,-25],[-6,-9],[-39,-3],[-30,-30],[19,-17],[69,-16],[49,-4],[25,-17],[-20,-19],[-58,-22],[-2,-33],[43,-14],[38,8],[16,-3],[11,-80],[7,-17],[-41,-14],[-1,-16],[28,-13],[45,-10],[15,-15],[3,-24],[9,-12],[26,-3],[29,30],[17,25],[25,-9],[1,-31],[30,-36],[10,-6],[9,-51],[24,45],[17,-9],[20,-2],[-7,-44],[-11,-34],[15,-22],[12,-32],[33,-43],[-9,-21],[-38,-45],[-20,-72],[-5,-24],[-20,-41],[-26,-40],[16,4],[60,73],[36,25],[78,13],[19,20],[29,9],[18,-23],[1,-42],[24,-14],[24,14],[22,-12],[-13,-26],[-71,-108],[-21,-44],[-6,-31],[24,43],[90,97],[9,14],[20,42],[18,27],[48,-10],[25,-19],[11,-55],[19,-59],[30,-65],[78,-32],[28,-6],[49,23],[7,30],[38,10],[27,-4],[9,-59],[29,-31],[28,-26],[27,-14],[40,-6],[22,-28],[0,-12],[-22,-30],[-22,-45],[-38,-31],[-53,-1],[-72,-20],[-3,-17],[-16,-19],[-39,-20],[-21,-14],[-35,-72],[-20,-31],[-24,-6],[-34,3],[-22,-6],[-16,-14],[-10,-19],[-7,-7],[-45,-20],[-82,-55],[-44,-2],[-26,7],[-21,-5],[-14,-15],[-39,-27],[-12,-16],[-7,-19],[-5,-38],[-5,-14],[-7,-8],[-33,8],[-37,25],[7,-27],[58,-44],[17,-25],[-16,-21],[-37,-34],[-4,-18],[15,-10],[-6,-15],[-20,-16],[2,-7],[2,-6],[51,23],[45,50],[29,50],[14,14],[58,19],[34,22],[49,39],[54,58],[58,76],[74,59],[91,42],[66,22],[42,1],[2,7],[-37,14],[-32,2],[-39,-10],[-12,24],[2,10],[12,17],[33,15],[161,-21],[55,-17],[60,-137],[14,-44],[4,-32],[-6,-20],[-24,-24],[-69,-48],[-9,-12],[-1,-7],[30,-9],[9,-14],[15,-52],[31,34],[58,83],[48,38],[40,11],[47,5],[17,-1],[6,-27],[25,-54],[23,-14],[45,-7],[40,-67],[15,-46],[14,-27],[-1,-19],[2,-15],[11,-23],[5,-19],[-3,-45],[-23,-77],[17,-71],[-7,-31],[-4,-51],[14,-33],[5,-20],[-13,-11],[-88,-28],[-35,-1],[-9,-17],[27,-5],[48,1],[59,-17],[27,-19],[11,-27],[-3,-21],[-17,-16],[-33,3],[-32,15],[2,-14],[47,-35],[14,-17],[26,-22],[5,-30],[-6,-30],[-90,-120],[-73,-76],[-74,-67],[-119,-129],[-12,-6],[-21,-3],[-57,21],[-45,-5],[-85,-25],[-24,-15],[-47,-45],[-18,-6],[-51,-9],[-47,6],[-19,-7],[-23,-21],[-6,-12],[-7,-38],[-115,-168],[-31,-57],[-59,-60],[-65,-106],[-57,-43],[-19,-58],[-54,-36],[-100,-9],[-47,-10],[-55,16],[-42,-25],[-62,-8],[-30,6],[-121,-57],[-31,54],[-23,21],[-68,3],[-55,22],[-50,4],[-48,10],[-32,0],[-33,-6],[-52,2],[-29,-30],[-96,9],[-41,27],[-34,6],[-44,-6],[-43,-20],[-94,22],[-100,-19],[-87,13],[-24,13],[-138,-35],[-53,20],[-48,-54],[-32,11],[-35,-8],[-12,11],[-23,-8],[-15,-29],[-20,-3],[-33,-52],[-56,-41],[-82,-226],[-7,-87],[-31,-59],[-27,-8],[-22,-1],[-141,-44],[-63,-34],[18,-27],[-21,-21],[-33,-8],[-36,-25],[-24,-28],[-11,-39],[-72,-64],[-84,-147],[-40,-108],[-49,-78],[-34,-30],[-25,-5],[-25,10],[-41,36],[-30,4],[-76,51],[-177,52],[27,-19],[23,-32],[47,-8],[47,0],[99,-63],[48,-22],[30,-19],[25,-43],[-18,-84],[-19,-69],[-24,-53],[-85,-137],[-41,-46],[-72,-163],[-74,-77],[-40,-47],[-42,-74],[-99,-56],[-37,-15],[-34,8],[-41,-46],[-49,-28],[-15,-42],[-117,-114],[-45,-15],[-39,-30],[-11,-51],[-34,-32],[-10,-23],[-29,-72],[-53,-94],[-66,-15],[-24,-32],[-27,-53],[-39,-36],[-77,17],[18,-22],[69,-34],[7,-51],[-34,-12],[-72,-68],[-98,-117]],[[15892,80064],[-11,21],[-27,26],[-10,0],[-11,-8],[-7,-12],[-6,-27],[-4,-8],[-4,1],[-3,7],[-8,37],[2,16],[9,20],[-1,7],[-20,-6],[-8,5],[-4,10],[1,42],[-11,23],[13,10],[32,8],[34,1],[9,18],[10,43],[-24,-40],[-14,-4],[-44,15],[-29,-2],[-4,8],[2,9],[6,9],[4,31],[7,85],[9,31],[3,16],[-2,4],[-38,-59],[-3,-19],[4,-16],[-4,-33],[-18,-10],[-10,5],[-20,-28],[-6,-3],[-91,50],[-10,6],[-15,23],[-23,40],[-7,34],[9,28],[8,14],[10,0],[10,-10],[21,-47],[8,-29],[22,4],[35,37],[8,14],[-35,-14],[-15,1],[-15,15],[-16,30],[-8,34],[0,107],[5,20],[17,16],[11,25],[-1,11],[-10,22],[-15,16],[-15,9],[-4,-3],[23,-46],[0,-18],[-26,-46],[-4,-13],[0,-45],[-3,-9],[-21,-13],[-23,-35],[-39,-12],[-36,4],[-20,17],[-61,86],[-22,36],[0,30],[-42,107],[0,23],[-14,33],[-16,5],[-4,32],[33,68],[21,58],[2,18],[-1,28],[-5,62],[5,27],[-21,-36],[-4,-26],[5,-27],[-3,-30],[-12,-43],[-21,-45],[-42,-21],[-74,12],[-8,6],[-5,15],[-4,66],[-5,-8],[-8,-35],[-7,-51],[-9,-11],[-15,-1],[-12,8],[-9,17],[-19,2],[-34,-14],[-17,6],[-19,0],[-40,15],[-47,4],[-12,11],[1,22],[8,11],[49,10],[48,23],[47,12],[-2,11],[-21,4],[-108,-26],[-34,4],[-6,4],[-1,26],[13,24],[21,23],[6,18],[-12,7],[-20,-5],[-9,14],[10,55],[-9,55],[-13,-52],[-19,-29],[-91,-13],[-15,-15],[-12,0],[-58,28],[-25,17],[-23,25],[-42,57],[-33,37],[-1,67],[7,43],[15,49],[59,104],[21,19],[18,7],[87,9],[65,13],[12,7],[-95,7],[-85,-5],[-29,-16],[-37,-67],[-9,-28],[-10,-21],[-7,0],[-12,7],[-4,9],[-6,22],[-19,34],[-9,40],[-5,59],[1,26],[10,34],[28,66],[-36,-2],[4,55],[13,61],[34,35],[34,26],[31,34],[55,22],[18,-46],[47,-14],[13,-21],[17,-38],[20,-36],[25,-35],[7,-3],[-11,30],[-40,65],[-2,23],[-10,25],[-52,36],[-10,14],[-9,36],[-4,24],[6,22],[53,69],[13,37],[0,17],[-5,19],[-11,34],[-3,0],[3,-51],[-2,-20],[-6,-22],[-8,-17],[-12,-11],[-114,-158],[-12,-9],[-42,-14],[-22,-17],[-12,-22],[-19,-58],[-25,-115],[-30,-93],[-25,121],[-46,92],[89,92],[2,14],[-8,49],[2,15],[8,21],[23,32],[-1,3],[-26,-12],[-41,-71],[-16,-22],[-8,-3],[-1,41],[22,109],[18,105],[6,30],[16,30],[-15,-2],[-72,-47],[-24,29],[-20,153],[-36,59],[-60,49],[-59,22],[-13,43],[-12,53],[16,62],[26,29],[23,14],[23,-7],[1,-22],[-15,-61],[20,-6],[81,-74],[17,-6],[34,28],[18,-1],[44,-23],[15,-28],[42,-54],[-6,32],[-46,66],[-25,22],[-45,4],[-28,-11],[-12,3],[-24,17],[-21,28],[-21,61],[-5,29],[1,21],[5,19],[9,17],[17,13],[26,7],[7,8],[-32,35],[-15,0],[-52,-51],[-10,-5],[-5,10],[-4,1],[-15,-25],[-12,-11],[-42,-79],[-7,-37],[-2,-57],[-5,-35],[-7,-14],[-50,-27],[-28,-55],[-34,48],[-38,45],[-25,80],[-45,14],[-52,45],[-20,41],[28,82],[41,63],[6,74],[6,16],[70,19],[46,37],[-47,4],[-29,-6],[-52,-26],[-57,51],[-29,47],[-10,40],[10,34],[2,34],[5,47],[5,20],[12,26],[25,17],[22,54],[9,37],[44,111],[16,48],[31,67],[61,105],[-20,-6],[-10,-9],[-9,1],[-9,11],[-9,24],[-8,35],[-5,-16],[-1,-66],[-6,-57],[-11,-39],[-30,-80],[-18,-31],[-12,29],[10,50],[17,40],[3,54],[-16,65],[-10,53],[-4,40],[-1,36],[3,33],[7,35],[11,39],[-1,4]],[[19495,97148],[49,-34],[17,1],[21,-6],[10,-9],[29,-43],[6,-21],[2,-27],[-5,-23],[-10,-19],[-27,-11],[-62,-8],[-87,11],[-75,-14],[-35,-2],[-93,9],[-24,7],[-52,26],[-40,11],[-16,-6],[-20,-23],[-37,-28],[-23,-7],[-68,4],[-103,48],[-118,-14],[-123,-28],[-48,-5],[-14,8],[-19,21],[3,11],[36,32],[82,33],[60,19],[118,28],[141,15],[52,17],[33,23],[92,37],[53,16],[73,13],[58,-1],[74,-30],[56,-15],[34,-16]],[[19317,96833],[223,-14],[9,-3],[1,-10],[-17,-33],[-25,-24],[-119,-30],[-153,-28],[-32,-13],[2,-8],[13,-10],[25,-12],[119,2],[29,-5],[10,-8],[6,-12],[4,-15],[0,-53],[-6,-30],[-17,-27],[-48,-20],[-86,-26],[-59,-11],[-46,4],[-46,-3],[-202,-48],[-62,-1],[-55,12],[-75,46],[-78,18],[-34,21],[-33,11],[-9,16],[-3,13],[6,11],[14,10],[4,9],[-13,25],[-6,24],[-22,35],[-4,20],[0,13],[4,14],[15,25],[8,5],[46,4],[60,13],[139,37],[305,47],[93,-4],[40,9],[75,4]],[[17902,96407],[21,-23],[2,-9],[-10,-9],[-33,-15],[-164,-51],[-32,-24],[12,-20],[59,-41],[60,-35],[13,-18],[-28,-17],[-55,5],[-20,-1],[-20,-8],[6,-16],[60,-52],[20,-28],[0,-14],[-11,-14],[-26,-19],[-40,-25],[-68,-19],[-148,-26],[-5,-21],[1,-15],[-3,-38],[-6,-18],[-17,-29],[-13,-14],[-22,-9],[-32,-6],[-40,0],[-67,26],[-30,16],[-42,35],[-8,24],[5,28],[11,45],[18,46],[25,46],[8,29],[-10,12],[-18,0],[-54,-19],[-35,-7],[-27,-13],[-20,-21],[-11,-22],[-6,-43],[-10,-23],[-29,-13],[-44,0],[-17,-7],[-8,-16],[6,-12],[43,-27],[6,-30],[-6,-18],[-46,-33],[-11,-11],[-29,-52],[-11,-13],[-24,-12],[-24,1],[-23,19],[-33,36],[-22,31],[-12,26],[-9,11],[-16,-8],[-19,-26],[0,-21],[4,-31],[-1,-19],[-28,-23],[4,-10],[49,-28],[6,-12],[0,-19],[-3,-9],[-20,1],[-16,-22],[-19,-17],[-49,-33],[-69,-4],[-57,-16],[-12,1],[-14,26],[-15,50],[-14,29],[-20,15],[-26,58],[-12,18],[-11,8],[-10,2],[-15,-12],[-33,-82],[-54,-21],[-29,-4],[-30,2],[-74,23],[-60,8],[-41,-9],[-68,-34],[-27,-9],[-37,4],[-16,13],[-14,21],[-1,12],[10,5],[17,24],[0,9],[-17,14],[0,11],[6,7],[-2,6],[-8,3],[-17,-3],[-61,-16],[7,17],[29,37],[71,72],[26,21],[16,6],[209,24],[15,7],[99,97],[28,22],[29,18],[143,58],[13,14],[22,40],[13,10],[31,16],[102,82],[94,59],[47,37],[65,37],[75,16],[227,28],[163,-37],[38,-2],[19,10],[17,17],[25,-7],[60,-5],[14,4],[25,19],[-17,11],[-73,19],[-5,10],[2,9],[26,23],[31,14],[90,11],[41,-3],[43,-15],[55,-32],[127,-56]],[[19919,95654],[35,-1],[41,6],[46,-4],[21,-13],[15,-23],[0,-13],[-3,-10],[-6,-9],[-60,-58],[-14,-20],[19,-5],[10,3],[59,44],[45,13],[34,4],[57,-9],[22,-8],[15,-8],[9,-11],[22,-41],[16,-54],[2,5],[1,31],[3,23],[55,16],[1,5],[-20,13],[-16,18],[-12,33],[4,12],[12,14],[35,28],[42,17],[36,4],[137,-29],[54,-25],[21,-12],[8,-9],[12,-28],[23,-78],[-1,-25],[-10,-40],[-44,-76],[-7,-51],[-44,-127],[-31,-35],[-33,-24],[-138,-43],[-104,-43],[-26,-7],[-27,-1],[-86,15],[-99,27],[-57,-7],[-56,-20],[-36,-6],[-33,3],[-33,7],[-44,19],[23,8],[10,10],[-9,10],[-46,14],[-48,-32],[-139,-73],[-187,-25],[-58,-15],[-44,-19],[-22,-16],[-35,-38],[-53,-28],[-96,-31],[-123,-48],[-220,-49],[-138,-8],[-138,16],[-44,13],[-46,21],[-93,49],[-26,17],[-31,39],[18,25],[50,30],[75,26],[150,36],[135,58],[49,11],[130,9],[66,-5],[48,3],[31,8],[47,20],[68,42],[50,39],[12,18],[-16,17],[-25,2],[-81,-40],[-41,-13],[-44,-1],[-61,-14],[-60,-5],[-11,0],[-62,39],[-33,6],[-16,-4],[-14,-10],[-26,-28],[-16,-10],[-27,-8],[-107,-8],[-104,-14],[-23,9],[-14,16],[-3,10],[-1,33],[-7,14],[9,28],[12,21],[14,15],[71,43],[10,11],[-34,-2],[-80,-21],[-11,7],[-18,24],[-9,2],[-11,-10],[-6,-14],[-13,-58],[-13,-30],[-32,6],[-40,18],[-15,3],[-9,-6],[3,-10],[41,-50],[0,-17],[-26,-31],[-114,-51],[-44,-13],[-16,5],[-14,14],[-13,22],[-29,31],[-18,7],[-19,1],[-18,-7],[-17,-13],[-10,-15],[-10,-26],[-20,-21],[-13,-3],[-115,42],[-93,75],[-101,-11],[-46,2],[-138,28],[-17,17],[-10,22],[1,12],[6,12],[17,25],[35,37],[15,12],[21,10],[29,8],[73,4],[189,2],[37,5],[206,72],[24,12],[30,23],[7,10],[-1,6],[-254,-57],[-109,-12],[-166,9],[-31,9],[-8,16],[35,42],[18,16],[48,15],[114,21],[154,19],[100,0],[84,15],[51,17],[-170,-1],[-204,-8],[-30,5],[-58,23],[-3,16],[23,19],[9,15],[-17,33],[5,13],[38,27],[68,29],[42,5],[81,-11],[230,-10],[45,4],[-28,13],[-40,9],[-178,17],[-37,7],[-7,10],[-3,15],[2,19],[13,20],[55,42],[162,35],[64,5],[65,-3],[65,-15],[29,-14],[15,-16],[7,-16],[1,-26],[3,-11],[12,-17],[37,-42],[28,-13],[128,24],[53,6],[54,-8],[78,-24],[101,-75],[130,-77],[-1,-16],[-49,-26],[-10,-11],[7,-7],[50,-5],[46,4],[45,-6],[10,-7],[16,-28],[23,-49],[27,-37],[31,-24],[31,-13],[45,-1],[46,8],[74,-3],[381,-28],[23,5],[16,15],[9,26],[4,22],[-5,29],[-8,14],[-236,94],[-21,38],[116,54],[8,12],[2,17],[-4,21],[-15,21],[-62,39],[-55,6],[-82,38],[-12,10],[-11,15],[-8,21],[1,16],[11,12],[80,39],[33,21],[100,98],[46,39],[33,19],[34,11],[74,5],[77,-36],[17,-2],[7,-10],[-3,-17],[-10,-16],[-27,-29],[-7,-12],[2,-13],[19,-29],[6,-19],[4,-32],[3,-5],[47,-27],[42,-36],[20,-55],[-16,-19],[-35,-27],[-21,-22],[-7,-18],[5,-10],[27,-6]],[[18188,93659],[18,-7],[32,6],[47,19],[60,15],[74,13],[19,-15],[12,3],[22,24],[4,16],[-3,18],[1,40],[12,23],[44,50],[23,18],[37,9],[89,-6],[84,-28],[112,-28],[165,-71],[52,-30],[5,-26],[-29,-55],[-71,-79],[-57,-28],[-22,-18],[37,-12],[24,-20],[36,29],[27,33],[38,27],[13,3],[3,-6],[-7,-14],[-2,-14],[1,-13],[4,-8],[23,-4],[13,5],[50,38],[49,59],[75,38],[20,19],[65,16],[-1,12],[3,44],[-22,19],[-77,40],[-37,48],[8,37],[42,-5],[115,-4],[24,-5],[111,-62],[39,-39],[31,-19],[65,-28],[22,-23],[16,-9],[5,-10],[-5,-10],[-2,-23],[12,-8],[42,-9],[12,-9],[16,-30],[19,-50],[17,-55],[27,-103],[54,-137],[18,-86],[7,-16],[12,-11],[34,-16],[27,-22],[31,-7],[7,2],[8,19],[20,31],[94,59],[5,9],[-11,14],[-3,9],[1,7],[20,5],[-66,75],[-43,71],[-27,89],[-4,25],[-4,55],[-9,15],[-15,13],[-6,17],[2,21],[-3,18],[-17,37],[-67,261],[0,26],[9,19],[24,11],[38,2],[13,6],[-15,10],[-25,27],[-3,13],[17,26],[86,-11],[62,-24],[106,-55],[11,3],[12,28],[22,17],[34,-6],[96,-40],[112,-71],[74,-36],[53,-48],[35,-45],[23,-35],[1,-13],[-5,-14],[5,-19],[16,-22],[8,-20],[7,-43],[15,-56],[3,-28],[99,-250],[19,-45],[12,-20],[69,-97],[37,-70],[3,-48],[5,-13],[2,-22],[-2,-30],[-8,-25],[-14,-22],[-14,-30],[-22,-67],[-1,-16],[15,-23],[97,-79],[59,-95],[28,-16],[74,-59],[81,-34],[27,-15],[26,-21],[7,-1],[16,4],[4,6],[1,9],[-22,45],[-2,17],[11,3],[83,-76],[45,-31],[61,-32],[105,-74],[15,-6],[57,7],[15,-5],[10,-7],[4,-10],[2,-44],[16,-21],[90,9],[25,-2],[16,-7],[13,-14],[20,-47],[17,-92],[1,-33],[-8,-56],[-13,-20],[-17,-7],[-48,7],[-33,17],[-18,23],[-16,48],[-7,10],[-7,-10],[-16,-45],[-10,-19],[-13,-14],[-24,4],[-35,19],[-66,50],[-23,12],[-15,-2],[-31,-17],[-49,-31],[-20,-23],[8,-15],[6,-19],[3,-22],[-2,-17],[-6,-10],[-16,-13],[-34,-2],[-49,9],[-39,18],[-68,46],[-15,6],[-21,-10],[-8,-14],[13,-19],[34,-24],[42,-41],[11,-8],[11,0],[4,-7],[5,-22],[-2,-38],[-21,-76],[-2,-18],[9,4],[57,75],[29,21],[65,32],[27,24],[82,7],[30,-13],[18,-23],[1,-10],[-21,-27],[-4,-14],[-1,-17],[2,-15],[5,-13],[14,-13],[26,6],[8,-4],[14,-13],[9,-20],[0,-29],[-19,-62],[-34,-21],[-105,-37],[-36,-20],[-70,-14],[-26,-18],[-17,-5],[-74,2],[-85,-11],[-98,23],[-69,10],[-79,36],[-30,-9],[-31,-24],[-148,28],[-18,20],[6,14],[35,42],[2,9],[-1,8],[-68,7],[-75,23],[-75,11],[-57,-3],[-37,8],[-36,19],[-19,17],[-4,16],[0,17],[3,34],[-5,24],[-16,18],[-34,17],[-33,-2],[-28,-18],[-26,-35],[-50,-96],[-24,-16],[-65,-70],[-24,-17],[-117,-27],[-140,-11],[-52,-22],[-49,-40],[-60,-39],[-146,-48],[-135,-27],[-142,-12],[-105,-18],[-31,9],[-47,-3],[-51,-27],[-57,-5],[-219,-10],[-100,-17],[-55,-5],[-44,2],[-30,8],[-28,23],[-30,37],[-60,97],[-17,41],[6,70],[-4,40],[-20,88],[-4,7],[-105,33],[-70,10],[-104,2],[-128,-4],[-127,10],[-68,12],[-67,19],[-114,51],[-7,5],[-8,17],[-12,28],[-28,37],[-78,82],[-31,49],[-5,13],[-7,36],[-10,59],[-3,36],[9,22],[7,5],[162,43],[284,47],[261,32],[118,-3],[69,-15],[70,-7],[126,-3],[160,-22],[31,2],[72,15],[21,12],[113,-2],[22,8],[20,13],[-26,25],[-108,55],[-286,97],[-70,21],[-100,22],[-58,3],[-74,-12],[-28,0],[-72,-19],[-69,-12],[-131,-12],[-189,-8],[-26,2],[-39,15],[-28,4],[-185,-11],[-165,15],[-188,149],[-32,46],[7,18],[23,20],[93,58],[34,13],[139,31],[138,38],[110,35],[53,12],[52,2],[42,11],[-9,11],[-34,13],[0,18],[18,9],[69,9],[72,-11],[37,3],[10,13],[-10,9],[-69,21],[-331,-59],[-155,-5],[-107,-26],[-59,1],[-70,25],[-10,8],[-1,10],[22,34],[75,20],[38,57],[-41,1],[-134,-12],[-59,5],[-79,22],[-23,26],[-10,18],[-2,23],[3,63],[6,34],[5,8],[98,105],[62,22],[43,33],[1,13],[-10,14],[-40,34],[-17,17],[-9,17],[7,25],[23,36],[67,57],[162,114],[82,48],[79,26],[110,55],[284,91],[254,92],[93,-24],[27,-19],[12,-16],[10,-23],[9,-29],[12,-63],[1,-32],[-2,-33],[-6,-29],[-9,-27],[-19,-32],[-29,-38],[-60,-65],[-7,-19]],[[16740,94534],[2,-2],[71,53],[44,3],[30,-5],[10,-6],[6,-11],[3,-23],[2,-58],[4,-7],[9,3],[16,14],[78,85],[33,23],[23,7],[96,13],[65,0],[71,-8],[54,-12],[88,-35],[69,-40],[63,-43],[212,-161],[90,-47],[35,-27],[15,-20],[13,-25],[4,-23],[-5,-21],[-10,-15],[-21,-13],[-130,-54],[-69,-16],[-67,-24],[-162,-84],[-111,-40],[-144,-78],[-272,-126],[-32,-25],[-15,-18],[-77,-143],[-29,-33],[-71,-34],[-89,-9],[-25,-9],[-5,-50],[-32,-82],[-15,-55],[-22,-148],[-5,-15],[-16,-28],[-28,-29],[-86,-35],[-64,-18],[-86,-15],[-21,10],[-21,24],[-22,2],[-13,-4],[-114,-103],[-109,-41],[-47,-38],[-33,-18],[-27,-5],[-44,3],[-32,17],[-29,27],[-22,28],[-56,118],[-24,40],[-21,20],[-55,72],[-15,14],[-209,91],[-101,51],[-25,18],[-23,11],[-130,-7],[-18,2],[-4,8],[15,27],[6,16],[2,17],[-2,27],[2,4],[49,27],[-8,5],[-5,10],[-4,15],[5,11],[15,6],[17,24],[21,43],[15,24],[22,16],[38,41],[27,17],[23,21],[1,9],[-10,8],[-3,16],[5,50],[-1,25],[5,22],[8,17],[11,11],[97,37],[4,10],[2,12],[-3,14],[-5,9],[-15,8],[-26,2],[-23,21],[-5,10],[9,29],[44,45],[14,22],[48,101],[86,63],[23,67],[65,72],[0,10],[-21,24],[-60,17],[-29,26],[-19,29],[-87,170],[-15,13],[-5,20],[-18,13],[4,12],[341,51],[235,16],[243,44],[68,2],[52,-8],[52,-23],[69,-40],[90,-39],[170,-58],[106,-12],[-42,-45],[-6,-14],[0,-10]],[[30697,99663],[227,-10],[73,4],[84,-26],[51,-3],[83,5],[61,-6],[226,-6],[47,-10],[-1,-11],[-48,-26],[-66,-25],[-423,-82],[-31,-13],[83,-4],[121,3],[94,9],[111,28],[37,2],[70,13],[137,38],[109,20],[49,-9],[42,-14],[28,-2],[15,11],[23,30],[14,11],[36,7],[22,-1],[35,-14],[40,-33],[36,-23],[20,0],[83,26],[41,3],[96,-9],[39,-12],[7,-12],[-25,-13],[-16,-11],[-6,-10],[14,-11],[58,-23],[83,-51],[-1,-19],[-45,-38],[1,-9],[214,40],[217,-18],[61,-12],[23,-15],[25,-24],[27,-34],[-19,-35],[-95,-55],[-98,-43],[-58,-38],[-88,-22],[-305,-92],[-149,-30],[-85,-30],[-39,-5],[-181,6],[-48,-16],[-26,-28],[-58,-13],[-84,-9],[-172,-7],[-39,-31],[-10,-21],[-17,-16],[-15,-8],[-492,-111],[-10,-18],[50,-8],[63,8],[717,134],[137,9],[128,-10],[-14,-31],[-181,-88],[-231,-80],[-115,-61],[-291,-104],[-237,-105],[-92,-52],[-122,-95],[-42,-23],[-51,-9],[-60,4],[-54,14],[-72,35],[-65,39],[-21,7],[13,-19],[126,-132],[-14,-25],[-232,-27],[-103,-23],[-53,-6],[-38,4],[-36,-2],[-36,-10],[-2,-10],[32,-11],[92,-9],[206,30],[33,-2],[52,-15],[3,-13],[-55,-42],[-166,-50],[21,-2],[48,-18],[-1,-16],[-52,-38],[-25,-12],[-160,-35],[-70,-8],[-62,4],[-281,77],[-99,11],[-94,19],[-69,-3],[-74,-22],[33,-12],[136,-21],[114,-4],[47,-9],[18,-14],[49,-51],[8,-27],[-11,-25],[-15,-18],[-18,-10],[-30,-5],[-111,3],[-41,-6],[-48,-15],[-61,-6],[-109,3],[-128,-22],[-67,-4],[-76,10],[-81,24],[-86,12],[-145,11],[12,-14],[51,-6],[104,-37],[50,-51],[47,-8],[96,-42],[69,-6],[72,-14],[102,18],[68,-3],[-14,-102],[-30,-10],[-164,0],[-79,15],[-34,15],[-76,17],[-68,-10],[-62,2],[-42,-10],[-67,1],[-174,-18],[-92,0],[-68,11],[-79,4],[-90,-4],[7,-12],[38,-4],[55,-19],[52,-29],[43,-13],[51,7],[52,14],[190,23],[84,3],[75,-10],[49,-12],[35,-15],[44,-40],[109,-5],[84,-13],[133,-58],[37,-4],[15,-15],[-28,-38],[-4,-22],[-92,-44],[-144,-12],[-158,4],[-113,-5],[-12,-6],[78,-11],[180,-51],[69,-28],[13,-16],[-100,-61],[-87,-122],[-29,-10],[-30,-3],[-77,2],[-98,-30],[-74,-6],[-134,11],[-154,-1],[-13,-19],[-7,-38],[1,-57],[9,-76],[-8,-56],[-26,-35],[-32,-26],[-58,-25],[-60,-16],[-44,-5],[-75,-1],[-213,-18],[-105,1],[-81,8],[-83,25],[-140,71],[-40,16],[-38,9],[1,-15],[42,-40],[35,-26],[28,-11],[-7,-12],[-62,-20],[-67,-8],[-81,0],[-2,-7],[27,-21],[35,-19],[24,-6],[61,6],[72,24],[44,8],[89,-6],[35,-9],[110,-54],[16,-2],[82,27],[118,1],[44,-21],[16,-43],[2,-34],[-12,-26],[27,-25],[67,-25],[52,-6],[37,14],[56,35],[24,8],[23,-2],[34,-25],[46,-48],[5,-56],[-38,-64],[-46,-42],[-180,-69],[-55,-27],[-43,-28],[-63,-26],[-123,-34],[-64,-6],[-140,-37],[-31,-2],[-45,6],[-9,18],[11,32],[15,30],[19,27],[0,23],[-39,35],[-28,16],[-27,9],[-54,-5],[-30,-10],[-33,-2],[-35,6],[-29,15],[-59,63],[-22,8],[-29,-2],[-25,9],[-23,20],[-38,19],[10,-15],[38,-35],[26,-36],[15,-35],[-7,-27],[-321,-16],[-138,8],[-28,25],[-66,103],[-14,-183],[-241,-30],[-56,5],[-93,20],[-121,50],[-50,33],[-20,32],[-15,18],[-9,3],[-30,-39],[-33,-81],[-83,21],[-104,20],[-38,80],[-2,-115],[-169,15],[-81,-4],[-23,100],[-4,112],[-33,-71],[14,-59],[5,-73],[-72,21],[-157,10],[-56,10],[7,96],[13,97],[202,96],[60,45],[44,18],[69,12],[89,7],[60,-6],[70,6],[82,17],[59,5],[11,6],[-17,9],[-63,62],[-23,14],[-23,6],[-45,3],[-45,27],[-25,24],[-28,32],[-43,62],[-44,69],[22,37],[72,30],[72,21],[73,11],[60,0],[73,-16],[103,-32],[59,-36],[74,-76],[49,-61],[39,-27],[177,-50],[59,-8],[70,4],[143,13],[70,14],[31,16],[16,23],[21,18],[63,41],[96,85],[54,68],[12,22],[11,28],[9,32],[-30,-17],[-167,-167],[-35,-30],[-97,-51],[-42,-8],[-66,2],[-89,23],[-104,-36],[-63,9],[-56,25],[0,118],[-71,95],[78,48],[65,29],[115,77],[26,1],[84,-12],[-46,17],[-45,26],[-100,-7],[35,166],[-67,-124],[-68,-65],[-42,-33],[-46,-18],[-176,-17],[43,61],[40,90],[-42,-34],[-99,-50],[-74,-27],[-61,-14],[-118,4],[-59,25],[17,62],[0,77],[36,35],[54,46],[59,61],[40,63],[158,29],[153,11],[128,34],[63,6],[60,-16],[244,-26],[100,-20],[44,-15],[33,-5],[34,22],[44,21],[152,-2],[42,3],[39,10],[47,20],[56,30],[8,15],[-38,-1],[-39,-8],[-58,-21],[-56,-12],[-57,2],[-115,19],[-200,3],[-102,8],[-47,9],[-27,12],[-23,19],[-20,25],[10,17],[41,10],[35,2],[57,-14],[63,-23],[69,-3],[-24,21],[-88,42],[-60,36],[-51,44],[-40,43],[-87,68],[-70,68],[-50,30],[-52,15],[-160,18],[-32,12],[-76,59],[-20,100],[-34,61],[32,77],[54,35],[318,-27],[135,4],[172,-10],[92,-19],[106,-47],[94,-53],[91,-36],[83,-48],[91,-73],[54,-34],[47,-21],[62,-19],[118,-23],[103,-7],[53,3],[57,16],[41,20],[-45,6],[-119,-3],[-82,11],[-47,23],[-50,31],[-79,59],[-60,39],[-131,63],[-97,62],[-78,60],[-7,25],[56,18],[69,13],[432,40],[258,48],[105,56],[12,13],[346,78],[244,29],[94,5],[85,13],[3,7],[-74,11],[-75,5],[-171,0],[-152,9],[-46,18],[10,28],[14,25],[46,40],[49,31],[209,88],[140,38],[41,25],[-302,-57],[-106,-41],[-106,-62],[-55,-19],[-39,5],[-35,-6],[-31,-16],[-25,-30],[-21,-44],[-19,-30],[-17,-16],[-43,-23],[-104,-44],[-242,-63],[-82,-16],[-70,-3],[-226,-35],[-68,-2],[-76,11],[33,31],[119,56],[32,25],[-77,-5],[-78,-16],[-172,-12],[-69,-23],[-66,-42],[-53,-26],[-40,-11],[-55,-6],[-202,-3],[-45,2],[-116,32],[-103,-11],[-43,2],[-78,23],[-23,14],[3,20],[45,37],[53,35],[170,78],[109,37],[158,31],[369,35],[17,26],[-374,-29],[-318,-36],[-52,-14],[-74,-35],[-235,-129],[-70,-33],[-106,-7],[-81,11],[-63,16],[-109,38],[-83,21],[-39,13],[-23,14],[-18,17],[-15,18],[27,16],[210,33],[284,-6],[128,7],[125,20],[186,51],[201,71],[40,22],[-74,5],[-54,-5],[-131,-26],[-208,-68],[-181,-24],[-448,-13],[-142,-19],[-63,4],[-47,19],[-52,34],[9,28],[107,31],[84,7],[15,7],[-119,30],[-11,15],[69,34],[148,50],[76,15],[137,10],[142,-5],[5,9],[-140,19],[-105,4],[-138,-14],[-369,-80],[-31,2],[-53,14],[15,20],[197,85],[6,13],[-141,-2],[-42,4],[-40,10],[-58,-9],[-75,-27],[-52,-12],[-31,4],[-78,33],[10,27],[62,35],[57,25],[77,23],[126,29],[90,10],[148,0],[70,13],[62,22],[78,36],[86,25],[140,20],[118,-6],[65,-18],[51,-31],[56,-24],[5,19],[46,24],[58,10],[69,-3],[61,-12],[79,-28],[63,-13],[30,0],[38,16],[99,1],[-2,6],[-32,17],[-40,12],[-352,82],[-10,18],[119,17],[74,21],[35,5],[87,43],[57,22],[105,25],[43,-7],[53,-22],[51,-14],[151,-13],[65,-14],[115,-81],[46,-26],[66,-27],[39,-10],[77,-6],[8,15],[-92,38],[-25,22],[11,18],[20,10],[28,1],[72,-17],[192,-56],[288,-67],[110,-15],[68,-24],[62,-29],[61,-20],[11,2],[-57,45],[-139,55],[-371,94],[-147,50],[-72,33],[-53,34],[-1,19],[50,21],[68,17],[85,7],[11,7],[-78,26],[-45,22],[1,16],[93,12],[57,-4],[108,-28],[91,-13],[15,8],[-94,75],[-9,17],[14,9],[33,10],[98,-5],[161,-37],[290,-18],[79,3],[-12,8],[-115,23],[-121,30],[-53,18],[-39,24],[-47,21],[-4,9],[75,16],[196,-3],[182,-24],[155,9],[97,-6],[39,-8],[70,-26],[224,-96],[23,-15],[26,-23],[27,-32],[38,-8],[74,21],[49,21],[-21,20],[-124,46],[-28,20],[-61,34],[-139,59],[-37,28],[-23,24],[383,22],[370,-20],[60,-14],[40,-19],[38,-30],[60,-30],[119,-46],[171,-29],[-33,20],[-127,51],[-58,35],[1,23],[10,18],[20,13],[144,47],[206,15],[24,-3],[161,-73],[76,-30],[53,-12],[2,5],[-74,34],[-56,18],[-6,12],[94,35],[59,9],[251,10],[28,-3],[24,-10],[59,-39],[22,-5]],[[23476,96654],[70,-22],[76,11],[81,2],[182,-10],[120,6],[31,-3],[47,-14],[25,-18],[23,-28],[-59,-18],[-50,-89],[-7,-5],[-54,-1],[-27,-7],[-159,13],[-438,5],[-19,11],[-58,53],[-4,21],[11,24],[12,16],[14,8],[128,39],[55,6]],[[24016,95061],[18,-43],[3,-18],[1,-37],[-8,-49],[-5,-9],[-7,-4],[-4,-13],[0,-21],[-7,-12],[-15,-5],[-99,-10],[-62,2],[-91,-6],[-45,3],[-30,11],[-43,22],[-91,55],[-45,2],[-116,19],[-63,58],[-24,11],[-25,-18],[-7,4],[-6,12],[-7,20],[-12,10],[-48,-5],[-9,6],[-2,18],[0,15],[9,23],[51,65],[25,5],[31,12],[17,35],[-2,33],[48,49],[28,15],[51,34],[172,54],[48,4],[63,-4],[62,-17],[47,-28],[97,-70],[44,-43],[23,-43],[21,-25],[26,-54],[-9,-21],[-6,-28],[3,-14]],[[22221,94438],[235,-123],[33,10],[71,6],[73,19],[102,15],[63,27],[26,8],[45,5],[25,0],[70,-15],[29,-11],[15,-11],[16,-19],[28,-49],[4,-18],[-1,-5],[-26,-30],[-17,-13],[-36,-12],[-30,-4],[-27,-21],[-29,5],[-9,-19],[4,-12],[8,-6],[15,1],[17,8],[33,-4],[18,-13],[15,-21],[-11,-20],[-59,-27],[-87,-31],[-105,-98],[-56,-41],[-11,-13],[-6,-13],[2,-24],[2,-10],[16,-4],[51,34],[34,16],[33,9],[60,0],[25,-5],[44,-20],[41,-32],[9,-11],[-4,-11],[-17,-12],[-2,-8],[39,-15],[43,-43],[3,-26],[-19,-26],[-5,-18],[9,-8],[21,5],[51,29],[55,15],[22,-2],[14,-6],[14,-40],[12,-45],[2,-37],[-9,-31],[-13,-23],[-33,-30],[-30,-11],[-16,0],[2,-5],[35,-25],[15,-19],[6,-19],[-2,-18],[-5,-16],[-41,-57],[2,-9],[12,-3],[26,-33],[3,-78],[-93,-24],[-22,-18],[-25,-28],[-29,-22],[-67,-22],[-33,-3],[-167,19],[-17,11],[-11,19],[-7,29],[-1,22],[2,16],[0,9],[-5,3],[-19,-16],[-19,-29],[11,-33],[52,-91],[10,-39],[2,-16],[-3,-13],[-59,-53],[-34,-18],[-36,-9],[-33,7],[-32,22],[-24,10],[-51,-1],[-15,11],[-15,22],[-35,76],[-50,54],[-42,61],[-108,89],[-56,53],[-75,86],[-31,19],[-26,8],[-51,6],[-12,11],[-19,29],[-32,22],[-11,3],[-19,-6],[-50,-20],[-63,22],[-14,15],[-8,25],[-8,14],[-21,13],[-18,31],[-119,63],[-71,72],[-14,26],[-2,10],[7,35],[17,39],[21,39],[14,16],[46,33],[37,8],[51,-4],[27,-8],[24,-22],[11,-26],[12,-18],[38,-19],[20,-15],[30,-36],[24,-43],[21,-14],[52,-5],[53,7],[114,27],[5,4],[7,16],[13,98],[8,0],[39,-45],[11,-5],[16,9],[10,23],[-1,10],[-24,53],[-15,23],[-13,15],[-14,4],[-31,-4],[-24,10],[-5,15],[4,19],[13,21],[14,12],[27,6],[32,-6],[44,-25],[28,-6],[40,7],[-51,15],[-70,58],[-30,11],[-36,-25],[-25,-9],[-47,-12],[-37,-2],[-156,89],[-9,9],[-11,23],[1,11],[16,17],[38,22],[58,13],[39,3],[34,-17],[49,-44],[43,-26],[4,9],[-8,26],[-20,38],[-14,10],[-34,11],[-33,26],[-15,20],[-8,20],[-1,22],[7,15],[13,8],[120,22],[83,-24],[53,-4],[22,30],[-7,6],[-28,-8],[-32,0],[-19,17],[-1,9],[25,23],[37,10]],[[26411,89435],[10,-7],[11,4],[20,29],[44,82],[13,7],[18,-1],[65,-52],[24,-30],[13,-41],[14,-16],[51,-21],[49,-7],[65,-21],[23,-16],[51,-78],[6,-5],[59,-32],[89,-72],[23,-10],[87,-24],[32,-17],[30,-27],[34,-49],[39,-77],[31,-123],[2,-24],[-3,-14],[-12,-16],[-50,-50],[4,-9],[48,4],[105,31],[65,-23],[22,-3],[5,1],[24,39],[25,-6],[38,-38],[24,-30],[10,-23],[-2,-13],[-25,-5],[60,-22],[53,-35],[-11,-23],[-57,-51],[-57,-45],[-67,-66],[-17,-11],[-9,0],[-37,12],[-54,32],[-164,73],[-51,15],[-64,9],[-9,17],[-16,110],[-29,19],[-99,23],[-29,13],[-2,22],[7,38],[-14,19],[-33,-1],[-33,-8],[-53,-26],[-25,-24],[-9,-25],[-6,-55],[-7,-26],[-18,-35],[-82,-88],[-33,-27],[-33,-7],[-13,-9],[-22,-32],[-33,-80],[-14,-23],[-21,-24],[-46,-36],[-46,-29],[-77,-33],[-42,-11],[-29,11],[-20,76],[-41,223],[-7,15],[-8,9],[-10,4],[-138,-29],[-76,3],[-75,-50],[-19,-3],[-39,1],[-27,8],[-7,6],[-5,21],[2,23],[9,25],[34,66],[28,41],[13,13],[129,74],[31,24],[16,25],[0,25],[-6,33],[-23,80],[-5,73],[0,36],[8,55],[33,135],[11,66],[20,234],[11,67],[16,62],[15,37],[42,73],[31,30],[41,20],[8,-2],[8,-9],[15,-31],[56,-29],[18,-28],[12,-31],[7,-40],[-7,-18],[-26,-27],[-5,-11],[1,-9],[51,-42],[38,-102]],[[22861,95890],[3,-26],[-4,-19],[-9,-14],[-1,-17],[9,-18],[37,-45],[12,-25],[2,-25],[-2,-17],[-23,-32],[-10,-43],[-1,-22],[14,-35],[0,-16],[-26,-28],[-54,-25],[8,-13],[117,-30],[9,-7],[0,-70],[20,-76],[-8,-1],[-28,24],[-52,28],[-63,-53],[7,-90],[42,-40],[12,-23],[-4,-13],[-35,-6],[-12,2],[-35,19],[-21,27],[-7,-1],[-6,-13],[4,-14],[24,-24],[11,-29],[-11,-8],[-36,-8],[-48,0],[-76,-13],[-38,-2],[-36,7],[-49,1],[-41,-3],[-24,6],[-23,14],[-26,-3],[-57,-35],[-89,11],[-80,3],[-16,11],[-18,23],[-35,70],[6,18],[86,9],[2,6],[-61,25],[-70,18],[-32,15],[7,27],[-2,7],[120,32],[88,62],[54,25],[4,12],[46,13],[106,7],[4,18],[-200,-10],[-274,-35],[-85,-18],[-71,10],[-300,-54],[-13,0],[-31,17],[-27,33],[19,22],[88,43],[44,37],[-5,21],[35,35],[56,5],[96,-29],[49,-29],[45,-14],[39,3],[41,20],[-11,3],[-69,-11],[-8,3],[-35,33],[-15,20],[-10,21],[-1,15],[21,28],[-79,9],[-29,19],[-14,24],[3,11],[25,28],[67,39],[-8,10],[-97,-1],[-22,5],[-42,24],[9,27],[39,39],[30,23],[19,7],[31,0],[73,-15],[21,-8],[56,-38],[14,-21],[-2,-21],[11,-15],[43,-22],[186,-115],[35,-27],[23,-12],[43,-9],[26,2],[20,8],[3,10],[-80,40],[-20,22],[-17,29],[7,9],[24,4],[58,-4],[69,8],[-76,12],[-50,16],[-52,1],[-64,26],[0,8],[16,9],[87,11],[17,5],[1,7],[-29,18],[-26,9],[-132,21],[-47,24],[-15,11],[-4,11],[17,28],[71,35],[51,17],[89,12],[71,-1],[40,-5],[94,-59],[45,-39],[77,7],[-22,40],[-15,45],[23,17],[64,29],[51,-15],[66,-40],[15,-13],[75,-25],[44,-8],[23,-13],[7,-17]],[[21270,97531],[65,-11],[77,-37],[73,-79],[4,-10],[0,-13],[-3,-16],[-9,-21],[-13,-12],[37,-15],[4,-8],[-3,-17],[4,-12],[23,12],[19,19],[5,12],[4,32],[57,17],[60,23],[28,5],[47,-5],[112,-56],[43,-5],[16,-7],[14,-13],[1,-14],[-23,-32],[-9,-20],[6,-13],[58,-11],[134,22],[117,-53],[65,-63],[47,-21],[8,-11],[-14,-11],[-13,-29],[-39,-22],[-8,-10],[21,-26],[1,-17],[-2,-22],[7,-13],[53,-14],[119,-93],[22,-26],[14,-32],[1,-11],[-17,-18],[-19,-51],[-10,-12],[-49,-10],[-88,-9],[-83,-17],[-88,22],[-87,34],[-26,22],[-22,28],[-5,10],[-9,44],[-4,9],[-37,24],[-32,37],[-63,3],[-147,38],[-63,8],[-64,-2],[-89,-15],[-17,4],[-15,11],[-14,18],[-3,14],[14,23],[-262,-29],[-75,-35],[-105,6],[-53,14],[-69,33],[-32,29],[-30,38],[-3,29],[24,20],[25,11],[26,4],[142,-23],[125,-11],[54,11],[25,32],[-30,16],[-120,7],[26,17],[101,16],[53,26],[-10,8],[-30,10],[-137,-2],[-48,9],[-3,9],[11,10],[77,51],[-3,10],[-33,16],[-29,22],[-11,3],[-68,-20],[-95,-75],[-22,-11],[-22,1],[-21,12],[1,16],[21,19],[44,58],[-4,21],[-42,14],[-114,-10],[-63,-1],[-9,17],[-3,30],[3,29],[15,45],[22,35],[13,12],[151,-7],[245,21],[71,2],[78,-21]],[[24476,98578],[36,-48],[134,-115],[61,-42],[103,-51],[13,-19],[1,-8],[-3,-28],[30,-10],[88,-16],[99,-28],[18,1],[34,17],[42,5],[54,-4],[26,-12],[19,-18],[8,-13],[1,-10],[-19,-19],[2,-8],[12,-8],[2,-11],[-20,-41],[5,-15],[50,-37],[45,-19],[89,-20],[58,2],[36,-13],[1,8],[-17,23],[-34,34],[-65,18],[-9,19],[-5,34],[6,22],[33,18],[27,6],[84,1],[45,-8],[80,-25],[8,-14],[4,-27],[3,-54],[-2,-12],[-67,-30],[-15,-21],[17,-6],[58,-5],[90,-19],[35,-2],[35,-44],[27,-41],[-20,-52],[-26,-82],[-21,-19],[-21,-28],[15,-6],[88,12],[18,4],[59,28],[86,-7],[29,-7],[15,-10],[26,-31],[22,-41],[16,3],[40,51],[15,12],[20,12],[9,-2],[40,-47],[91,-82],[31,-34],[6,-26],[-39,-29],[-30,-15],[-223,-62],[-99,-35],[-50,-28],[-25,-9],[-54,5],[-12,-5],[-16,-44],[-18,-19],[-46,-30],[-65,-55],[-38,-24],[-68,18],[-17,25],[-10,58],[-1,24],[2,13],[9,20],[29,49],[-3,6],[-14,-5],[-45,-24],[-18,-13],[-16,-23],[-8,-38],[7,-70],[-6,-28],[-18,-14],[7,-11],[53,-15],[9,-7],[6,-12],[3,-17],[-3,-16],[-16,-25],[-30,-10],[-38,11],[-82,61],[-36,-3],[-9,-7],[8,-22],[25,-48],[5,-41],[-12,-33],[-23,-53],[-16,-29],[-9,-3],[-41,-1],[-35,14],[-104,93],[-51,39],[-76,78],[-19,15],[-12,4],[-10,-33],[20,-31],[68,-72],[41,-53],[29,-43],[4,-19],[-9,-7],[-15,4],[-20,16],[-62,25],[-26,15],[-16,16],[-31,13],[-45,8],[-45,2],[-45,-5],[-8,-8],[50,-23],[18,-12],[13,-17],[9,-19],[-17,-13],[-63,-7],[-84,5],[-137,17],[-136,28],[-125,44],[-91,44],[-36,23],[-11,17],[34,16],[119,19],[119,13],[-19,11],[-217,25],[-71,4],[-38,-6],[-44,4],[-34,20],[-45,37],[-23,25],[3,10],[17,5],[99,-4],[13,3],[-49,19],[-157,37],[-59,33],[-11,12],[-4,13],[1,12],[59,25],[183,59],[62,9],[63,1],[44,16],[38,56],[189,20],[146,25],[12,7],[-109,-4],[-155,5],[-65,37],[-45,7],[-49,0],[-57,-12],[-98,-35],[-47,-9],[-107,-36],[-29,3],[-15,4],[-5,7],[19,24],[28,17],[-5,5],[-42,4],[-48,-1],[-34,-6],[-122,-32],[-55,-23],[-17,-3],[-59,38],[-95,20],[-21,16],[20,63],[27,13],[73,11],[217,57],[13,11],[20,29],[-50,-7],[-109,-27],[-90,-14],[-71,0],[-51,4],[-33,8],[-40,17],[-128,83],[-36,39],[-4,36],[-9,26],[-38,65],[276,-40],[107,-8],[208,-2],[10,3],[3,11],[-4,17],[2,13],[7,9],[77,23],[12,8],[-91,4],[-168,-39],[-59,0],[-67,56],[-71,-10],[-34,4],[-53,14],[-26,12],[-16,15],[-7,13],[2,10],[14,12],[62,16],[28,1],[73,-10],[55,1],[-18,17],[-79,43],[-70,47],[5,80],[57,17],[60,2],[58,-20],[77,-2],[56,-23],[37,-44],[44,1],[69,-8],[155,1],[-28,15],[-49,14],[-109,18],[-53,63],[-114,33],[-88,17],[1,15],[67,79],[80,28],[128,-10],[85,14],[108,28],[106,-13],[28,2],[16,8],[14,17],[0,15],[-14,14],[-34,17],[-135,2],[-60,7],[-23,9],[-7,14],[-4,14],[0,15],[4,9],[11,5],[33,6],[126,0],[76,8],[83,-10],[173,-39],[55,-20],[60,-34],[31,-30]],[[23807,96147],[52,-5],[44,8],[38,-2],[56,-23],[53,-36],[40,-16],[13,-8],[5,-9],[6,-27],[0,-12],[-3,-10],[-18,-25],[-15,-30],[-30,-27],[-16,-20],[-14,-26],[31,15],[119,85],[77,-10],[117,7],[141,35],[67,5],[67,-3],[50,-10],[108,-47],[37,-22],[14,-16],[3,-11],[-22,-18],[-67,11],[-111,10],[-20,5],[-18,0],[-12,-6],[8,-25],[22,-5],[133,-6],[436,-78],[19,-25],[-5,-11],[-16,-12],[-31,-17],[-252,-18],[-143,16],[-120,26],[-41,-6],[35,-35],[72,-10],[61,-21],[25,-17],[128,-13],[21,-13],[40,-34],[33,-3],[33,-24],[27,-41],[13,-5],[39,7],[64,-36],[21,-19],[0,-14],[-15,-22],[-29,-31],[-73,-35],[-6,-11],[86,4],[16,-5],[101,-63],[13,-1],[8,6],[10,23],[-4,21],[-13,28],[4,21],[19,13],[19,7],[19,0],[21,-8],[102,-77],[131,37],[24,-17],[20,-30],[9,-5],[49,61],[30,15],[123,-73],[75,-16],[30,-15],[55,-18],[79,-6],[13,27],[-45,35],[26,15],[109,29],[58,-4],[107,42],[66,5],[40,0],[133,63],[31,10],[23,22],[52,-3],[141,-36],[40,3],[150,36],[56,8],[55,-1],[141,-21],[105,-22],[33,-12],[-12,-29],[6,-9],[13,-7],[35,-8],[131,-1],[57,-7],[46,-28],[10,-11],[-1,-11],[-45,-30],[7,-7],[45,-6],[100,-4],[22,-7],[21,-37],[21,-52],[0,-20],[-35,-35],[-95,-46],[-106,-39],[-7,-10],[34,-18],[35,-9],[27,2],[85,18],[19,-1],[38,-18],[18,-17],[17,-24],[-30,-22],[-121,-27],[-72,36],[-24,7],[-16,-3],[9,-15],[35,-28],[11,-18],[-12,-9],[-6,-18],[1,-26],[-3,-27],[-11,-42],[-5,-2],[-263,-8],[-32,-8],[-74,-29],[-56,-15],[-36,-2],[-36,5],[-96,31],[-64,-6],[-25,3],[-55,20],[-13,10],[-22,27],[-16,37],[1,22],[7,32],[-4,17],[-16,0],[-17,6],[-52,33],[-32,10],[-6,-6],[10,-25],[6,-8],[34,-19],[6,-21],[-14,-55],[-5,-8],[-34,-40],[-25,-12],[-68,-1],[-105,-28],[-50,-4],[-67,7],[-42,12],[-27,15],[-27,21],[-13,2],[-7,-46],[-13,-6],[-23,1],[-35,14],[-28,33],[-9,0],[-4,-19],[-7,-13],[-8,-6],[-74,-20],[-41,0],[-43,23],[-28,-2],[-36,-13],[-87,24],[-21,1],[18,-39],[-29,-6],[-62,1],[-103,13],[-64,-19],[-114,11],[-116,3],[-22,9],[-15,18],[-1,16],[6,23],[17,33],[28,45],[10,23],[-26,11],[-15,15],[-13,1],[-41,-17],[-27,-50],[-20,-14],[-9,12],[-7,30],[-9,15],[-11,-1],[-11,-8],[-11,-15],[-15,-6],[-22,4],[-7,-7],[6,-20],[2,-18],[-2,-16],[-18,-17],[-52,-24],[-31,-7],[-79,-4],[-48,7],[-96,29],[-53,1],[-64,48],[-51,11],[3,18],[22,32],[-1,9],[-69,-47],[-10,-15],[9,-34],[-10,-3],[-47,13],[-47,-10],[-12,3],[-32,25],[-57,26],[-25,28],[-39,90],[-20,59],[2,12],[29,16],[-4,13],[-36,34],[-39,28],[-12,19],[-5,20],[-5,28],[-1,21],[5,13],[22,42],[62,76],[8,14],[3,13],[-8,40],[-12,40],[-12,29],[-34,39],[-46,42],[-66,73],[-48,58],[-58,80],[-28,7],[-32,-3],[-70,-28],[-24,-13],[-5,-9],[-52,-2],[-148,7],[-56,9],[-42,-3],[-72,-20],[-77,4],[-48,56],[-110,31],[-33,17],[-22,24],[7,15],[63,14],[26,15],[12,12],[-62,-10],[-27,1],[-186,77],[-57,14],[-10,7],[-4,9],[0,11],[5,17],[55,-22],[25,-1],[39,6],[14,14],[-9,7],[-64,26],[-30,19],[-12,15],[12,20],[3,13],[21,8],[37,1],[48,10],[88,26],[59,10],[59,-2],[142,-27],[142,-34],[89,-26]],[[23276,97079],[66,-15],[113,7],[41,-11],[106,-39],[32,-23],[8,-17],[0,-9],[-35,-19],[-71,-28],[-17,-22],[63,-27],[32,-24],[15,-17],[0,-18],[-42,-48],[-31,-14],[-48,2],[-23,-5],[-60,-22],[-95,-21],[-129,-9],[-35,-13],[-65,-22],[-43,-3],[-14,12],[-6,18],[3,13],[9,15],[-21,15],[-92,28],[-54,39],[-8,13],[-2,11],[119,7],[52,8],[23,13],[4,7],[-23,3],[-82,26],[-138,16],[-7,19],[-57,36],[-6,35],[-12,10],[-39,15],[-6,5],[-12,22],[-1,12],[2,12],[71,23],[-10,16],[-54,61],[-14,34],[2,13],[34,18],[47,0],[124,-5],[59,-8],[59,-14],[65,-22],[97,-19],[31,-12],[58,-41],[7,-12],[-4,-13],[14,-12]],[[24119,94562],[109,-27],[53,-18],[26,-12],[50,-40],[25,-12],[97,24],[68,8],[151,-10],[127,-34],[48,-24],[28,-23],[-7,-26],[-24,-41],[-27,-38],[-56,-61],[-47,-31],[-11,-14],[-8,-21],[-18,-29],[-50,-65],[-14,-11],[-71,-28],[25,-12],[11,-11],[-10,-29],[-45,-69],[-46,-63],[-33,-39],[-59,-55],[-32,-15],[-44,-5],[-263,48],[-66,-1],[-176,-25],[17,-12],[64,-19],[41,-20],[55,-63],[8,-16],[3,-18],[-2,-36],[-4,-9],[-87,-97],[-29,-71],[-18,-58],[-29,-16],[-98,24],[-32,0],[-110,-17],[-52,8],[8,88],[-8,95],[-16,90],[-82,161],[-9,29],[-6,31],[-3,33],[0,33],[6,67],[0,34],[-4,88],[-11,132],[-1,47],[1,19],[3,14],[18,19],[34,13],[17,2],[108,-40],[50,-13],[33,0],[2,5],[-30,8],[-27,18],[-46,51],[-20,44],[-5,14],[-1,16],[3,15],[6,15],[23,22],[18,10],[68,26],[69,15],[151,11],[42,-8],[66,29],[38,6],[67,-10]],[[22933,91959],[9,-7],[16,6],[12,19],[8,4],[12,-4],[39,-34],[29,-35],[32,-25],[50,-23],[110,-73],[32,-49],[34,-77],[31,-58],[26,-41],[29,-32],[46,-36],[41,26],[18,7],[15,-11],[14,-27],[-7,-12],[-18,-16],[-29,-17],[-42,-2],[-20,-5],[-32,-28],[-26,-35],[-36,-11],[-67,-57],[-37,-22],[-55,-5],[-114,44],[-71,-6],[-58,9],[-64,48],[-51,26],[-97,39],[-6,6],[-4,13],[-2,20],[-5,14],[-6,7],[-16,-1],[-15,-14],[-30,-11],[-46,2],[-20,9],[-15,12],[-8,15],[-1,17],[-5,13],[-7,9],[-16,0],[-26,-8],[-10,-11],[5,-13],[-4,-8],[-46,0],[-18,8],[-34,24],[-15,24],[-19,43],[2,11],[12,26],[16,19],[103,10],[48,11],[53,29],[61,52],[13,15],[1,11],[-4,12],[-19,30],[-7,20],[6,9],[25,1],[-13,12],[-11,16],[-4,10],[1,16],[19,4],[24,-8],[47,-47],[18,-9],[32,-7],[-34,32],[-35,67],[-4,24],[1,13],[9,36],[8,14],[11,10],[33,21],[53,14],[28,2],[27,-11],[24,-23],[54,-37],[8,-15],[-1,-7],[-20,-10],[-3,-9],[8,-14]],[[33026,78308],[9,-4],[38,28],[20,-1],[-1,-20],[-32,-22],[-15,-17],[18,-15],[0,-10],[-22,-25],[-11,-27],[9,-26],[36,26],[14,0],[20,-6],[19,8],[11,13],[63,99],[3,13],[-68,-20],[-8,13],[45,61],[-4,31],[23,51],[20,30],[15,16],[22,16],[15,-24],[5,-43],[37,6],[37,-9],[26,-18],[5,-10],[0,-17],[-9,-29],[-15,-25],[30,-31],[-4,-13],[-48,-36],[-28,-35],[-25,-44],[-50,-51],[-80,-36],[-25,0],[-30,11],[-30,-3],[-29,-13],[-29,1],[-13,-7],[-14,1],[-11,14],[-23,41],[-12,27],[-12,130],[4,68],[20,63],[29,43],[17,34],[72,200],[14,45],[17,39],[31,39],[40,64],[12,14],[23,6],[23,-4],[-7,-23],[2,-23],[26,-89],[0,-18],[-15,-71],[-27,-116],[-7,-63],[4,-19],[-11,-32],[-12,-25],[-47,-45],[-24,-11],[-22,-17],[-54,-58]],[[29247,77766],[40,22],[82,85],[61,30],[80,89],[57,17],[11,20],[9,73],[6,26],[26,73],[33,61],[26,84],[47,54],[71,45],[66,98],[36,30],[35,22],[15,40],[21,23],[58,46],[64,13],[64,38],[50,21],[30,36],[44,19],[132,104],[36,49],[48,99],[41,51],[14,54],[60,87],[62,116],[30,83],[46,45],[89,132],[47,52],[20,6],[53,47],[34,48],[54,49],[97,60],[91,72],[123,63],[144,93],[117,50],[82,7],[100,24],[35,-3],[156,-40],[74,-50],[85,-106],[13,-27],[2,-39],[-45,19],[-40,1],[28,-22],[47,-65],[-3,-81],[-26,-73],[-79,-36],[-20,-29],[-16,-47],[-16,-18],[-39,-22],[-21,-30],[-62,-49],[-28,-6],[-32,11],[-78,47],[-47,44],[-24,-24],[-20,-25],[-46,8],[-21,-11],[-34,12],[-71,-56],[20,-6],[56,32],[19,-4],[42,-41],[100,-45],[26,-29],[25,-95],[16,-15],[35,10],[39,47],[32,25],[63,20],[-13,-31],[48,3],[48,-42],[-18,-30],[-24,-59],[-16,-116],[-49,-78],[-64,-76],[16,-19],[19,-11],[41,22],[28,-1],[31,-15],[-10,-59],[-11,-40],[7,-38],[18,-71],[25,-16],[10,-92],[14,-50],[-2,-40],[25,-25],[4,-41],[92,-12],[19,-16],[63,-15],[12,-12],[12,-22],[-63,-49],[51,-36],[47,-59],[38,12],[16,-2],[42,-36],[12,-19],[6,-16],[21,4],[31,14],[54,-4],[59,-20],[-5,-32],[-9,-21],[46,7],[28,-23],[10,11],[7,14],[57,38],[73,79],[9,-9],[3,-30],[10,-49],[28,-34],[33,-8],[45,26],[18,-22],[22,-43],[20,-57],[-1,-20],[-26,-17],[-24,-26],[99,-10],[10,-11],[10,-22],[-10,-22],[-9,-11],[-18,13],[-33,-12],[-28,-29],[-31,-16],[-20,-2],[-22,-14],[-20,-20],[-20,-6],[-65,-52],[-66,-33],[-69,-54],[-71,-34],[-73,-40],[-16,-4],[-19,2],[-41,-40],[-21,6],[-21,-7],[-25,9],[-16,16],[13,-42],[3,-39],[-6,-16],[-12,-20],[-42,3],[-16,14],[-20,21],[-9,33],[-21,24],[-13,-33],[1,-25],[-16,-33],[-18,57],[-34,-21],[-14,-61],[7,-17],[10,-46],[-16,-25],[-12,7],[-25,-68],[-31,-25],[-31,-69],[-37,-53],[-11,-36],[-62,-81],[-24,2],[-17,-2],[-26,-34],[-5,-68],[-11,9],[-12,-2],[-6,-22],[-9,-3],[-23,20],[-27,-11],[-21,15],[-27,100],[-14,35],[-26,12],[-6,-22],[-10,-20],[-25,41],[-18,153],[0,37],[26,129],[64,116],[-21,4],[-56,-81],[6,20],[9,20],[19,33],[29,31],[39,17],[27,3],[18,17],[27,30],[5,16],[-24,-18],[-39,-18],[10,23],[10,13],[209,208],[42,34],[84,44],[12,28],[-12,19],[33,-17],[-3,-23],[-5,-18],[-2,-29],[3,-28],[34,-14],[27,-52],[-13,71],[25,40],[96,54],[80,6],[25,25],[-68,17],[-81,-9],[-50,19],[-70,-12],[-73,11],[-22,-15],[-19,-34],[-23,15],[-12,3],[-11,11],[24,58],[74,87],[46,75],[12,15],[10,31],[-24,-5],[-22,-12],[-15,34],[-27,47],[-2,-20],[13,-57],[-51,-101],[-34,-7],[-44,-47],[-62,-41],[-73,-78],[-95,-66],[-19,-1],[-43,55],[12,24],[11,34],[-11,-10],[-7,-14],[-25,-24],[21,-45],[-11,-17],[-30,-22],[-27,-32],[-25,-22],[-20,28],[-54,-35],[-46,-9],[-10,17],[-3,28],[-16,7],[-30,-8],[-11,15]],[[34594,81530],[-20,-58],[-14,-28],[-13,-9],[-28,-8],[-59,-9],[-25,-8],[-3,-39],[4,-20],[8,-16],[11,-4],[24,9],[9,-1],[7,-8],[6,-15],[3,-20],[0,-25],[-4,-31],[-20,-73],[-25,-40],[-33,-33],[-7,-12],[-5,-15],[-4,-48],[-16,-38],[-52,-96],[-20,-22],[0,-17],[-8,-46],[-16,-36],[-43,-85],[-10,-30],[-5,-24],[1,-33],[-2,-15],[-10,-28],[-14,-27],[-3,-13],[6,-23],[5,-8],[1,-22],[-4,-34],[18,22],[40,78],[31,47],[20,16],[15,21],[15,46],[20,44],[19,15],[9,-9],[7,-21],[-1,-28],[-10,-33],[0,-10],[24,24],[41,21],[15,-3],[30,-30],[26,3],[40,18],[7,-8],[-7,-27],[-15,-26],[-37,-36],[-90,-72],[-28,-49],[5,2],[20,21],[20,11],[21,2],[9,-7],[-3,-14],[-3,-37],[-54,-74],[13,3],[62,33],[39,-46],[52,16],[31,16],[0,-10],[6,-20],[0,-33],[3,-5],[15,11],[3,12],[-1,58],[5,6],[10,-9],[6,-15],[2,-42],[-7,-43],[-9,-39],[-23,-57],[3,-24],[-6,-27],[5,-1],[23,25],[1,10],[-2,24],[3,11],[19,26],[31,31],[11,4],[4,-7],[-2,-19],[10,5],[20,28],[18,16],[17,6],[18,19],[19,32],[20,27],[21,21],[9,2],[-3,-35],[4,-40],[1,-34],[4,-7],[17,36],[9,13],[11,6],[12,-3],[87,13],[27,-9],[30,-24],[37,-36],[14,-33],[3,-42],[-4,-29],[-27,-37],[-24,-24],[-14,-24],[-5,-25],[-5,-15],[-16,-20],[-72,-59],[17,-2],[41,13],[28,3],[1,-9],[-11,-16],[-21,-17],[-2,-8],[1,-11],[22,-12],[29,6],[24,-9],[-3,-14],[-19,-46],[-5,-28],[-26,-25],[-50,-37],[-13,-15],[3,-3],[46,28],[24,7],[14,0],[17,27],[26,9],[26,-17],[39,46],[14,6],[24,-5],[15,8],[26,32],[20,15],[4,-1],[4,-13],[2,-36],[-5,-32],[-6,-21],[-21,-45],[-13,-16],[-12,-6],[-21,2],[-9,-7],[-20,-35],[-35,-36],[-22,-14],[14,-20],[5,-37],[-8,-12],[-37,-12],[-2,-6],[-13,-8],[-31,-13],[21,-6],[39,9],[4,-6],[-5,-27],[-11,-27],[-46,-70],[0,-7],[7,-35],[9,-26],[11,-18],[26,-1],[19,8],[27,47],[62,146],[55,41],[45,45],[11,-9],[5,-11],[-2,-11],[-23,-37],[-12,-31],[-31,-94],[-12,-45],[-6,-47],[1,-81],[4,-14],[9,-19],[19,17],[31,40],[20,38],[15,63],[10,24],[10,-1],[10,-13],[2,-30],[8,-42],[6,-41],[-4,-46],[-5,-25],[-63,-186],[6,-33],[2,-20],[-2,-22],[-20,-89],[-19,-55],[-11,-24],[-12,-15],[-15,-5],[-13,8],[-11,21],[-10,11],[-9,1],[-17,-4],[-42,-45],[-9,-3],[-6,6],[-8,24],[6,120],[4,40],[-9,30],[9,52],[1,19],[-6,7],[-10,-4],[-17,-26],[-22,-47],[-23,-42],[-42,-57],[-18,-11],[-8,2],[-8,8],[-12,24],[1,22],[5,29],[17,68],[34,101],[28,72],[5,31],[-7,13],[-7,27],[-11,78],[-13,64],[-16,28],[-41,32],[-7,-8],[-4,-43],[-48,-124],[-8,-54],[-6,-20],[-9,-14],[-21,-17],[6,29],[22,64],[-3,6],[-28,-51],[-21,-29],[-26,-7],[-16,2],[-15,-8],[-65,-121],[-3,-41],[-11,-33],[-32,-60],[-17,-21],[-24,-4],[-21,11],[-15,-2],[-33,-19],[-38,-8],[-16,4],[-10,7],[-19,24],[-2,16],[1,10],[10,25],[22,32],[18,11],[45,16],[33,24],[25,35],[12,21],[47,110],[60,39],[29,31],[21,40],[3,14],[-30,-20],[-15,-5],[-25,7],[-11,14],[-34,-4],[-47,6],[-7,-10],[-6,-54],[-6,-28],[-7,-9],[-11,-6],[-21,-6],[-55,19],[-11,11],[-14,8],[-60,-18],[-13,2],[12,12],[60,40],[6,112],[-3,18],[-17,-16],[-28,-16],[-20,5],[-9,10],[-8,-9],[-19,-59],[-12,-7],[-17,-3],[-38,-21],[-73,-15],[-14,-15],[-49,5],[-145,33],[-52,-3],[-62,20],[-12,8],[-87,-3],[-26,4],[2,25],[-3,6],[-25,-27],[-23,-18],[-29,-15],[-91,-26],[-49,-6],[-28,18],[-11,19],[-17,59],[-12,74],[0,13],[6,26],[19,36],[87,94],[69,96],[30,49],[28,18],[46,41],[2,5],[-45,-5],[-32,11],[-32,5],[-62,-11],[-62,0],[0,21],[29,40],[62,68],[6,1],[-19,-32],[-5,-24],[8,-16],[9,-10],[36,-4],[8,14],[12,73],[27,85],[14,61],[25,47],[13,7],[11,-9],[37,-11],[38,-43],[12,-3],[4,3],[-14,13],[-11,20],[-5,19],[14,59],[16,17],[3,12],[-32,0],[-26,16],[-8,27],[1,47],[9,28],[21,37],[25,25],[15,-6],[30,-34],[18,10],[-3,10],[-27,53],[-9,39],[1,19],[59,187],[29,100],[40,153],[9,24],[20,45],[9,12],[25,0],[16,6],[-23,19],[-8,14],[-1,15],[6,15],[9,12],[31,24],[22,40],[13,48],[-2,16],[-7,16],[0,9],[17,10],[42,56],[5,11],[16,75],[19,33],[17,17],[28,21],[86,52],[51,46],[34,-3],[10,-32],[49,-21],[9,23],[-12,28],[10,11],[40,10],[7,-4],[12,-16],[-2,-14]],[[25947,92747],[11,-12],[64,16],[54,18],[84,45],[50,15],[152,0],[26,-9],[-11,-26],[-7,-8],[5,-11],[17,-16],[33,-17],[13,16],[9,37],[23,153],[9,46],[5,44],[-1,41],[-11,26],[-39,16],[-53,-3],[-28,4],[-33,8],[-25,13],[-16,17],[-31,52],[-24,28],[-60,52],[-28,17],[14,21],[55,23],[33,23],[39,65],[23,11],[84,-9],[114,-51],[72,-44],[19,-5],[0,8],[-18,21],[-82,54],[-38,40],[-17,29],[8,12],[46,13],[6,14],[-63,17],[-31,0],[-26,-12],[-28,-1],[-51,22],[-14,13],[-30,38],[-15,34],[-17,21],[-7,16],[-3,51],[2,30],[7,26],[12,22],[33,39],[19,12],[35,5],[76,-20],[203,-71],[-5,23],[-227,96],[-81,24],[-20,35],[122,133],[111,31],[56,38],[91,2],[85,-25],[1,7],[-38,46],[3,12],[48,27],[89,32],[108,26],[22,13],[28,9],[51,9],[127,3],[71,-3],[95,-20],[55,-35],[17,-21],[30,-69],[24,-95],[35,-40],[56,-21],[39,-24],[22,-26],[6,-32],[-10,-39],[7,-40],[25,-41],[20,-24],[42,-26],[1,-14],[-13,-16],[-28,-23],[-70,-69],[-90,-76],[-64,-66],[-3,-20],[133,104],[42,-4],[2,-15],[-28,-50],[-33,-45],[-33,-29],[6,-11],[63,-50],[-11,-9],[-31,5],[-12,-5],[-9,-9],[-6,-14],[0,-20],[5,-25],[-1,-18],[-6,-13],[7,-5],[18,2],[16,10],[27,34],[88,93],[57,34],[18,4],[52,-23],[13,1],[-58,72],[-5,18],[12,26],[7,9],[32,20],[26,10],[15,-4],[24,-36],[11,-25],[19,-11],[44,14],[28,30],[36,-20],[54,-48],[-5,-48],[0,-49],[3,-35],[65,-65],[44,-28],[9,-1],[-2,10],[-9,22],[-24,21],[-23,34],[-20,40],[12,95],[34,50],[32,-13],[43,-29],[34,-2],[53,3],[108,-58],[58,-1],[-5,23],[-44,12],[-64,31],[-101,38],[-46,44],[-8,20],[1,22],[6,20],[10,16],[20,17],[97,50],[69,22],[51,7],[87,-1],[100,-9],[55,-14],[62,-36],[79,-35],[28,-6],[33,0],[38,8],[36,-3],[114,-52],[30,-27],[18,-32],[14,-32],[8,-31],[-3,-24],[-95,-108],[-41,-18],[-28,-41],[-40,-77],[-35,-42],[-3,-8],[7,-2],[21,19],[36,53],[26,46],[47,38],[78,45],[68,22],[58,-2],[49,-6],[39,-11],[24,-10],[7,-7],[16,-34],[-1,-23],[-10,-26],[-19,-29],[-84,-33],[-47,-25],[-29,-10],[-87,-9],[4,-10],[65,-14],[71,4],[-1,-16],[-34,-44],[-11,-38],[9,-31],[-1,-26],[-26,-53],[-28,-48],[10,-7],[66,69],[18,76],[27,66],[31,37],[23,14],[74,5],[40,39],[35,12],[15,1],[29,-15],[-1,-15],[-43,-70],[-92,-112],[38,13],[25,27],[34,26],[38,40],[25,-36],[39,-27],[23,-61],[38,-29],[23,-23],[-3,39],[-33,77],[9,31],[25,16],[79,65],[55,-22],[34,-19],[17,5],[43,-3],[69,-10],[67,-19],[66,-25],[50,-31],[35,-34],[21,-24],[8,-14],[12,-34],[-9,-23],[-50,-53],[-27,-24],[-27,-11],[-73,11],[-23,-7],[-24,-16],[-76,-73],[-42,-32],[-41,-20],[-10,-10],[89,1],[24,21],[21,41],[39,42],[74,19],[103,-41],[52,2],[39,41],[44,28],[17,6],[9,-3],[33,-30],[10,-26],[0,-60],[-5,-18],[-29,-46],[-73,-68],[-47,-25],[-52,-14],[-57,-23],[-20,-19],[-20,-26],[-20,-18],[-25,-14],[33,-22],[12,1],[13,13],[33,50],[24,23],[14,4],[14,-2],[14,-10],[14,-18],[-1,-43],[-42,-171],[7,0],[26,47],[74,178],[18,36],[36,36],[80,54],[63,29],[70,24],[37,9],[43,-6],[28,-28],[37,-5],[46,7],[30,-4],[33,-11],[29,-20],[48,-24],[110,-44],[14,-10],[12,-16],[12,-25],[-1,-24],[-15,-23],[-18,-15],[-22,-5],[-23,-13],[-42,-34],[-13,-6],[-66,-14],[-61,-7],[-38,-14],[-73,-37],[-101,-68],[1,-16],[40,-8],[33,10],[45,47],[42,18],[66,15],[91,12],[39,-2],[7,-2],[5,-11],[3,-20],[-15,-26],[-17,-12],[-47,-58],[31,-15],[42,-7],[24,16],[22,36],[25,19],[27,4],[24,9],[21,15],[5,9],[-30,19],[-2,11],[12,28],[22,30],[23,19],[17,2],[57,-21],[39,-35],[98,-107],[12,-21],[34,-79],[7,-35],[-6,-25],[-8,-15],[-10,-5],[-22,-1],[-130,33],[-60,-4],[-26,-9],[-21,-14],[-16,-17],[-12,-21],[-23,-12],[-82,0],[-47,-12],[-80,-28],[-28,-16],[-7,-20],[49,4],[81,26],[75,8],[127,-59],[41,-9],[23,9],[28,2],[101,-4],[35,-7],[51,-22],[78,-49],[15,-14],[9,-15],[2,-16],[0,-39],[-8,-13],[-27,-9],[-112,10],[-35,9],[-42,-11],[-34,4],[-44,15],[-48,28],[-72,-26],[-58,17],[-59,-15],[-117,-62],[13,-11],[160,53],[31,-3],[51,-20],[80,-38],[23,-16],[0,-60],[-12,-41],[-25,-45],[-37,6],[-85,28],[-35,4],[-26,-4],[-34,-19],[-17,0],[-137,36],[-31,2],[-3,-4],[6,-7],[125,-56],[92,-6],[57,-10],[34,-17],[16,-13],[2,-37],[30,-38],[28,-15],[18,-1],[30,14],[30,2],[25,-9],[31,-21],[37,-6],[33,-13],[26,-2],[71,6],[31,-8],[8,-7],[-13,-12],[-66,-29],[-10,-28],[37,-36],[20,-28],[-1,-20],[-20,-47],[-5,-19],[6,-2],[48,38],[7,-4],[5,-53],[6,3],[16,43],[-7,58],[28,23],[88,18],[-15,-91],[-2,-47],[-39,-79],[-32,-25],[1,-6],[23,-10],[14,-1],[14,13],[33,60],[66,64],[12,1],[0,-23],[-9,-42],[31,-20],[29,19],[16,17],[37,-2],[17,-8],[5,-19],[-17,-79],[3,-19],[39,-52],[4,3],[-8,25],[-8,62],[8,28],[32,34],[65,50],[25,10],[15,-7],[24,-24],[-8,-14],[-26,-15],[-19,-27],[-13,-39],[14,-21],[53,-2],[54,32],[30,-16],[37,-42],[66,-67],[39,18],[47,-51],[-64,-40],[20,-86],[-82,4],[-46,-7],[-31,8],[-34,-3],[31,-20],[59,-9],[6,-25],[46,0],[35,5],[63,-1],[4,30],[41,17],[23,19],[20,-12],[57,-12],[77,-59],[-34,-35],[-9,-33],[-12,-28],[-6,-25],[-14,-17],[-109,-99],[18,-1],[46,24],[91,35],[50,15],[36,-10],[18,0],[16,13],[30,-15],[62,-13],[71,81],[43,-16],[40,-50],[86,-89],[45,-51],[15,-23],[-2,-23],[-41,-25],[-20,-5],[-55,46],[-50,24],[-31,-3],[-30,-18],[10,-9],[121,-71],[21,-52],[2,-23],[-81,-35],[-26,-2],[-57,17],[-32,31],[-28,11],[-37,3],[-12,-6],[41,-52],[-4,-16],[-21,-10],[-11,-25],[81,-46],[61,-46],[9,-19],[-41,-13],[-29,-4],[-62,7],[-35,10],[-9,-11],[35,-24],[14,-16],[10,-23],[7,-22],[1,-20],[-28,-17],[-35,-46],[-14,-48],[-31,-5],[-13,9],[-42,-15],[-55,21],[-20,22],[-61,90],[-1,-10],[15,-46],[-3,-27],[-64,-20],[0,-7],[39,-15],[48,-11],[-8,-42],[1,-181],[-11,-64],[-23,-56],[-34,-53],[-36,35],[-15,36],[-12,18],[-17,15],[-23,7],[-23,0],[-25,-32],[-28,28],[-26,33],[10,88],[11,44],[-4,-1],[-16,-20],[-36,-64],[-23,-79],[-31,30],[-28,38],[-22,38],[-37,43],[-36,51],[-19,60],[-8,13],[-21,50],[-8,14],[-8,5],[-17,31],[6,34],[28,39],[26,28],[42,28],[50,16],[22,36],[28,66],[30,46],[33,26],[-16,4],[-42,-22],[-30,-32],[-35,-54],[-32,-34],[-84,-40],[-30,-8],[-36,-4],[-78,5],[-18,14],[9,38],[56,68],[-9,5],[-20,-24],[-27,-17],[-23,-9],[-34,3],[-41,43],[-19,13],[-39,15],[-16,14],[-66,104],[-13,28],[-7,27],[-21,23],[-35,18],[-8,-3],[13,-23],[0,-20],[-30,-12],[-31,4],[-33,21],[-3,-28],[35,-51],[1,-64],[-10,-6],[-24,-4],[-16,8],[-53,48],[-50,33],[-36,18],[-4,-13],[23,-57],[27,-57],[44,-47],[69,-56],[32,-32],[-25,-46],[-22,-14],[-13,-5],[-42,0],[-77,25],[-37,28],[-52,67],[-87,69],[-19,-1],[-61,-28],[9,-4],[40,-2],[29,-9],[69,-55],[6,-23],[-18,-25],[1,-32],[20,-39],[20,-25],[41,-18],[20,-2],[8,-11],[-25,-87],[-2,-24],[7,-10],[9,0],[52,35],[22,9],[19,2],[22,-10],[26,-22],[14,-23],[5,-23],[7,-15],[52,-24],[-5,-12],[-53,-37],[-3,-5],[11,-3],[33,-22],[31,-34],[19,-41],[4,-21],[0,-19],[4,-11],[16,-2],[7,7],[7,-1],[9,-10],[8,-32],[19,-92],[10,-25],[5,-1],[3,92],[9,15],[33,-16],[47,-36],[34,-32],[4,-15],[-25,-29],[5,-13],[19,-19],[17,7],[12,33],[22,32],[25,22],[48,-18],[39,-48],[6,-16],[26,-21],[22,11],[44,-54],[-21,-25],[-45,-36],[-5,-12],[11,2],[87,1],[23,-15],[5,-28],[-38,-76],[-35,6],[-47,2],[-24,-4],[4,-10],[65,-35],[18,-29],[25,-30],[12,-25],[-1,-11],[-10,-17],[5,-6],[44,-11],[28,10],[34,4],[30,-3],[3,-11],[-5,-28],[-31,-25],[9,-7],[36,8],[17,-12],[21,-62],[25,-48],[-20,-11],[-22,-5],[3,-61],[14,-64],[1,-60],[-5,-54],[-20,-12],[-22,1],[-8,14],[-53,161],[-13,29],[-16,25],[-56,70],[2,-11],[14,-32],[12,-48],[16,-96],[8,-61],[-4,-23],[-11,-6],[-3,-11],[5,-17],[43,-63],[21,-38],[15,-39],[13,-26],[13,-14],[-3,-11],[-19,-9],[-32,-4],[-16,5],[-58,36],[-8,-11],[32,-133],[-1,-32],[-16,-11],[-20,13],[-24,38],[-36,42],[-49,46],[-47,37],[-11,-1],[-7,-11],[-7,-2],[-9,7],[-16,28],[-16,18],[-68,62],[-7,0],[7,-18],[6,-41],[-7,-8],[-18,3],[-34,18],[-23,40],[-28,70],[-16,26],[-1,-17],[8,-67],[-1,-22],[-17,-6],[-8,6],[-7,18],[-6,29],[-17,23],[-25,15],[-14,16],[-7,29],[-5,6],[-45,-6],[-23,20],[-65,81],[-59,88],[-38,46],[-14,12],[20,-57],[22,-84],[6,-39],[-10,-1],[-22,17],[-113,108],[-69,51],[-39,9],[-63,6],[-14,-28],[34,-62],[33,-47],[32,-32],[50,-61],[46,-79],[19,-25],[62,-34],[33,-9],[34,-2],[3,-12],[-16,-23],[-4,-14],[75,-35],[28,-20],[27,-32],[15,-8],[65,-82],[16,-14],[58,-26],[19,-17],[32,-53],[20,-27],[28,-64],[21,-29],[52,-32],[22,-10],[10,-12],[-7,-29],[-6,-12],[-30,-20],[5,-28],[17,-50],[-1,-31],[-18,-12],[-37,-14],[-19,1],[-28,12],[-35,20],[-70,50],[-105,35],[-39,18],[-13,17],[-20,10],[-260,48],[-44,12],[-27,15],[-25,22],[-100,49],[-12,11],[-67,85],[-49,100],[-17,13],[-54,13],[-45,-8],[-30,-11],[-46,4],[-30,16],[-63,45],[-64,23],[-56,39],[-29,14],[3,10],[41,58],[-12,0],[-73,-45],[-26,14],[-43,35],[-32,35],[-66,97],[-38,35],[5,8],[43,3],[34,-3],[23,8],[44,39],[19,25],[2,14],[-37,4],[-8,7],[-7,16],[-17,21],[-27,25],[-31,10],[-107,-9],[-19,11],[0,17],[21,47],[12,19],[3,10],[-4,3],[-14,-2],[-62,-42],[-14,3],[-24,45],[-15,51],[-11,17],[-14,6],[-51,50],[-72,95],[-27,30],[-30,27],[-21,11],[3,14],[46,79],[2,12],[-40,-4],[-59,16],[-28,-20],[-18,-1],[-21,11],[-12,-4],[-11,-65],[-9,-16],[-12,-9],[-11,2],[-9,11],[0,15],[-9,79],[-21,12],[-58,3],[-13,6],[-14,15],[-12,27],[-10,40],[-12,22],[-13,3],[-11,-3],[-8,-10],[-18,-6],[-28,-3],[-1,-15],[27,-28],[25,-40],[25,-52],[-15,-35],[-55,-18],[-48,-5],[-41,7],[-32,12],[-44,29],[-63,-9],[-15,-76],[-13,-4],[-60,1],[-24,-6],[-80,-42],[-25,-6],[-18,5],[-18,-11],[-27,-24],[-37,-2],[-47,19],[-39,8],[-33,-3],[-33,12],[-34,25],[-29,11],[-36,-2],[-9,4],[-54,55],[-17,22],[-35,68],[-7,27],[-1,29],[3,21],[13,32],[13,76],[12,25],[17,23],[32,29],[120,51],[24,20],[-1,14],[-27,62],[0,16],[9,9],[19,37],[9,10],[21,6],[44,-19],[37,-7],[50,-3],[83,-25],[115,-49],[66,-33],[50,-50],[36,-49],[5,-25],[-16,-38],[-9,-11],[1,-13],[9,-15],[29,-21],[7,8],[-3,26],[6,22],[15,17],[1,23],[-11,28],[-13,24],[-17,21],[-74,70],[-7,23],[25,11],[108,-24],[42,6],[16,27],[17,19],[18,10],[37,4],[51,-13],[25,-2],[23,5],[29,15],[42,50],[28,11],[41,8],[31,1],[56,-20],[35,0],[-3,34],[-23,63],[-28,66],[-23,22],[-57,41],[-68,78],[-34,49],[-9,24],[4,16],[12,24],[123,86],[97,86],[42,44],[21,31],[21,22],[22,14],[47,16],[13,22],[3,36],[8,32],[44,85],[33,23],[51,16],[33,20],[41,70],[-4,17],[-19,13],[-14,20],[-62,182],[-42,89],[-49,76],[-45,94],[-73,92],[-1,24],[13,28],[-6,6],[-76,-40],[-18,-2],[-29,17],[-20,22],[-16,38],[1,20],[11,19],[15,47],[0,24],[-5,22],[-6,16],[-9,9],[-23,6],[-38,2],[-13,-8],[43,-71],[-7,-17],[-54,-7],[-24,3],[-22,8],[-20,14],[-63,74],[-13,27],[4,20],[-5,11],[-13,-7],[-17,0],[-24,7],[-5,8],[44,40],[3,12],[-21,13],[-30,3],[-8,12],[10,12],[41,22],[15,14],[-25,11],[-13,1],[-28,-24],[-42,-48],[-30,-18],[-41,22],[-27,8],[-18,-5],[-28,-38],[-61,-27],[-109,-65],[-46,-20],[-51,4],[-9,13],[0,22],[4,18],[6,14],[2,18],[-4,73],[9,21],[17,12],[32,12],[81,-15],[37,3],[27,17],[26,24],[27,33],[5,31],[-28,50],[-10,11],[-72,39],[-40,14],[-35,6],[-26,11],[-16,17],[-15,27],[-1,18],[2,24],[15,17],[64,20],[0,5],[-53,14],[-25,-2],[-21,-16],[-27,-37],[-16,-11],[-48,22],[-29,3],[-19,11],[-11,10],[7,10],[24,11],[41,32],[3,18],[-29,28],[-15,7],[-60,10],[-72,-10],[-28,5],[-12,32],[-7,37],[-4,44],[-13,75],[-14,39],[-19,4],[-88,-16],[-20,0],[-15,6],[-57,50],[-24,18],[-13,4],[-42,53],[-16,10],[-19,26],[-22,42],[-24,13],[-26,-16],[-26,-24],[-26,-30],[-14,-26],[-2,-21],[16,-16],[91,-28],[24,-18],[19,-30],[15,-36],[10,-43],[-1,-32],[-11,-22],[-20,-19],[-57,-30],[-58,-17],[-59,-5],[-28,4],[-152,59],[-27,0],[-35,8],[-79,24],[-43,3],[-76,20],[-128,11],[-25,-9],[34,-27],[30,-14],[25,0],[37,-24],[48,-47],[28,-29],[22,-34],[1,-12],[-23,-23],[-178,122],[-109,-42],[-51,-16],[-43,-3],[-54,17],[-121,59],[-46,20],[-16,3],[-106,-25],[-91,-1],[-185,24],[-67,17],[-18,17],[-22,8],[-40,0],[-105,19],[-97,-43],[-116,40],[-35,23],[-11,16],[-33,66],[-5,36],[10,32],[9,22],[10,12],[-64,-37],[-22,-6],[-29,-1],[-87,13],[-14,-7],[5,-12],[23,-19],[2,-12],[-48,-8],[-73,9],[-33,-4],[-14,-5],[-33,-30],[-14,-7],[-17,3],[-77,67],[-62,43],[-73,16],[-33,14],[-18,16],[-100,137],[-14,29],[-32,107],[-10,23],[-13,15],[25,3],[95,-13],[91,0],[50,-8],[57,-27],[76,-19],[53,-4],[87,7],[98,18],[11,14],[-63,24],[-57,31],[-52,41],[-31,17],[-53,11],[-146,8],[-137,27],[-93,37],[-77,41],[-31,22],[-11,18],[-12,54],[-13,90],[-12,61],[-12,31],[-1,27],[26,57],[74,63],[2,10],[-15,3],[-31,16],[-10,23],[-4,37],[0,32],[3,25],[13,33],[32,57],[46,71],[49,65],[9,22],[4,58],[7,43],[6,30],[11,22],[31,43],[38,41],[60,34],[5,13],[1,18],[3,13],[6,9],[149,110],[68,45],[57,29],[69,21],[195,43],[101,12],[127,-3],[233,-24],[28,-17],[7,-9],[10,-24],[-7,-16],[-64,-52],[-80,-44],[-53,-38],[-88,-86],[-24,-30],[-110,-173],[-26,-28],[-15,-23],[-11,-63],[4,-22],[17,-36],[59,-79],[16,-36],[0,-34],[-7,-81],[-1,-41],[3,-39],[12,-56],[22,-73],[51,-74],[79,-74],[59,-50],[59,-36],[69,-54],[15,-26],[-32,-29],[-74,-44],[-98,-19],[-52,-18],[-65,-39],[-82,-30],[-32,-19]],[[32833,80122],[-117,-8],[-92,36],[-69,17],[-67,31],[-146,100],[-16,35],[-14,43],[-28,39],[-30,32],[-154,98],[-13,34],[31,23],[36,10],[31,-1],[104,-38],[130,-34],[56,-26],[64,-38],[62,-47],[140,-125],[24,-10],[63,-61],[23,-46],[11,-38],[-14,-19],[-15,-7]],[[32274,78610],[8,-8],[13,15],[15,47],[41,-12],[22,-21],[12,4],[12,-2],[23,-28],[44,-22],[46,4],[70,13],[8,5],[72,11],[72,5],[25,-12],[9,-12],[5,-14],[-41,-38],[-41,-44],[-58,-44],[-7,-21],[4,-39],[-1,-40],[11,-3],[7,-14],[-15,-13],[-59,-6],[-17,4],[-21,16],[-7,39],[-25,-6],[-7,5],[35,32],[-16,42],[-18,-3],[-11,19],[1,27],[16,13],[5,14],[-22,-13],[-17,-24],[-21,-9],[-22,-22],[33,-6],[-17,-17],[-17,-3],[-81,32],[-20,12],[-26,34],[-19,45],[11,2],[3,8],[-2,7],[-28,6],[-45,-2],[-25,12],[1,79],[-8,22],[-28,18],[-42,5],[-4,30],[13,44],[21,39],[16,37],[18,31],[46,62],[-1,-46],[4,-40],[-30,-79],[52,-79],[6,-17],[5,-21],[-4,-19],[-8,-18],[20,-8],[6,-15]],[[27222,88107],[11,-17],[3,-24],[-4,-32],[-7,-30],[-10,-27],[-25,-44],[-76,-77],[-28,-42],[-22,-25],[-124,-111],[-16,-6],[-16,2],[-34,17],[-34,3],[-90,-45],[-4,8],[-4,48],[-9,27],[-40,57],[-2,13],[0,16],[3,13],[45,54],[101,193],[24,10],[49,-22],[24,-7],[17,1],[72,41],[68,-5],[63,24],[29,0],[23,-4],[13,-9]],[[27904,87794],[22,-16],[36,-52],[14,-26],[4,-36],[-10,-48],[-5,-44],[-13,-34],[-25,-42],[-22,-50],[-20,-56],[-15,-38],[-13,-18],[-14,-10],[-14,-1],[-23,21],[-30,42],[-24,25],[-31,18],[-17,23],[-3,23],[-1,76],[1,37],[4,32],[7,25],[16,34],[44,75],[26,29],[16,7],[43,-6],[18,2],[14,9],[15,-1]],[[28979,91199],[145,-51],[14,-19],[7,-16],[4,-19],[0,-38],[-3,-15],[-14,-36],[-1,-12],[11,-123],[-1,-67],[-10,-56],[-21,-45],[-31,-34],[-24,-20],[-105,-48],[-75,-12],[-79,-2],[-100,-13],[-46,3],[-24,5],[-17,10],[-19,30],[-23,51],[-18,58],[-23,102],[0,12],[21,83],[29,56],[50,82],[57,81],[14,14],[26,14],[64,23],[54,-6],[23,3],[29,10],[33,3],[53,-8]],[[27906,94270],[47,-7],[300,14],[63,-11],[189,-64],[48,-21],[25,-28],[21,-45],[10,-10],[69,-26],[28,-32],[10,-17],[14,-38],[31,-22],[36,-12],[11,-11],[-5,-48],[15,-22],[33,-27],[13,-18],[-26,-22],[-61,-13],[-170,13],[-228,31],[-133,-9],[-67,-14],[-161,-49],[-51,-8],[-51,-1],[-89,40],[-32,22],[-11,16],[-21,49],[-17,58],[-9,48],[-10,37],[-31,12],[-90,14],[-30,20],[-14,17],[-13,27],[0,27],[7,25],[6,6],[11,1],[-25,29],[-9,33],[-1,46],[4,29],[7,13],[17,8],[39,5],[58,-1],[81,-33],[64,-4],[98,-27]],[[27574,82227],[-19,-8],[-58,16],[-24,11],[-71,41],[-135,61],[-46,31],[-10,22],[25,48],[13,19],[15,12],[143,22],[55,-11],[65,-97],[38,-66],[15,-52],[0,-26],[-6,-23]],[[28103,84184],[-14,-8],[-10,1],[2,19],[14,38],[8,34],[2,28],[6,25],[10,22],[11,11],[15,-1],[4,-70],[-5,-32],[-10,-28],[-14,-22],[-19,-17]],[[28073,84254],[-23,-58],[-18,-56],[-25,-106],[-15,-3],[-13,25],[37,123],[1,14],[-1,12],[-11,18],[-11,-21],[-52,-139],[-13,-22],[-11,-13],[-9,-2],[-22,3],[-44,-40],[74,165],[1,13],[-14,8],[-6,-5],[-60,-104],[-34,-40],[-23,13],[-6,10],[2,13],[59,104],[54,75],[22,48],[9,44],[4,33],[0,36],[3,10],[3,-2],[3,-14],[1,-38],[-12,-77],[-10,-38],[-12,-32],[5,-7],[22,18],[18,38],[15,57],[9,50],[10,80],[3,-3],[4,-16],[10,-11],[15,-7],[9,-10],[6,-26],[7,-12],[23,-10],[9,-8],[6,-29],[-1,-16],[3,-9],[7,-5],[-8,-31]],[[27784,84220],[-14,-4],[-17,8],[9,42],[14,18],[36,17],[7,11],[11,6],[17,0],[19,15],[21,32],[7,4],[-14,-46],[-16,-34],[-80,-69]],[[25046,96352],[-73,-33],[-37,1],[-212,67],[-43,33],[-8,23],[-2,32],[0,43],[9,30],[12,10],[25,10],[49,7],[46,-4],[70,-12],[70,-19],[92,-60],[34,-28],[7,-37],[0,-22],[-5,-17],[-10,-10],[-24,-14]],[[20956,96279],[-43,-10],[-84,23],[-56,10],[-45,42],[-49,57],[-39,62],[-14,37],[-28,22],[-10,36],[-51,57],[8,9],[48,8],[77,-11],[36,-20],[47,-34],[60,-54],[18,-24],[4,-33],[11,-17],[51,-4],[63,-43],[12,-17],[13,-34],[-1,-16],[-10,-34],[-18,-12]],[[22558,97915],[6,-75],[-6,-38],[-14,-28],[-12,-7],[-17,0],[-76,21],[-23,13],[-1,11],[-8,21],[-50,27],[-95,-4],[-40,3],[-16,8],[-10,12],[-9,47],[2,17],[11,29],[7,7],[70,27],[20,2],[85,-10],[75,-1],[38,-7],[34,-17],[20,-26],[9,-32]],[[20753,93847],[-14,-3],[-26,14],[-39,29],[-63,60],[-75,59],[-12,36],[-19,26],[-96,63],[-62,26],[-48,13],[-7,17],[33,51],[37,41],[23,15],[70,13],[236,27],[54,1],[56,-13],[78,-56],[32,-6],[20,-13],[17,-21],[9,-21],[0,-44],[-8,-64],[-11,-25],[-47,-82],[-49,-46],[-10,-29],[-20,-23],[-35,-29],[-24,-16]],[[21603,95630],[58,-35],[3,-9],[-11,-6],[-75,-19],[-29,-15],[-25,-35],[-19,-16],[-101,-10],[-103,1],[20,33],[56,56],[-44,22],[-158,-38],[-60,24],[51,60],[-51,5],[-71,0],[-46,36],[16,42],[94,24],[122,20],[131,31],[103,-3],[40,-14],[14,-49],[12,-59],[18,-5],[55,-41]],[[21105,95957],[13,-3],[43,12],[27,2],[30,-22],[8,-14],[110,-36],[38,-16],[5,-10],[-13,-15],[-33,-20],[-31,-13],[-44,-11],[-222,-2],[-24,5],[-14,18],[-28,65],[-19,36],[-8,24],[5,14],[24,13],[82,21],[36,0],[23,-5],[9,-11],[-3,-14],[-14,-18]],[[17131,95379],[-79,-37],[-57,4],[-75,27],[-61,10],[-21,9],[-3,9],[20,26],[26,21],[62,41],[105,78],[69,30],[67,21],[69,47],[38,21],[33,2],[33,-9],[4,-13],[-35,-64],[-25,-26],[-49,-67],[-93,-112],[-28,-18]],[[18380,96632],[-76,-19],[-51,0],[-89,28],[-103,84],[-14,30],[39,5],[28,9],[17,13],[34,15],[76,21],[10,-8],[-2,-18],[6,-16],[28,-4],[26,-11],[53,-36],[36,-7],[13,-8],[6,-12],[22,-21],[0,-11],[-30,-22],[-29,-12]],[[13631,83225],[-6,-1],[-3,12],[2,25],[9,42],[4,9],[36,-7],[5,-3],[1,-8],[-2,-13],[-12,-19],[-34,-37]],[[13603,81774],[-5,-1],[-9,12],[-7,19],[-4,51],[3,20],[3,8],[24,-32],[-5,-77]],[[13823,82925],[-8,-21],[-20,-32],[-13,-13],[-6,6],[-18,4],[-19,32],[-14,13],[-10,1],[-5,-12],[-1,-15],[3,-20],[-2,-9],[-6,2],[-5,9],[-6,16],[-1,17],[4,17],[13,24],[42,47],[13,9],[14,-2],[23,-22],[5,-7],[17,-44]],[[13931,82469],[-6,-2],[-18,7],[-60,98],[-43,35],[-29,48],[-30,31],[18,50],[16,-6],[56,-41],[44,-39],[25,-26],[53,-110],[-4,-16],[-22,-29]],[[13829,83540],[3,-46],[-40,-76],[-52,-38],[-11,12]],[[14291,82338],[13,-184],[-1,-59],[-19,-38],[-13,-65],[-15,-29],[-15,39],[-1,64],[-4,51],[-5,24],[6,95],[-6,-7],[-18,-41],[-19,-3],[-34,47],[-17,38],[-3,40],[-22,42],[-3,15],[2,16],[19,42],[7,28],[7,58],[7,23],[18,-3],[31,-27],[33,-28],[30,-39],[22,-99]],[[14974,80272],[8,-52],[-34,9],[-12,10],[0,25],[6,23],[26,-8],[6,-7]],[[15513,80374],[4,-12],[-62,45],[-27,27],[-10,19],[-6,11],[-32,28],[-5,13],[7,10],[21,-6],[35,-21],[32,-35],[43,-79]],[[14822,80417],[-11,-2],[-18,7],[-19,16],[-35,44],[-3,10],[3,9],[9,7],[3,11],[-8,32],[27,20],[25,-17],[11,-20],[13,-36],[6,-41],[1,-28],[-4,-12]],[[15226,80700],[-3,-30],[-17,49],[-28,105],[4,24],[12,35],[11,2],[18,-16],[16,-29],[3,-11],[10,-30],[5,-27],[-11,-33],[-20,-39]],[[14184,82090],[-9,-26],[-37,63],[-13,18],[-28,67],[-5,29],[1,17],[5,6],[9,-4],[8,-8],[53,-74],[15,-35],[1,-53]],[[14465,81493],[-4,-9],[-11,0],[-18,10],[-13,21],[-16,66],[2,12],[5,12],[25,24],[10,-3],[3,-18],[15,-39],[5,-11],[0,-46],[-3,-19]],[[14342,82027],[-21,-7],[7,31],[2,18],[-4,17],[-3,33],[-1,79],[21,49],[33,1],[-1,-25],[-14,-111],[-7,-51],[-5,-19],[-7,-15]],[[14079,82368],[-4,-5],[-11,8],[-11,15],[-19,43],[-6,18],[-4,29],[3,5],[9,-3],[5,-5],[30,-70],[8,-35]],[[14120,82440],[-2,-4],[-28,0],[-8,6],[-5,12],[-2,19],[4,22],[17,42],[1,18],[3,8],[12,-22],[5,-19],[3,-82]],[[15712,79927],[-11,-15],[-7,2],[-5,10],[-18,102],[8,-3],[24,-31],[-5,-12],[18,-31],[4,-21],[-8,-1]],[[33392,77153],[-37,-20],[-32,1],[-22,19],[-1,8],[51,-8],[19,5],[39,32],[-17,-37]],[[33066,78046],[-12,-4],[-2,8],[-18,24],[-1,12],[15,11],[32,-6],[-12,-30],[-2,-15]],[[32801,79080],[10,-11],[18,1],[12,-4],[-17,-21],[-33,-3],[-16,9],[23,110],[27,26],[56,71],[22,22],[21,9],[21,-5],[-22,-43],[-30,-2],[-28,-35],[-18,-40],[-23,-22],[-15,-27],[-8,-35]],[[32081,79427],[-7,-42],[-25,-36],[-12,-2],[-5,3],[6,23],[0,40],[20,6],[7,-4],[16,12]],[[32090,79469],[-32,-30],[14,45],[6,11],[5,5],[5,-4],[2,-27]],[[31590,77357],[-14,-21],[4,20],[17,51],[11,7],[-18,-57]],[[31455,77581],[-38,-31],[15,78],[12,24],[15,-8],[-2,-47],[-2,-16]],[[29565,78034],[-22,-11],[-36,11],[-41,-15],[-11,0],[30,42],[46,27],[46,80],[13,2],[-18,-91],[-3,-33],[-4,-12]],[[29529,78102],[-34,-12],[-11,5],[37,56],[42,13],[-34,-62]],[[30270,78843],[-25,-5],[6,20],[35,36],[25,20],[15,0],[-24,-44],[-32,-27]],[[34573,81059],[-9,-6],[-9,0],[-8,7],[-1,11],[8,23],[21,12],[17,-3],[-1,-12],[-9,-19],[-9,-13]],[[34846,80408],[-43,-34],[-10,-13],[-12,-7],[-9,11],[-12,35],[2,12],[12,2],[7,-5],[1,-11],[5,-6],[9,0],[32,35],[16,5],[6,-6],[-4,-18]],[[34622,81733],[-14,-1],[-3,7],[6,22],[15,26],[20,7],[-6,-38],[-18,-23]],[[34974,80497],[20,-37],[11,-10],[-72,-41],[-8,-2],[-5,4],[-1,38],[4,29],[5,5],[16,-18],[17,36],[13,-4]],[[34937,79171],[-14,-20],[-14,0],[2,18],[17,34],[8,24],[1,15],[3,11],[13,13],[11,23],[-5,-43],[-22,-75]],[[31993,87879],[53,-6],[33,2],[14,-9],[13,-28],[-17,-40],[-19,-16],[-31,-4],[-50,13],[-17,8],[-16,22],[7,15],[25,5],[4,7],[-6,12],[0,10],[7,9]],[[31046,86544],[-25,-5],[-12,12],[0,35],[8,26],[29,55],[25,62],[15,14],[31,-10],[18,-17],[18,-30],[8,-22],[-7,-34],[-22,-29],[-25,-21],[-61,-36]],[[30462,87873],[-20,-2],[-37,4],[-40,12],[-23,14],[-19,29],[-4,33],[-38,48],[-42,16],[-23,33],[24,3],[34,-8],[49,-14],[45,-19],[64,-42],[21,-40],[21,-28],[7,-22],[-6,-10],[-13,-7]],[[31991,87192],[-7,-7],[-6,2],[-21,30],[-28,13],[-10,12],[-84,63],[-9,28],[-2,22],[28,11],[56,10],[49,-1],[46,-13],[9,-14],[24,-26],[-6,-30],[-2,-40],[-10,-19],[-15,-14],[-12,-27]],[[31936,87487],[6,-5],[7,6],[6,-5],[4,-16],[6,-12],[17,-14],[5,-11],[0,-11],[-14,-16],[-9,0],[-66,37],[-18,39],[-1,19],[7,18],[10,8],[13,0],[16,-10],[11,-27]],[[30789,85852],[-17,-42],[-23,5],[-8,-8],[-6,-1],[10,39],[1,27],[-5,27],[8,13],[30,1],[0,-31],[4,-11],[7,-6],[-1,-13]],[[32109,86616],[-10,-40],[-32,15],[-50,30],[-20,20],[-7,22],[0,30],[15,5],[37,3],[32,-42],[9,-6],[26,-37]],[[33057,84123],[3,-14],[-43,10],[-15,9],[-1,9],[2,15],[8,17],[20,13],[11,-7],[23,-17],[3,-11],[-11,-24]],[[32849,84996],[23,-17],[6,-63],[-44,4],[-50,42],[-10,31],[1,5],[7,5],[13,-7],[12,11],[13,3],[29,-14]],[[31134,91901],[-7,-4],[-72,26],[-6,21],[36,24],[29,12],[22,2],[22,-4],[21,-25],[-25,-23],[-20,-29]],[[32588,90469],[-34,-15],[-19,19],[13,6],[19,23],[26,20],[11,17],[43,8],[15,-1],[5,-6],[-24,-26],[-55,-45]],[[28038,95579],[3,-34],[-20,1],[-65,-22],[-52,-3],[-26,10],[-17,23],[41,43],[47,31],[57,47],[47,30],[23,-6],[22,-16],[-28,-47],[-30,-23],[-2,-34]],[[27814,84547],[-7,-10],[-14,11],[0,29],[13,22],[10,-1],[10,-12],[-3,-15],[-9,-24]],[[27856,84974],[-4,-5],[-12,4],[-5,-38],[-4,-3],[-9,23],[7,20],[-1,14],[2,10],[12,23],[7,5],[4,-2],[4,-29],[-1,-22]],[[27911,84479],[-9,-7],[-7,0],[7,51],[-8,18],[-1,9],[4,9],[5,2],[11,-16],[6,-17],[2,-16],[0,-16],[-4,-11],[-6,-6]],[[27795,82548],[-1,-17],[-18,3],[-9,10],[-8,15],[-2,12],[7,11],[21,-7],[10,-27]],[[27949,81769],[-12,-4],[-26,4],[-22,15],[-13,18],[86,51],[18,-6],[0,-10],[-13,-27],[-3,-18],[-6,-14],[-9,-9]],[[15730,80003],[-4,-7],[-43,41],[-29,54],[-12,32],[57,-81],[29,-26],[2,-13]],[[15284,80661],[-7,-5],[-7,66],[9,23],[2,12],[-1,13],[15,-30],[6,-20],[2,-27],[0,-8],[-19,-24]],[[29549,90889],[-135,-1],[-74,4],[-29,9],[-26,13],[-29,45],[-19,45],[-1,20],[5,17],[7,11],[91,15],[74,-19],[64,-22],[83,-4],[25,-9],[9,-6],[7,-11],[9,-53],[1,-28],[-2,-21],[-60,-5]],[[28367,88404],[24,-25],[24,2],[14,-20],[32,-63],[3,-10],[-1,-21],[-17,-26],[-18,-13],[-37,-20],[-42,-9],[-23,14],[-64,58],[-59,68],[-19,38],[8,16],[25,11],[51,11],[83,-6],[16,-5]],[[23742,95477],[-27,0],[-35,12],[-10,12],[-8,17],[-5,22],[-7,18],[-10,13],[-2,10],[6,9],[11,5],[27,2],[57,22],[11,-2],[8,-12],[7,-31],[9,-19],[22,-34],[10,-22],[-2,-6],[-7,-6],[-55,-10]],[[27698,86188],[-9,-2],[-2,7],[7,24],[12,3],[13,26],[12,-9],[-4,-15],[-16,-22],[-13,-12]],[[27760,86273],[-29,-4],[13,34],[10,16],[12,11],[24,4],[16,-14],[-15,-25],[-31,-22]],[[23116,93857],[-45,-6],[-41,40],[-2,38],[3,21],[5,18],[15,16],[43,18],[19,-13],[7,-17],[6,-6],[28,-14],[13,-16],[-2,-19],[-8,-28],[-10,-18],[-11,-8],[-20,-6]],[[22957,94772],[-84,-34],[-18,13],[-8,12],[65,53],[28,14],[27,-16],[7,-13],[-3,-9],[-14,-20]],[[22702,94394],[-80,-13],[-36,6],[-20,-16],[-15,-7],[-44,-3],[-90,29],[-24,10],[-9,9],[4,9],[16,9],[69,12],[25,10],[11,13],[17,11],[24,8],[65,8],[146,41],[72,5],[28,-3],[9,-11],[2,-10],[-4,-11],[-22,-28],[-30,-21],[-79,-46],[-35,-11]],[[24944,91831],[6,-36],[-24,-49],[-8,-8],[-10,-4],[-9,6],[-28,38],[-8,24],[10,12],[22,15],[15,7],[20,-6],[6,10],[8,-9]],[[24863,91716],[-23,-6],[-14,24],[-12,5],[-5,16],[-24,3],[2,25],[7,12],[22,10],[17,-4],[17,-25],[8,-20],[7,-25],[-2,-15]],[[29444,87913],[-15,-5],[-55,7],[-69,27],[-35,25],[2,8],[15,4],[18,-4],[29,-17],[80,-9],[25,-10],[8,-16],[-3,-10]],[[29199,91214],[-21,-4],[-32,36],[-66,40],[-25,30],[-1,14],[2,22],[8,27],[23,30],[24,5],[35,-7],[25,-21],[27,-59],[19,-29],[5,-21],[-9,-10],[1,-10],[4,-6],[-1,-11],[-8,-16],[-10,-10]],[[28185,86824],[-38,-6],[0,8],[16,24],[59,20],[44,6],[-10,-20],[-26,-16],[-45,-16]],[[28060,91124],[-23,-6],[-30,30],[0,17],[6,41],[55,10],[24,-24],[11,-24],[-43,-44]],[[28700,88360],[-29,-6],[-38,13],[-38,25],[-85,80],[64,54],[102,-63],[31,-40],[-7,-63]],[[27936,92043],[11,-33],[7,-11],[-11,-15],[-41,-31],[-92,-13],[-46,14],[22,-44],[4,-19],[-6,-8],[-20,2],[-31,13],[-19,15],[-4,18],[-7,4],[-9,-10],[-8,2],[-19,27],[-14,9],[-92,16],[-4,7],[5,12],[14,18],[20,5],[52,-7],[4,4],[4,22],[4,9],[36,-3],[22,5],[13,-11],[12,-26],[17,5],[26,-4],[28,9],[43,23],[33,9],[46,-13]],[[28325,92001],[14,-29],[3,-15],[-20,-17],[-74,-33],[-46,-28],[-22,-7],[-31,7],[-37,-14],[-15,2],[17,23],[58,67],[49,7],[16,14],[14,-5],[8,12],[1,17],[17,13],[16,0],[32,-14]],[[28432,88704],[-20,-26],[-59,9],[-8,8],[-2,10],[9,12],[61,12],[26,1],[14,-4],[1,-4],[-22,-18]],[[26910,90024],[28,-7],[21,1],[4,-9],[-22,-28],[-13,-5],[-25,20],[-18,25],[-5,15],[-2,16],[4,3],[28,-31]],[[27997,91500],[-19,-4],[-23,11],[-8,19],[-4,19],[4,10],[10,9],[13,21],[18,32],[27,22],[60,21],[8,7],[27,58],[9,9],[30,6],[3,8],[-10,14],[0,14],[10,15],[15,12],[39,10],[35,-2],[9,-4],[7,-10],[11,-27],[1,-6],[-16,-24],[-42,-36],[-26,-31],[-5,-10],[-3,-13],[-9,-15],[-31,-38],[-20,-36],[-21,-20],[-56,-19],[-43,-22]],[[28612,91672],[-35,-7],[-26,4],[-17,13],[-13,19],[-16,46],[6,22],[2,38],[3,15],[6,7],[37,14],[21,-2],[32,-15],[69,-4],[18,-14],[4,-8],[-1,-10],[-4,-12],[-34,-35],[-17,-24],[-12,-29],[-23,-18]],[[25857,92230],[32,-4],[30,5],[22,-5],[13,-16],[9,-17],[5,-18],[-12,-13],[-49,-11],[-34,6],[-35,15],[-17,-7],[-41,11],[-20,14],[-17,21],[0,13],[43,14],[17,12],[54,-20]],[[26743,89744],[35,-23],[36,-13],[57,-6],[8,-5],[0,-11],[-8,-16],[-19,-22],[-14,0],[-31,15],[-12,7],[-13,17],[-6,2],[-9,-6],[-2,-7],[4,-10],[-5,-2],[-39,6],[-6,6],[3,18],[27,27],[-23,8],[-8,10],[-35,-17],[-19,-4],[-30,12],[-4,60],[-3,23],[-14,15],[-9,16],[-13,12],[-27,12],[-23,30],[-4,14],[3,10],[13,14],[79,-30],[48,-29],[46,-36],[23,-26],[2,-17],[-5,-17],[-14,-17],[11,-20]],[[25945,90861],[-11,-1],[-19,9],[-43,35],[-9,15],[-4,17],[0,21],[3,20],[14,42],[-26,33],[-6,19],[3,10],[14,26],[4,16],[14,22],[37,44],[37,-10],[32,-36],[9,-24],[-3,-26],[3,-37],[8,-49],[3,-36],[-4,-22],[-14,-41],[-12,-20],[-16,-18],[-14,-9]],[[26479,89616],[-15,-6],[-15,3],[-13,17],[-11,30],[-17,22],[-39,28],[-7,11],[-11,37],[-2,37],[-9,34],[0,16],[7,25],[33,6],[26,-10],[5,-7],[8,-14],[6,-18],[31,-47],[18,-38],[25,-78],[0,-15],[-7,-16],[-13,-17]],[[24154,87467],[-11,-1],[-26,29],[-5,15],[33,9],[23,-26],[-2,-12],[-12,-14]],[[21881,95955],[-72,-2],[-33,6],[-2,11],[29,13],[95,22],[57,39],[21,5],[73,6],[43,-1],[55,-10],[-132,-49],[-134,-40]],[[21388,96858],[-32,-12],[-37,7],[-6,7],[0,9],[3,10],[42,36],[38,12],[23,3],[18,-13],[10,-18],[-59,-41]],[[21752,96599],[-39,-6],[-69,3],[-83,21],[-22,24],[-5,38],[1,22],[7,4],[51,5],[96,6],[78,-5],[88,-22],[36,-14],[18,-10],[22,-20],[8,-8],[5,-16],[-110,-4],[-52,-6],[-30,-12]],[[25076,95914],[-13,-8],[-42,4],[-14,-8],[-22,5],[-31,16],[-36,32],[-41,48],[-32,41],[-1,12],[10,19],[32,13],[76,15],[52,0],[48,-31],[14,-11],[8,-13],[1,-12],[-4,-11],[-22,-24],[-10,-16],[0,-17],[5,-23],[9,-16],[13,-8],[0,-7]],[[23311,95339],[-21,-19],[-23,-1],[-30,18],[-32,-7],[-45,-36],[-16,-22],[-12,-7],[-37,-7],[-16,6],[-15,19],[-14,32],[10,24],[35,16],[93,27],[26,13],[3,14],[6,9],[8,4],[62,-23],[29,-16],[22,-18],[-2,-8],[-31,-18]],[[23526,94760],[-13,-2],[-25,3],[-93,26],[-16,10],[-4,8],[21,9],[8,10],[23,12],[42,0],[44,-29],[21,-27],[1,-12],[-9,-8]],[[16368,95475],[-22,-3],[-24,6],[5,15],[54,41],[3,11],[0,9],[-7,11],[14,15],[22,5],[7,-5],[2,-12],[-5,-36],[-6,-18],[-10,-14],[-14,-14],[-19,-11]],[[18455,96049],[-42,-18],[-289,27],[-15,9],[-8,12],[52,33],[64,14],[146,11],[51,-13],[34,-15],[19,-12],[8,-24],[-20,-24]],[[21078,95066],[-53,-3],[-90,18],[-54,33],[-17,16],[2,8],[9,7],[13,22],[31,63],[12,17],[48,36],[36,10],[75,-3],[44,-19],[18,-12],[13,-15],[13,-32],[3,-21],[22,-24],[7,-14],[0,-14],[-6,-14],[-12,-13],[-29,-21],[-85,-25]],[[22162,91478],[-9,-18],[-11,-6],[-22,-21],[-8,-3],[-13,14],[-11,22],[-4,3],[-7,0],[-14,-15],[-7,1],[-5,9],[-3,19],[0,29],[7,43],[1,16],[-4,12],[3,12],[10,10],[12,4],[30,-4],[23,-17],[12,-23],[23,-18],[7,-13],[-10,-56]],[[22223,91597],[-6,-34],[-34,9],[-15,12],[-13,28],[-2,8],[3,10],[14,25],[9,9],[23,-11],[10,-14],[8,-23],[3,-19]],[[22136,92451],[-3,-5],[-60,22],[-23,12],[-8,10],[-5,19],[-3,28],[12,14],[27,-1],[28,-11],[44,-31],[-12,-10],[-1,-20],[5,-20],[-1,-7]],[[23468,91920],[37,-39],[0,-19],[-5,-31],[-11,-24],[-16,-16],[-23,-8],[-29,-1],[-13,7],[10,24],[7,8],[1,21],[-5,35],[-6,22],[-16,12],[-12,1],[-3,-12],[5,-23],[-4,-30],[-13,-38],[-9,-17],[-18,9],[-8,14],[2,23],[-4,22],[4,22],[12,34],[17,22],[21,12],[26,-1],[29,-13],[24,-16]],[[21897,91818],[-23,-5],[-4,1],[2,16],[-2,8],[-6,5],[20,13],[3,10],[-7,7],[-27,14],[-8,13],[2,11],[10,10],[19,-2],[41,-18],[19,-26],[8,-20],[-13,-3],[-11,-8],[-11,-16],[-12,-10]],[[21709,91351],[-11,-1],[-16,10],[-90,35],[-11,11],[10,15],[33,19],[22,19],[17,30],[51,-16],[19,-14],[8,-12],[3,-17],[-3,-41],[-17,-9],[-15,-29]],[[20961,91247],[-16,-2],[-28,9],[-43,21],[-31,21],[-21,23],[-3,16],[16,9],[24,4],[57,-3],[28,-8],[36,-34],[7,-19],[2,-12],[-5,-11],[-23,-14]],[[20028,90668],[-14,-48],[-6,5],[-9,23],[-20,11],[-21,25],[0,55],[8,25],[-2,35],[22,21],[16,-25],[5,-42],[-4,-20],[16,-22],[7,-5],[4,-17],[-2,-21]],[[19676,91003],[31,-6],[23,4],[17,-23],[7,-23],[-2,-8],[-8,-4],[-49,26],[-18,16],[-6,14],[5,4]],[[19974,90440],[35,-5],[45,1],[-8,-44],[-17,-29],[-14,-8],[-6,16],[-26,35],[-9,34]],[[19632,91008],[-10,-2],[-38,34],[8,30],[35,-31],[5,-18],[0,-13]],[[11377,91921],[-23,-21],[-37,22],[-9,11],[42,30],[19,-1],[39,-18],[14,-15],[-45,-8]],[[52722,53170],[6,135],[12,113],[5,105],[18,93],[-9,93],[-11,40],[-57,131],[26,50],[-34,-7],[-7,49],[-17,58],[10,10],[10,32],[31,-10],[-1,16],[-27,49],[3,25],[11,27],[-6,12],[-19,-29],[-14,1],[-10,19],[-8,3],[5,-38],[-11,-33],[-10,-12],[-18,2],[-14,8],[-4,19],[-13,15],[-38,24],[-31,30],[-7,80],[-12,34],[-6,39],[-3,44],[5,69],[-8,11],[-9,3],[-14,-3],[-13,4],[-15,38],[-13,14],[8,-69],[-9,-20],[-23,6],[-9,26],[-2,20],[10,84],[-4,2]],[[78623,58343],[-5,-5],[-5,0],[-5,8],[1,34],[3,20],[9,4],[2,-61]],[[78699,58017],[-11,-22],[-16,46],[0,12],[27,-36]],[[79007,57840],[-46,75],[-90,26],[-10,33],[-9,6],[-8,-43],[-50,-41],[-21,25],[-15,30],[2,37],[15,30],[24,22],[12,76],[-19,97],[-16,28],[-18,23],[-18,-37],[-15,-61],[-16,-32],[-23,-7],[-33,2],[-13,93],[-4,79],[4,90],[5,53],[-32,74],[-2,70],[-15,37],[-4,-19],[0,-20]],[[77417,57713],[-13,-7],[-26,-83],[-12,42],[-7,43],[8,98],[-16,186],[10,25],[9,13],[18,71],[21,70],[2,85],[17,61],[-4,52],[1,61],[4,49],[-2,41],[14,42],[24,32],[-10,11],[-10,23],[-31,-35],[-16,11],[-3,37],[4,39],[2,23],[12,27],[-1,52],[-6,46],[9,57],[-18,0],[-9,11],[5,32],[17,28],[-15,53],[11,57],[0,71],[-8,62],[0,45],[-11,79],[-6,101],[-24,76],[-19,110],[-48,144],[0,61],[-2,54],[-11,27],[-14,-192],[-11,38],[-3,107],[-7,50],[7,101],[-28,100],[-6,73],[-19,110],[6,25],[25,-25],[-23,64],[-19,-14],[-16,69],[-3,188],[-16,70],[9,71],[-18,257],[-35,82],[7,72],[9,63],[-2,118],[8,36],[17,28],[-16,-10],[-13,-8],[-32,-7],[-36,-2],[-12,86],[-18,41],[-16,86],[-9,98],[6,19],[-27,40],[-8,24],[-29,64],[-33,48],[8,-34],[9,-21],[-17,-59],[16,-99],[-14,-63],[-13,-82],[-12,-40],[-40,-84],[-32,-29],[-21,-5],[-19,9],[-23,44],[-5,36],[-4,61],[-8,9],[-9,-7],[14,-79],[0,-37],[24,-71],[-9,-20],[-44,-38],[-15,6],[-10,-8],[-3,-32],[-6,-18],[-69,-48],[-14,-56],[-9,-55],[-35,-80],[-46,-66],[-11,3],[-13,16],[2,71],[15,61],[-5,64],[-3,-37],[-30,-90],[-14,-29],[-27,8],[-38,-12],[-14,92],[0,34],[-3,29],[5,30],[-2,25],[-9,-47],[-3,-40],[-14,-35],[-38,-39],[-1,49],[-2,44],[8,39],[-1,63],[12,90],[-1,31],[-3,34],[-7,-50],[-4,-51],[-8,-16],[-13,-11],[-26,-60],[-15,-52],[-40,-50],[-20,5],[-3,63],[16,225],[15,32],[8,39],[12,131],[15,50],[6,104],[6,18],[19,82],[7,150],[-8,75],[-18,72],[-18,217],[-46,176],[-4,59],[-22,71],[21,5],[-43,62],[-6,26],[-9,146],[2,81],[-6,-11],[-6,-50],[-17,-21],[7,-87],[-1,-21],[-9,-33],[-36,35],[-26,38],[-30,93],[-29,104],[10,16],[13,2],[42,-77],[27,-16],[17,19],[21,33],[10,64],[-11,24],[-20,13],[-13,17],[-20,43],[-2,23],[-6,28],[-20,20],[-16,25],[14,45],[13,34],[-35,-2],[-39,58],[-9,16],[-13,12],[-31,7],[-26,-17],[12,-82],[-2,-27],[-17,4],[-36,124],[11,32],[15,30],[-7,4],[-15,-2],[14,111],[-9,16],[-4,-34],[-8,-34],[-30,-78],[-15,15],[-10,19],[14,41],[8,11],[5,22],[-11,43],[-18,32],[-14,53],[-7,1],[6,-63],[-2,-91],[-32,100],[-64,143],[-15,42]],[[75645,63819],[-4,42],[-7,39],[-5,42],[-1,33],[-14,29],[-6,52],[-3,52],[8,38],[19,40],[15,7],[11,-18],[28,-27],[19,-24],[8,-33],[8,4],[9,21],[-2,25],[-8,68],[-3,81],[0,191],[-3,22]],[[77280,58152],[23,-100],[-3,-15],[-3,-8],[-6,3],[-9,54],[-17,34],[-21,-6],[17,44],[7,10],[12,-16]],[[77272,57565],[-13,-34],[-5,2],[6,55],[23,41],[19,4],[-2,-26],[-14,-31],[-14,-11]],[[77283,58455],[-1,-13],[-2,0],[-7,9],[4,55],[11,44],[11,66],[6,14],[2,-35],[-7,-74],[-5,-40],[-12,-26]],[[77365,58700],[-12,-3],[-5,93],[3,14],[16,-46],[24,-28],[-9,-18],[-17,-12]],[[77375,58608],[-7,-119],[-17,17],[-9,0],[-10,67],[0,18],[-6,44],[41,8],[8,-35]],[[77336,59100],[7,-16],[9,0],[-3,-56],[-22,-69],[-13,-10],[-5,0],[5,101],[-9,57],[3,39],[24,-18],[4,-28]],[[77259,58842],[-3,-3],[-4,1],[-10,10],[-10,39],[5,27],[4,7],[10,-2],[4,-5],[2,-10],[-3,-22],[1,-19],[4,-23]],[[76243,61028],[-18,-56],[-7,84],[30,47],[14,44],[15,31],[5,-37],[-14,-71],[-25,-42]],[[77103,61205],[-10,-7],[-16,37],[-3,90],[13,20],[7,5],[11,-11],[3,-14],[2,-18],[-3,-19],[-4,-83]],[[76024,62605],[-4,-5],[-29,49],[-23,62],[36,12],[35,-13],[1,-33],[-8,-53],[-8,-19]],[[75969,63301],[6,-79],[-19,30],[-7,41],[-2,42],[22,-34]],[[76031,63109],[32,-48],[13,3],[19,-30],[1,-12],[-4,-24],[-9,-19],[-24,-20],[-16,16],[-7,52],[-19,25],[-6,20],[13,29],[7,8]],[[77372,58157],[-6,-1],[-6,2],[-6,9],[14,62],[4,-72]],[[77242,58578],[3,-32],[-18,34],[-3,95],[14,-60],[6,-14],[-2,-23]],[[77240,58980],[-2,-21],[-16,-43],[-14,25],[-4,13],[15,28],[15,-4],[4,6],[2,-4]],[[77309,59388],[-2,-95],[-14,46],[-2,52],[1,49],[3,8],[1,-8],[8,-22],[5,-30]],[[76334,60955],[-6,-15],[-11,11],[-3,6],[26,64],[3,-24],[-9,-42]],[[75835,63320],[4,-55],[-13,22],[-18,76],[1,50],[12,-23],[14,-70]],[[50663,58696],[-7,-33],[-21,-86],[-16,-36],[-69,-121],[-35,14],[-71,-24],[-11,28],[-16,3],[-21,-4],[-8,-11],[-2,-12],[-7,-17],[-14,-48],[-10,-12],[-13,-8],[-15,1],[-9,-6],[0,-24],[-3,-21],[-11,-10],[-4,-23],[1,-23],[-6,-10],[-14,5],[-8,7],[-7,-30],[-10,-20],[-6,0]],[[57940,77040],[-7,-139],[-27,-65],[-40,22],[-52,-18],[-27,-73],[-16,-22],[-14,-26],[-9,-95],[-2,-156],[-19,-19],[-18,-6],[-75,-137],[43,-39],[19,-29],[32,-82],[44,-93],[9,-45]],[[81951,54665],[32,0]],[[81684,54488],[31,-1],[34,10],[35,30],[33,37],[28,43],[27,47],[27,38],[43,44],[15,-4],[0,-31],[-6,-36]],[[35652,54182],[26,99],[3,45],[24,2],[37,-52],[30,-75],[40,-243],[6,-225],[17,-118],[46,-245],[3,-45],[7,-55],[15,-58],[16,-96],[1,-18],[-11,-26],[16,-2],[14,-15],[9,-61],[11,-41],[21,-56],[43,-19],[33,-7],[37,-31],[27,-41],[21,-138],[-7,-87],[2,-61],[-11,-24],[-30,-40],[-7,-22],[-62,-103],[-14,-49],[-33,-65],[-33,-125],[-48,-114],[-17,-29],[-26,-7],[-16,-17],[-37,-93],[-51,-31],[-4,-54],[-29,-124],[-26,-67],[-16,-23],[-41,-122],[-5,-54],[0,-94],[-28,-57],[-28,-37],[-4,-80],[-12,-27],[-11,-18],[-58,21],[-91,-88],[-30,-21],[98,-5],[32,-46],[69,31],[83,110],[32,24],[65,75],[27,50],[48,60],[10,26],[27,29],[15,-36],[1,-23],[-22,-44],[6,-28],[14,-36],[5,-49],[2,-37],[9,-66],[30,-88],[1,-30],[-4,-38],[14,-32],[15,-19],[51,-95],[39,53],[25,15],[15,23],[33,14],[27,-22],[51,-32],[37,34],[75,78],[-23,-138],[-17,-127],[-13,-51],[-13,-138],[-13,-37],[-10,-42],[17,15],[14,20],[18,53],[14,92],[55,247],[16,22],[45,28],[78,197],[31,-1],[19,-45],[19,-27],[4,54],[27,22],[-28,27],[-5,24],[-2,40],[19,55],[-12,48],[40,61],[-3,45],[14,38],[18,39],[21,19],[3,33],[13,14],[10,4],[20,-37],[22,44],[21,17],[9,-7],[12,-20],[12,-8],[10,4],[26,28],[24,-46],[15,-10],[-4,26],[-8,23],[6,20],[11,12],[36,-11],[19,-20],[21,-38],[28,-3],[23,4],[14,-21],[23,1],[11,-33],[35,-46],[7,-31],[28,-16],[27,-19],[28,-5],[28,5],[1,-40],[21,-11],[26,9],[21,-48],[53,-37],[38,-56],[24,10],[27,-15],[30,-121],[6,-87],[13,12],[12,39],[16,71],[29,23],[14,-27],[30,-44],[25,-47],[11,-31],[19,-5],[-16,-38],[16,4],[19,27],[17,-55],[13,-60],[2,-62],[-12,-35],[-10,-22],[-12,-44],[-13,-7],[-14,-14],[16,-32],[10,-30],[24,82],[16,23],[23,13],[13,-59],[2,-55],[-38,-23],[0,-44],[-12,-24],[-7,-29],[-6,-59],[-8,-50],[-23,-218],[0,-36],[27,38],[52,112],[16,118],[20,117],[22,37],[14,0],[20,-13],[1,-38],[-3,-22],[-22,-58],[-9,-32],[9,-32],[50,97],[22,33],[19,-6],[38,44],[76,9],[5,51],[16,22],[41,-6],[82,-45],[29,-37],[43,-35],[23,-41],[96,-76],[69,-8],[34,35],[43,-36],[23,-41],[44,-21],[45,-12],[35,29],[88,10],[112,42],[66,-10],[75,-28],[54,-71],[45,-41],[27,-40],[44,-41],[94,-111],[33,-64],[58,-88],[59,-37],[32,-91],[25,-42],[61,-154],[71,-108],[47,-109],[90,-69],[35,-115],[61,-14],[26,-17],[32,-49],[44,-27],[56,8],[63,-6],[50,23],[120,-43],[19,-21],[24,-49],[44,-182],[26,-202],[13,-154],[30,-120],[16,-226],[14,-71],[1,-54],[12,-13],[7,-152],[-3,-61],[-11,-80],[-1,-35],[2,-23],[-5,-33],[-2,-32],[12,-72],[0,-57],[-15,-70],[-21,-181],[-53,-302],[-51,-173],[-71,-178],[-47,-93],[-18,-10],[-17,19],[12,-50],[-11,-43],[-47,-131],[-46,-86],[-49,-150],[-4,-3],[-62,-58],[-37,-47],[-47,-85],[-43,-135],[-9,-18],[-16,10],[0,-69],[-37,-108],[-11,-16],[0,30],[7,24],[3,25],[-1,29],[-10,-21],[-22,-82],[7,-59],[-16,-90],[-60,-257],[-75,-217],[-17,-66],[-62,-146],[-45,-70],[-12,-1],[-15,6],[-7,112],[-36,68],[-10,12],[-15,-72],[-12,-20],[-18,-4],[19,-31],[6,-36],[-19,-73],[-1,-66],[-34,-72],[-20,-53],[-10,-67],[-7,-62],[16,17],[7,-13],[5,-19],[-3,-29],[-11,-54],[2,-134],[-4,-30],[11,-33],[12,56],[6,-16],[-32,-359],[13,-162],[4,-183],[15,-179],[16,-160],[1,-13],[-22,-185],[-28,-183],[-17,-150],[-11,-161],[-11,-78],[-4,-79],[13,-188],[4,-35],[-34,-84],[-37,-41],[-21,-40],[-45,-151],[-25,-224],[-1,-118],[12,-249],[-9,-102],[-14,-67],[-17,-45],[-44,-53],[-39,-131],[-17,-137],[-27,-50],[-5,-76],[-21,-83],[-56,-124],[-36,-36],[-18,-34],[-11,-72],[-35,-119],[-25,-154],[6,-53],[1,-8],[9,-178],[-3,-46],[-34,-49],[-128,-91],[-34,-39],[-77,-156],[-4,-36],[3,-53],[12,-30],[-13,-33],[-15,-59],[-22,4],[-127,0],[-69,-19],[-36,4],[-16,14],[-18,23],[-6,30],[10,46],[-6,27],[-19,-1],[-20,-13],[-4,-27],[1,-20],[8,-28],[4,-35],[-8,-30],[-40,-4],[-46,-28],[-56,-12],[-45,-20],[-21,26],[21,13],[29,-7],[32,21],[-7,25],[-45,32],[-51,-19],[-28,-39],[-61,4],[-75,-29],[-12,-30],[2,-57],[15,-13],[14,-26],[-14,-24],[-13,-11],[-79,-27],[-73,-112],[-31,-14],[-27,-49],[-3,-42],[-8,-25],[-18,-2],[-38,23],[-50,1],[-35,-18],[-183,-182],[-66,-72],[-75,-148],[-126,-166],[-67,-99],[-12,-26],[-11,-1],[-21,-21],[9,-17],[14,-2],[-6,-57],[-26,-40],[-50,-103],[-11,7],[16,54],[-25,2],[-36,20],[-15,-22],[9,-54],[-14,-22],[-24,-3],[-23,6],[-24,39],[11,-70],[51,-18],[22,-16],[8,-27],[-40,-126],[-34,-17],[-3,-17],[18,0],[10,-35],[-12,-141],[-16,-26],[-10,-1],[-10,-24],[14,-46],[13,-33],[-2,-65],[-5,-54],[0,-52],[17,-101],[6,-104],[7,-37],[4,-42],[-11,-39],[6,-63],[-19,-107],[10,-154],[-4,-144],[-8,-76],[-12,-59],[-29,-76],[-1,-77],[-62,-71],[-69,-99],[-63,-118],[-69,-166],[-80,-252],[-73,-360],[-89,-272],[-36,-98],[-48,-109],[-64,-128],[-86,-128],[-94,-114],[-34,-51],[-33,-73],[-8,30],[7,49],[-4,37],[-1,48],[19,9],[28,-30],[14,20],[11,21],[34,12],[65,125],[48,47],[28,79],[4,42],[-1,85],[16,22],[35,-8],[7,24],[-3,27],[6,59],[48,52],[22,63],[-7,160],[8,7],[20,-25],[9,11],[10,70],[-5,36],[-23,10],[-79,-79],[-26,3],[-4,62],[-39,29],[-15,52],[-4,35],[-14,14],[1,-61],[4,-59],[34,-69],[-8,-28],[-17,-32],[-11,-71],[1,-92],[-9,28],[-12,16],[-5,-99],[-23,-38],[-7,-38],[6,-43],[-12,-30],[-58,-80],[-58,-55],[-13,-26],[-6,-61],[-9,-63],[-26,-55],[-21,-110],[1,-47],[7,-69],[11,-46],[-18,-31],[-23,-59],[-19,-67],[-46,-251],[-40,-151],[-31,-74],[-44,-78],[-125,-196]],[[33997,34453],[13,28],[44,61],[24,54],[5,48],[21,43],[38,38],[41,70],[47,102],[28,75],[9,49],[19,37],[26,26],[23,55],[20,84],[26,66],[35,49],[19,41],[4,32],[9,21],[15,9],[8,17],[-1,25],[5,17],[8,10],[15,-4],[21,-15],[12,3],[4,21],[-5,24],[-15,27],[5,30],[40,48],[29,18],[19,30],[18,47],[28,33],[40,18],[10,18],[-1,23],[8,16],[23,12],[13,22],[2,33],[7,31],[13,28],[15,10],[16,-7],[15,10],[14,29],[17,13],[19,-2],[10,6],[34,14],[18,24],[16,53],[13,20],[12,-12],[21,18],[29,48],[5,1],[22,22],[22,82],[11,55],[-3,45],[-7,32],[3,48],[7,128],[2,53],[12,37],[-1,36],[-21,82],[-21,71],[-12,121],[-7,46],[-18,13],[-16,40],[-20,3],[-9,16],[-10,12],[-15,-3],[-12,-24],[-23,-1],[-14,-9],[-17,-21],[-16,9],[-10,19],[-21,0]],[[33844,40227],[19,8],[7,23],[13,32],[17,8],[20,12],[7,24],[-47,84],[-28,51],[17,69],[27,116],[27,112],[21,85],[5,16],[18,6],[-3,44],[-1,29],[-14,1],[16,105],[24,148],[18,113],[6,19],[13,5],[3,13],[-16,19],[-10,35],[-20,100],[-33,159],[-3,57],[-12,35],[-20,-12],[-24,12],[-60,86],[-39,47],[-13,27],[-6,89],[-12,97],[-5,121],[2,30],[33,91],[0,47],[3,40],[-1,32],[-9,1],[-13,-14],[-20,-11],[-12,-1],[-116,9],[-133,10],[-110,8],[-96,7],[-3,79],[-5,133],[-4,94],[-6,149],[-39,93],[-41,101],[-15,25],[50,4],[36,2],[-7,271],[-11,28],[-10,87],[-6,49],[-18,41],[-4,45],[3,30],[10,19],[7,46],[-5,47],[-11,43],[-13,42],[-24,26],[-36,46],[-53,60],[-45,41],[-15,-5],[-79,-16],[-27,-9],[-18,10],[-59,-1],[-24,32],[-19,37],[-42,95],[-6,47],[-16,15],[-25,-6],[-25,7],[-48,39],[-44,40],[-22,-1],[-20,25],[-34,61],[-16,24],[-7,32],[-7,47],[-14,10],[-18,-9],[-19,-24],[-27,16],[-33,44],[-21,33],[-12,16],[-29,24],[-27,5],[-42,-35],[-34,14],[-54,13],[-46,25],[-17,65],[-9,44],[-27,27],[-22,33],[-26,50],[-13,17],[-23,14],[-22,17],[-2,32],[-8,42],[-2,10],[-15,51],[-7,4],[-8,-10],[-5,-8],[-6,10],[-2,22],[4,37],[-8,38],[-21,40],[-11,41],[-1,43],[-5,29],[-8,14],[-5,25],[-1,36],[6,43],[13,49],[-3,76],[-19,103],[-10,74],[-2,45],[3,34],[11,32],[23,81],[4,61],[-7,69],[-1,52],[5,37],[-8,47],[-16,45],[-11,1],[-16,-12],[-18,-38],[-22,-7],[-19,24],[-61,-10],[-94,-24],[-38,-24],[-22,-10],[-26,-8],[-43,-44],[-106,-169],[-22,-24],[-25,-3],[-15,-24],[-23,-18],[-46,-67],[-24,-54],[-15,-48],[-18,-2],[-13,13],[-44,-6],[-22,-17],[-24,-47],[-30,-85],[-13,-24],[-24,-26],[-28,-20],[-34,-32],[-16,-2],[-13,-5],[-12,14],[-4,31],[-18,19],[-42,10],[-63,22],[-65,4],[-33,-2]],[[36214,51711],[26,-3],[37,11],[24,27],[28,5],[27,-3],[92,-30],[55,-9],[20,-9],[20,-14],[14,-15],[4,-32],[-14,-51],[-10,-53],[-9,-75],[-7,-16],[-12,4],[7,-67],[-2,-27],[-6,-26],[-15,-54],[-22,-69],[-7,-14],[-17,-24],[-14,-31],[3,-29],[7,-29],[-8,-36],[-27,-53],[-16,-13],[-14,-6],[-14,6],[-23,53],[-3,-42],[-6,-42],[-8,-24],[-31,3],[-17,23],[-28,25],[-5,-69],[-18,-47],[-17,-15],[-27,-10],[-16,-20],[-30,16],[-27,31],[-16,3],[-12,-25],[-63,-5],[-29,-26],[-18,8],[-26,52],[-5,34],[-15,70],[-14,84],[-10,75],[8,66],[17,-3],[20,-9],[4,4],[1,21],[-4,18],[-32,-3],[-21,39],[-3,60],[4,124],[2,26],[15,36],[4,31],[-3,34],[6,61],[13,52],[52,67],[59,24],[172,-65]],[[37741,38512],[9,-16],[-16,2],[-18,-14],[-28,-12],[-11,23],[24,32],[9,24],[6,-5],[8,-17],[17,-17]],[[36504,36634],[-5,-7],[-18,72],[35,69],[12,-28],[-9,-55],[-10,-38],[-5,-13]],[[37427,38082],[0,-30],[-11,15],[-31,-12],[-11,23],[42,97],[8,-14],[6,-18],[5,-25],[-5,-16],[-3,-20]],[[37639,50149],[-28,-56],[9,65],[-4,45],[3,35],[19,34],[6,5],[-2,-41],[1,-13],[-4,-74]],[[39237,44298],[-10,-12],[-2,36],[29,47],[4,54],[15,-25],[4,-28],[0,-12],[-40,-60]],[[39193,44081],[-9,-33],[-11,5],[-5,22],[-8,22],[4,18],[8,10],[20,-2],[1,-42]],[[37532,51083],[-18,-27],[-5,-15],[-15,11],[3,16],[4,-2],[5,47],[25,-6],[1,-24]],[[36183,51997],[12,-30],[-40,-120],[-21,-18],[-24,-3],[-31,36],[-48,-3],[-15,9],[-1,52],[20,56],[40,-3],[69,45],[39,-21]],[[36028,52959],[-28,-26],[-16,10],[-15,69],[5,57],[20,19],[16,-4],[6,-8],[14,-93],[-2,-24]],[[35929,51767],[-76,-113],[-25,37],[-6,22],[5,21],[-1,9],[8,39],[43,32],[21,5],[27,-10],[5,-27],[-1,-15]],[[36265,51778],[-73,-18],[-34,29],[8,24],[25,38],[30,28],[28,12],[28,-15],[8,-33],[-2,-32],[-18,-33]],[[35992,51923],[-5,-85],[-50,36],[4,87],[24,24],[20,46],[7,56],[1,77],[8,14],[6,5],[6,-5],[3,-116],[2,-70],[-26,-69]],[[36068,52069],[-30,-19],[-5,18],[0,72],[8,40],[38,11],[4,12],[11,7],[7,-25],[-1,-41],[-32,-75]],[[35602,51017],[-30,-11],[38,144],[34,67],[1,133],[36,118],[34,49],[47,14],[26,-72],[-32,-205],[-9,-1],[-43,-108],[-48,-75],[-54,-53]],[[36531,35848],[-19,-26],[4,137],[10,45],[11,34],[14,21],[10,-29],[-8,-67],[-25,-81],[3,-34]],[[54907,76553],[-23,24]],[[32597,39035],[-4,9],[-22,34],[-20,63],[-5,29],[-3,1],[-118,-1],[-113,-3],[-11,-13],[-17,0],[-12,13],[-11,-1],[-17,-13],[-15,-25],[-44,-169],[-21,-72],[-16,-65],[-12,-110],[-4,-19],[-14,38],[-20,102],[-9,57],[-13,66],[-22,82],[-27,25],[-16,8],[-23,16],[-42,20],[-18,4],[-119,2],[-9,2],[-46,-9],[-24,6],[-25,46],[-55,81],[-11,26],[-21,17],[-13,2],[-7,-16],[-10,-68],[-11,-61],[-12,-35],[-39,-25],[-37,-27],[-20,-7],[-11,-30],[-5,-43],[-9,-38],[-53,-58],[-12,-24],[-6,-57],[-29,-71],[-10,-27]],[[50751,55512],[-116,-24],[-130,-39],[-55,-25]],[[25473,62483],[-15,-65],[15,-9],[14,7],[32,-3],[13,-71],[-4,-61],[-30,-158],[-4,-55],[-14,-81],[19,-54],[-18,-72],[-6,-46],[-1,-69],[9,-132],[-15,-190],[-25,-83],[-16,-32],[-28,-82],[-37,-25],[-51,-133],[-9,-35],[5,-38]],[[25569,62168],[-13,-11],[11,34],[1,21],[16,89],[10,-1],[3,-8],[-28,-124]],[[25596,61879],[-21,-81],[-2,23],[9,60],[12,21],[8,22],[2,26],[10,-13],[-3,-25],[-15,-33]],[[50701,81276],[121,97],[73,50],[35,15]],[[33474,59378],[-8,-11],[-25,23],[-9,28],[-1,88],[15,8],[29,-70],[17,-25],[-18,-41]],[[75645,63819],[-5,0],[-16,53],[-15,58],[-39,110],[-12,197],[-1,97],[-26,114],[-18,158],[-7,41],[9,51],[2,19],[-5,-4],[-14,-26],[-17,63],[-11,56],[-46,117],[-13,52],[-1,50],[-19,-50],[-27,-36],[-27,-54],[-18,-16],[-57,-10],[-33,72],[-47,175],[-7,40],[6,103],[-11,97],[0,52],[-3,34],[-8,-8],[-4,-23],[2,-36],[-3,-31],[-41,6],[-39,14],[34,-51],[36,-12],[19,-46],[3,-36],[-1,-40],[-19,-29],[-17,-17],[3,-39],[21,-47],[-26,-14],[-6,-31],[-1,-43],[13,-39],[5,-29],[-3,-26],[12,-29],[18,-60],[5,-42],[-7,-60],[-10,-23],[-16,-23],[-39,-75],[-19,-86],[-16,-40],[-20,-7],[-7,18],[-17,22],[0,42],[5,33],[33,81],[-18,-11],[-21,-23],[-31,-43],[-11,53],[-6,50],[0,61],[25,91],[-29,-45],[-8,-57],[4,-67],[-4,-47],[-11,-62],[-15,-37],[-25,-24],[-11,-37],[-17,-27],[0,54],[-5,71],[-18,168],[-4,-36],[9,-104],[0,-68],[-14,-54],[-27,-57],[-21,-8],[-12,8],[-19,36],[-20,51],[-4,82],[-8,45]],[[75319,64616],[-30,-40],[10,239],[22,-89],[6,-48],[-8,-62]],[[75432,64736],[-13,-17],[-12,14],[-16,56],[8,71],[5,11],[7,-23],[11,-50],[7,-38],[3,-24]],[[75215,64567],[-48,-20],[-25,6],[46,151],[-1,68],[-7,55],[-24,44],[-1,32],[-11,43],[-5,51],[26,16],[21,-29],[3,-16],[4,-42],[11,-43],[36,-88],[0,-55],[-10,-132],[-15,-41]],[[75520,64419],[-10,-47],[-5,34],[4,43],[4,24],[3,0],[6,-25],[-2,-29]],[[75541,64232],[-17,-3],[-8,17],[4,24],[-5,78],[14,8],[7,-1],[5,-22],[3,-42],[-3,-59]],[[75178,65070],[4,-25],[-15,15],[-12,17],[-7,23],[12,12],[18,-42]],[[64057,66752],[-9,-44],[-9,16],[-21,76],[6,53],[-10,76],[5,22],[26,11],[6,-4],[-8,-24],[15,-43],[2,-70],[-3,-69]],[[28428,65811],[1,-13],[-28,-36],[20,-26],[19,56],[15,-46],[8,-86],[-1,-15],[1,-12],[3,-17],[1,-24],[-16,-75],[-54,8],[-2,63],[-8,12],[-13,91],[-17,29],[-24,74],[14,19],[18,-6],[10,9],[25,7],[16,10],[12,-22]],[[28548,66764],[-6,-5],[-24,58],[-19,17],[30,41],[13,35],[0,76],[7,42],[-2,36],[7,37],[-9,42],[-26,33],[-50,131],[-79,32],[-41,1],[22,21],[21,-2],[32,-13],[39,-6],[23,-39],[22,-51],[21,-20],[8,-14],[-1,-14],[3,-14],[27,-24],[26,-39],[8,-113],[-36,-54],[-6,-164],[-10,-30]],[[29714,64050],[-8,-42],[-30,-81],[-65,-20],[-73,-4],[-5,22],[-2,20],[5,30],[0,12],[-3,12],[26,13],[18,37],[27,7],[34,-27],[19,-1],[27,29],[22,63],[13,-8],[-5,-62]],[[28404,66075],[0,-70],[3,-52],[-3,-19],[-30,-34],[-8,-20],[-28,-20],[-17,-27],[-9,45],[-17,27],[-2,47],[-13,-16],[-19,10],[-30,35],[-19,48],[27,8],[5,-30],[22,37],[-5,19],[-4,3],[-7,36],[32,94],[7,60],[-15,98],[14,6],[36,-34],[16,-34],[0,-46],[16,-35],[21,-86],[27,-50]],[[28196,67240],[34,-18],[18,2],[11,12],[49,-5],[41,17],[6,-30],[-1,-16],[-86,-15],[-78,-45],[-43,-31],[-21,-3],[-15,16],[-52,93],[14,-10],[38,-52],[24,10],[22,34],[4,26],[-4,13],[10,41],[29,-39]],[[28514,66252],[-31,-12],[-23,11],[-5,10],[9,16],[21,13],[34,1],[15,-15],[2,-7],[-22,-17]],[[29428,64932],[6,-10],[-17,-23],[-40,28],[-9,-2],[-8,31],[-3,22],[2,21],[24,-16],[12,-30],[33,-21]],[[29325,65707],[-22,-63],[-12,6],[7,78],[15,12],[6,0],[6,-33]],[[29387,64639],[-20,-18],[5,30],[37,51],[21,44],[11,16],[5,12],[16,17],[8,28],[-2,24],[-17,38],[0,27],[6,20],[29,9],[-8,-29],[12,-82],[-39,-103],[-33,-31],[-31,-53]],[[28708,66524],[46,-65],[39,-24],[42,-82],[18,-29],[4,-26],[-7,-120],[-10,-73],[2,-63],[-10,18],[-10,42],[-17,24],[-5,13],[29,2],[3,66],[14,51],[-2,54],[-34,59],[-24,53],[-36,16],[-34,52],[-20,7],[-24,-10],[9,31],[6,41],[4,8],[17,-45]],[[28982,65351],[-12,-4],[-21,16],[-48,70],[-23,6],[8,39],[17,-14],[39,-60],[15,-30],[25,-23]],[[29211,65031],[-2,-15],[-35,115],[-44,28],[-26,28],[6,15],[17,7],[3,37],[-7,39],[-24,80],[-13,54],[-6,12],[-1,45],[27,-70],[12,-62],[18,-61],[13,-105],[35,-36],[25,-51],[2,-60]],[[29081,65783],[2,-30],[-19,6],[-28,-11],[-9,0],[6,20],[19,27],[1,26],[-24,37],[-27,92],[-13,22],[-6,35],[-23,38],[5,20],[4,4],[16,-9],[35,-134],[2,-12],[59,-131]],[[29711,64763],[17,-9],[9,1],[32,-17],[19,-24],[4,-10],[-10,-21],[-29,40],[-26,5],[-36,-1],[-14,8],[10,43],[24,-15]],[[29745,64231],[-37,-28],[-3,33],[18,27],[22,-32]],[[62435,74713],[27,9],[46,27],[13,-13],[13,-27],[7,-23],[1,-42],[5,-7],[23,14],[9,-17],[18,-21],[29,-20],[43,32],[21,8],[18,-1],[9,-10],[4,-33],[-4,-41],[-5,-22],[9,-16],[35,-40],[15,-21],[-7,-38],[26,-93],[9,-36],[10,-44]],[[62913,74254],[-1,53],[1,41],[-4,24],[-20,33],[-1,14],[6,8],[16,-5],[20,2],[10,13],[-22,43],[-19,29],[-17,19],[-3,12],[0,8],[3,10],[28,24],[3,21],[-2,25],[-44,36],[-34,-14],[-30,41],[-19,31],[-24,33],[-21,19],[-20,42],[-36,43],[-23,12],[1,7],[4,8],[9,6],[64,-1],[7,7],[4,19],[9,27],[10,41],[-1,34],[-63,55],[-46,50],[-32,67],[-22,61],[1,20],[6,19],[49,56],[4,15],[-1,10],[-18,29],[-22,29],[-7,22],[-14,11],[-27,1],[-46,36],[-10,4],[-2,7],[2,7],[33,15],[0,12],[-10,16],[-19,12],[-17,29],[-6,26]],[[63492,75947],[25,-34],[45,-90],[63,-147],[15,-42],[10,-48],[9,-59],[14,-52],[64,-130],[28,-48],[45,-63],[16,-14],[21,-3],[39,-1],[35,-24],[18,-17],[18,-25],[16,-28],[17,-77],[-62,25],[-62,-4],[-36,-16],[-34,-22],[-32,-32],[-21,-62],[-17,-142],[-25,-134],[0,-61],[12,-59],[-2,-29],[-11,-12],[-15,-25],[-19,-122],[-10,-25],[-12,-15],[-3,15],[0,32],[-27,28],[-14,-32],[-10,-67],[-20,-71],[-1,-13],[5,-219]],[[62653,75239],[3,19],[-8,9],[-8,0],[-8,-9],[0,-24],[10,-5],[11,10]],[[62506,75476],[-6,-7],[-9,7],[-3,14],[1,16],[9,3],[7,-4],[2,-14],[-1,-15]],[[89771,44956],[-7,-69],[-14,-55],[-1,-32],[3,-45],[22,-33],[18,-21],[10,-58],[31,-81],[-1,-56],[16,-69],[16,-137],[4,-121],[16,-80],[-10,-172],[11,-70],[15,-58],[18,-116],[13,-106],[19,-30],[38,-36],[41,40],[28,53],[31,13],[43,28],[31,-71],[17,-80],[74,-104],[42,-68],[32,-37],[30,-50],[-3,-50],[-7,-39],[7,-61],[4,-71],[-6,-86],[22,-130],[7,-103],[23,-101],[-2,-104],[-4,-40],[-3,-58],[18,-72],[17,-54],[24,-58],[33,-89],[23,-17],[20,-2],[-3,-90],[41,-179],[22,-147],[-15,-197],[-14,-114],[3,-56],[53,-137],[30,-25],[-6,-65],[-4,-101],[24,-78],[27,-58],[30,-35],[29,-28],[38,-28],[48,-12],[25,-44],[13,-35],[39,-12],[17,7],[22,14],[14,-24],[11,-31],[21,-86],[44,-85],[30,-14],[18,-43],[24,-11],[22,-6],[30,-33],[49,-75],[45,-13],[20,-21],[44,-83],[17,-44],[18,-66],[-22,-6],[-21,13],[-13,-64],[29,-90],[35,-63],[41,-67],[40,-94],[10,-72],[11,-29],[13,-101],[35,-59],[2,-108],[18,-149],[19,-135],[14,-40],[17,-65],[18,8],[14,21],[28,-64],[15,-28],[8,16],[-17,123],[11,72],[10,9],[16,2],[18,-58],[26,-62],[47,-55],[38,-52],[11,2],[-4,40],[1,59],[15,9],[14,-29],[25,-91],[5,-188],[0,-158],[17,-162],[24,-43],[16,-40],[28,-54],[18,-51],[23,-23],[74,-108],[20,-13],[32,-2],[40,-49],[19,-45],[43,-169],[20,-59],[43,-59],[19,-19],[29,-40],[10,-59],[3,-34],[17,-63],[25,-75],[38,-41],[34,-91],[2,-148],[18,-73],[12,-32],[27,-30],[11,-24],[-23,-195],[22,-391],[-12,-122],[22,-121],[52,-210],[12,-74],[7,-87],[34,-111],[-2,-169],[13,-80],[-3,-105],[-40,-112],[-31,-139],[-1,-118],[-20,-228],[-14,-62],[-10,-95],[-43,-230],[-2,-90],[6,-108],[-7,-103],[-11,-71],[-10,-130],[-44,-202],[-63,-150],[-4,-114],[-8,-50],[-13,-62],[-39,-69],[-23,-29],[-9,-40],[-22,0],[0,-13],[15,-12],[-7,-21],[-58,-36],[-40,-47],[-40,-113],[-17,-60],[-21,-57],[-13,-27],[-6,-28],[-8,-72],[-21,-13],[-18,-21],[8,-68],[-9,-78],[-3,-53],[-10,-34],[-11,12],[-10,-5],[-12,-19],[19,-5],[11,-9],[-39,-76],[-36,-78],[-10,-51],[-15,-65],[-14,-144],[-11,-83],[8,-58],[-2,-11],[-8,-4],[-5,7],[-17,-20],[-4,-20],[7,-25],[4,-8],[-2,-12],[-6,-13],[-16,0],[-19,-21],[-53,-213],[-23,-57],[-27,-87],[-10,-79],[-8,-86],[-10,-145],[-9,-103],[-21,-99],[-7,-71],[-3,-135],[10,-103],[-7,-54],[0,-52],[-8,-49],[-34,-11],[-28,-40],[-40,-65],[-23,-24],[-51,-18],[-99,8],[-189,-24],[-37,-15],[-70,-45],[-68,-70],[-66,-94],[-149,-256],[-117,-28],[-22,0],[-18,7],[-21,-16],[0,-32],[19,-33],[14,-31],[25,43],[11,-12],[4,-79],[1,-50],[-8,-27],[-15,-20],[-17,13],[-2,27],[-22,65],[-26,57],[-25,18],[-14,-19],[-23,-20],[-20,72],[-20,63],[-28,7],[-24,-1],[-19,27],[-39,43],[8,33],[10,35],[22,13],[-6,48],[-12,39],[-30,10],[-21,-7],[-12,-30],[-16,-54],[-64,-67],[-32,37],[-36,55],[18,-4],[36,2],[30,49],[13,31],[15,66],[-19,46],[-18,34],[-26,30],[-98,-102],[-21,-15],[-19,-20],[34,-17],[20,5],[21,-30],[-34,-42],[-26,-12],[-34,-25],[-63,-66],[-80,-136],[-35,-39],[-41,-32],[-56,37],[-31,8],[-40,56],[-67,38],[-63,74],[-44,38],[-31,8],[-43,-16],[-73,67],[-56,7],[-36,-67],[-29,5],[-18,9],[-59,110],[-56,55],[-107,28],[-66,76],[-49,146],[-94,168],[-25,61],[-12,60],[-1,47],[13,90],[17,89],[3,50],[-35,167],[-50,159],[-23,49],[-62,106],[-57,79],[-15,42],[-4,21],[27,-10],[12,32],[19,11],[14,-43],[17,-8],[0,72],[10,35],[-7,15],[-5,14],[-25,16],[-28,-24],[-21,-31],[-28,-26],[-11,-28],[-29,-1],[-12,-7],[-58,-53],[-36,-1],[-57,18],[18,73],[23,43],[19,50],[30,173],[-5,151],[-15,61],[-48,125],[-22,76],[-27,80],[-13,-46],[-8,-49],[-26,-70],[-13,-157],[-50,-239],[-35,-3],[-30,10],[-52,-28],[-35,-33],[-32,0],[-18,-10],[-23,8],[37,187],[31,-5],[35,7],[15,-3],[23,2],[18,86],[11,96],[-7,62],[-3,64],[7,73],[3,53],[43,174],[37,89],[42,72],[-5,68],[-14,85],[-4,65],[20,20],[19,41],[-22,187],[-14,55],[-22,55],[0,-71],[2,-70],[-30,-89],[-40,-64],[-26,-60],[-25,-136],[-32,-115],[-30,-43],[-27,-9],[-27,-18],[-42,-45],[-42,-39],[-30,-50],[-26,-27],[-86,-230],[-40,-76],[-8,-31],[-16,-26],[3,-37],[13,-24],[13,-102],[-8,-22],[-14,11],[-35,57],[-22,-21],[-18,-23],[-46,105],[-20,24],[-24,42],[-26,36],[-11,5],[-19,-8],[2,28],[13,23],[11,6],[21,-34],[24,-30],[14,-2],[6,12],[-23,118],[-15,104],[-7,30],[-19,106],[-9,30],[-40,74],[-43,88],[-11,104],[-16,67],[-20,42],[-31,38],[-85,14],[-35,107],[-21,133],[16,9],[19,2],[7,41],[-5,64],[-84,78],[-40,83],[-34,35],[-31,14],[-42,-3],[-53,3],[-126,131],[-30,4],[-90,-41],[-31,7],[-137,179],[-91,86],[-30,15],[-39,15],[-32,-21],[-22,-19],[-46,-22],[-182,14],[-156,-28],[-105,-19],[-67,-24],[-112,-107],[-133,-103],[-108,-49],[-99,-65],[-66,-19],[-84,-8],[-179,32],[-61,-24],[-97,-120],[-29,-29],[-55,-33],[-141,-155],[-65,-33],[-42,-11],[-36,-32],[-32,-66],[-45,-183],[-27,-86],[-61,-138],[-39,-46],[-40,6],[-44,-48],[-38,51],[-31,9],[-50,-4],[-174,-58],[-25,68],[-32,10],[-60,-3],[-90,20],[-164,-25],[-79,-28],[-31,-25],[-58,16],[-99,-23],[-35,-38],[-26,-35],[-51,-154],[-56,-51],[-47,-1],[-51,-12],[-105,-148],[-106,-144],[-36,-15],[-40,-24],[-52,-12],[-26,-13],[-122,37],[-77,4],[-97,22],[-83,71],[-64,40],[-73,155],[-44,58],[-80,70],[-23,-2],[-19,-19],[-33,49],[-1,64],[-9,54],[1,142],[5,167],[29,-38],[23,-36],[49,2],[44,62],[25,92],[21,103],[-3,110],[-15,193],[10,41],[15,16],[5,96],[4,296],[-11,111],[-68,226],[-45,197],[-32,88],[-28,143],[-23,198],[-7,100],[-7,185],[8,105],[-4,61],[-28,167],[-64,156],[-10,58],[0,61],[-15,71],[-51,143],[-52,123],[-9,60],[-10,249],[-19,114],[-89,287],[-104,248],[-29,102],[-13,34],[8,4],[11,-13],[13,-25],[7,-2],[6,21],[-1,47],[4,26],[9,-14],[11,-53],[33,-138],[10,-70],[42,-21],[13,18],[15,36],[5,97],[-21,44],[-20,19],[-32,72],[-21,115],[-33,107],[0,38],[15,28],[25,-15],[23,-62],[25,-57],[-4,-100],[-4,-27],[2,-23],[9,-22],[12,-17],[13,25],[11,58],[7,-7],[18,-133],[14,-36],[27,-42],[24,32],[11,28],[-4,94],[7,91],[-4,67],[-61,177],[-56,218],[-34,109],[-28,164],[-18,56],[-24,92],[-1,104],[2,71],[19,151],[18,79],[56,181],[3,78],[0,59],[8,90],[0,63],[-8,59],[-23,100],[31,177],[45,226],[18,33],[28,31],[5,-47],[-13,-157],[19,-81],[-6,-92],[18,15],[27,18],[21,48],[11,46],[51,184],[30,69],[41,50],[85,61],[81,80],[39,77],[49,66],[34,73],[32,49],[166,183],[28,34],[36,4],[44,-6],[40,10],[43,-42],[31,-5],[77,46],[41,40],[71,89],[31,25],[72,28],[82,37],[98,154],[70,-10],[63,-15],[51,46],[119,28],[66,39],[124,102],[33,35],[50,73],[44,91],[43,123],[27,110],[11,57],[26,90],[17,71],[14,34],[48,48],[71,135],[23,28],[4,43],[-15,24],[-19,15],[-13,143],[-12,99],[-1,69],[5,66],[28,103],[19,44],[28,51],[25,16],[21,45],[34,44],[15,45],[21,91],[19,69],[15,-3],[28,-160],[19,-85],[35,-100],[32,-148],[27,-67],[13,-44],[10,-20],[3,28],[-3,33],[13,112],[-6,79],[2,31],[6,12],[13,-8],[25,-44],[13,-16],[9,3],[-1,72],[13,45],[-5,31],[-22,-2],[-9,39],[-18,44],[-21,32],[-24,74],[-8,28],[10,14],[15,-2],[13,31],[5,42],[-11,69],[12,25],[22,-7],[36,-109],[16,11],[13,44],[23,12],[24,-8],[15,-31],[32,-32],[42,4],[22,-8],[45,6],[22,-10],[-4,17],[-25,20],[-27,4],[-32,-2],[-14,21],[-5,55],[8,40],[5,17],[21,-7],[19,2],[2,53],[7,48],[11,39],[0,37],[-12,-10],[-28,-86],[-14,70],[-20,53],[4,77],[12,76],[18,10],[16,-12],[23,45],[13,34],[-3,28],[3,21],[16,-6],[62,-69],[12,-36],[13,14],[4,39],[-1,39],[-14,-5],[-32,3],[-7,22],[3,19],[-15,46],[21,29],[17,2],[13,20],[0,27],[4,12],[10,-17],[32,-7],[31,-35],[15,-8],[6,19],[2,41],[-39,41],[-1,40],[-17,47],[0,45],[24,39],[5,37],[15,15],[27,0],[19,32],[21,11],[6,70],[-1,48],[9,12],[21,-20],[-6,-55],[0,-53],[-6,-29],[8,2],[5,12],[9,35],[22,-14],[6,-37],[3,-37],[11,-12],[15,56],[21,15],[-1,71],[8,51],[2,38],[13,19],[3,40],[-10,28],[-6,51],[18,11],[18,-25],[13,-64],[8,-29],[11,16],[7,42],[22,25],[22,-34],[24,-48],[31,42],[28,77],[-5,47],[4,49],[35,26],[29,-19],[25,-52],[54,-39],[46,-56],[20,-36],[40,-58],[25,-60],[34,-107],[82,-131],[5,-23],[-11,-43],[-10,-56],[-12,-95],[-3,-139],[12,10],[12,50],[13,-10],[14,-32],[2,31],[-9,18],[-15,64],[0,34],[12,28],[19,32],[20,22],[13,18],[2,24],[18,23],[28,8],[16,-4],[118,-59],[29,-60],[3,-73],[11,-26],[7,46],[-2,100],[10,20],[31,-15],[22,-20],[30,-66],[6,-32],[13,-21],[4,30],[-6,43],[-4,50],[6,43],[36,3],[23,10],[-11,16],[-15,6],[-25,40],[-17,42],[27,42],[-1,10],[-25,-1],[-34,40],[-29,56],[22,103],[45,101],[25,34],[2,34],[12,62],[8,53],[2,42],[11,43],[28,41],[37,15],[18,16],[18,38],[16,46],[-34,90],[3,50],[6,59],[42,43],[22,112],[15,17],[33,-3],[13,10],[-2,89],[3,35],[14,14],[18,-12],[11,-39],[25,-36],[9,20],[-4,39],[-3,51],[23,11],[19,3],[1,41],[-3,33],[8,14],[48,7],[13,34],[7,29],[6,-16],[8,-66],[27,-38],[80,-1],[45,27],[19,-16],[30,-13],[32,31],[20,24],[33,-31],[11,-32],[8,69],[20,24],[20,14],[26,-12],[10,4],[-23,51],[1,46],[-1,69],[4,62],[8,45],[-55,91],[-55,14],[-40,-19],[-17,15],[-36,72],[-34,27],[-2,18],[41,52],[16,-9],[24,-49],[14,-17],[12,4],[7,38],[11,20],[20,-12],[62,-82],[34,-80],[18,21],[31,45],[29,-9],[17,-27],[25,-97],[20,-48],[48,-13],[24,-19],[25,-32],[33,3],[70,-12],[65,-62],[27,-39],[32,-11],[18,-15],[34,-5],[53,44],[24,-40],[11,-28],[48,-52],[53,-16],[37,53],[55,39],[38,60],[28,29],[27,49],[10,-2],[-22,-46],[-2,-26],[17,-11],[-2,-14],[-23,-35],[-29,-56],[1,-34],[11,-18],[13,8],[18,28],[23,16],[19,-23],[7,-80],[14,-53],[30,-7],[19,0],[19,74],[-10,63],[-12,14],[6,23],[48,104],[27,-3],[19,-102],[31,-53],[32,4],[17,-14],[14,-61],[-114,-251],[-5,-28],[15,-45],[6,-53],[-37,-128],[-14,-6],[-13,35],[-19,22],[-18,-16],[-18,-9],[-66,-71],[0,-183],[17,-109],[-10,-71],[-19,-126],[-22,-47],[-17,-30],[-57,-172],[-18,-41],[-19,-59],[6,-56],[7,-39],[22,-44],[83,-92],[38,-64],[66,-76],[15,-53],[9,-43],[47,-49],[34,-30],[10,8],[7,10],[8,0],[9,-6],[-2,-38],[-3,-21],[3,-27],[24,-34],[38,1],[22,8],[25,-36],[22,-24],[36,-48],[63,-58],[49,-38],[58,-140],[44,-81],[49,-59],[72,-41],[33,7],[54,-48],[53,-22],[28,-66],[9,-50],[3,-39],[26,-92],[54,-30],[69,-92],[57,-41],[14,-24],[25,-29],[48,-1],[84,46],[38,47],[51,74],[23,128],[14,103],[71,212],[20,105],[18,140],[15,87],[-5,95],[16,172],[36,237],[13,79],[-7,118],[-22,220],[10,77],[10,106],[-16,77],[-16,53],[-2,75],[17,140],[15,74],[16,96],[-9,182],[34,63],[13,32],[26,0],[12,-14],[3,36],[-10,34],[-4,39],[-8,20],[-16,7],[-13,21],[-19,22],[3,81],[33,156],[18,60],[11,-25],[14,-20],[2,45],[-5,46],[25,152],[27,207],[8,188],[44,36],[23,47],[13,55],[25,0],[17,-24],[-11,-41],[-4,-31],[47,-79],[16,-60],[7,-57],[9,-54],[4,-72],[0,-115],[6,-109],[17,-34],[15,-22],[22,-3],[31,-18]],[[92521,37009],[-7,-16],[-13,29],[-8,102],[6,59],[14,55],[3,30],[-6,62],[42,71],[10,37],[4,48],[-15,52],[-12,10],[10,29],[12,15],[9,6],[7,-5],[5,-102],[17,-36],[-3,-50],[-58,-259],[-16,-97],[-1,-40]],[[88751,42296],[-21,-51],[-11,7],[-10,-27],[-20,-13],[-12,0],[-22,-13],[-4,16],[4,51],[19,56],[18,35],[46,16],[36,25],[4,-4],[26,-65],[-38,-8],[-15,-25]],[[87975,43891],[12,-24],[13,2],[12,53],[7,-8],[5,-13],[4,-23],[-17,-40],[-8,-6],[-7,-23],[-12,-73],[1,-24],[11,-25],[27,-22],[13,10],[5,-3],[-5,-36],[-11,-27],[-36,12],[-32,-4],[-52,26],[-27,3],[-8,10],[16,21],[10,28],[-5,67],[4,84],[30,41],[14,42],[20,26],[13,-3],[-2,-26],[5,-45]],[[86238,45115],[23,-14],[10,-19],[7,-21],[1,-25],[-29,-11],[-52,37],[-51,-31],[-15,0],[-10,22],[8,61],[19,-9],[16,22],[-3,67],[-9,37],[27,68],[12,13],[12,0],[11,-48],[2,-51],[13,-48],[8,-50]],[[86282,45290],[37,-5],[45,43],[21,-18],[9,4],[33,41],[21,12],[15,30],[14,-33],[32,-38],[11,-40],[13,-19],[5,-12],[-20,-42],[-3,-45],[-21,3],[-25,-74],[-95,-124],[-85,106],[-37,71],[-24,99],[-5,82],[-10,51],[4,14],[5,6],[7,-1],[25,-56],[12,-15],[16,-40]],[[81439,36835],[-7,-24],[-54,180],[-15,123],[10,22],[10,6],[32,-170],[10,-39],[0,-40],[4,-12],[10,-46]],[[88220,31256],[67,-14],[26,21],[32,-17],[22,-56],[-16,-27],[-15,-4],[-49,23],[-46,-18],[-13,-23],[-9,-51],[-40,-28],[-18,31],[-48,22],[-17,-32],[-34,9],[-32,-14],[-43,8],[-46,57],[-14,26],[11,47],[16,34],[126,49],[67,41],[55,-7],[15,-9],[14,-21],[-10,-38],[-1,-9]],[[90412,29749],[-42,-38],[-15,17],[1,29],[3,13],[36,2],[17,-23]],[[90364,29671],[10,-28],[2,-11],[-24,22],[-39,-5],[24,40],[20,-8],[7,-10]],[[91400,40154],[-6,-6],[-10,0],[-13,11],[12,74],[6,-39],[12,-32],[-1,-8]],[[91370,40236],[-6,-3],[-7,6],[5,24],[7,19],[10,14],[-3,-52],[-6,-8]],[[91984,38311],[10,-15],[8,2],[8,-9],[-3,-38],[13,-42],[6,-30],[-10,-24],[-6,-8],[-15,20],[-42,121],[7,41],[24,-18]],[[91809,38984],[-8,-1],[-7,10],[6,23],[1,32],[10,-10],[7,-45],[-9,-9]],[[91646,39059],[-10,-18],[-6,42],[1,44],[10,15],[5,-58],[0,-25]],[[92649,36038],[-24,-158],[-7,3],[-9,24],[1,91],[10,58],[24,-10],[5,-8]],[[92622,36108],[-6,-9],[-12,55],[-4,56],[5,51],[14,11],[10,-4],[-11,-94],[4,-66]],[[89520,45676],[-23,-33],[-15,18],[-4,36],[2,16],[19,28],[21,-65]],[[89538,45972],[-17,-36],[-17,11],[-6,20],[6,29],[23,5],[11,-29]],[[89490,45994],[-7,-16],[-12,34],[14,40],[12,-19],[-7,-39]],[[90632,41341],[6,-55],[12,-42],[-5,-28],[-7,-21],[-18,19],[-12,51],[-21,41],[-5,23],[25,-2],[12,8],[5,9],[8,-3]],[[87943,45288],[-20,-35],[-1,26],[10,21],[25,84],[11,20],[6,11],[5,31],[1,46],[14,7],[-11,-105],[-40,-106]],[[87871,45159],[-44,-43],[24,58],[51,52],[8,12],[-2,-25],[-26,-43],[-11,-11]],[[88081,42754],[-12,-27],[-15,28],[-3,29],[-12,8],[6,27],[6,7],[6,33],[16,-39],[1,-43],[7,-23]],[[88017,42845],[-5,-4],[0,48],[8,24],[4,-50],[-7,-18]],[[87941,42840],[-17,-2],[-4,3],[-3,25],[5,23],[18,6],[7,-6],[-6,-49]],[[88738,41984],[-11,-10],[-3,24],[14,24],[9,34],[19,-30],[3,-30],[-31,-12]],[[87843,43879],[-7,-6],[-25,11],[0,21],[3,15],[7,10],[16,41],[11,-24],[5,-49],[-10,-19]],[[86831,45332],[-6,-9],[-22,89],[6,27],[-9,46],[15,5],[12,34],[4,-16],[1,-63],[9,-36],[-10,-77]],[[84777,43444],[-18,-36],[-12,29],[7,58],[12,20],[10,-10],[-1,-45],[2,-16]],[[84610,42971],[-11,-17],[-10,5],[0,23],[-11,24],[6,28],[4,14],[9,-2],[3,-23],[12,-26],[-2,-26]],[[82068,39868],[-17,-45],[-19,9],[-3,23],[13,37],[22,45],[7,-28],[-3,-41]],[[90289,28348],[32,-2],[18,14],[16,-2],[19,-33],[22,-18],[16,3],[13,-6],[12,-24],[30,-20],[14,-13],[11,-20],[13,-16],[81,-54],[57,-26],[71,12],[21,15],[21,22],[17,-20],[17,-32],[-3,34],[6,30],[17,23],[20,15],[32,-2],[31,7],[14,13],[14,2],[19,-17],[19,-9],[13,22],[21,51],[12,18],[55,-16],[15,0],[27,53],[17,-1],[51,-42],[22,-53],[-3,-97],[2,-34],[4,-34],[2,-67],[-6,-67],[-1,-52],[3,-52],[-3,-98],[8,-64],[-4,-44],[0,-21],[7,-19],[4,-22],[-3,-28],[3,-32],[-3,-27],[-11,4],[-4,21],[2,26],[-2,22],[-6,19],[-20,22],[6,13],[10,12],[-7,29],[-13,-24],[-8,-33],[5,-11],[-8,-9],[-17,-38],[-12,-51],[-5,-50],[1,-52],[-10,-40],[-14,-39],[-3,-49],[1,-91],[11,-83],[7,-113],[-10,-15],[-30,-7],[-14,-15],[-24,57],[-15,58],[11,24],[24,-14],[8,13],[2,16],[-2,15],[-30,32],[-33,15],[-11,-19],[4,-55],[-3,-13],[-24,-21],[-12,80],[-31,60],[1,-29],[13,-50],[-1,-21],[-5,-29],[-13,-10],[-5,-23],[0,-32],[-5,-51],[-20,-23],[-48,57],[-4,-19],[1,-17],[25,-33],[-12,-25],[-8,-29],[-14,-76],[-23,-64],[-11,-4],[-37,10],[-42,54],[-38,-6],[-62,4],[-40,-20],[-9,59],[-8,21],[3,18],[32,13],[33,-1],[-6,23],[-8,8],[-15,-5],[-41,19],[-29,-8],[-19,28],[-34,96],[-20,45],[-12,18],[-13,9],[-9,14],[-61,221],[-8,51],[-11,129],[48,-62],[18,-39],[9,-50],[16,61],[-3,19],[-43,73],[-6,21],[-2,25],[-10,-25],[-17,-3],[7,51],[-6,51],[-51,111],[-39,105],[-38,130],[-3,16],[-1,28],[-18,87],[-10,65],[-4,56],[17,114],[3,64],[27,-29],[63,-37]],[[89979,28734],[-8,-2],[-6,32],[3,47],[-14,45],[8,46],[-1,50],[5,22],[16,24],[3,43],[14,2],[25,-33],[9,-85],[-4,-51],[9,-46],[-8,-40],[-21,-32],[-30,-22]],[[91110,28941],[50,-104],[25,-17],[8,-11],[-2,-45],[-11,-20],[20,-26],[-3,-17],[-4,1],[-24,-35],[-29,-17],[-9,12],[-8,17],[-6,23],[-37,91],[4,25],[-8,38],[-18,-3],[-12,23],[20,22],[26,61],[18,-18]],[[90931,26844],[-13,-59],[-21,10],[-22,-10],[-13,40],[0,10],[16,-10],[6,13],[4,17],[5,4],[4,24],[14,29],[8,0],[9,-38],[3,-30]],[[91139,27240],[-15,-5],[-6,2],[1,30],[-2,13],[13,27],[20,-13],[7,-20],[-19,-17],[1,-17]],[[90953,26934],[-17,0],[-7,5],[-3,29],[-11,12],[6,9],[2,18],[7,20],[13,-22],[10,-71]],[[90217,28509],[-10,-47],[-11,60],[12,8],[9,21],[2,-3],[-2,-39]],[[91201,28624],[26,-34],[15,-38],[-20,-31],[-14,-6],[-9,36],[-29,-13],[-31,3],[-23,27],[-3,14],[14,14],[38,-1],[36,29]],[[91176,28504],[-14,-44],[-17,28],[-2,13],[21,10],[7,-1],[5,-6]],[[94132,20328],[-9,-23],[-3,26],[17,114],[17,20],[-3,-60],[-19,-77]],[[79367,45798],[-8,-41],[-14,23],[-17,7],[3,30],[14,5],[7,1],[10,11],[5,-36]],[[76899,44825],[4,-2],[4,3],[2,-4],[-7,-5],[-4,10],[-2,16],[-1,15],[2,0],[0,-6],[1,-5],[1,-9],[-1,-6],[1,-7]],[[76921,44818],[-3,-3],[-3,3],[-1,1],[0,3],[3,1],[3,2],[1,5],[1,7],[1,-7],[0,-6],[-2,-6]],[[70474,21234],[-34,-28],[-34,1],[-14,21],[-22,68],[-14,4],[-8,19],[-1,8],[15,5],[23,-19],[55,-16],[40,-37],[30,-12],[-12,-10],[-24,-4]],[[96649,35127],[6,-6],[5,-3],[3,-5],[0,-9],[-3,-10],[-3,-4],[-1,-2],[-1,-1],[0,-3],[0,-2],[-2,8],[-3,6],[-3,0],[-2,-6],[-1,0],[-1,6],[-1,6],[-1,5],[1,5],[3,5],[0,4],[-2,2],[-3,-2],[4,9],[5,-3]],[[84331,44685],[0,-6],[-6,1],[0,6],[6,-1]],[[33833,33138],[-6,-53],[14,-228],[-8,-32],[-14,-37],[-16,-2],[-19,6],[-13,-23],[-9,-100],[-25,-218],[4,-51],[21,-84],[7,-53],[6,-41],[5,-76],[-12,-34],[-11,-6],[-14,-19],[16,-93],[13,-43],[38,-87],[144,-122],[60,-72],[68,-97],[37,-100],[3,-83],[-54,-124],[-6,-103],[11,-73],[20,-68],[52,-88],[39,-32],[52,4],[9,-25],[5,-21],[8,-178],[-1,-67],[-15,-61],[-100,-282],[-86,-172],[-31,-94],[-11,-102],[-27,-48],[-148,-154],[-230,-137],[-186,-71],[-42,-24],[-299,-78],[-58,-11],[-75,7],[-61,-10],[-68,21],[-61,25],[-34,61],[-41,7],[-11,-30],[20,-78],[-9,-93],[11,-54],[24,-11],[23,-27],[21,-37],[-35,-4],[13,-29],[15,-18],[-2,-61],[-13,-148],[-34,-32],[-9,-8],[-11,-32],[-21,-142],[-7,-92],[9,-59],[41,-124],[-15,-81],[-26,-44],[-112,-90],[-45,-36],[-70,-25],[-114,-4],[-42,6],[-97,82],[-73,49],[-66,39],[-64,23],[9,12],[4,21],[-18,12],[-13,3],[-42,-43],[-18,-43],[-5,-38],[-1,-92],[8,-76],[30,-189],[3,-103],[-14,-130],[20,-76],[24,-34],[56,-34],[21,-23],[24,3],[7,-9],[-4,-16],[-14,-33],[1,-35],[42,-10],[43,7],[46,16],[11,24],[0,50],[-53,9],[6,18],[41,21],[53,33],[27,7],[18,-23],[12,-21],[16,-54],[9,-71],[1,-86],[-7,-81],[-7,-28],[-14,-35],[-95,-43],[-26,11],[-25,61],[-8,63],[-21,42],[-46,34],[-45,-10],[-45,-59],[-44,-19],[-15,-53],[110,-86],[52,-24],[17,0],[17,-11],[-15,-32],[-16,-20],[-79,-44],[-34,-31],[-41,-60],[-57,-132],[-17,-28],[-9,-34],[-6,-91],[19,-150],[-20,-63],[12,-70],[-6,-47],[-20,-67],[-80,-106],[-14,-78],[28,-45],[-2,-40],[-9,-36],[-33,0],[-120,24],[-44,-39],[-41,-49],[-11,-23],[-14,-14],[-83,-26],[-16,-17],[-88,-184],[-38,-115],[-45,-112],[-12,-47],[-3,-66],[7,-59],[6,-44],[16,-56],[33,-64],[170,-260],[35,-23],[181,-28],[40,-36],[23,-58],[9,-51],[-10,-128],[-11,-41],[-20,-36],[-43,-47],[-51,-25],[14,-18],[21,2],[46,16],[19,-16],[15,-50],[-28,-21],[-9,-24],[-20,-38],[-105,-148],[-56,-45],[-52,-59],[-70,-61],[-27,-34],[-37,-73],[-56,-79],[-61,-170],[-2,-33],[9,-22],[-34,-298],[-12,-35],[-24,-37],[-65,-62],[-31,-7],[-41,35],[-23,38],[-22,63],[-28,66],[-1,-23],[9,-40],[-6,-42],[-70,-19],[-18,-20],[63,9],[43,-13],[18,-15],[16,-32],[15,-38],[-12,-21],[-35,-18],[-44,-32],[-53,-58],[-29,-68],[-13,-48],[-14,-98],[-4,-64],[-22,-50],[-35,-44],[2,-11],[24,23],[18,7],[16,-59],[22,-119],[10,-82],[-2,-25],[-6,-33],[-45,-8],[-39,1],[-29,-15],[15,-15],[27,6],[37,-36],[41,15],[19,-23],[13,-22],[63,-172],[55,-106],[27,-63],[-13,-29]],[[30936,21513],[16,-25],[65,-118],[17,-48],[10,-56],[-26,35],[-27,-20],[-13,-34],[-12,-36],[0,-26],[9,-23],[27,-19],[64,-7],[5,-7],[37,-141],[19,-32],[22,-25],[51,-72],[49,-77],[58,-74],[62,-57],[57,-42],[54,-53],[58,-73],[63,-54],[67,-37],[69,-32],[105,13],[32,-4],[20,-23],[-20,-64],[-26,-51],[-35,-21],[-36,-8],[-34,1],[-33,10],[-31,-6],[-29,-21],[-31,-11],[-32,-2],[-31,-18],[-32,-13],[-32,11],[-84,51],[-55,12],[-185,20],[-59,12],[-59,18],[-31,0],[-45,-11],[-35,1],[-10,-11]],[[32069,20324],[31,-13],[61,10],[32,0],[14,-5],[6,-7],[42,11],[18,-1],[-5,-25],[-38,-24],[-16,10],[-82,-2],[-36,-25],[-15,0],[-36,-36],[-26,23],[-7,21],[18,29],[18,1],[12,12],[9,21]],[[32812,29278],[3,-36],[-15,4],[-34,35],[-12,33],[-2,14],[35,-15],[16,-14],[9,-21]],[[32856,61657],[-9,-23],[-31,9],[-6,29],[-1,20],[19,41],[22,-18],[9,-19],[6,-4],[0,-17],[-3,-12],[-6,-6]],[[32848,61966],[-4,-15],[-23,28],[-7,51],[1,11],[3,6],[9,-10],[12,-4],[8,-17],[1,-50]],[[53392,48525],[-4,16],[-12,57],[7,54],[7,41],[-8,82],[-18,74],[-20,93],[-6,18]],[[53261,41906],[11,218],[11,96],[0,116],[-7,298],[-7,41],[-5,48],[27,37],[14,27],[19,50],[13,69],[16,153],[58,352],[27,345],[35,163],[13,183],[96,236],[24,145],[50,72],[70,75],[51,135],[24,94],[28,179],[-1,187],[18,250],[-4,72],[-26,99],[-5,71],[-24,70],[-27,53],[-12,94],[-45,149],[-13,99],[-21,71],[-4,88],[-11,93],[-22,92],[-22,105],[0,32],[14,40],[12,13],[-4,-20],[-8,-23],[2,-19],[84,184],[6,36],[-3,41],[-1,49],[4,57],[-80,340],[-64,316],[-10,159],[-84,210],[-33,137],[-19,96],[-15,36],[6,18],[21,5],[49,22],[65,24],[61,56],[17,24]],[[49383,72064],[56,-11],[29,5],[67,51],[52,69],[41,36],[37,75],[32,48],[48,52],[136,111],[21,1],[45,-25],[39,8],[27,39],[29,93],[44,57],[57,58],[76,54],[50,51],[80,43],[199,28],[102,24],[70,-5],[70,80],[35,26],[152,6],[72,58],[272,0],[33,-19],[33,-32],[56,-75],[27,-17],[36,16],[84,72],[94,37],[51,42],[22,62],[44,23],[25,-47],[98,-48],[60,13],[26,15],[-9,71],[63,-19],[49,-34],[51,-69],[33,-14],[60,31],[125,16]],[[55555,74717],[-1,52],[-9,41],[-31,99],[-102,96],[-24,43],[-11,36],[-10,35],[10,1],[10,-9],[13,-11],[5,18],[-6,37],[-26,87],[-2,24],[13,74],[21,82],[-1,99],[7,75],[-8,49],[-3,60],[15,79],[14,20],[8,25],[1,85],[-31,39],[-35,8]],[[37300,16980],[61,-14],[31,-21],[8,-24],[36,-9],[5,-5],[7,-14],[4,-15],[-1,-20],[-62,48],[-86,3],[-20,34],[-44,-20],[-5,13],[0,17],[6,24],[28,-10],[32,13]],[[24851,12213],[-3,-1],[-6,0],[-4,0],[-4,-1],[-3,-1],[-3,0],[-1,0],[0,1],[-2,2],[-3,5],[-2,5],[-1,5],[1,7],[3,3],[0,4],[0,5],[1,5],[1,5],[0,3],[1,1],[2,1],[5,0],[3,0],[5,-1],[3,-1],[3,-2],[4,-5],[3,-6],[0,-3],[1,-3],[0,-4],[1,-5],[1,-4],[-1,-7],[-2,-7],[-2,-1],[-1,0]],[[0,0],[99608,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0]],[[0,3253],[447,8],[89,-8],[94,-25],[207,-2],[194,-11],[50,-33],[65,-20],[137,17],[110,9],[89,1],[823,-46],[843,-81],[172,-26],[154,-61],[162,9],[957,-47],[148,0],[586,-50],[1026,-114],[89,-4],[97,3],[-51,62],[-96,56],[-129,40],[84,12],[184,1],[-37,29],[-101,16],[-366,19],[-1463,144],[-32,9],[-21,12],[-38,13],[-60,14],[-223,8],[-61,13],[-29,16],[15,7],[17,-3],[340,13],[38,16],[2,11],[-18,8],[-59,10],[-137,48],[-44,21],[23,33],[28,14],[105,11],[31,22],[-20,40],[-241,80],[-162,29],[-107,-20],[-203,-1],[-251,-10],[-68,11],[-70,32],[-82,57],[-42,15],[-80,47],[-106,46],[-561,111],[-98,30],[-702,175],[-29,30],[-18,32],[324,-71],[61,0],[72,18],[55,-5],[75,18],[84,9],[219,-55],[442,-89],[118,-31],[63,-22],[52,-7],[51,-16],[63,9],[38,-8],[92,5],[419,10],[166,-8],[195,-43],[75,-71],[56,-32],[107,25],[90,30],[173,25],[56,-10],[93,-37],[105,-62],[445,17],[187,-3],[133,-28],[485,93],[75,20],[111,65],[-91,20],[-65,7],[-25,33],[44,13],[140,18],[272,28],[161,27],[86,70],[369,109],[117,48],[108,79],[-242,157],[-232,136],[74,42],[73,33],[35,26],[29,37],[-76,45],[-71,33],[-117,32],[-440,77],[-150,33],[60,51],[80,39],[169,17],[1079,60],[1087,74],[27,37],[-144,44],[-123,11],[-45,13],[-17,28],[-1,38],[-14,6],[-46,4],[-196,44],[-41,17],[-65,41],[-17,32],[39,82],[60,35],[104,19],[75,7],[225,-1],[88,10],[37,11],[-7,39],[-25,18],[-1,24],[38,14],[47,-1],[13,29],[-26,47],[-67,25],[-176,43],[-400,65],[-155,49],[-89,38],[-74,44],[-75,21],[-52,23],[11,28],[-24,44],[-29,8],[-127,-19],[-227,10],[-278,41],[-192,47],[-251,127],[-99,63],[73,44],[80,28],[334,65],[50,22],[68,58],[-112,24],[-95,-2],[-84,16],[-342,4],[-193,-8],[-162,72],[-121,71],[-34,36],[-26,64],[41,94],[34,67],[-4,83],[9,113],[58,38],[45,7],[105,-87],[90,-7],[131,17],[83,45],[44,17],[81,4],[156,-20],[71,8],[80,-4],[251,-58],[55,-27],[30,-21],[9,-30],[31,-31],[107,-15],[299,17],[78,-7],[212,-85],[180,-91],[62,-23],[102,-15],[36,13],[31,34],[97,42],[218,52],[52,52],[-29,28],[-84,30],[-51,10],[-28,34],[2,47],[17,45],[57,11],[104,-61],[130,-57],[45,-8],[35,2],[65,20],[78,15],[149,-122],[88,-8],[110,-1],[21,19],[-13,32],[-18,35],[-23,5],[-3,32],[48,30],[33,13],[-13,22],[-53,33],[-31,6],[-28,14],[9,23],[35,10],[49,34],[-15,39],[2,51],[-20,27],[-116,53],[-169,87],[-157,39],[-350,-31],[-124,20],[-81,23],[-88,30],[103,32],[108,22],[32,20],[41,40],[48,29],[39,8],[128,-15],[289,-108],[61,-12],[198,-49],[55,-3],[68,11],[-55,48],[-61,34],[-145,96],[16,46],[94,76],[245,6],[107,27],[139,58],[179,96],[154,12],[192,30],[65,-22],[164,-93],[103,-32],[35,-3],[37,3],[-97,116],[63,14],[80,13],[66,29],[49,24],[168,111],[150,31],[426,48],[146,-44],[123,-5],[27,13],[25,59],[65,115],[55,41],[185,43],[145,-2],[104,-47],[97,-31],[89,-14],[90,1],[134,27],[178,9],[83,14],[96,-26],[236,-9],[183,-37],[113,0],[153,36],[83,5],[299,58],[234,12],[177,-26],[286,16],[290,-12],[117,-21],[652,13],[518,55],[71,19],[111,60],[61,55],[41,17],[87,6],[149,-12],[205,-41],[176,15],[337,-23],[32,19],[32,104],[55,165],[47,49],[77,-13],[233,-94],[5,-40],[-24,-29],[-38,-11],[-11,-80],[31,-23],[52,7],[33,-35],[-73,-60],[-52,-34],[-33,-15],[-23,-115],[-31,-38],[-4,-42],[50,0],[50,18],[44,4],[140,30],[255,35],[84,17],[48,6],[31,23],[-43,57],[-14,47],[26,39],[-7,67],[-24,68],[49,50],[46,-11],[79,8],[45,-25],[69,-22],[66,-11],[63,-45],[21,-98],[-19,-100],[-65,-73],[-121,-66],[-137,-105],[29,-50],[71,17],[309,-5],[199,8],[125,-12],[158,-27],[125,-39],[149,-8],[93,15],[87,-20],[339,84],[138,48],[79,-24],[128,20],[71,-18],[133,30],[84,3],[97,-12],[296,-6],[22,-55],[90,-83],[73,-32],[93,14],[67,25],[106,-9],[153,35],[153,-11],[64,6],[29,23],[25,51],[-47,28],[-134,36],[-123,74],[-55,16],[-88,-9],[-41,13],[-44,24],[57,29],[70,93],[-29,84],[-33,18],[-81,-3],[-98,-30],[-39,21],[-64,11],[-25,78],[-68,146],[-36,42],[-108,38],[-93,19],[-90,24],[-27,58],[17,79],[108,17],[104,-8],[58,-15],[67,-6],[77,-16],[50,-23],[40,-13],[75,0],[260,21],[35,15],[31,28],[55,7],[51,-4],[74,17],[-85,23],[-91,44],[-137,53],[-115,29],[-209,20],[-107,-7],[-67,11],[-239,-6],[-65,21],[-46,58],[-65,138],[-18,72],[44,27],[29,30],[71,3],[103,-12],[34,-14],[25,-43],[-25,-44],[-33,-23],[20,-21],[105,-6],[52,-13],[45,-5],[97,20],[142,8],[71,-20],[85,-15],[125,24],[445,-13],[54,-6],[54,-40],[46,-24],[49,10],[145,-46],[77,-36],[79,-18],[67,-5],[75,9],[98,30],[81,12],[58,-11],[123,-6],[94,-36],[73,15],[77,41],[244,29],[163,-8],[298,-74],[69,-7],[136,44],[44,72],[-6,81],[39,19],[33,-9],[60,56],[82,-5],[51,-10],[31,36],[28,77],[97,6],[70,-12],[92,-49],[0,-41],[-38,-43],[-63,-107],[39,-63],[59,6],[75,-13],[91,27],[58,1],[101,-93],[68,-5],[53,5],[172,84],[50,9],[61,-38],[89,-89],[78,-51],[114,-32],[99,-9],[116,-42],[64,-35],[146,0],[62,-15],[176,-72],[160,36],[83,33],[40,61],[-20,91],[-7,92],[24,38],[42,7],[191,-103],[-12,62],[-16,47],[-49,82],[7,61],[41,19],[80,-32],[96,-16],[79,-36],[155,-128],[50,-112],[105,-28],[73,5],[83,18],[111,16],[86,-5],[79,21],[24,-61],[-74,-88],[-29,-57],[24,-15],[45,13],[37,18],[129,-9],[104,40],[89,14],[84,42],[69,-4],[53,-7],[72,-33],[69,18],[41,-7],[56,-2],[297,145],[67,-3],[85,9],[107,34],[83,15],[68,-1],[121,53],[193,-7],[98,28],[191,32],[128,37],[228,98],[92,58],[100,129],[63,129],[70,171],[-34,111],[-37,49],[-31,54],[-73,111],[-20,139],[7,131],[-26,123],[-26,91],[-54,152],[-66,99],[-77,133],[0,121],[-19,95],[-46,68],[-20,54],[36,11],[33,17],[89,21],[213,-37],[19,54],[54,40],[38,50],[-13,77],[-47,31],[-56,65],[26,52],[45,0],[22,57],[-17,56],[21,70],[41,90],[28,33],[-51,54],[-48,70],[12,54],[24,57],[29,80],[40,57],[26,20],[-7,19],[-61,20],[-56,4],[-101,-36],[-16,7],[-5,19],[-6,39],[10,95],[16,90],[14,13],[40,11],[38,69],[35,4],[22,-23],[7,-91],[12,-21],[-4,-44],[18,-15],[22,28],[41,14],[16,-31],[15,-15],[7,26],[-5,74],[-7,30],[-5,48],[9,23],[10,37],[-17,78],[6,29],[37,47],[18,9],[35,0],[63,-31],[30,-2],[22,14],[14,30],[11,98],[-27,35],[0,31],[16,20],[28,68],[42,4],[41,-6],[40,13],[-14,28],[-12,43],[45,21],[29,6],[77,-27],[30,-15],[28,35],[-9,34],[-30,19],[-5,30],[7,39],[48,-20],[11,8],[13,34],[-8,17],[-6,22],[63,5],[9,9],[13,27],[19,9],[56,-1],[12,14],[6,30],[-31,7],[-39,29],[-6,80],[9,57],[35,50],[42,34],[78,-30],[60,7],[24,-30],[33,-8],[8,34],[-15,30],[-10,49],[96,59],[31,-10],[38,14],[-14,45],[21,57],[27,8],[19,-50],[26,-10],[29,12],[71,58],[35,9],[35,3],[36,34],[9,40],[20,28],[62,38],[25,27],[55,95],[-10,24],[16,20],[163,86],[80,8],[133,52],[81,61],[51,25],[45,68],[55,11],[128,47],[96,77],[133,53],[62,-5],[25,-16],[16,-63],[26,-77],[40,-38],[-15,-34],[-38,4],[-41,-8],[-9,38],[15,28],[-15,25],[-37,-6],[-49,-13],[-33,-19],[-43,-41],[-34,-23],[-113,-61],[-74,-88],[-53,-93],[-32,-63],[-47,-5],[-11,-23],[19,-18],[15,-8],[35,-7],[-6,-27],[-24,-7],[3,-22],[25,-32],[5,-46],[-29,-7],[-44,49],[-50,5],[-39,23],[-25,33],[-24,-7],[-18,-47],[11,-52],[-21,-31],[-24,14],[-9,62],[-23,11],[-32,1],[-77,-67],[-28,-2],[-14,-34],[-45,-38],[-29,-31],[-71,-102],[-40,-43],[-76,-24],[-30,3],[-18,10],[-27,7],[-28,1],[-9,-27],[44,-88],[-24,-30],[-53,2],[-26,25],[-21,-24],[-17,-23],[-17,-34],[26,-72],[41,-32],[30,-6],[11,-27],[-65,-11],[-44,-63],[-20,-44],[-23,-38],[3,-44],[34,-66],[46,-47],[46,-4],[60,15],[14,13],[59,7],[26,46],[19,3],[17,-8],[27,-2],[15,30],[20,11],[28,-8],[54,1],[15,-27],[-17,-30],[-33,-42],[-31,23],[-27,-4],[-15,-22],[29,-47],[-11,-42],[-24,-42],[-29,27],[-4,45],[-40,27],[-39,12],[-26,-47],[-41,-13],[-6,-54],[-17,-50],[-24,15],[-9,62],[-67,50],[-35,7],[-70,-13],[-24,1],[-28,-11],[-20,-42],[29,-31],[10,-42],[-1,-31],[-6,-12],[-5,-26],[32,-37],[1,-50],[-25,1],[-21,15],[-81,130],[-51,58],[-22,51],[-53,12],[-38,1],[-46,-21],[18,-24],[9,-36],[-28,-15],[-35,-56],[-23,-48],[-14,-10],[-18,-28],[75,-61],[11,-24],[4,-41],[-24,-22],[-56,-9],[-99,43],[-43,1],[-15,30],[-22,-4],[-13,-51],[-16,-45],[-24,-30],[7,-46],[19,-11],[-15,-19],[-31,-15],[-21,-18],[46,-17],[9,-15],[2,-22],[-72,-16],[-47,-4],[-28,18],[-26,-9],[-17,-29],[-5,-39],[5,-48],[9,-34],[7,-13],[8,-29],[-43,-74],[-5,-16],[-3,-34],[21,-31],[16,-46],[-23,-23],[-25,-47],[26,-9],[44,-2],[48,6],[72,41],[20,7],[9,-16],[6,-25],[-18,-24],[-130,-68],[-24,-29],[33,-16],[67,-3],[26,-22],[-16,-24],[-24,-23],[-28,-54],[23,-20],[72,-32],[131,-42],[97,-14],[-22,49],[-3,60],[68,49],[35,16],[162,29],[44,-1],[34,-13],[-13,-25],[-37,9],[-65,-16],[-100,-54],[-18,-23],[7,-42],[85,-34],[27,-27],[-37,-81],[6,-52],[43,-57],[57,-65],[28,-43],[43,-25],[70,-61],[38,-61],[12,-140],[57,-116],[67,-53],[8,-46],[-22,-46],[-57,27],[-32,-27],[-12,-49],[40,-34],[64,-42],[138,4],[4,-46],[-32,-27],[-25,-34],[-31,-19],[-52,-12],[-13,-41],[22,-58],[72,26],[53,3],[55,-10],[17,-77],[65,-95],[16,-45],[-12,-43],[-40,-13],[-25,-34],[-36,-29],[-41,-16],[-76,-79],[-33,-8],[-14,-16],[65,-8],[45,-2],[97,64],[37,-14],[24,-42],[12,-49],[-24,-42],[-169,-25],[-82,-23],[-88,-66],[101,-31],[74,11],[37,-12],[51,-23],[56,12],[44,24],[33,-1],[31,-12],[4,-41],[4,-72],[7,-54],[-18,-36],[-88,-26],[-64,1],[-2,-76],[96,-57],[60,30],[53,-15],[0,-91],[41,-101],[36,-6],[30,46],[38,0],[15,-54],[-17,-91],[-29,-50],[-78,21],[-44,16],[-35,-34],[-58,-29],[-51,-4],[-45,45],[-52,34],[-83,17],[-78,8],[26,-39],[35,-23],[14,-69],[28,-72],[65,19],[90,-41],[56,-43],[24,-57],[-31,-91],[-51,-34],[-32,-16],[-56,35],[-39,0],[-41,-16],[-14,-42],[-27,-20],[144,-3],[45,-11],[33,-38],[-52,-50],[-95,8],[-41,-19],[-35,-36],[142,-22],[59,12],[93,38],[22,-38],[-37,-38],[-48,-61],[-100,-19],[-75,-1],[-98,22],[-26,13],[-41,7],[3,-37],[26,-26],[66,-94],[11,-36],[-21,-50],[-58,-37],[-65,-14],[-54,32],[-39,91],[-50,27],[-51,8],[-30,-4],[3,-46],[12,-49],[-20,-35],[-44,18],[-57,-16],[-53,-27],[-48,-30],[98,-14],[65,-3],[46,-46],[-17,-23],[-88,-10],[-86,-20],[-117,-50],[86,-21],[81,1],[57,-5],[47,-9],[13,-27],[-29,-30],[-192,-74],[-201,-91],[-74,-29],[-77,-16],[-179,-78],[-113,-36],[-318,-55],[-497,-139],[-169,-99],[-50,-76],[-32,-11],[-95,-26],[-95,-12],[-251,-8],[-257,37],[-208,8],[-113,-12],[-386,66],[-49,-3],[-60,-12],[-48,0],[-36,9],[-78,4],[-263,-26],[-27,-41],[33,-76],[96,-92],[160,-162],[86,-35],[53,-37],[100,-43],[224,-2],[306,-34],[174,-31],[-6,-60],[-105,-115],[-65,-44],[-155,-80],[-213,-40],[-163,12],[-289,65],[-362,60],[-538,57],[-118,26],[-139,26],[-79,-27],[-60,-25],[-133,-2],[39,-23],[537,-155],[458,-113],[54,-29],[65,-20],[-6,-72],[-26,-57],[-90,-50],[-234,-3],[-293,-40],[-146,-1],[-145,39],[-309,113],[-189,84],[-132,96],[-91,76],[-102,75],[7,-47],[18,-47],[50,-58],[73,-63],[5,-25],[-35,-4],[-53,30],[-45,-28],[-16,-33],[19,-44],[28,-42],[93,-94],[80,-25],[106,-57],[258,-106],[44,-36],[78,-78],[16,-59],[76,-58],[52,-9],[47,2],[16,50],[-3,61],[20,15],[74,15],[193,-21],[821,-12],[78,-35],[31,-45],[21,-93],[-87,-112],[-59,-48],[-97,-29],[-88,-23],[-133,-9],[-275,8],[-269,0],[209,-54],[203,-44],[282,8],[112,12],[97,21],[41,-37],[77,-78],[45,-25],[31,-26],[43,-85],[17,-50],[42,-58],[30,-49],[44,-33],[75,-15],[82,28],[159,13],[154,-45],[99,-14],[132,37],[105,52],[221,47],[41,20],[60,16],[91,-4],[36,-12],[46,-51],[43,-70],[63,-35],[67,-25],[38,-3],[126,-22],[164,21],[73,-21],[12,-40],[39,-32],[49,-11],[665,-180],[229,-35],[353,-18],[274,-2],[38,-11],[53,-35],[-105,-24],[-112,-3],[-169,9],[-60,-5],[-129,10],[-67,-7],[-61,11],[-91,-25],[-166,-19],[37,-27],[62,-6],[126,-10],[172,5],[15,-43],[-158,-10],[-336,-9],[-35,-7],[-26,-22],[50,-11],[31,-12],[16,-31],[-36,-79],[56,-55],[39,-9],[41,8],[71,-22],[69,-30],[146,-2],[173,40],[85,-1],[228,25],[207,-4],[289,48],[48,-1],[44,-6],[-80,-44],[-355,-110],[-127,-21],[-51,-14],[29,-54],[46,-56],[94,-60],[59,-89],[57,-19],[110,41],[27,-31],[5,-61],[-29,-49],[-37,-28],[-26,-27],[-17,-36],[46,-31],[123,-19],[163,-7],[151,-1],[93,-9],[341,194],[137,94],[67,39],[56,29],[288,119],[67,36],[76,53],[141,8],[193,86],[171,66],[68,13],[51,5],[60,14],[150,-5],[107,11],[190,42],[145,27],[154,23],[174,4],[463,44],[132,-19],[146,-46],[95,1],[125,14],[86,18],[39,-53],[20,-69],[-42,-64],[-70,-40],[-19,-66],[95,-33],[108,10],[206,32],[164,42],[45,28],[64,-8],[109,35],[136,146],[171,147],[144,94],[93,110],[77,63],[86,48],[58,24],[132,5],[189,76],[275,87],[211,-42],[223,-63],[110,51],[87,9],[74,23],[74,17],[53,45],[71,38],[54,55],[271,27],[284,36],[38,13],[37,-7],[98,10],[125,30],[172,10],[90,-3],[82,81],[164,17],[175,32],[73,24],[57,6],[1413,63],[61,31],[124,25],[47,61],[-190,25],[-58,26],[-65,7],[-38,-9],[-164,7],[-1303,94],[-27,8],[-45,57],[9,105],[-39,81],[-91,22],[-94,-2],[-119,-10],[-314,-44],[-125,-4],[-335,68],[-221,77],[-145,25],[-104,52],[-97,40],[-7,91],[23,85],[187,246],[117,118],[78,9],[71,53],[73,119],[59,56],[135,66],[59,17],[212,81],[58,2],[95,-13],[108,73],[329,156],[75,59],[91,35],[266,132],[238,64],[118,19],[144,39],[160,59],[139,57],[497,109],[298,29],[203,32],[144,-19],[143,6],[123,29],[57,23],[83,59],[276,-28],[178,40],[74,4],[78,18],[-31,21],[-28,3],[-28,28],[-37,58],[37,73],[28,36],[82,45],[43,64],[40,94],[135,185],[38,26],[86,8],[73,-5],[83,2],[210,-48],[39,19],[67,54],[56,68],[120,100],[23,30],[-10,49],[-180,-21],[-136,-33],[-131,18],[-17,28],[28,21],[49,8],[19,34],[-45,28],[-81,16],[-36,21],[3,51],[20,75],[44,21],[36,31],[96,105],[57,32],[164,29],[190,-44],[44,12],[46,59],[-47,90],[-36,34],[0,30],[100,-14],[93,-20],[109,4],[129,90],[181,75],[88,31],[78,18],[42,76],[62,144],[46,75],[-1,45],[-14,38],[-47,-11],[-43,-5],[-101,38],[-125,61],[-38,68],[-18,61],[39,33],[38,20],[41,5],[73,-25],[93,-62],[46,-24],[53,-46],[40,4],[47,64],[38,85],[32,26],[49,28],[54,41],[-24,40],[-58,21],[-8,24],[25,27],[47,6],[59,-59],[80,-39],[55,-13],[47,-32],[74,-108],[89,-179],[41,-2],[78,16],[84,7],[56,51],[12,128],[22,58],[-8,59],[-38,60],[-33,44],[6,33],[28,24],[37,8],[64,24],[99,-28],[54,-5],[81,16],[84,35],[86,25],[67,-19],[29,-64],[-33,-65],[-54,-48],[-49,-59],[-13,-64],[2,-35],[47,-9],[416,8],[55,-6],[72,0],[78,-21],[132,8],[118,23],[56,0],[97,-21],[69,-44],[143,13],[40,14],[39,59],[41,11],[48,-48],[15,-110],[22,-52],[61,-47],[60,40],[39,48],[94,93],[107,71],[82,42],[200,70],[99,44],[194,60],[250,32],[446,108],[147,12],[240,28],[123,30],[125,23],[77,80],[175,-61],[60,-7],[82,48],[90,119],[131,-49],[75,-77],[93,-60],[208,-104],[66,-24],[138,-21],[37,17],[65,69],[67,100],[42,42],[61,35],[69,55],[-18,30],[-39,10],[-36,16],[9,29],[122,7],[64,-101],[66,-33],[80,-33],[186,26],[159,2],[138,-20],[68,3],[61,76],[99,28],[56,-34],[35,-112],[127,-31],[266,-51],[30,13],[33,59],[23,72],[54,12],[69,39],[37,-6],[52,-47],[-18,-114],[-29,-105],[35,-85],[31,-47],[40,-8],[67,-2],[82,6],[51,-4],[261,42],[32,94],[42,107],[103,136],[40,-10],[31,-14],[70,-67],[42,-34],[9,-49],[-46,-47],[13,-31],[46,-25],[148,-41],[48,8],[71,43],[72,85],[39,98],[61,-5],[59,-20],[41,-51],[0,-97],[57,-66],[46,-42],[120,-45],[128,-11],[90,-27],[146,10],[71,30],[46,8],[80,24],[84,57],[52,23],[192,52],[145,57],[154,102],[150,61],[230,31],[64,13],[88,-1],[217,73],[82,42],[46,15],[52,52],[28,102],[22,63],[-4,61],[-20,80],[-46,71],[-47,104],[21,119],[37,49],[96,54],[95,11],[108,-7],[94,-11],[8,-51],[-41,-55],[-52,-54],[-31,-23],[11,-46],[68,-7],[149,10],[43,-42],[106,-184],[26,-87],[37,-25],[58,12],[125,-1],[87,13],[71,1],[37,-9],[38,-42],[72,-49],[72,36],[52,17],[63,-4],[99,-57],[99,-133],[107,-67],[7,43],[-14,53],[44,47],[53,79],[77,103],[61,105],[15,145],[29,119],[49,57],[48,37],[75,38],[92,8],[88,86],[62,35],[130,47],[163,47],[114,131],[39,16],[58,21],[107,8],[173,42],[54,6],[91,33],[80,78],[58,22],[104,-3],[88,44],[74,2],[68,22],[10,49],[-32,33],[-1,43],[38,56],[30,21],[90,-4],[75,-48],[55,-2],[14,-27],[-48,-34],[-32,-61],[55,-53],[49,-36],[59,7],[71,32],[70,-23],[31,-49],[0,-76],[15,-41],[49,36],[27,76],[-8,97],[3,60],[117,97],[46,73],[-82,15],[-58,-10],[-32,27],[-37,73],[101,61],[116,-2],[67,-52],[144,-83],[80,2],[72,-13],[15,26],[-27,122],[3,68],[-60,38],[-17,87],[25,91],[71,51],[97,24],[208,140],[55,30],[137,29],[160,14],[199,50],[355,-34],[95,-21],[59,-28],[57,-45],[74,-74],[107,-94],[139,-30],[39,-29],[51,-80],[-55,-52],[-45,-5],[-87,31],[-60,32],[-42,-13],[41,-55],[45,-34],[7,-46],[-24,-66],[-164,-130],[98,-37],[59,30],[54,55],[55,25],[37,10],[130,2],[74,22],[56,-16],[55,-35],[81,-35],[116,-38],[143,-147],[111,15],[60,32],[171,10],[147,-65],[83,-24],[240,-20],[143,-42],[91,50],[61,20],[128,10],[65,-10],[178,-54],[315,-55],[217,-29],[191,-1],[91,-24],[166,-26],[63,-20],[159,16],[74,21],[70,47],[39,-11],[27,-59],[-15,-101],[29,-69],[23,-69],[33,-57],[21,-49],[-15,-41],[-46,-37],[-64,-79],[4,-69],[27,-44],[-32,-53],[24,-74],[4,-45],[-22,-36],[-50,-22],[-85,-3],[-44,-21],[-7,-55],[22,-41],[49,-22],[14,-44],[-7,-66],[-22,-56],[-45,-26],[-49,-6],[-91,12],[-66,37],[-42,-33],[-31,-34],[-95,-77],[-44,-52],[-41,-55],[108,-31],[79,-55],[172,6],[55,24],[73,26],[39,-5],[24,-56],[-14,-89],[-3,-69],[-87,-190],[-29,-32],[-41,-52],[-48,-41],[-39,-20],[-75,-60],[-46,-109],[-50,-90],[-73,-154],[-42,-165],[-18,-99],[-28,-103],[-62,-177],[-40,-30],[-69,-72],[20,-48],[54,-5],[66,-11],[89,-37],[118,76],[62,48],[13,96],[-13,97],[38,57],[87,78],[205,56],[42,6],[68,19],[60,70],[53,70],[93,44],[77,72],[12,51],[32,11],[96,50],[25,37],[30,28],[21,63],[8,118],[24,89],[47,118],[38,86],[37,54],[99,29],[43,33],[57,73],[39,44],[-5,90],[22,83],[61,50],[78,92],[98,13],[74,48],[79,-33],[95,-46],[161,14],[76,-21],[59,25],[52,71],[19,87],[61,50],[69,-1],[114,87],[118,77],[96,18],[77,60],[55,102],[59,79],[73,75],[20,133],[46,67],[85,59],[71,32],[298,100],[229,66],[231,82],[71,-1],[93,45],[153,2],[40,4],[53,93],[114,86],[71,28],[90,74],[73,7],[103,-13],[87,-20],[78,-1],[113,62],[176,10],[54,30],[38,26],[249,87],[93,-17],[132,15],[80,-4],[76,-11],[96,-3],[166,31],[70,20],[132,76],[146,18],[64,20],[82,17],[67,-29],[48,-27],[29,-6],[39,-5],[95,30],[79,-8],[101,-33],[67,-27],[35,0],[62,24],[76,60],[71,24],[67,-15],[46,-25],[81,-34],[126,5],[120,13],[101,28],[87,30],[80,-46],[92,-17],[149,81],[57,-18],[39,-21],[32,-10],[39,-68],[142,13],[126,57],[108,43],[105,28],[83,39],[122,148],[-2,46],[17,28],[26,12],[194,-1],[60,12],[79,39],[137,-30],[131,-47],[34,5],[53,1],[93,-29],[105,-57],[93,-15],[385,-142],[218,-35],[110,-47],[28,-16],[32,-48],[58,-5],[46,19],[61,-73],[148,-55],[154,-27],[100,43],[170,123],[52,55],[-10,122],[89,136],[151,67],[188,35],[116,30],[154,28],[74,-29],[38,-21],[57,-25],[68,-76],[106,-172],[79,-62],[69,-5],[60,-10],[63,-39],[90,-121],[-54,-108],[-46,-40],[-196,-46],[-86,-37],[-75,-23],[-21,-90],[31,-42],[81,21],[95,10],[74,18],[68,28],[59,40],[140,21],[91,34],[82,20],[57,35],[58,-5],[58,-34],[46,3],[124,-11],[58,25],[51,2],[52,-19],[54,-26],[54,-7],[70,16],[98,42],[125,46],[117,15],[28,-1],[24,-9],[-117,-53],[-187,-72],[-100,-69],[59,-29],[352,77],[160,58],[142,26],[35,19],[116,90],[42,24],[125,32],[163,34],[124,39],[84,40],[63,4],[49,-29],[63,-33],[62,8],[76,31],[53,72],[31,53],[57,18],[73,16],[59,-18],[96,-38],[67,-20],[58,-151],[136,-133],[49,-35],[119,13],[128,-52],[55,7],[52,15],[47,-10],[70,32],[73,167],[67,163],[66,72],[40,30],[50,14],[77,34],[104,10],[77,-14],[167,-12],[136,41],[154,-7],[76,48],[82,7],[111,-41],[32,-29],[61,-42],[15,-41],[16,-74],[30,-2],[103,73],[56,13],[106,117],[56,-30],[127,-50],[51,-15],[100,-85],[51,18],[42,40],[124,-4],[116,-35],[48,-29],[59,-50],[37,-12],[29,14],[240,-19],[104,-37],[79,-45],[278,-21],[107,-46],[64,22],[127,-7],[52,-39],[46,-43],[101,-37],[55,7],[78,30],[78,41],[78,0],[37,-35],[13,-88],[58,2],[64,40],[56,-10],[20,-61],[-30,-81],[-71,-114],[-29,-95],[-59,-86],[10,-41],[59,-20],[59,61],[132,42],[69,55],[119,20],[117,-19],[83,-73],[154,-123],[6,-44],[13,-46],[-5,-41],[-23,-47],[82,-55],[73,-9],[59,5],[247,-53],[118,21],[106,0],[126,8],[97,-2],[77,-9],[91,19],[74,26],[36,-16],[15,-137],[5,-81],[42,-30],[44,30],[32,41],[195,-19],[78,-2],[74,-22],[75,-51],[72,22],[43,31],[58,20],[17,51],[7,85],[-2,83],[34,15],[35,-15],[46,-39],[105,-125],[80,-81],[34,-38],[49,-31],[99,-75],[136,-31],[133,-60],[155,4],[121,-77],[82,60],[43,14],[63,-16],[76,-52],[60,-12],[205,-86],[110,-30],[41,-63],[54,-60],[0,-61],[24,-77],[123,-61],[48,-59],[59,-78],[107,-293],[56,-52],[81,5],[76,-76],[24,11],[3,30],[-69,198],[-5,107],[54,61],[127,17],[98,-114],[90,-69],[60,-12],[120,3],[113,73],[86,-26],[138,-9],[179,-43],[77,8],[137,-18],[167,-62],[95,-23],[20,-25],[44,-41],[22,-50],[24,-46],[58,-52],[58,-9],[115,-44],[241,-136],[87,-40],[51,-29],[25,35],[7,72],[44,15],[47,-107],[49,-81],[22,-71],[-51,-58],[-74,12],[-52,0],[-53,-96],[-22,-166],[49,3],[36,15],[8,-61],[-22,-51],[-44,-20],[-76,39],[-93,27],[-102,10],[-99,49],[-39,3],[-41,-3],[53,-51],[55,-46],[125,-40],[156,-62],[4,-38],[-37,-47],[-46,-100],[-142,-86],[-83,62],[-98,15],[-49,-37],[-98,4],[-194,-14],[-76,79],[-119,43],[4,-36],[102,-130],[109,-30],[108,-35],[26,-33],[-49,-31],[-66,5],[-83,-61],[-158,10],[-75,-3],[-44,-25],[-39,-9],[31,-22],[38,-60],[-54,-51],[-50,-25],[-51,12],[-56,-20],[-27,56],[-2,122],[-32,109],[-34,4],[-54,-13],[-17,-93],[38,-161],[26,-50],[-21,-45],[-36,-14],[73,-136],[62,-93],[38,-31],[3,-46],[-30,-20],[-83,18],[-41,-9],[-46,6],[-77,20],[-66,6],[-66,-26],[-56,2],[-50,85],[-44,20],[-36,-26],[-28,-101],[-57,-31],[-58,-46],[-41,-50],[-20,-198],[-34,-41],[-51,2],[-39,-16],[-49,16],[-64,10],[-214,-68],[34,-35],[54,6],[188,-11],[80,-36],[13,-89],[32,-38],[63,-41],[48,-20],[18,-30],[-20,-61],[-27,-56],[-59,-61],[17,-31],[64,-10],[27,-137],[-42,-61],[20,-51],[5,-51],[-43,-47],[-33,-24],[-11,-50],[64,-29],[47,-10],[66,-5],[45,-54],[58,-82],[42,-68],[3,-113],[41,-67],[77,-43],[-2,-45],[54,-14],[53,-4],[19,-41],[-17,-50],[-89,-61],[-37,-44],[89,-7],[92,-46],[117,52],[62,56],[40,50],[30,-13],[3,-52],[36,-87],[151,-84],[84,-27],[81,-14],[71,2],[20,-50],[-22,-46],[-56,3],[-90,-8],[-66,38],[-47,33],[-412,-19],[-93,-15],[-111,-50],[-110,-24],[-169,-50],[-71,-30],[-185,117],[-60,86],[-25,5],[-44,-20],[-2,-61],[86,-133],[39,-35],[0,-35],[-25,-18],[-35,0],[-53,26],[-99,21],[-88,-41],[-108,-87],[23,-58],[29,-33],[-7,-39],[-121,-74],[-40,-3],[-25,-15],[30,-27],[66,-1],[7,-33],[-23,-26],[-109,-30],[7,-40],[59,-19],[77,7],[48,-29],[0,-46],[-49,-26],[-57,-19],[-392,-118],[-57,-32],[3,-43],[137,-11],[410,10],[27,-14],[-10,-34],[-23,-43],[23,-31],[61,-21],[2,-33],[-30,-13],[-61,-15],[-67,-4],[4,-35],[92,-31],[31,-4],[3,-118],[-3,-50],[-49,-24],[-18,-17],[-2,-40],[122,-29],[187,-127],[41,0],[74,-24],[119,-65],[42,-39],[68,-19],[9,-32],[42,-27],[166,-88],[22,-38],[-348,-73],[-350,-54],[32,-48],[378,5],[102,-30],[45,9],[26,32],[204,38],[207,25],[65,-18],[278,-141],[129,-53],[82,-20],[60,-5],[44,-21],[43,-45],[-10,-42],[18,-19],[29,-8],[55,-28],[63,10],[73,32],[51,-7],[92,-45],[-35,-35],[-20,-17],[-24,-32],[-23,-11],[-74,-7],[-41,0],[-42,6],[-4,-23],[51,-25],[74,-27],[480,-21],[137,-46],[135,25],[61,-8],[51,-15],[19,-46],[69,-15],[106,-36],[148,-18],[118,1],[145,-49],[73,-2],[45,-28],[330,-17],[49,-22],[38,-36],[78,-16],[85,-3],[464,-59],[174,-31],[40,2],[40,-6],[125,-26],[127,-14],[61,-36],[-99894,-48]],[[37438,6445],[36,-2],[146,6],[146,-2],[89,-7],[26,-16],[23,-32],[26,-50],[24,-55],[27,-45],[16,-79],[25,-29],[43,-73],[6,-59],[-13,-128],[-21,-52],[-56,-50],[-64,5],[-29,-2],[-28,-10],[-11,-7],[-4,-10],[74,-43],[9,-16],[1,-19],[-10,-13],[-10,-7],[-1573,-260],[-61,-14],[-61,-27],[-20,-23],[-20,-18],[-1219,-49],[-11,3],[-11,10],[-31,50],[-6,79],[7,31],[61,30],[23,17],[103,117],[53,55],[25,46],[13,-3],[47,-27],[35,-8],[68,11],[67,33],[29,18],[29,-6],[5,-28],[12,-9],[162,88],[147,98],[144,111],[73,66],[18,19],[12,28],[-10,28],[-13,25],[-12,10],[-12,4],[-75,18],[23,29],[22,35],[14,39],[5,47],[-3,24],[3,18],[34,15],[23,24],[16,28],[-26,9],[-12,21],[23,49],[21,52],[21,28],[56,55],[163,138],[59,74],[17,27],[386,119],[63,12],[121,17],[56,3],[158,-12],[74,-12],[128,-32],[189,-61],[71,-27],[71,-34],[68,-43],[67,-52],[13,-16],[6,-29],[2,-28],[-3,-27],[-18,-56],[-26,-39],[-311,-37],[-41,-15],[-22,-30],[-16,-30],[36,-11]],[[33407,5562],[-11,-124],[1,-56],[-16,-45],[-28,-23],[-55,-39],[-40,-23],[-87,-38],[-400,34],[-180,31],[-75,40],[-12,18],[-23,61],[-21,19],[-159,-13],[-97,-19],[-17,-10],[-26,-38],[-14,-8],[-259,81],[-273,95],[-113,49],[-39,22],[-11,15],[25,19],[26,12],[29,9],[30,1],[22,-7],[22,-14],[14,-51],[14,-8],[38,-14],[961,7],[80,2],[166,15],[89,21],[33,29],[-80,7],[-32,22],[-27,41],[-6,38],[9,28],[106,14],[16,10],[-28,16],[1,37],[63,14],[25,31],[124,39],[196,-21],[47,-56],[-13,-36],[-9,-37],[-1,-57],[80,-8],[25,-21],[24,-26],[-29,-1],[-28,-6],[-23,-27],[-20,-35],[-14,-16]],[[30541,11987],[-8,-70],[46,25],[17,-5],[40,-26],[81,-151],[18,-48],[33,-139],[40,-105],[100,-183],[49,-100],[26,-58],[3,-78],[31,-22],[7,-32],[10,-107],[7,-124],[7,-238],[-4,-55],[-43,-89],[-18,-63],[-23,-42],[-27,-30],[-141,-125],[-17,-62],[-237,-53],[-134,-22],[-52,24],[-53,6],[-66,-8],[-191,-7],[-144,-18],[-19,7],[-13,23],[-14,16],[-38,-3],[-31,9],[-30,19],[-33,36],[-14,21],[-8,23],[64,60],[33,13],[33,4],[67,-13],[67,-20],[147,-16],[204,-4],[56,6],[67,19],[62,55],[-30,21],[-31,13],[-30,3],[-30,-4],[-84,-34],[-65,-20],[-65,-12],[-69,20],[-64,56],[-2,18],[220,43],[20,7],[40,27],[13,24],[6,23],[-148,40],[-31,-1],[-30,-7],[-67,17],[-64,47],[-59,57],[-22,5],[-21,-17],[-143,-150],[-12,-1],[-54,11],[-68,30],[-62,10],[-40,-8],[-15,-12],[39,-34],[33,-30],[10,-24],[-101,-75],[-27,-10],[-43,7],[-16,9],[-31,40],[-30,10],[-65,-8],[-34,3],[-34,18],[-32,26],[-30,14],[-36,29],[-26,20],[-8,29],[3,28],[11,16],[2,15],[-8,27],[5,19],[12,18],[54,34],[65,7],[63,-43],[42,-13],[19,-1],[7,2],[5,12],[-1,22],[-12,42],[-1,29],[14,24],[19,9],[20,6],[13,3],[41,-15],[29,-16],[59,-46],[49,-32],[19,-3],[14,11],[13,18],[-59,46],[-6,30],[3,26],[36,15],[22,2],[104,-27],[56,-9],[55,-3],[114,31],[-61,35],[-132,30],[-25,21],[-18,34],[97,31],[99,-1],[177,-40],[59,19],[55,58],[32,15],[125,-5],[101,27],[16,-3],[15,-8],[97,-97],[13,5],[10,19],[3,34],[1,34],[-3,35],[-12,22],[-16,-3],[-17,-10],[-28,9],[-28,18],[-29,8],[-100,11],[-71,18],[-37,14],[-34,28],[-5,31],[36,71],[138,76],[65,25],[66,6],[32,-5],[76,-32],[12,2],[11,8],[-73,53],[-65,41],[-33,31],[-26,12],[-109,12],[-57,-31],[-27,-5],[-27,3],[-160,74],[-9,8],[-23,28],[-12,21],[-7,35],[3,35],[5,23],[24,91],[13,72],[-7,59],[-25,32],[-36,22],[-33,35],[-9,24],[-6,28],[-1,36],[9,32],[14,34],[18,17],[34,17],[133,39],[270,49],[30,-25],[43,-52],[14,-21],[15,-104],[0,-29]],[[22752,10418],[-23,-61],[2,-60],[68,4],[30,114],[64,21],[31,-68],[-30,-55],[15,-31],[18,-22],[32,-1],[29,33],[13,24],[11,26],[19,58],[61,54],[135,8],[71,-34],[-48,-86],[-115,-50],[-74,-52],[25,-14],[25,-7],[23,2],[65,27],[160,50],[61,37],[22,-6],[0,-62],[21,-42],[-12,-93],[-69,-17],[-71,-8],[18,-41],[-4,-17],[-6,-13],[-178,17],[-31,-6],[-31,-12],[-31,3],[-62,30],[-32,0],[-64,-15],[-65,-6],[-93,1],[-68,5],[-64,33],[-67,9],[-75,1],[-79,38],[-66,15],[-95,39],[-25,15],[-25,8],[-45,-3],[-346,59],[-51,-1],[-33,-8],[-33,4],[-67,28],[-14,31],[7,29],[15,13],[30,13],[480,69],[50,19],[37,-2],[28,-59],[42,-61],[14,1],[14,6],[47,51],[86,-16],[48,23],[33,45],[97,52],[61,-10],[57,-22],[27,-54]],[[16512,9357],[49,-58],[19,-38],[11,-39],[-199,-96],[-9,-10],[-9,-50],[5,-11],[8,-8],[1,-19],[-17,-6],[-340,-38],[-159,35],[-22,23],[-5,36],[19,7],[35,5],[-9,16],[-22,29],[-2,24],[48,61],[23,16],[-90,57],[-11,13],[-12,4],[-44,-7],[-43,3],[15,23],[12,38],[38,32],[28,5],[28,-3],[132,-2],[130,-17],[131,-12],[215,-11],[46,-2]],[[14908,9627],[74,-16],[25,-25],[33,-18],[33,-10],[31,-27],[18,-48],[16,-15],[49,-32],[17,-28],[-3,-14],[-93,-11],[-31,4],[-29,-9],[-9,-17],[1,-18],[16,-13],[34,-12],[34,2],[63,14],[28,-3],[32,-15],[32,-2],[84,46],[21,8],[21,-2],[115,-54],[24,-27],[-17,-15],[-14,-22],[6,-15],[55,-22],[23,-28],[14,-11],[-3,-24],[-8,-29],[1,-33],[-28,-18],[-13,0],[-60,18],[-187,10],[-60,15],[-92,65],[-36,4],[-37,16],[-57,46],[-99,37],[-63,45],[2,38],[-9,27],[-12,11],[-12,6],[-36,10],[-35,-3],[-18,-11],[-29,-28],[-32,-5],[-25,6],[-5,6],[-1,74],[-27,10],[-23,30],[-4,40],[10,37],[35,45],[40,5],[40,-7],[41,10],[65,6],[74,-4]],[[5819,5871],[-347,-22],[-141,19],[-294,63],[-403,114],[-110,36],[-72,31],[-70,39],[-16,43],[10,62],[13,51],[21,32],[86,38],[43,42],[87,44],[25,33],[37,2],[70,-4],[69,-9],[65,-11],[63,-19],[144,-62],[100,-61],[144,-72],[143,-81],[80,-30],[77,-45],[74,-61],[14,-21],[31,-27],[19,-26],[19,-22],[19,-11],[15,-24],[-3,-26],[-12,-15]],[[96411,7303],[105,-42],[275,4],[229,-39],[21,-40],[-65,-21],[-101,-53],[-65,-17],[-55,0],[-112,22],[-146,-3],[-31,-31],[-71,-31],[-82,-54],[-22,44],[-33,42],[-82,89],[-6,13],[45,17],[22,29],[47,39],[-5,24],[-39,26],[-15,22],[26,36],[58,16],[75,-15],[34,-48],[-6,-21],[-1,-8]],[[41355,5876],[38,-12],[40,28],[-6,26],[23,45],[33,-49],[219,-52],[71,-50],[-29,-12],[-22,2],[-64,-5],[-109,-43],[-117,41],[-209,29],[-63,22],[-49,68],[88,56],[21,-6],[135,-88]],[[40573,6151],[-32,-21],[-675,36],[-33,7],[9,43],[92,7],[52,8],[72,19],[53,33],[18,1],[317,-77],[111,-32],[13,-15],[3,-9]],[[30462,5944],[-60,-2],[-120,5],[-120,20],[-31,10],[-44,32],[-14,17],[-12,21],[-1,33],[32,114],[59,68],[56,39],[174,92],[23,10],[159,43],[62,23],[97,48],[534,186],[122,27],[55,-20],[31,-19],[-16,-22],[-72,-53],[-34,-32],[-87,-65],[-188,-109],[-133,-82],[-171,-113],[-40,-40],[-81,-95],[15,-42],[-27,-58],[-107,-28],[-61,-8]],[[33931,14945],[11,-8],[9,4],[9,8],[9,19],[33,27],[31,3],[-10,-28],[74,-50],[-6,-39],[14,-32],[-30,-10],[-24,-33],[21,-13],[12,-28],[-25,-7],[-54,17],[-28,-4],[3,26],[-9,10],[-33,-5],[-14,-57],[-10,-5],[-12,9],[9,37],[-14,6],[-14,-1],[-42,-27],[-12,-1],[-25,32],[79,42],[-33,21],[-7,26],[5,36],[-29,-5],[-28,-14],[-13,-2],[-11,12],[4,26],[23,43],[18,45],[36,22],[21,17],[28,8],[12,16],[26,1],[15,-37],[-1,-22],[-12,-24],[-6,-61]],[[34575,15452],[17,-15],[70,1],[16,-4],[14,-25],[9,-43],[-23,-17],[-121,10],[-44,22],[-22,-1],[-49,-24],[-21,-24],[-82,-32],[-23,12],[-11,34],[-1,14],[8,9],[4,9],[-1,11],[22,29],[95,44],[126,16],[17,-16],[0,-10]],[[33895,16179],[35,-16],[31,11],[17,-12],[12,-33],[-1,-12],[-47,5],[-43,-38],[-51,8],[-7,-31],[11,-17],[-14,-14],[-44,30],[-35,-11],[-11,-51],[-16,-10],[-8,-2],[-14,13],[-29,4],[-2,7],[-18,20],[-51,-22],[13,26],[68,69],[8,21],[79,40],[37,-9],[80,24]],[[32450,14706],[-27,-60],[40,1],[28,21],[29,9],[25,-30],[-52,-23],[-50,-40],[-20,-21],[-22,-9],[-28,3],[-28,-4],[-25,-39],[-26,-18],[-8,15],[-10,9],[-56,14],[-26,20],[-23,14],[-25,7],[13,35],[15,31],[85,42],[-8,13],[-6,17],[67,21],[2,21],[-4,24],[21,16],[20,24],[14,7],[42,-3],[29,-33],[-12,-33],[26,-51]],[[32687,14732],[-20,-23],[-16,-4],[-15,10],[-20,-35],[-40,11],[-16,9],[10,5],[7,15],[22,31],[38,79],[7,25],[-31,41],[-5,13],[7,24],[11,17],[26,19],[34,0],[17,-16],[0,-29],[58,-27],[-10,-56],[-22,-35],[-3,-42],[-33,-19],[-6,-13]],[[31114,12975],[-29,-37],[-23,-11],[-21,10],[-21,5],[-15,-14],[-16,-58],[-19,-29],[-20,-15],[-12,6],[-12,0],[-19,-13],[-24,-5],[-23,6],[-22,37],[-32,44],[-6,14],[-5,36],[1,37],[14,28],[73,98],[24,44],[21,50],[23,45],[44,80],[22,29],[111,84],[30,19],[33,-5],[8,-44],[-16,-22],[-53,-56],[-11,-79],[1,-29],[5,-8],[20,-10],[14,-11],[18,-24],[21,-14],[-45,-41],[-30,-21],[-21,-26],[-40,-25],[-17,-16],[26,-6],[38,-21],[10,-18],[-5,-14]],[[29526,11154],[43,-51],[-40,-40],[-142,-75],[-83,-29],[-84,-22],[-380,-69],[-27,0],[-26,9],[-15,15],[-25,57],[3,29],[34,27],[35,18],[60,16],[229,36],[23,12],[19,27],[6,31],[8,24],[15,11],[16,0],[30,-23],[55,-93],[18,13],[16,25],[3,80],[16,6],[49,-22],[30,-23],[1,45],[21,14],[22,-5],[22,-10],[48,-33]],[[29170,11677],[49,-14],[72,-63],[24,-32],[7,-19],[-6,-13],[-33,-15],[-25,-77],[-50,-27],[-116,17],[-128,31],[-10,6],[-11,27],[-2,31],[14,39],[22,20],[95,24],[7,14],[14,39],[24,8],[11,-3],[42,7]],[[29346,9735],[-40,-75],[-7,-8],[-40,-19],[14,-20],[11,-10],[7,-24],[23,-33],[28,-21],[-23,-59],[-34,-26],[-369,160],[-28,26],[-14,19],[-11,30],[-1,30],[9,24],[13,14],[33,17],[34,1],[75,-32],[10,5],[14,28],[40,1],[9,24],[-55,8],[-44,24],[-29,24],[-8,19],[99,33],[251,-42],[38,-14],[17,-19],[14,-26],[-36,-59]],[[24677,9687],[-51,-14],[-46,6],[17,132],[26,33],[-7,24],[-47,66],[-33,75],[16,17],[86,27],[99,-5],[39,-32],[12,-40],[-5,-29],[-32,-53],[33,-18],[7,-36],[-7,-44],[-32,-52],[-30,-31],[-45,-26]],[[96566,6830],[-34,-43],[-39,-19],[-123,16],[-86,-36],[-95,-13],[-45,19],[-20,35],[-10,47],[0,17],[27,7],[127,-33],[53,-29],[29,1],[76,38],[63,48],[16,23],[21,8],[27,-17],[13,-52],[0,-17]],[[78050,14010],[-121,-14],[-10,15],[-45,2],[-16,12],[-6,28],[15,47],[24,32],[37,33],[18,7],[76,11],[55,-15],[39,-40],[11,-32],[-6,-21],[-71,-65]],[[57460,11301],[-18,-22],[-51,4],[-39,-21],[-31,8],[-98,35],[-11,45],[-3,20],[8,35],[88,73],[35,7],[50,-10],[22,-21],[14,-41],[39,-83],[-5,-29]],[[48362,11202],[-73,-34],[-6,15],[-24,20],[-48,56],[54,4],[49,24],[27,-10],[6,-6],[15,-69]],[[49088,11213],[-45,-1],[-13,16],[-2,11],[58,83],[32,21],[62,16],[40,-5],[26,-18],[8,-33],[0,-49],[-15,-26],[-151,-15]],[[31618,5715],[-26,-2],[-14,4],[-14,12],[-12,46],[-137,37],[-16,21],[-9,46],[-23,18],[-178,82],[-15,17],[-10,25],[33,10],[70,-18],[127,-5],[28,-8],[26,-14],[142,-3],[72,-7],[40,-65],[81,-19],[11,-38],[10,-68],[-110,-50],[-25,-7],[-51,-14]],[[31316,6075],[-48,-28],[-202,13],[-69,9],[-39,15],[36,60],[27,20],[25,8],[56,33],[88,8],[67,-6],[113,-26],[-29,-25],[-19,-9],[-18,-38],[12,-34]],[[34676,16577],[-37,-16],[-13,22],[-7,37],[-19,23],[14,20],[199,-26],[-11,-13],[-96,-17],[-30,-30]],[[34480,15244],[-24,-26],[-61,39],[-16,25],[7,19],[98,17],[26,-9],[12,-40],[-42,-25]],[[34100,14650],[-24,-2],[-30,17],[-4,30],[0,16],[23,13],[14,2],[81,47],[36,12],[-16,-29],[2,-26],[-13,-23],[-69,-57]],[[34427,15507],[-55,-54],[-26,2],[-54,41],[-15,21],[-3,9],[34,37],[97,-14],[22,-4],[1,-3],[2,-21],[-3,-14]],[[34062,15087],[4,-10],[56,6],[15,-15],[-31,-20],[-8,4],[-27,-6],[-76,15],[-18,23],[67,13],[18,-10]],[[32778,11680],[-24,-4],[-24,53],[-13,82],[-77,119],[-20,62],[14,15],[21,5],[56,-17],[34,-23],[38,-49],[46,-44],[9,-37],[-7,-42],[-29,-11],[1,-31],[-17,-60],[-8,-18]],[[33159,15806],[14,-7],[121,13],[38,-40],[43,2],[-103,-75],[-28,22],[-9,16],[-7,36],[-67,-9],[-22,7],[-27,-24],[-55,-10],[-19,0],[-24,26],[-1,26],[49,-1],[38,33],[11,34],[19,-9],[29,-40]],[[30004,11694],[-60,-24],[-40,19],[-120,36],[-50,66],[5,35],[23,21],[36,11],[73,-22],[37,-23],[96,-119]],[[23603,9985],[-53,-3],[-15,13],[16,28],[128,47],[52,28],[8,-4],[7,-9],[22,-56],[2,-14],[-167,-30]],[[20961,9696],[-33,-26],[-62,6],[-48,43],[-19,58],[-2,20],[13,15],[31,14],[120,-130]],[[16792,9152],[-58,-6],[-18,1],[-18,13],[-5,9],[30,30],[29,13],[9,10],[-40,101],[37,3],[43,20],[83,-2],[72,-18],[13,-15],[9,-25],[-31,-51],[-19,-18],[-108,-45],[-28,-20]],[[14620,8857],[-42,-10],[-83,38],[-27,18],[-24,31],[-19,7],[-7,6],[-11,80],[25,9],[53,-11],[102,-42],[71,-12],[24,-32],[-24,-56],[-38,-26]],[[5002,3963],[-87,-13],[-206,26],[-54,21],[-30,22],[-56,20],[-14,11],[0,24],[-9,14],[-19,13],[-9,13],[-17,8],[277,-12],[108,-20],[20,-14],[195,-60],[-53,-9],[-46,-44]],[[5426,4844],[-29,-5],[-745,67],[-143,22],[-34,12],[-14,11],[-3,8],[6,22],[17,16],[185,25],[207,-19],[250,-48],[172,-38],[89,-34],[37,-26],[5,-13]],[[95548,8736],[-37,0],[-22,18],[-7,39],[1,13],[72,48],[58,12],[-31,-72],[-11,-12],[-23,-46]],[[95268,8313],[-50,-74],[-35,2],[-20,14],[36,41],[34,18],[21,5],[14,-6]],[[97178,9444],[-38,-12],[-51,37],[-12,12],[50,70],[-4,23],[7,19],[19,14],[12,-2],[29,-77],[20,-32],[-28,-31],[-4,-21]],[[95786,12937],[-24,-16],[-15,5],[-15,34],[16,53],[-6,69],[3,17],[39,-39],[7,-21],[16,-32],[3,-17],[-16,-32],[-8,-21]],[[95361,13351],[-5,-35],[-14,8],[-20,28],[-20,69],[18,7],[23,-12],[9,-34],[8,-18],[1,-13]],[[95169,13549],[-15,-27],[-13,3],[-58,69],[7,30],[-8,25],[1,23],[2,8],[71,-105],[13,-26]],[[76836,13804],[32,-15],[57,2],[20,-22],[4,-25],[-1,-14],[-23,-21],[-150,-14],[-24,22],[26,61],[28,20],[31,6]],[[77851,13700],[-37,-8],[-14,15],[-2,9],[27,33],[33,11],[-3,-39],[-4,-21]],[[77456,13554],[-26,-7],[-27,16],[-13,31],[-3,10],[42,8],[56,-30],[-29,-28]],[[78721,14144],[-17,-14],[-45,8],[-10,12],[-4,55],[-3,16],[-17,15],[-73,28],[-8,40],[10,18],[27,4],[67,-35],[15,-27],[-2,-41],[1,-13],[21,-27],[33,-28],[5,-11]],[[75722,13935],[-37,-8],[-38,8],[-19,27],[-4,12],[15,19],[54,3],[38,-17],[8,-17],[2,-8],[-19,-19]],[[73839,13275],[-48,-15],[-8,8],[-1,9],[-72,55],[-12,45],[7,31],[59,-3],[70,-27],[37,-69],[-32,-34]],[[74039,13382],[-32,-14],[-25,3],[-29,31],[12,21],[30,13],[38,-7],[10,-11],[26,-7],[-30,-29]],[[73702,13472],[-30,-18],[-24,3],[-16,19],[-3,12],[15,38],[12,-2],[8,-20],[38,-32]],[[69421,10415],[-35,-74],[-13,2],[-15,43],[13,27],[16,16],[28,-8],[6,-6]],[[69016,10195],[-14,0],[7,23],[37,41],[28,50],[17,8],[31,-44],[-7,-37],[-41,-27],[-58,-14]],[[7e4,11156],[-20,0],[-25,6],[-32,42],[-18,30],[-7,31],[3,61],[16,30],[26,12],[11,-28],[4,-32],[8,-21],[33,-30],[16,-25],[5,-14],[6,-29],[-5,-20],[-21,-13]],[[63484,13373],[-46,-14],[-21,6],[-2,14],[-1,13],[2,15],[16,12],[78,1],[31,-10],[9,-7],[1,-21],[-3,-6],[-64,-3]],[[54506,11516],[-18,-37],[-87,51],[-51,16],[-13,9],[-12,32],[-3,12],[10,20],[28,32],[59,26],[93,13],[91,-10],[15,-16],[-86,-54],[-26,-94]],[[50843,11176],[-94,-15],[-21,17],[-11,34],[13,20],[123,68],[33,-6],[11,-6],[8,-26],[-11,-41],[-14,-20],[-37,-25]],[[49179,10821],[-30,-13],[-39,3],[-30,17],[-21,34],[-5,13],[3,22],[-2,11],[38,6],[14,-14],[6,-11],[66,-68]],[[50360,11373],[-24,-73],[-15,2],[-15,43],[-31,46],[-11,32],[-1,43],[22,25],[80,16],[27,-10],[13,-55],[-45,-69]],[[49296,11078],[30,-19],[47,3],[45,-15],[-7,-20],[-26,-26],[-22,-56],[-22,-26],[-66,-56],[-49,-15],[-11,31],[1,32],[4,25],[2,18],[-46,24],[-3,33],[-9,19],[-134,66],[-23,19],[10,12],[138,5],[81,-12],[60,-42]],[[51257,11244],[-45,-13],[-51,29],[-14,20],[-15,53],[-2,20],[12,13],[40,15],[66,-6],[25,-24],[9,-43],[-8,-37],[-17,-27]],[[44275,9281],[-13,-125],[4,-27],[11,-26],[49,-70],[4,-52],[-2,-20],[-20,-29],[-69,7],[-22,15],[-8,10],[-36,122],[-21,29],[-32,25],[-123,23],[-118,-8],[29,28],[178,39],[45,29],[28,34],[13,52],[31,65],[49,30],[31,3],[16,-53],[0,-50],[-24,-51]],[[45526,9977],[-19,-14],[-40,1],[-38,28],[-16,41],[-1,29],[17,33],[27,9],[15,-11],[36,-71],[19,-45]],[[46525,10268],[-22,-13],[-37,5],[-47,29],[-15,22],[-5,20],[13,29],[11,8],[24,-4],[42,-37],[29,-40],[7,-19]],[[41016,5948],[-48,-6],[-19,15],[23,38],[34,33],[63,3],[60,-22],[-6,-21],[-13,-2],[-94,-38]],[[34980,16532],[-12,-5],[-19,22],[-3,13],[20,26],[20,35],[7,4],[-5,-70],[-8,-25]],[[33656,15954],[-62,-26],[-32,27],[-7,10],[38,26],[20,-6],[8,-9],[23,-2],[12,-20]],[[33011,11534],[-42,-1],[-19,16],[-7,10],[5,23],[16,21],[49,-16],[12,-41],[-14,-12]],[[33151,12230],[-11,-16],[-35,10],[-20,11],[-34,28],[19,17],[37,-4],[30,-20],[14,-26]],[[33127,11111],[-23,0],[-20,12],[-17,35],[-5,17],[9,38],[16,9],[92,5],[28,-20],[1,-34],[-10,-25],[-71,-37]],[[33180,10914],[-28,-4],[-38,10],[-33,20],[-11,23],[16,19],[30,12],[47,-4],[22,-24],[5,-22],[-6,-23],[-4,-7]],[[33503,15872],[-38,-4],[-26,33],[-12,23],[51,2],[23,-9],[12,-26],[-10,-19]],[[33193,15571],[-14,-6],[-18,5],[0,-10],[15,-13],[-16,-5],[-19,13],[-14,27],[10,25],[19,6],[37,-42]],[[33152,15053],[-35,-20],[-21,6],[-33,24],[45,7],[4,70],[22,27],[43,-15],[-26,-37],[-9,-28],[9,-24],[1,-10]],[[32791,14932],[-26,-2],[7,31],[23,21],[38,14],[-24,-35],[-7,-16],[-11,-13]],[[32412,14480],[-44,-26],[-23,0],[27,64],[26,2],[41,36],[11,-5],[-22,-30],[-16,-41]],[[32607,15512],[-12,-2],[5,24],[31,62],[58,29],[-7,-25],[-19,-31],[-56,-57]],[[31709,13915],[-60,-22],[-31,8],[-2,23],[8,31],[29,16],[-5,46],[18,19],[9,35],[38,26],[54,-12],[-8,-45],[-1,-16],[-32,-12],[-8,-7],[-7,-30],[1,-43],[-3,-17]],[[31501,13709],[-62,-65],[-9,4],[-5,7],[1,11],[20,24],[4,70],[41,26],[16,-9],[-14,-30],[9,-26],[-1,-12]],[[31288,13309],[-13,-4],[-31,2],[-20,13],[26,41],[-3,28],[23,11],[26,-10],[18,-35],[3,-15],[-29,-31]],[[31292,12807],[-55,-11],[-41,12],[1,44],[-11,5],[-4,10],[52,33],[39,8],[47,-5],[20,-14],[7,-15],[-36,-36],[-6,-14],[-13,-17]],[[30084,11367],[14,-17],[60,16],[21,-17],[4,-12],[-27,-42],[-32,-28],[-37,-2],[-27,71],[-3,18],[27,13]],[[29478,9586],[-27,-11],[-17,6],[-31,29],[4,23],[14,15],[10,17],[60,62],[44,7],[36,-13],[-39,-59],[-10,-41],[-44,-35]],[[23945,9838],[-47,0],[-31,21],[-10,14],[19,21],[11,2],[57,-36],[12,-15],[-11,-7]],[[17572,9121],[-136,-16],[-37,18],[-10,22],[6,23],[277,125],[49,-17],[14,-8],[-83,-62],[-37,-22],[-6,-7],[20,-9],[6,-7],[-16,-17],[-47,-23]],[[13225,8961],[-44,-32],[-86,21],[7,23],[78,20],[53,-13],[-8,-19]],[[13592,8880],[-31,-12],[-116,29],[-68,6],[-31,17],[-20,15],[-6,14],[-32,22],[62,44],[49,14],[47,-3],[10,-22],[90,-26],[70,-1],[7,-24],[-3,-34],[-28,-39]],[[9003,7690],[3,-8],[-42,6],[-63,32],[-12,11],[28,11],[36,-10],[33,-20],[17,-22]],[[9656,8230],[-31,-3],[-53,14],[-140,46],[-30,23],[21,23],[50,16],[38,-5],[95,-43],[29,-31],[17,-23],[4,-17]],[[9276,7510],[-104,-25],[-27,7],[9,36],[-16,25],[-4,12],[9,17],[61,0],[172,-27],[23,-37],[-123,-8]],[[8723,7484],[-116,-7],[-64,15],[-16,44],[18,9],[148,-20],[54,-11],[20,-13],[-10,-12],[-34,-5]],[[8518,7651],[113,-8],[74,6],[77,-14],[18,-16],[-14,-13],[-83,-4],[-40,-22],[-47,-3],[-71,16],[-64,35],[37,23]],[[8550,7294],[81,-29],[-142,9],[-62,41],[40,15],[40,-3],[35,-21],[8,-12]],[[8269,7617],[-118,-8],[-48,16],[-12,15],[10,13],[183,13],[20,-16],[6,-10],[-41,-23]],[[9253,7922],[-57,-8],[-71,36],[-54,29],[-18,25],[-3,8],[0,10],[16,6],[115,-21],[72,-85]],[[9225,7699],[-33,-46],[-87,24],[-37,30],[21,39],[40,12],[52,-14],[19,-5],[25,-40]],[[8223,7275],[-22,-2],[-241,44],[-47,13],[82,27],[54,4],[146,-66],[39,-8],[-11,-12]],[[7241,5741],[-51,-2],[-65,6],[-50,14],[-114,20],[-29,38],[-134,31],[-62,10],[21,37],[142,-49],[175,-49],[141,-30],[26,-26]],[[8547,7418],[-17,-9],[-121,5],[-25,8],[-11,9],[-168,13],[-76,41],[-15,13],[30,20],[57,12],[23,16],[145,14],[23,-8],[13,-22],[66,-43],[17,-27],[7,-18],[36,-8],[16,-16]],[[6115,4547],[-25,-4],[-22,31],[-108,63],[-64,42],[-42,33],[-18,23],[21,0],[158,-70],[24,-27],[118,-48],[-42,-43]],[[32497,62251],[-1,-14],[-3,-15],[-18,13],[-10,13],[0,3]]],sL=[-180,-89.999,180,83.599609375],oL={scale:[.0036000360003600037,.001736003453784538],translate:[-180,-89.999]},lL={type:iL,objects:rL,arcs:aL,bbox:sL,transform:oL};/**
 * @remix-run/router v1.15.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function W1(){return W1=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},W1.apply(this,arguments)}var Z1;(function(n){n.Pop="POP",n.Push="PUSH",n.Replace="REPLACE"})(Z1||(Z1={}));const ig="popstate";function cL(n){n===void 0&&(n={});function e(r,a){let{pathname:s="/",search:o="",hash:l=""}=F2(r.location.hash.substr(1));return!s.startsWith("/")&&!s.startsWith(".")&&(s="/"+s),a4("",{pathname:s,search:o,hash:l},a.state&&a.state.usr||null,a.state&&a.state.key||"default")}function t(r,a){let s=r.document.querySelector("base"),o="";if(s&&s.getAttribute("href")){let l=r.location.href,d=l.indexOf("#");o=d===-1?l:l.slice(0,d)}return o+"#"+(typeof a=="string"?a:Ps(a))}function i(r,a){Es(r.pathname.charAt(0)==="/","relative pathnames are not supported in hash history.push("+JSON.stringify(a)+")")}return dL(e,t,i,n)}function n1(n,e){if(n===!1||n===null||typeof n>"u")throw new Error(e)}function Es(n,e){if(!n){typeof console<"u"&&console.warn(e);try{throw new Error(e)}catch{}}}function uL(){return Math.random().toString(36).substr(2,8)}function rg(n,e){return{usr:n.state,key:n.key,idx:e}}function a4(n,e,t,i){return t===void 0&&(t=null),W1({pathname:typeof n=="string"?n:n.pathname,search:"",hash:""},typeof e=="string"?F2(e):e,{state:t,key:e&&e.key||i||uL()})}function Ps(n){let{pathname:e="/",search:t="",hash:i=""}=n;return t&&t!=="?"&&(e+=t.charAt(0)==="?"?t:"?"+t),i&&i!=="#"&&(e+=i.charAt(0)==="#"?i:"#"+i),e}function F2(n){let e={};if(n){let t=n.indexOf("#");t>=0&&(e.hash=n.substr(t),n=n.substr(0,t));let i=n.indexOf("?");i>=0&&(e.search=n.substr(i),n=n.substr(0,i)),n&&(e.pathname=n)}return e}function dL(n,e,t,i){i===void 0&&(i={});let{window:r=document.defaultView,v5Compat:a=!1}=i,s=r.history,o=Z1.Pop,l=null,d=h();d==null&&(d=0,s.replaceState(W1({},s.state,{idx:d}),""));function h(){return(s.state||{idx:null}).idx}function f(){o=Z1.Pop;let _=h(),g=_==null?null:_-d;d=_,l&&l({action:o,location:b.location,delta:g})}function p(_,g){o=Z1.Push;let x=a4(b.location,_,g);t&&t(x,_),d=h()+1;let S=rg(x,d),E=b.createHref(x);try{s.pushState(S,"",E)}catch(A){if(A instanceof DOMException&&A.name==="DataCloneError")throw A;r.location.assign(E)}a&&l&&l({action:o,location:b.location,delta:1})}function m(_,g){o=Z1.Replace;let x=a4(b.location,_,g);t&&t(x,_),d=h();let S=rg(x,d),E=b.createHref(x);s.replaceState(S,"",E),a&&l&&l({action:o,location:b.location,delta:0})}function y(_){let g=r.location.origin!=="null"?r.location.origin:r.location.href,x=typeof _=="string"?_:Ps(_);return x=x.replace(/ $/,"%20"),n1(g,"No window.location.(origin|href) available to create URL for href: "+x),new URL(x,g)}let b={get action(){return o},get location(){return n(r,s)},listen(_){if(l)throw new Error("A history only accepts one active listener");return r.addEventListener(ig,f),l=_,()=>{r.removeEventListener(ig,f),l=null}},createHref(_){return e(r,_)},createURL:y,encodeLocation(_){let g=y(_);return{pathname:g.pathname,search:g.search,hash:g.hash}},push:p,replace:m,go(_){return s.go(_)}};return b}var V1;(function(n){n.data="data",n.deferred="deferred",n.redirect="redirect",n.error="error"})(V1||(V1={}));const hL=new Set(["lazy","caseSensitive","path","id","index","children"]);function fL(n){return n.index===!0}function dh(n,e,t,i){return t===void 0&&(t=[]),i===void 0&&(i={}),n.map((r,a)=>{let s=[...t,a],o=typeof r.id=="string"?r.id:s.join("-");if(n1(r.index!==!0||!r.children,"Cannot specify children on an index route"),n1(!i[o],'Found a route id collision on id "'+o+`".  Route id's must be globally unique within Data Router usages`),fL(r)){let l=W1({},r,e(r),{id:o});return i[o]=l,l}else{let l=W1({},r,e(r),{id:o,children:void 0});return i[o]=l,r.children&&(l.children=dh(r.children,e,s,i)),l}})}function zo(n,e,t){t===void 0&&(t="/");let i=typeof e=="string"?F2(e):e,r=_3(i.pathname||"/",t);if(r==null)return null;let a=uw(n);mL(a);let s=null;for(let o=0;s==null&&o<a.length;++o){let l=TL(r);s=ML(a[o],l)}return s}function pL(n,e){let{route:t,pathname:i,params:r}=n;return{id:t.id,pathname:i,params:r,data:e[t.id],handle:t.handle}}function uw(n,e,t,i){e===void 0&&(e=[]),t===void 0&&(t=[]),i===void 0&&(i="");let r=(a,s,o)=>{let l={relativePath:o===void 0?a.path||"":o,caseSensitive:a.caseSensitive===!0,childrenIndex:s,route:a};l.relativePath.startsWith("/")&&(n1(l.relativePath.startsWith(i),'Absolute route path "'+l.relativePath+'" nested under path '+('"'+i+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),l.relativePath=l.relativePath.slice(i.length));let d=pr([i,l.relativePath]),h=t.concat(l);a.children&&a.children.length>0&&(n1(a.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+d+'".')),uw(a.children,e,h,d)),!(a.path==null&&!a.index)&&e.push({path:d,score:bL(d,a.index),routesMeta:h})};return n.forEach((a,s)=>{var o;if(a.path===""||!((o=a.path)!=null&&o.includes("?")))r(a,s);else for(let l of dw(a.path))r(a,s,l)}),e}function dw(n){let e=n.split("/");if(e.length===0)return[];let[t,...i]=e,r=t.endsWith("?"),a=t.replace(/\?$/,"");if(i.length===0)return r?[a,""]:[a];let s=dw(i.join("/")),o=[];return o.push(...s.map(l=>l===""?a:[a,l].join("/"))),r&&o.push(...s),o.map(l=>n.startsWith("/")&&l===""?"/":l)}function mL(n){n.sort((e,t)=>e.score!==t.score?t.score-e.score:SL(e.routesMeta.map(i=>i.childrenIndex),t.routesMeta.map(i=>i.childrenIndex)))}const gL=/^:[\w-]+$/,vL=3,yL=2,_L=1,xL=10,wL=-2,ag=n=>n==="*";function bL(n,e){let t=n.split("/"),i=t.length;return t.some(ag)&&(i+=wL),e&&(i+=yL),t.filter(r=>!ag(r)).reduce((r,a)=>r+(gL.test(a)?vL:a===""?_L:xL),i)}function SL(n,e){return n.length===e.length&&n.slice(0,-1).every((i,r)=>i===e[r])?n[n.length-1]-e[e.length-1]:0}function ML(n,e){let{routesMeta:t}=n,i={},r="/",a=[];for(let s=0;s<t.length;++s){let o=t[s],l=s===t.length-1,d=r==="/"?e:e.slice(r.length)||"/",h=EL({path:o.relativePath,caseSensitive:o.caseSensitive,end:l},d);if(!h)return null;Object.assign(i,h.params);let f=o.route;a.push({params:i,pathname:pr([r,h.pathname]),pathnameBase:AL(pr([r,h.pathnameBase])),route:f}),h.pathnameBase!=="/"&&(r=pr([r,h.pathnameBase]))}return a}function EL(n,e){typeof n=="string"&&(n={path:n,caseSensitive:!1,end:!0});let[t,i]=PL(n.path,n.caseSensitive,n.end),r=e.match(t);if(!r)return null;let a=r[0],s=a.replace(/(.)\/+$/,"$1"),o=r.slice(1);return{params:i.reduce((d,h,f)=>{let{paramName:p,isOptional:m}=h;if(p==="*"){let b=o[f]||"";s=a.slice(0,a.length-b.length).replace(/(.)\/+$/,"$1")}const y=o[f];return m&&!y?d[p]=void 0:d[p]=(y||"").replace(/%2F/g,"/"),d},{}),pathname:a,pathnameBase:s,pattern:n}}function PL(n,e,t){e===void 0&&(e=!1),t===void 0&&(t=!0),Es(n==="*"||!n.endsWith("*")||n.endsWith("/*"),'Route path "'+n+'" will be treated as if it were '+('"'+n.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+n.replace(/\*$/,"/*")+'".'));let i=[],r="^"+n.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(s,o,l)=>(i.push({paramName:o,isOptional:l!=null}),l?"/?([^\\/]+)?":"/([^\\/]+)"));return n.endsWith("*")?(i.push({paramName:"*"}),r+=n==="*"||n==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):t?r+="\\/*$":n!==""&&n!=="/"&&(r+="(?:(?=\\/|$))"),[new RegExp(r,e?void 0:"i"),i]}function TL(n){try{return n.split("/").map(e=>decodeURIComponent(e).replace(/\//g,"%2F")).join("/")}catch(e){return Es(!1,'The URL path "'+n+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+e+").")),n}}function _3(n,e){if(e==="/")return n;if(!n.toLowerCase().startsWith(e.toLowerCase()))return null;let t=e.endsWith("/")?e.length-1:e.length,i=n.charAt(t);return i&&i!=="/"?null:n.slice(t)||"/"}function LL(n,e){e===void 0&&(e="/");let{pathname:t,search:i="",hash:r=""}=typeof n=="string"?F2(n):n;return{pathname:t?t.startsWith("/")?t:CL(t,e):e,search:RL(i),hash:kL(r)}}function CL(n,e){let t=e.replace(/\/+$/,"").split("/");return n.split("/").forEach(r=>{r===".."?t.length>1&&t.pop():r!=="."&&t.push(r)}),t.length>1?t.join("/"):"/"}function bd(n,e,t,i){return"Cannot include a '"+n+"' character in a manually specified "+("`to."+e+"` field ["+JSON.stringify(i)+"].  Please separate it out to the ")+("`to."+t+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function hw(n){return n.filter((e,t)=>t===0||e.route.path&&e.route.path.length>0)}function m9(n,e){let t=hw(n);return e?t.map((i,r)=>r===n.length-1?i.pathname:i.pathnameBase):t.map(i=>i.pathnameBase)}function g9(n,e,t,i){i===void 0&&(i=!1);let r;typeof n=="string"?r=F2(n):(r=W1({},n),n1(!r.pathname||!r.pathname.includes("?"),bd("?","pathname","search",r)),n1(!r.pathname||!r.pathname.includes("#"),bd("#","pathname","hash",r)),n1(!r.search||!r.search.includes("#"),bd("#","search","hash",r)));let a=n===""||r.pathname==="",s=a?"/":r.pathname,o;if(s==null)o=t;else{let f=e.length-1;if(!i&&s.startsWith("..")){let p=s.split("/");for(;p[0]==="..";)p.shift(),f-=1;r.pathname=p.join("/")}o=f>=0?e[f]:"/"}let l=LL(r,o),d=s&&s!=="/"&&s.endsWith("/"),h=(a||s===".")&&t.endsWith("/");return!l.pathname.endsWith("/")&&(d||h)&&(l.pathname+="/"),l}const pr=n=>n.join("/").replace(/\/\/+/g,"/"),AL=n=>n.replace(/\/+$/,"").replace(/^\/*/,"/"),RL=n=>!n||n==="?"?"":n.startsWith("?")?n:"?"+n,kL=n=>!n||n==="#"?"":n.startsWith("#")?n:"#"+n;class v9{constructor(e,t,i,r){r===void 0&&(r=!1),this.status=e,this.statusText=t||"",this.internal=r,i instanceof Error?(this.data=i.toString(),this.error=i):this.data=i}}function fw(n){return n!=null&&typeof n.status=="number"&&typeof n.statusText=="string"&&typeof n.internal=="boolean"&&"data"in n}const pw=["post","put","patch","delete"],IL=new Set(pw),NL=["get",...pw],DL=new Set(NL),OL=new Set([301,302,303,307,308]),BL=new Set([307,308]),Sd={state:"idle",location:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},UL={state:"idle",data:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},J3={state:"unblocked",proceed:void 0,reset:void 0,location:void 0},mw=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,FL=n=>({hasErrorBoundary:!!n.hasErrorBoundary}),gw="remix-router-transitions";function zL(n){const e=n.window?n.window:typeof window<"u"?window:void 0,t=typeof e<"u"&&typeof e.document<"u"&&typeof e.document.createElement<"u",i=!t;n1(n.routes.length>0,"You must provide a non-empty routes array to createRouter");let r;if(n.mapRouteProperties)r=n.mapRouteProperties;else if(n.detectErrorBoundary){let W=n.detectErrorBoundary;r=J=>({hasErrorBoundary:W(J)})}else r=FL;let a={},s=dh(n.routes,r,void 0,a),o,l=n.basename||"/",d=W1({v7_fetcherPersist:!1,v7_normalizeFormMethod:!1,v7_partialHydration:!1,v7_prependBasename:!1,v7_relativeSplatPath:!1},n.future),h=null,f=new Set,p=null,m=null,y=null,b=n.hydrationData!=null,_=zo(s,n.history.location,l),g=null;if(_==null){let W=Fi(404,{pathname:n.history.location.pathname}),{matches:J,route:ne}=fg(s);_=J,g={[ne.id]:W}}let x,S=_.some(W=>W.route.lazy),E=_.some(W=>W.route.loader);if(S)x=!1;else if(!E)x=!0;else if(d.v7_partialHydration){let W=n.hydrationData?n.hydrationData.loaderData:null,J=n.hydrationData?n.hydrationData.errors:null,ne=Me=>Me.route.loader?Me.route.loader.hydrate===!0?!1:W&&W[Me.route.id]!==void 0||J&&J[Me.route.id]!==void 0:!0;if(J){let Me=_.findIndex(Be=>J[Be.route.id]!==void 0);x=_.slice(0,Me+1).every(ne)}else x=_.every(ne)}else x=n.hydrationData!=null;let A,P={historyAction:n.history.action,location:n.history.location,matches:_,initialized:x,navigation:Sd,restoreScrollPosition:n.hydrationData!=null?!1:null,preventScrollReset:!1,revalidation:"idle",loaderData:n.hydrationData&&n.hydrationData.loaderData||{},actionData:n.hydrationData&&n.hydrationData.actionData||null,errors:n.hydrationData&&n.hydrationData.errors||g,fetchers:new Map,blockers:new Map},C=Z1.Pop,N=!1,Y,T=!1,R=new Map,ee=null,he=!1,q=!1,ue=[],se=[],ve=new Map,z=0,K=-1,Z=new Map,re=new Set,_e=new Map,je=new Map,ce=new Set,Ee=new Map,ze=new Map,Je=!1;function St(){if(h=n.history.listen(W=>{let{action:J,location:ne,delta:Me}=W;if(Je){Je=!1;return}Es(ze.size===0||Me!=null,"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");let Be=Q({currentLocation:P.location,nextLocation:ne,historyAction:J});if(Be&&Me!=null){Je=!0,n.history.go(Me*-1),st(Be,{state:"blocked",location:ne,proceed(){st(Be,{state:"proceeding",proceed:void 0,reset:void 0,location:ne}),n.history.go(Me)},reset(){let mt=new Map(P.blockers);mt.set(Be,J3),$e({blockers:mt})}});return}return De(J,ne)}),t){ZL(e,R);let W=()=>JL(e,R);e.addEventListener("pagehide",W),ee=()=>e.removeEventListener("pagehide",W)}return P.initialized||De(Z1.Pop,P.location,{initialHydration:!0}),A}function pt(){h&&h(),ee&&ee(),f.clear(),Y&&Y.abort(),P.fetchers.forEach((W,J)=>Ke(J)),P.blockers.forEach((W,J)=>yt(J))}function Tt(W){return f.add(W),()=>f.delete(W)}function $e(W,J){J===void 0&&(J={}),P=W1({},P,W);let ne=[],Me=[];d.v7_fetcherPersist&&P.fetchers.forEach((Be,mt)=>{Be.state==="idle"&&(ce.has(mt)?Me.push(mt):ne.push(mt))}),[...f].forEach(Be=>Be(P,{deletedFetchers:Me,unstable_viewTransitionOpts:J.viewTransitionOpts,unstable_flushSync:J.flushSync===!0})),d.v7_fetcherPersist&&(ne.forEach(Be=>P.fetchers.delete(Be)),Me.forEach(Be=>Ke(Be)))}function X(W,J,ne){var Me,Be;let{flushSync:mt}=ne===void 0?{}:ne,ut=P.actionData!=null&&P.navigation.formMethod!=null&&s2(P.navigation.formMethod)&&P.navigation.state==="loading"&&((Me=W.state)==null?void 0:Me._isRedirect)!==!0,qe;J.actionData?Object.keys(J.actionData).length>0?qe=J.actionData:qe=null:ut?qe=P.actionData:qe=null;let ot=J.loaderData?hg(P.loaderData,J.loaderData,J.matches||[],J.errors):P.loaderData,Bt=P.blockers;Bt.size>0&&(Bt=new Map(Bt),Bt.forEach((t1,g1)=>Bt.set(g1,J3)));let m1=N===!0||P.navigation.formMethod!=null&&s2(P.navigation.formMethod)&&((Be=W.state)==null?void 0:Be._isRedirect)!==!0;o&&(s=o,o=void 0),he||C===Z1.Pop||(C===Z1.Push?n.history.push(W,W.state):C===Z1.Replace&&n.history.replace(W,W.state));let Ft;if(C===Z1.Pop){let t1=R.get(P.location.pathname);t1&&t1.has(W.pathname)?Ft={currentLocation:P.location,nextLocation:W}:R.has(W.pathname)&&(Ft={currentLocation:W,nextLocation:P.location})}else if(T){let t1=R.get(P.location.pathname);t1?t1.add(W.pathname):(t1=new Set([W.pathname]),R.set(P.location.pathname,t1)),Ft={currentLocation:P.location,nextLocation:W}}$e(W1({},J,{actionData:qe,loaderData:ot,historyAction:C,location:W,initialized:!0,navigation:Sd,revalidation:"idle",restoreScrollPosition:G(W,J.matches||P.matches),preventScrollReset:m1,blockers:Bt}),{viewTransitionOpts:Ft,flushSync:mt===!0}),C=Z1.Pop,N=!1,T=!1,he=!1,q=!1,ue=[],se=[]}async function Ne(W,J){if(typeof W=="number"){n.history.go(W);return}let ne=hh(P.location,P.matches,l,d.v7_prependBasename,W,d.v7_relativeSplatPath,J==null?void 0:J.fromRouteId,J==null?void 0:J.relative),{path:Me,submission:Be,error:mt}=sg(d.v7_normalizeFormMethod,!1,ne,J),ut=P.location,qe=a4(P.location,Me,J&&J.state);qe=W1({},qe,n.history.encodeLocation(qe));let ot=J&&J.replace!=null?J.replace:void 0,Bt=Z1.Push;ot===!0?Bt=Z1.Replace:ot===!1||Be!=null&&s2(Be.formMethod)&&Be.formAction===P.location.pathname+P.location.search&&(Bt=Z1.Replace);let m1=J&&"preventScrollReset"in J?J.preventScrollReset===!0:void 0,Ft=(J&&J.unstable_flushSync)===!0,t1=Q({currentLocation:ut,nextLocation:qe,historyAction:Bt});if(t1){st(t1,{state:"blocked",location:qe,proceed(){st(t1,{state:"proceeding",proceed:void 0,reset:void 0,location:qe}),Ne(W,J)},reset(){let g1=new Map(P.blockers);g1.set(t1,J3),$e({blockers:g1})}});return}return await De(Bt,qe,{submission:Be,pendingError:mt,preventScrollReset:m1,replace:J&&J.replace,enableViewTransition:J&&J.unstable_viewTransition,flushSync:Ft})}function Te(){if(Ae(),$e({revalidation:"loading"}),P.navigation.state!=="submitting"){if(P.navigation.state==="idle"){De(P.historyAction,P.location,{startUninterruptedRevalidation:!0});return}De(C||P.historyAction,P.navigation.location,{overrideNavigation:P.navigation})}}async function De(W,J,ne){Y&&Y.abort(),Y=null,C=W,he=(ne&&ne.startUninterruptedRevalidation)===!0,kt(P.location,P.matches),N=(ne&&ne.preventScrollReset)===!0,T=(ne&&ne.enableViewTransition)===!0;let Me=o||s,Be=ne&&ne.overrideNavigation,mt=zo(Me,J,l),ut=(ne&&ne.flushSync)===!0;if(!mt){let g1=Fi(404,{pathname:J.pathname}),{matches:w1,route:y1}=fg(Me);Ce(),X(J,{matches:w1,loaderData:{},errors:{[y1.id]:g1}},{flushSync:ut});return}if(P.initialized&&!q&&WL(P.location,J)&&!(ne&&ne.submission&&s2(ne.submission.formMethod))){X(J,{matches:mt},{flushSync:ut});return}Y=new AbortController;let qe=el(n.history,J,Y.signal,ne&&ne.submission),ot,Bt;if(ne&&ne.pendingError)Bt={[Dl(mt).route.id]:ne.pendingError};else if(ne&&ne.submission&&s2(ne.submission.formMethod)){let g1=await Pe(qe,J,ne.submission,mt,{replace:ne.replace,flushSync:ut});if(g1.shortCircuited)return;ot=g1.pendingActionData,Bt=g1.pendingActionError,Be=Md(J,ne.submission),ut=!1,qe=new Request(qe.url,{signal:qe.signal})}let{shortCircuited:m1,loaderData:Ft,errors:t1}=await xt(qe,J,mt,Be,ne&&ne.submission,ne&&ne.fetcherSubmission,ne&&ne.replace,ne&&ne.initialHydration===!0,ut,ot,Bt);m1||(Y=null,X(J,W1({matches:mt},ot?{actionData:ot}:{},{loaderData:Ft,errors:t1})))}async function Pe(W,J,ne,Me,Be){Be===void 0&&(Be={}),Ae();let mt=$L(J,ne);$e({navigation:mt},{flushSync:Be.flushSync===!0});let ut,qe=ph(Me,J);if(!qe.route.action&&!qe.route.lazy)ut={type:V1.error,error:Fi(405,{method:W.method,pathname:J.pathname,routeId:qe.route.id})};else if(ut=await Q3("action",W,qe,Me,a,r,l,d.v7_relativeSplatPath),W.signal.aborted)return{shortCircuited:!0};if(ss(ut)){let ot;return Be&&Be.replace!=null?ot=Be.replace:ot=ut.location===P.location.pathname+P.location.search,await oe(P,ut,{submission:ne,replace:ot}),{shortCircuited:!0}}if(jo(ut)){let ot=Dl(Me,qe.route.id);return(Be&&Be.replace)!==!0&&(C=Z1.Push),{pendingActionData:{},pendingActionError:{[ot.route.id]:ut.error}}}if(as(ut))throw Fi(400,{type:"defer-action"});return{pendingActionData:{[qe.route.id]:ut.data}}}async function xt(W,J,ne,Me,Be,mt,ut,qe,ot,Bt,m1){let Ft=Me||Md(J,Be),t1=Be||mt||gg(Ft),g1=o||s,[w1,y1]=og(n.history,P,ne,t1,J,d.v7_partialHydration&&qe===!0,q,ue,se,ce,_e,re,g1,l,Bt,m1);if(Ce(Ve=>!(ne&&ne.some(Ze=>Ze.route.id===Ve))||w1&&w1.some(Ze=>Ze.route.id===Ve)),K=++z,w1.length===0&&y1.length===0){let Ve=Xt();return X(J,W1({matches:ne,loaderData:{},errors:m1||null},Bt?{actionData:Bt}:{},Ve?{fetchers:new Map(P.fetchers)}:{}),{flushSync:ot}),{shortCircuited:!0}}if(!he&&(!d.v7_partialHydration||!qe)){y1.forEach(Ze=>{let Ye=P.fetchers.get(Ze.key),At=tl(void 0,Ye?Ye.data:void 0);P.fetchers.set(Ze.key,At)});let Ve=Bt||P.actionData;$e(W1({navigation:Ft},Ve?Object.keys(Ve).length===0?{actionData:null}:{actionData:Ve}:{},y1.length>0?{fetchers:new Map(P.fetchers)}:{}),{flushSync:ot})}y1.forEach(Ve=>{ve.has(Ve.key)&&Lt(Ve.key),Ve.controller&&ve.set(Ve.key,Ve.controller)});let ti=()=>y1.forEach(Ve=>Lt(Ve.key));Y&&Y.signal.addEventListener("abort",ti);let{results:g2,loaderResults:Li,fetcherResults:ni}=await ke(P.matches,ne,w1,y1,W);if(W.signal.aborted)return{shortCircuited:!0};Y&&Y.signal.removeEventListener("abort",ti),y1.forEach(Ve=>ve.delete(Ve.key));let O=pg(g2);if(O){if(O.idx>=w1.length){let Ve=y1[O.idx-w1.length].key;re.add(Ve)}return await oe(P,O.result,{replace:ut}),{shortCircuited:!0}}let{loaderData:le,errors:fe}=dg(P,ne,w1,Li,m1,y1,ni,Ee);Ee.forEach((Ve,Ze)=>{Ve.subscribe(Ye=>{(Ye||Ve.done)&&Ee.delete(Ze)})}),d.v7_partialHydration&&qe&&P.errors&&Object.entries(P.errors).filter(Ve=>{let[Ze]=Ve;return!w1.some(Ye=>Ye.route.id===Ze)}).forEach(Ve=>{let[Ze,Ye]=Ve;fe=Object.assign(fe||{},{[Ze]:Ye})});let ye=Xt(),pe=Vt(K),rt=ye||pe||y1.length>0;return W1({loaderData:le,errors:fe},rt?{fetchers:new Map(P.fetchers)}:{})}function et(W,J,ne,Me){if(i)throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");ve.has(W)&&Lt(W);let Be=(Me&&Me.unstable_flushSync)===!0,mt=o||s,ut=hh(P.location,P.matches,l,d.v7_prependBasename,ne,d.v7_relativeSplatPath,J,Me==null?void 0:Me.relative),qe=zo(mt,ut,l);if(!qe){nt(W,J,Fi(404,{pathname:ut}),{flushSync:Be});return}let{path:ot,submission:Bt,error:m1}=sg(d.v7_normalizeFormMethod,!0,ut,Me);if(m1){nt(W,J,m1,{flushSync:Be});return}let Ft=ph(qe,ot);if(N=(Me&&Me.preventScrollReset)===!0,Bt&&s2(Bt.formMethod)){D(W,J,ot,Ft,qe,Be,Bt);return}_e.set(W,{routeId:J,path:ot}),k(W,J,ot,Ft,qe,Be,Bt)}async function D(W,J,ne,Me,Be,mt,ut){if(Ae(),_e.delete(W),!Me.route.action&&!Me.route.lazy){let Ze=Fi(405,{method:ut.formMethod,pathname:ne,routeId:J});nt(W,J,Ze,{flushSync:mt});return}let qe=P.fetchers.get(W);Se(W,KL(ut,qe),{flushSync:mt});let ot=new AbortController,Bt=el(n.history,ne,ot.signal,ut);ve.set(W,ot);let m1=z,Ft=await Q3("action",Bt,Me,Be,a,r,l,d.v7_relativeSplatPath);if(Bt.signal.aborted){ve.get(W)===ot&&ve.delete(W);return}if(d.v7_fetcherPersist&&ce.has(W)){if(ss(Ft)||jo(Ft)){Se(W,Gr(void 0));return}}else{if(ss(Ft))if(ve.delete(W),K>m1){Se(W,Gr(void 0));return}else return re.add(W),Se(W,tl(ut)),oe(P,Ft,{fetcherSubmission:ut});if(jo(Ft)){nt(W,J,Ft.error);return}}if(as(Ft))throw Fi(400,{type:"defer-action"});let t1=P.navigation.location||P.location,g1=el(n.history,t1,ot.signal),w1=o||s,y1=P.navigation.state!=="idle"?zo(w1,P.navigation.location,l):P.matches;n1(y1,"Didn't find any matches after fetcher action");let ti=++z;Z.set(W,ti);let g2=tl(ut,Ft.data);P.fetchers.set(W,g2);let[Li,ni]=og(n.history,P,y1,ut,t1,!1,q,ue,se,ce,_e,re,w1,l,{[Me.route.id]:Ft.data},void 0);ni.filter(Ze=>Ze.key!==W).forEach(Ze=>{let Ye=Ze.key,At=P.fetchers.get(Ye),Dt=tl(void 0,At?At.data:void 0);P.fetchers.set(Ye,Dt),ve.has(Ye)&&Lt(Ye),Ze.controller&&ve.set(Ye,Ze.controller)}),$e({fetchers:new Map(P.fetchers)});let O=()=>ni.forEach(Ze=>Lt(Ze.key));ot.signal.addEventListener("abort",O);let{results:le,loaderResults:fe,fetcherResults:ye}=await ke(P.matches,y1,Li,ni,g1);if(ot.signal.aborted)return;ot.signal.removeEventListener("abort",O),Z.delete(W),ve.delete(W),ni.forEach(Ze=>ve.delete(Ze.key));let pe=pg(le);if(pe){if(pe.idx>=Li.length){let Ze=ni[pe.idx-Li.length].key;re.add(Ze)}return oe(P,pe.result)}let{loaderData:rt,errors:Ve}=dg(P,P.matches,Li,fe,void 0,ni,ye,Ee);if(P.fetchers.has(W)){let Ze=Gr(Ft.data);P.fetchers.set(W,Ze)}Vt(ti),P.navigation.state==="loading"&&ti>K?(n1(C,"Expected pending action"),Y&&Y.abort(),X(P.navigation.location,{matches:y1,loaderData:rt,errors:Ve,fetchers:new Map(P.fetchers)})):($e({errors:Ve,loaderData:hg(P.loaderData,rt,y1,Ve),fetchers:new Map(P.fetchers)}),q=!1)}async function k(W,J,ne,Me,Be,mt,ut){let qe=P.fetchers.get(W);Se(W,tl(ut,qe?qe.data:void 0),{flushSync:mt});let ot=new AbortController,Bt=el(n.history,ne,ot.signal);ve.set(W,ot);let m1=z,Ft=await Q3("loader",Bt,Me,Be,a,r,l,d.v7_relativeSplatPath);if(as(Ft)&&(Ft=await _w(Ft,Bt.signal,!0)||Ft),ve.get(W)===ot&&ve.delete(W),!Bt.signal.aborted){if(ce.has(W)){Se(W,Gr(void 0));return}if(ss(Ft))if(K>m1){Se(W,Gr(void 0));return}else{re.add(W),await oe(P,Ft);return}if(jo(Ft)){nt(W,J,Ft.error);return}n1(!as(Ft),"Unhandled fetcher deferred data"),Se(W,Gr(Ft.data))}}async function oe(W,J,ne){let{submission:Me,fetcherSubmission:Be,replace:mt}=ne===void 0?{}:ne;J.revalidate&&(q=!0);let ut=a4(W.location,J.location,{_isRedirect:!0});if(n1(ut,"Expected a location on the redirect navigation"),t){let t1=!1;if(J.reloadDocument)t1=!0;else if(mw.test(J.location)){const g1=n.history.createURL(J.location);t1=g1.origin!==e.location.origin||_3(g1.pathname,l)==null}if(t1){mt?e.location.replace(J.location):e.location.assign(J.location);return}}Y=null;let qe=mt===!0?Z1.Replace:Z1.Push,{formMethod:ot,formAction:Bt,formEncType:m1}=W.navigation;!Me&&!Be&&ot&&Bt&&m1&&(Me=gg(W.navigation));let Ft=Me||Be;if(BL.has(J.status)&&Ft&&s2(Ft.formMethod))await De(qe,ut,{submission:W1({},Ft,{formAction:J.location}),preventScrollReset:N});else{let t1=Md(ut,Me);await De(qe,ut,{overrideNavigation:t1,fetcherSubmission:Be,preventScrollReset:N})}}async function ke(W,J,ne,Me,Be){let mt=await Promise.all([...ne.map(ot=>Q3("loader",Be,ot,J,a,r,l,d.v7_relativeSplatPath)),...Me.map(ot=>ot.matches&&ot.match&&ot.controller?Q3("loader",el(n.history,ot.path,ot.controller.signal),ot.match,ot.matches,a,r,l,d.v7_relativeSplatPath):{type:V1.error,error:Fi(404,{pathname:ot.path})})]),ut=mt.slice(0,ne.length),qe=mt.slice(ne.length);return await Promise.all([mg(W,ne,ut,ut.map(()=>Be.signal),!1,P.loaderData),mg(W,Me.map(ot=>ot.match),qe,Me.map(ot=>ot.controller?ot.controller.signal:null),!0)]),{results:mt,loaderResults:ut,fetcherResults:qe}}function Ae(){q=!0,ue.push(...Ce()),_e.forEach((W,J)=>{ve.has(J)&&(se.push(J),Lt(J))})}function Se(W,J,ne){ne===void 0&&(ne={}),P.fetchers.set(W,J),$e({fetchers:new Map(P.fetchers)},{flushSync:(ne&&ne.flushSync)===!0})}function nt(W,J,ne,Me){Me===void 0&&(Me={});let Be=Dl(P.matches,J);Ke(W),$e({errors:{[Be.route.id]:ne},fetchers:new Map(P.fetchers)},{flushSync:(Me&&Me.flushSync)===!0})}function We(W){return d.v7_fetcherPersist&&(je.set(W,(je.get(W)||0)+1),ce.has(W)&&ce.delete(W)),P.fetchers.get(W)||UL}function Ke(W){let J=P.fetchers.get(W);ve.has(W)&&!(J&&J.state==="loading"&&Z.has(W))&&Lt(W),_e.delete(W),Z.delete(W),re.delete(W),ce.delete(W),P.fetchers.delete(W)}function Mt(W){if(d.v7_fetcherPersist){let J=(je.get(W)||0)-1;J<=0?(je.delete(W),ce.add(W)):je.set(W,J)}else Ke(W);$e({fetchers:new Map(P.fetchers)})}function Lt(W){let J=ve.get(W);n1(J,"Expected fetch controller: "+W),J.abort(),ve.delete(W)}function Ie(W){for(let J of W){let ne=We(J),Me=Gr(ne.data);P.fetchers.set(J,Me)}}function Xt(){let W=[],J=!1;for(let ne of re){let Me=P.fetchers.get(ne);n1(Me,"Expected fetcher: "+ne),Me.state==="loading"&&(re.delete(ne),W.push(ne),J=!0)}return Ie(W),J}function Vt(W){let J=[];for(let[ne,Me]of Z)if(Me<W){let Be=P.fetchers.get(ne);n1(Be,"Expected fetcher: "+ne),Be.state==="loading"&&(Lt(ne),Z.delete(ne),J.push(ne))}return Ie(J),J.length>0}function de(W,J){let ne=P.blockers.get(W)||J3;return ze.get(W)!==J&&ze.set(W,J),ne}function yt(W){P.blockers.delete(W),ze.delete(W)}function st(W,J){let ne=P.blockers.get(W)||J3;n1(ne.state==="unblocked"&&J.state==="blocked"||ne.state==="blocked"&&J.state==="blocked"||ne.state==="blocked"&&J.state==="proceeding"||ne.state==="blocked"&&J.state==="unblocked"||ne.state==="proceeding"&&J.state==="unblocked","Invalid blocker state transition: "+ne.state+" -> "+J.state);let Me=new Map(P.blockers);Me.set(W,J),$e({blockers:Me})}function Q(W){let{currentLocation:J,nextLocation:ne,historyAction:Me}=W;if(ze.size===0)return;ze.size>1&&Es(!1,"A router only supports one blocker at a time");let Be=Array.from(ze.entries()),[mt,ut]=Be[Be.length-1],qe=P.blockers.get(mt);if(!(qe&&qe.state==="proceeding")&&ut({currentLocation:J,nextLocation:ne,historyAction:Me}))return mt}function Ce(W){let J=[];return Ee.forEach((ne,Me)=>{(!W||W(Me))&&(ne.cancel(),J.push(Me),Ee.delete(Me))}),J}function tt(W,J,ne){if(p=W,y=J,m=ne||null,!b&&P.navigation===Sd){b=!0;let Me=G(P.location,P.matches);Me!=null&&$e({restoreScrollPosition:Me})}return()=>{p=null,y=null,m=null}}function it(W,J){return m&&m(W,J.map(Me=>pL(Me,P.loaderData)))||W.key}function kt(W,J){if(p&&y){let ne=it(W,J);p[ne]=y()}}function G(W,J){if(p){let ne=it(W,J),Me=p[ne];if(typeof Me=="number")return Me}return null}function Ue(W){a={},o=dh(W,r,void 0,a)}return A={get basename(){return l},get future(){return d},get state(){return P},get routes(){return s},get window(){return e},initialize:St,subscribe:Tt,enableScrollRestoration:tt,navigate:Ne,fetch:et,revalidate:Te,createHref:W=>n.history.createHref(W),encodeLocation:W=>n.history.encodeLocation(W),getFetcher:We,deleteFetcher:Mt,dispose:pt,getBlocker:de,deleteBlocker:yt,_internalFetchControllers:ve,_internalActiveDeferreds:Ee,_internalSetRoutes:Ue},A}function jL(n){return n!=null&&("formData"in n&&n.formData!=null||"body"in n&&n.body!==void 0)}function hh(n,e,t,i,r,a,s,o){let l,d;if(s){l=[];for(let f of e)if(l.push(f),f.route.id===s){d=f;break}}else l=e,d=e[e.length-1];let h=g9(r||".",m9(l,a),_3(n.pathname,t)||n.pathname,o==="path");return r==null&&(h.search=n.search,h.hash=n.hash),(r==null||r===""||r===".")&&d&&d.route.index&&!y9(h.search)&&(h.search=h.search?h.search.replace(/^\?/,"?index&"):"?index"),i&&t!=="/"&&(h.pathname=h.pathname==="/"?t:pr([t,h.pathname])),Ps(h)}function sg(n,e,t,i){if(!i||!jL(i))return{path:t};if(i.formMethod&&!qL(i.formMethod))return{path:t,error:Fi(405,{method:i.formMethod})};let r=()=>({path:t,error:Fi(400,{type:"invalid-body"})}),a=i.formMethod||"get",s=n?a.toUpperCase():a.toLowerCase(),o=yw(t);if(i.body!==void 0){if(i.formEncType==="text/plain"){if(!s2(s))return r();let p=typeof i.body=="string"?i.body:i.body instanceof FormData||i.body instanceof URLSearchParams?Array.from(i.body.entries()).reduce((m,y)=>{let[b,_]=y;return""+m+b+"="+_+`
`},""):String(i.body);return{path:t,submission:{formMethod:s,formAction:o,formEncType:i.formEncType,formData:void 0,json:void 0,text:p}}}else if(i.formEncType==="application/json"){if(!s2(s))return r();try{let p=typeof i.body=="string"?JSON.parse(i.body):i.body;return{path:t,submission:{formMethod:s,formAction:o,formEncType:i.formEncType,formData:void 0,json:p,text:void 0}}}catch{return r()}}}n1(typeof FormData=="function","FormData is not available in this environment");let l,d;if(i.formData)l=fh(i.formData),d=i.formData;else if(i.body instanceof FormData)l=fh(i.body),d=i.body;else if(i.body instanceof URLSearchParams)l=i.body,d=ug(l);else if(i.body==null)l=new URLSearchParams,d=new FormData;else try{l=new URLSearchParams(i.body),d=ug(l)}catch{return r()}let h={formMethod:s,formAction:o,formEncType:i&&i.formEncType||"application/x-www-form-urlencoded",formData:d,json:void 0,text:void 0};if(s2(h.formMethod))return{path:t,submission:h};let f=F2(t);return e&&f.search&&y9(f.search)&&l.append("index",""),f.search="?"+l,{path:Ps(f),submission:h}}function HL(n,e){let t=n;if(e){let i=n.findIndex(r=>r.route.id===e);i>=0&&(t=n.slice(0,i))}return t}function og(n,e,t,i,r,a,s,o,l,d,h,f,p,m,y,b){let _=b?Object.values(b)[0]:y?Object.values(y)[0]:void 0,g=n.createURL(e.location),x=n.createURL(r),S=b?Object.keys(b)[0]:void 0,A=HL(t,S).filter((C,N)=>{let{route:Y}=C;if(Y.lazy)return!0;if(Y.loader==null)return!1;if(a)return Y.loader.hydrate?!0:e.loaderData[Y.id]===void 0&&(!e.errors||e.errors[Y.id]===void 0);if(VL(e.loaderData,e.matches[N],C)||o.some(ee=>ee===C.route.id))return!0;let T=e.matches[N],R=C;return lg(C,W1({currentUrl:g,currentParams:T.params,nextUrl:x,nextParams:R.params},i,{actionResult:_,defaultShouldRevalidate:s||g.pathname+g.search===x.pathname+x.search||g.search!==x.search||vw(T,R)}))}),P=[];return h.forEach((C,N)=>{if(a||!t.some(he=>he.route.id===C.routeId)||d.has(N))return;let Y=zo(p,C.path,m);if(!Y){P.push({key:N,routeId:C.routeId,path:C.path,matches:null,match:null,controller:null});return}let T=e.fetchers.get(N),R=ph(Y,C.path),ee=!1;f.has(N)?ee=!1:l.includes(N)?ee=!0:T&&T.state!=="idle"&&T.data===void 0?ee=s:ee=lg(R,W1({currentUrl:g,currentParams:e.matches[e.matches.length-1].params,nextUrl:x,nextParams:t[t.length-1].params},i,{actionResult:_,defaultShouldRevalidate:s})),ee&&P.push({key:N,routeId:C.routeId,path:C.path,matches:Y,match:R,controller:new AbortController})}),[A,P]}function VL(n,e,t){let i=!e||t.route.id!==e.route.id,r=n[t.route.id]===void 0;return i||r}function vw(n,e){let t=n.route.path;return n.pathname!==e.pathname||t!=null&&t.endsWith("*")&&n.params["*"]!==e.params["*"]}function lg(n,e){if(n.route.shouldRevalidate){let t=n.route.shouldRevalidate(e);if(typeof t=="boolean")return t}return e.defaultShouldRevalidate}async function cg(n,e,t){if(!n.lazy)return;let i=await n.lazy();if(!n.lazy)return;let r=t[n.id];n1(r,"No route found in manifest");let a={};for(let s in i){let l=r[s]!==void 0&&s!=="hasErrorBoundary";Es(!l,'Route "'+r.id+'" has a static property "'+s+'" defined but its lazy function is also returning a value for this property. '+('The lazy route property "'+s+'" will be ignored.')),!l&&!hL.has(s)&&(a[s]=i[s])}Object.assign(r,a),Object.assign(r,W1({},e(r),{lazy:void 0}))}async function Q3(n,e,t,i,r,a,s,o,l){l===void 0&&(l={});let d,h,f,p=b=>{let _,g=new Promise((x,S)=>_=S);return f=()=>_(),e.signal.addEventListener("abort",f),Promise.race([b({request:e,params:t.params,context:l.requestContext}),g])};try{let b=t.route[n];if(t.route.lazy)if(b){let _,g=await Promise.all([p(b).catch(x=>{_=x}),cg(t.route,a,r)]);if(_)throw _;h=g[0]}else if(await cg(t.route,a,r),b=t.route[n],b)h=await p(b);else if(n==="action"){let _=new URL(e.url),g=_.pathname+_.search;throw Fi(405,{method:e.method,pathname:g,routeId:t.route.id})}else return{type:V1.data,data:void 0};else if(b)h=await p(b);else{let _=new URL(e.url),g=_.pathname+_.search;throw Fi(404,{pathname:g})}n1(h!==void 0,"You defined "+(n==="action"?"an action":"a loader")+" for route "+('"'+t.route.id+"\" but didn't return anything from your `"+n+"` ")+"function. Please return a value or `null`.")}catch(b){d=V1.error,h=b}finally{f&&e.signal.removeEventListener("abort",f)}if(YL(h)){let b=h.status;if(OL.has(b)){let g=h.headers.get("Location");if(n1(g,"Redirects returned/thrown from loaders/actions must have a Location header"),!mw.test(g))g=hh(new URL(e.url),i.slice(0,i.indexOf(t)+1),s,!0,g,o);else if(!l.isStaticRequest){let x=new URL(e.url),S=g.startsWith("//")?new URL(x.protocol+g):new URL(g),E=_3(S.pathname,s)!=null;S.origin===x.origin&&E&&(g=S.pathname+S.search+S.hash)}if(l.isStaticRequest)throw h.headers.set("Location",g),h;return{type:V1.redirect,status:b,location:g,revalidate:h.headers.get("X-Remix-Revalidate")!==null,reloadDocument:h.headers.get("X-Remix-Reload-Document")!==null}}if(l.isRouteRequest)throw{type:d===V1.error?V1.error:V1.data,response:h};let _;try{let g=h.headers.get("Content-Type");g&&/\bapplication\/json\b/.test(g)?h.body==null?_=null:_=await h.json():_=await h.text()}catch(g){return{type:V1.error,error:g}}return d===V1.error?{type:d,error:new v9(b,h.statusText,_),headers:h.headers}:{type:V1.data,data:_,statusCode:h.status,headers:h.headers}}if(d===V1.error)return{type:d,error:h};if(XL(h)){var m,y;return{type:V1.deferred,deferredData:h,statusCode:(m=h.init)==null?void 0:m.status,headers:((y=h.init)==null?void 0:y.headers)&&new Headers(h.init.headers)}}return{type:V1.data,data:h}}function el(n,e,t,i){let r=n.createURL(yw(e)).toString(),a={signal:t};if(i&&s2(i.formMethod)){let{formMethod:s,formEncType:o}=i;a.method=s.toUpperCase(),o==="application/json"?(a.headers=new Headers({"Content-Type":o}),a.body=JSON.stringify(i.json)):o==="text/plain"?a.body=i.text:o==="application/x-www-form-urlencoded"&&i.formData?a.body=fh(i.formData):a.body=i.formData}return new Request(r,a)}function fh(n){let e=new URLSearchParams;for(let[t,i]of n.entries())e.append(t,typeof i=="string"?i:i.name);return e}function ug(n){let e=new FormData;for(let[t,i]of n.entries())e.append(t,i);return e}function GL(n,e,t,i,r){let a={},s=null,o,l=!1,d={};return t.forEach((h,f)=>{let p=e[f].route.id;if(n1(!ss(h),"Cannot handle redirect results in processLoaderData"),jo(h)){let m=Dl(n,p),y=h.error;i&&(y=Object.values(i)[0],i=void 0),s=s||{},s[m.route.id]==null&&(s[m.route.id]=y),a[p]=void 0,l||(l=!0,o=fw(h.error)?h.error.status:500),h.headers&&(d[p]=h.headers)}else as(h)?(r.set(p,h.deferredData),a[p]=h.deferredData.data):a[p]=h.data,h.statusCode!=null&&h.statusCode!==200&&!l&&(o=h.statusCode),h.headers&&(d[p]=h.headers)}),i&&(s=i,a[Object.keys(i)[0]]=void 0),{loaderData:a,errors:s,statusCode:o||200,loaderHeaders:d}}function dg(n,e,t,i,r,a,s,o){let{loaderData:l,errors:d}=GL(e,t,i,r,o);for(let h=0;h<a.length;h++){let{key:f,match:p,controller:m}=a[h];n1(s!==void 0&&s[h]!==void 0,"Did not find corresponding fetcher result");let y=s[h];if(!(m&&m.signal.aborted))if(jo(y)){let b=Dl(n.matches,p==null?void 0:p.route.id);d&&d[b.route.id]||(d=W1({},d,{[b.route.id]:y.error})),n.fetchers.delete(f)}else if(ss(y))n1(!1,"Unhandled fetcher revalidation redirect");else if(as(y))n1(!1,"Unhandled fetcher deferred data");else{let b=Gr(y.data);n.fetchers.set(f,b)}}return{loaderData:l,errors:d}}function hg(n,e,t,i){let r=W1({},e);for(let a of t){let s=a.route.id;if(e.hasOwnProperty(s)?e[s]!==void 0&&(r[s]=e[s]):n[s]!==void 0&&a.route.loader&&(r[s]=n[s]),i&&i.hasOwnProperty(s))break}return r}function Dl(n,e){return(e?n.slice(0,n.findIndex(i=>i.route.id===e)+1):[...n]).reverse().find(i=>i.route.hasErrorBoundary===!0)||n[0]}function fg(n){let e=n.length===1?n[0]:n.find(t=>t.index||!t.path||t.path==="/")||{id:"__shim-error-route__"};return{matches:[{params:{},pathname:"",pathnameBase:"",route:e}],route:e}}function Fi(n,e){let{pathname:t,routeId:i,method:r,type:a}=e===void 0?{}:e,s="Unknown Server Error",o="Unknown @remix-run/router error";return n===400?(s="Bad Request",r&&t&&i?o="You made a "+r+' request to "'+t+'" but '+('did not provide a `loader` for route "'+i+'", ')+"so there is no way to handle the request.":a==="defer-action"?o="defer() is not supported in actions":a==="invalid-body"&&(o="Unable to encode submission body")):n===403?(s="Forbidden",o='Route "'+i+'" does not match URL "'+t+'"'):n===404?(s="Not Found",o='No route matches URL "'+t+'"'):n===405&&(s="Method Not Allowed",r&&t&&i?o="You made a "+r.toUpperCase()+' request to "'+t+'" but '+('did not provide an `action` for route "'+i+'", ')+"so there is no way to handle the request.":r&&(o='Invalid request method "'+r.toUpperCase()+'"')),new v9(n||500,s,new Error(o),!0)}function pg(n){for(let e=n.length-1;e>=0;e--){let t=n[e];if(ss(t))return{result:t,idx:e}}}function yw(n){let e=typeof n=="string"?F2(n):n;return Ps(W1({},e,{hash:""}))}function WL(n,e){return n.pathname!==e.pathname||n.search!==e.search?!1:n.hash===""?e.hash!=="":n.hash===e.hash?!0:e.hash!==""}function as(n){return n.type===V1.deferred}function jo(n){return n.type===V1.error}function ss(n){return(n&&n.type)===V1.redirect}function XL(n){let e=n;return e&&typeof e=="object"&&typeof e.data=="object"&&typeof e.subscribe=="function"&&typeof e.cancel=="function"&&typeof e.resolveData=="function"}function YL(n){return n!=null&&typeof n.status=="number"&&typeof n.statusText=="string"&&typeof n.headers=="object"&&typeof n.body<"u"}function qL(n){return DL.has(n.toLowerCase())}function s2(n){return IL.has(n.toLowerCase())}async function mg(n,e,t,i,r,a){for(let s=0;s<t.length;s++){let o=t[s],l=e[s];if(!l)continue;let d=n.find(f=>f.route.id===l.route.id),h=d!=null&&!vw(d,l)&&(a&&a[l.route.id])!==void 0;if(as(o)&&(r||h)){let f=i[s];n1(f,"Expected an AbortSignal for revalidating fetcher deferred result"),await _w(o,f,r).then(p=>{p&&(t[s]=p||t[s])})}}}async function _w(n,e,t){if(t===void 0&&(t=!1),!await n.deferredData.resolveData(e)){if(t)try{return{type:V1.data,data:n.deferredData.unwrappedData}}catch(r){return{type:V1.error,error:r}}return{type:V1.data,data:n.deferredData.data}}}function y9(n){return new URLSearchParams(n).getAll("index").some(e=>e==="")}function ph(n,e){let t=typeof e=="string"?F2(e).search:e.search;if(n[n.length-1].route.index&&y9(t||""))return n[n.length-1];let i=hw(n);return i[i.length-1]}function gg(n){let{formMethod:e,formAction:t,formEncType:i,text:r,formData:a,json:s}=n;if(!(!e||!t||!i)){if(r!=null)return{formMethod:e,formAction:t,formEncType:i,formData:void 0,json:void 0,text:r};if(a!=null)return{formMethod:e,formAction:t,formEncType:i,formData:a,json:void 0,text:void 0};if(s!==void 0)return{formMethod:e,formAction:t,formEncType:i,formData:void 0,json:s,text:void 0}}}function Md(n,e){return e?{state:"loading",location:n,formMethod:e.formMethod,formAction:e.formAction,formEncType:e.formEncType,formData:e.formData,json:e.json,text:e.text}:{state:"loading",location:n,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0}}function $L(n,e){return{state:"submitting",location:n,formMethod:e.formMethod,formAction:e.formAction,formEncType:e.formEncType,formData:e.formData,json:e.json,text:e.text}}function tl(n,e){return n?{state:"loading",formMethod:n.formMethod,formAction:n.formAction,formEncType:n.formEncType,formData:n.formData,json:n.json,text:n.text,data:e}:{state:"loading",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:e}}function KL(n,e){return{state:"submitting",formMethod:n.formMethod,formAction:n.formAction,formEncType:n.formEncType,formData:n.formData,json:n.json,text:n.text,data:e?e.data:void 0}}function Gr(n){return{state:"idle",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:n}}function ZL(n,e){try{let t=n.sessionStorage.getItem(gw);if(t){let i=JSON.parse(t);for(let[r,a]of Object.entries(i||{}))a&&Array.isArray(a)&&e.set(r,new Set(a||[]))}}catch{}}function JL(n,e){if(e.size>0){let t={};for(let[i,r]of e)t[i]=[...r];try{n.sessionStorage.setItem(gw,JSON.stringify(t))}catch(i){Es(!1,"Failed to save applied view transitions in sessionStorage ("+i+").")}}}/**
 * React Router v6.22.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function s4(){return s4=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},s4.apply(this,arguments)}const yu=I.createContext(null),xw=I.createContext(null),Is=I.createContext(null),_u=I.createContext(null),ya=I.createContext({outlet:null,matches:[],isDataRoute:!1}),ww=I.createContext(null);function QL(n,e){let{relative:t}=e===void 0?{}:e;F4()||n1(!1);let{basename:i,navigator:r}=I.useContext(Is),{hash:a,pathname:s,search:o}=Sw(n,{relative:t}),l=s;return i!=="/"&&(l=s==="/"?i:pr([i,s])),r.createHref({pathname:l,search:o,hash:a})}function F4(){return I.useContext(_u)!=null}function x3(){return F4()||n1(!1),I.useContext(_u).location}function bw(n){I.useContext(Is).static||I.useLayoutEffect(n)}function _a(){let{isDataRoute:n}=I.useContext(ya);return n?hC():eC()}function eC(){F4()||n1(!1);let n=I.useContext(yu),{basename:e,future:t,navigator:i}=I.useContext(Is),{matches:r}=I.useContext(ya),{pathname:a}=x3(),s=JSON.stringify(m9(r,t.v7_relativeSplatPath)),o=I.useRef(!1);return bw(()=>{o.current=!0}),I.useCallback(function(d,h){if(h===void 0&&(h={}),!o.current)return;if(typeof d=="number"){i.go(d);return}let f=g9(d,JSON.parse(s),a,h.relative==="path");n==null&&e!=="/"&&(f.pathname=f.pathname==="/"?e:pr([e,f.pathname])),(h.replace?i.replace:i.push)(f,h.state,h)},[e,i,s,a,n])}const tC=I.createContext(null);function nC(n){let e=I.useContext(ya).outlet;return e&&I.createElement(tC.Provider,{value:n},e)}function Sw(n,e){let{relative:t}=e===void 0?{}:e,{future:i}=I.useContext(Is),{matches:r}=I.useContext(ya),{pathname:a}=x3(),s=JSON.stringify(m9(r,i.v7_relativeSplatPath));return I.useMemo(()=>g9(n,JSON.parse(s),a,t==="path"),[n,s,a,t])}function iC(n,e,t,i){F4()||n1(!1);let{navigator:r}=I.useContext(Is),{matches:a}=I.useContext(ya),s=a[a.length-1],o=s?s.params:{};s&&s.pathname;let l=s?s.pathnameBase:"/";s&&s.route;let d=x3(),h;if(e){var f;let _=typeof e=="string"?F2(e):e;l==="/"||(f=_.pathname)!=null&&f.startsWith(l)||n1(!1),h=_}else h=d;let p=h.pathname||"/",m=p;if(l!=="/"){let _=l.replace(/^\//,"").split("/");m="/"+p.replace(/^\//,"").split("/").slice(_.length).join("/")}let y=zo(n,{pathname:m}),b=lC(y&&y.map(_=>Object.assign({},_,{params:Object.assign({},o,_.params),pathname:pr([l,r.encodeLocation?r.encodeLocation(_.pathname).pathname:_.pathname]),pathnameBase:_.pathnameBase==="/"?l:pr([l,r.encodeLocation?r.encodeLocation(_.pathnameBase).pathname:_.pathnameBase])})),a,t,i);return e&&b?I.createElement(_u.Provider,{value:{location:s4({pathname:"/",search:"",hash:"",state:null,key:"default"},h),navigationType:Z1.Pop}},b):b}function rC(){let n=dC(),e=fw(n)?n.status+" "+n.statusText:n instanceof Error?n.message:JSON.stringify(n),t=n instanceof Error?n.stack:null,r={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return I.createElement(I.Fragment,null,I.createElement("h2",null,"Unexpected Application Error!"),I.createElement("h3",{style:{fontStyle:"italic"}},e),t?I.createElement("pre",{style:r},t):null,null)}const aC=I.createElement(rC,null);class sC extends I.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||t.revalidation!=="idle"&&e.revalidation==="idle"?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error!==void 0?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error!==void 0?I.createElement(ya.Provider,{value:this.props.routeContext},I.createElement(ww.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function oC(n){let{routeContext:e,match:t,children:i}=n,r=I.useContext(yu);return r&&r.static&&r.staticContext&&(t.route.errorElement||t.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=t.route.id),I.createElement(ya.Provider,{value:e},i)}function lC(n,e,t,i){var r;if(e===void 0&&(e=[]),t===void 0&&(t=null),i===void 0&&(i=null),n==null){var a;if((a=t)!=null&&a.errors)n=t.matches;else return null}let s=n,o=(r=t)==null?void 0:r.errors;if(o!=null){let h=s.findIndex(f=>f.route.id&&(o==null?void 0:o[f.route.id]));h>=0||n1(!1),s=s.slice(0,Math.min(s.length,h+1))}let l=!1,d=-1;if(t&&i&&i.v7_partialHydration)for(let h=0;h<s.length;h++){let f=s[h];if((f.route.HydrateFallback||f.route.hydrateFallbackElement)&&(d=h),f.route.id){let{loaderData:p,errors:m}=t,y=f.route.loader&&p[f.route.id]===void 0&&(!m||m[f.route.id]===void 0);if(f.route.lazy||y){l=!0,d>=0?s=s.slice(0,d+1):s=[s[0]];break}}}return s.reduceRight((h,f,p)=>{let m,y=!1,b=null,_=null;t&&(m=o&&f.route.id?o[f.route.id]:void 0,b=f.route.errorElement||aC,l&&(d<0&&p===0?(fC("route-fallback",!1),y=!0,_=null):d===p&&(y=!0,_=f.route.hydrateFallbackElement||null)));let g=e.concat(s.slice(0,p+1)),x=()=>{let S;return m?S=b:y?S=_:f.route.Component?S=I.createElement(f.route.Component,null):f.route.element?S=f.route.element:S=h,I.createElement(oC,{match:f,routeContext:{outlet:h,matches:g,isDataRoute:t!=null},children:S})};return t&&(f.route.ErrorBoundary||f.route.errorElement||p===0)?I.createElement(sC,{location:t.location,revalidation:t.revalidation,component:b,error:m,children:x(),routeContext:{outlet:null,matches:g,isDataRoute:!0}}):x()},null)}var Mw=function(n){return n.UseBlocker="useBlocker",n.UseRevalidator="useRevalidator",n.UseNavigateStable="useNavigate",n}(Mw||{}),c3=function(n){return n.UseBlocker="useBlocker",n.UseLoaderData="useLoaderData",n.UseActionData="useActionData",n.UseRouteError="useRouteError",n.UseNavigation="useNavigation",n.UseRouteLoaderData="useRouteLoaderData",n.UseMatches="useMatches",n.UseRevalidator="useRevalidator",n.UseNavigateStable="useNavigate",n.UseRouteId="useRouteId",n}(c3||{});function cC(n){let e=I.useContext(yu);return e||n1(!1),e}function Ew(n){let e=I.useContext(xw);return e||n1(!1),e}function uC(n){let e=I.useContext(ya);return e||n1(!1),e}function _9(n){let e=uC(),t=e.matches[e.matches.length-1];return t.route.id||n1(!1),t.route.id}function Pw(){let n=Ew(c3.UseLoaderData),e=_9(c3.UseLoaderData);if(n.errors&&n.errors[e]!=null){console.error("You cannot `useLoaderData` in an errorElement (routeId: "+e+")");return}return n.loaderData[e]}function dC(){var n;let e=I.useContext(ww),t=Ew(c3.UseRouteError),i=_9(c3.UseRouteError);return e!==void 0?e:(n=t.errors)==null?void 0:n[i]}function hC(){let{router:n}=cC(Mw.UseNavigateStable),e=_9(c3.UseNavigateStable),t=I.useRef(!1);return bw(()=>{t.current=!0}),I.useCallback(function(r,a){a===void 0&&(a={}),t.current&&(typeof r=="number"?n.navigate(r):n.navigate(r,s4({fromRouteId:e},a)))},[n,e])}const vg={};function fC(n,e,t){!e&&!vg[n]&&(vg[n]=!0)}function Tw(n){return nC(n.context)}function pC(n){let{basename:e="/",children:t=null,location:i,navigationType:r=Z1.Pop,navigator:a,static:s=!1,future:o}=n;F4()&&n1(!1);let l=e.replace(/^\/*/,"/"),d=I.useMemo(()=>({basename:l,navigator:a,static:s,future:s4({v7_relativeSplatPath:!1},o)}),[l,o,a,s]);typeof i=="string"&&(i=F2(i));let{pathname:h="/",search:f="",hash:p="",state:m=null,key:y="default"}=i,b=I.useMemo(()=>{let _=_3(h,l);return _==null?null:{location:{pathname:_,search:f,hash:p,state:m,key:y},navigationType:r}},[l,h,f,p,m,y,r]);return b==null?null:I.createElement(Is.Provider,{value:d},I.createElement(_u.Provider,{children:t,value:b}))}new Promise(()=>{});function mC(n){let e={hasErrorBoundary:n.ErrorBoundary!=null||n.errorElement!=null};return n.Component&&Object.assign(e,{element:I.createElement(n.Component),Component:void 0}),n.HydrateFallback&&Object.assign(e,{hydrateFallbackElement:I.createElement(n.HydrateFallback),HydrateFallback:void 0}),n.ErrorBoundary&&Object.assign(e,{errorElement:I.createElement(n.ErrorBoundary),ErrorBoundary:void 0}),e}/**
 * React Router DOM v6.22.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function o4(){return o4=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},o4.apply(this,arguments)}function gC(n,e){if(n==null)return{};var t={},i=Object.keys(n),r,a;for(a=0;a<i.length;a++)r=i[a],!(e.indexOf(r)>=0)&&(t[r]=n[r]);return t}function vC(n){return!!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)}function yC(n,e){return n.button===0&&(!e||e==="_self")&&!vC(n)}function mh(n){return n===void 0&&(n=""),new URLSearchParams(typeof n=="string"||Array.isArray(n)||n instanceof URLSearchParams?n:Object.keys(n).reduce((e,t)=>{let i=n[t];return e.concat(Array.isArray(i)?i.map(r=>[t,r]):[[t,i]])},[]))}function _C(n,e){let t=mh(n);return e&&e.forEach((i,r)=>{t.has(r)||e.getAll(r).forEach(a=>{t.append(r,a)})}),t}const xC=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"],wC="6";try{window.__reactRouterVersion=wC}catch{}function bC(n,e){return zL({basename:e==null?void 0:e.basename,future:o4({},e==null?void 0:e.future,{v7_prependBasename:!0}),history:cL({window:e==null?void 0:e.window}),hydrationData:(e==null?void 0:e.hydrationData)||SC(),routes:n,mapRouteProperties:mC,window:e==null?void 0:e.window}).initialize()}function SC(){var n;let e=(n=window)==null?void 0:n.__staticRouterHydrationData;return e&&e.errors&&(e=o4({},e,{errors:MC(e.errors)})),e}function MC(n){if(!n)return null;let e=Object.entries(n),t={};for(let[i,r]of e)if(r&&r.__type==="RouteErrorResponse")t[i]=new v9(r.status,r.statusText,r.data,r.internal===!0);else if(r&&r.__type==="Error"){if(r.__subType){let a=window[r.__subType];if(typeof a=="function")try{let s=new a(r.message);s.stack="",t[i]=s}catch{}}if(t[i]==null){let a=new Error(r.message);a.stack="",t[i]=a}}else t[i]=r;return t}const EC=I.createContext({isTransitioning:!1}),PC=I.createContext(new Map),TC="startTransition",yg=NE[TC],LC="flushSync",_g=GT[LC];function CC(n){yg?yg(n):n()}function nl(n){_g?_g(n):n()}class AC{constructor(){this.status="pending",this.promise=new Promise((e,t)=>{this.resolve=i=>{this.status==="pending"&&(this.status="resolved",e(i))},this.reject=i=>{this.status==="pending"&&(this.status="rejected",t(i))}})}}function RC(n){let{fallbackElement:e,router:t,future:i}=n,[r,a]=I.useState(t.state),[s,o]=I.useState(),[l,d]=I.useState({isTransitioning:!1}),[h,f]=I.useState(),[p,m]=I.useState(),[y,b]=I.useState(),_=I.useRef(new Map),{v7_startTransition:g}=i||{},x=I.useCallback(C=>{g?CC(C):C()},[g]),S=I.useCallback((C,N)=>{let{deletedFetchers:Y,unstable_flushSync:T,unstable_viewTransitionOpts:R}=N;Y.forEach(he=>_.current.delete(he)),C.fetchers.forEach((he,q)=>{he.data!==void 0&&_.current.set(q,he.data)});let ee=t.window==null||typeof t.window.document.startViewTransition!="function";if(!R||ee){T?nl(()=>a(C)):x(()=>a(C));return}if(T){nl(()=>{p&&(h&&h.resolve(),p.skipTransition()),d({isTransitioning:!0,flushSync:!0,currentLocation:R.currentLocation,nextLocation:R.nextLocation})});let he=t.window.document.startViewTransition(()=>{nl(()=>a(C))});he.finished.finally(()=>{nl(()=>{f(void 0),m(void 0),o(void 0),d({isTransitioning:!1})})}),nl(()=>m(he));return}p?(h&&h.resolve(),p.skipTransition(),b({state:C,currentLocation:R.currentLocation,nextLocation:R.nextLocation})):(o(C),d({isTransitioning:!0,flushSync:!1,currentLocation:R.currentLocation,nextLocation:R.nextLocation}))},[t.window,p,h,_,x]);I.useLayoutEffect(()=>t.subscribe(S),[t,S]),I.useEffect(()=>{l.isTransitioning&&!l.flushSync&&f(new AC)},[l]),I.useEffect(()=>{if(h&&s&&t.window){let C=s,N=h.promise,Y=t.window.document.startViewTransition(async()=>{x(()=>a(C)),await N});Y.finished.finally(()=>{f(void 0),m(void 0),o(void 0),d({isTransitioning:!1})}),m(Y)}},[x,s,h,t.window]),I.useEffect(()=>{h&&s&&r.location.key===s.location.key&&h.resolve()},[h,p,r.location,s]),I.useEffect(()=>{!l.isTransitioning&&y&&(o(y.state),d({isTransitioning:!0,flushSync:!1,currentLocation:y.currentLocation,nextLocation:y.nextLocation}),b(void 0))},[l.isTransitioning,y]),I.useEffect(()=>{},[]);let E=I.useMemo(()=>({createHref:t.createHref,encodeLocation:t.encodeLocation,go:C=>t.navigate(C),push:(C,N,Y)=>t.navigate(C,{state:N,preventScrollReset:Y==null?void 0:Y.preventScrollReset}),replace:(C,N,Y)=>t.navigate(C,{replace:!0,state:N,preventScrollReset:Y==null?void 0:Y.preventScrollReset})}),[t]),A=t.basename||"/",P=I.useMemo(()=>({router:t,navigator:E,static:!1,basename:A}),[t,E,A]);return I.createElement(I.Fragment,null,I.createElement(yu.Provider,{value:P},I.createElement(xw.Provider,{value:r},I.createElement(PC.Provider,{value:_.current},I.createElement(EC.Provider,{value:l},I.createElement(pC,{basename:A,location:r.location,navigationType:r.historyAction,navigator:E,future:{v7_relativeSplatPath:t.future.v7_relativeSplatPath}},r.initialized||t.future.v7_partialHydration?I.createElement(kC,{routes:t.routes,future:t.future,state:r}):e))))),null)}function kC(n){let{routes:e,future:t,state:i}=n;return iC(e,void 0,i,t)}const IC=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",NC=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,xg=I.forwardRef(function(e,t){let{onClick:i,relative:r,reloadDocument:a,replace:s,state:o,target:l,to:d,preventScrollReset:h,unstable_viewTransition:f}=e,p=gC(e,xC),{basename:m}=I.useContext(Is),y,b=!1;if(typeof d=="string"&&NC.test(d)&&(y=d,IC))try{let S=new URL(window.location.href),E=d.startsWith("//")?new URL(S.protocol+d):new URL(d),A=_3(E.pathname,m);E.origin===S.origin&&A!=null?d=A+E.search+E.hash:b=!0}catch{}let _=QL(d,{relative:r}),g=DC(d,{replace:s,state:o,target:l,preventScrollReset:h,relative:r,unstable_viewTransition:f});function x(S){i&&i(S),S.defaultPrevented||g(S)}return I.createElement("a",o4({},p,{href:y||_,onClick:b||a?i:x,ref:t,target:l}))});var wg;(function(n){n.UseScrollRestoration="useScrollRestoration",n.UseSubmit="useSubmit",n.UseSubmitFetcher="useSubmitFetcher",n.UseFetcher="useFetcher",n.useViewTransitionState="useViewTransitionState"})(wg||(wg={}));var bg;(function(n){n.UseFetcher="useFetcher",n.UseFetchers="useFetchers",n.UseScrollRestoration="useScrollRestoration"})(bg||(bg={}));function DC(n,e){let{target:t,replace:i,state:r,preventScrollReset:a,relative:s,unstable_viewTransition:o}=e===void 0?{}:e,l=_a(),d=x3(),h=Sw(n,{relative:s});return I.useCallback(f=>{if(yC(f,t)){f.preventDefault();let p=i!==void 0?i:Ps(d)===Ps(h);l(n,{replace:p,state:r,preventScrollReset:a,relative:s,unstable_viewTransition:o})}},[d,l,h,i,r,t,n,a,s,o])}function OC(n){let e=I.useRef(mh(n)),t=I.useRef(!1),i=x3(),r=I.useMemo(()=>_C(i.search,t.current?null:e.current),[i.search]),a=_a(),s=I.useCallback((o,l)=>{const d=mh(typeof o=="function"?o(r):o);t.current=!0,a("?"+d,l)},[a,r]);return[r,s]}function Wi({width:n,height:e}){return n/e}function H5(n,e=0){const t=10**e;return Math.round((n+Number.EPSILON)*t)/t}function BC(n){return(e,t)=>n(t)-n(e)}class UC{constructor(e){this.comparator=e,this.heap=[],this.n=0}greater(e,t){return this.comparator(this.heap[e],this.heap[t])<0}swap(e,t){const i=this.heap[e];this.heap[e]=this.heap[t],this.heap[t]=i}swim(e){let t=e,i=Math.floor(t/2);for(;t>1&&this.greater(i,t);)this.swap(i,t),t=i,i=Math.floor(t/2)}sink(e){let t=e,i=t*2;for(;i<=this.n&&(i<this.n&&this.greater(i,i+1)&&(i+=1),!!this.greater(t,i));)this.swap(t,i),t=i,i=t*2}push(e){this.n+=1,this.heap[this.n]=e,this.swim(this.n)}pop(){if(this.n===0)return;this.swap(1,this.n),this.n-=1;const e=this.heap.pop();return this.sink(1),e}size(){return this.n}}function FC(n,e,t){const i=new Map,r=new Set,a=new Map;a.set(e,0);const s=new UC(BC(o=>o.weight));for(s.push({id:e,weight:0});s.size()>0;){const{id:o,weight:l}=s.pop();if(!r.has(o)){const d=n(o);r.add(o),d.forEach((h,f)=>{const p=l+h,m=i.get(f),y=a.get(f);(y===void 0||y>p&&(y/p>1.005||m!==void 0&&m<o))&&(a.set(f,p),s.push({id:f,weight:p}),i.set(f,o))})}}return a.has(t)?i:void 0}function zC(n,e){const t=[];for(let i=e;i!==void 0;i=n.get(i))t.push(i);return t.reverse()}function jC(n,e,t){const i=FC(n,e,t);return i?zC(i,t):void 0}function HC({photos:n,targetRowHeight:e,containerWidth:t}){const i=n.reduce((r,a)=>Math.min(Wi(a),r),Number.MAX_VALUE);return H5(t/e/i)+2}function Lw(n,e,t,i){const r=e-(n.length-1)*t-2*i*n.length,a=n.reduce((s,o)=>s+Wi(o),0);return r/a}function VC(n,e,t,i,r,a,s){const o=n.slice(e,t),l=Lw(o,i,a,s);return l>0?(l-r)**2*o.length:void 0}function GC({photos:n,layoutOptions:e,targetRowHeight:t,limitNodeSearch:i,rowConstraints:r}){return a=>{var s,o;const{containerWidth:l,spacing:d,padding:h}=e,f=new Map;f.set(a,0);const p=(s=r==null?void 0:r.minPhotos)!=null?s:1,m=Math.min(i,(o=r==null?void 0:r.maxPhotos)!=null?o:1/0);for(let y=a+p;y<n.length+1&&!(y-a>m);y+=1){const b=VC(n,a,y,l,t,d,h);if(b===void 0)break;f.set(y,b)}return f}}function WC({photos:n,layoutOptions:e}){const{spacing:t,padding:i,containerWidth:r,targetRowHeight:a,rowConstraints:s}=e,o=HC({photos:n,containerWidth:r,targetRowHeight:a}),l=GC({photos:n,layoutOptions:e,targetRowHeight:a,limitNodeSearch:o,rowConstraints:s}),d=jC(l,0,n.length);if(d===void 0)return;const h=[];for(let f=1;f<d.length;f+=1){const p=n.map((y,b)=>({photo:y,index:b})).slice(d[f-1],d[f]),m=Lw(p.map(({photo:y})=>y),r,t,i);h.push(p.map(({photo:y,index:b},_)=>({photo:y,layout:{height:m,width:m*Wi(y),index:b,photoIndex:_,photosCount:p.length}})))}return h}function xu(...n){return[...n].filter(e=>!!e).join(" ")}function Cw(n,{width:e,photosCount:t},{spacing:i,padding:r,containerWidth:a}){const s=i*(t-1)+2*r*t;return`calc((${n} - ${s}px) / ${H5((a-s)/e,5)})`}function XC(n,e){return e.layout!=="rows"?`calc(100% - ${2*e.padding}px)`:Cw("100%",n,e)}function Sg(n,e,t){var i,r;return Cw((r=(i=n.match(/^\s*calc\((.*)\)\s*$/))==null?void 0:i[1])!=null?r:n,e,t)}function YC(n,e,t){let i,r;const a=n.srcSet||n.images;return a&&a.length>0&&(i=a.concat(a.find(({width:s})=>s===n.width)?[]:[{src:n.src,width:n.width,height:n.height}]).sort((s,o)=>s.width-o.width).map(s=>`${s.src} ${s.width}w`).join(", ")),t.sizes?r=(t.sizes.sizes||[]).map(({viewport:s,size:o})=>`${s} ${Sg(o,e,t)}`).concat(Sg(t.sizes.size,e,t)).join(", "):i&&(r=`${Math.ceil(e.width/t.containerWidth*100)}vw`),{srcSet:i,sizes:r}}function x9(n){var e,t;const{photo:i,layout:r,layoutOptions:a,imageProps:{style:s,className:o,...l}={},renderPhoto:d}=n,{onClick:h}=a,f={display:"block",boxSizing:"content-box",width:XC(r,a),height:"auto",aspectRatio:`${i.width} / ${i.height}`,...a.padding?{padding:`${a.padding}px`}:null,...(a.layout==="columns"||a.layout==="masonry")&&r.photoIndex<r.photosCount-1?{marginBottom:`${a.spacing}px`}:null,...h?{cursor:"pointer"}:null,...s},p=h?_=>{h({event:_,photo:i,index:r.index})}:void 0,m={src:i.src,alt:(e=i.alt)!=null?e:"",title:i.title,onClick:p,style:f,className:xu("react-photo-album--photo",o),loading:"lazy",decoding:"async",...YC(i,r,a),...l},y=_=>{const{src:g,alt:x,srcSet:S,sizes:E,style:A,...P}=m;return I.createElement("img",{alt:x,...S?{srcSet:S,sizes:E}:null,src:g,style:_!=null&&_.wrapped?{display:"block",width:"100%",height:"100%"}:A,...P})},b=(({display:_,boxSizing:g,width:x,aspectRatio:S,padding:E,marginBottom:A,cursor:P})=>({display:_,boxSizing:g,width:x,aspectRatio:S,padding:E,marginBottom:A,cursor:P}))(f);return I.createElement(I.Fragment,null,(t=d==null?void 0:d({photo:i,layout:r,layoutOptions:a,imageProps:m,renderDefaultPhoto:y,wrapperStyle:b}))!=null?t:y())}function qC({rowContainerProps:n,children:e}){return I.createElement("div",{...n},e)}function $C(n){const{layoutOptions:e,rowIndex:t,rowsCount:i,renderRowContainer:r,rowContainerProps:{style:a,className:s,...o}={},children:l}=n,d={className:xu("react-photo-album--row",s),style:{display:"flex",flexDirection:"row",flexWrap:"nowrap",alignItems:"flex-start",justifyContent:"space-between",...t<i-1?{marginBottom:`${e.spacing}px`}:null,...a},...o};return I.createElement(I.Fragment,null,(r??qC)({layoutOptions:e,rowIndex:t,rowsCount:i,rowContainerProps:d,children:l}))}function KC(n){const{photos:e,layoutOptions:t,renderPhoto:i,renderRowContainer:r,componentsProps:{imageProps:a,rowContainerProps:s}}=n,o=WC({photos:e,layoutOptions:t});return o?I.createElement(I.Fragment,null,o.map((l,d)=>I.createElement($C,{key:`row-${d}`,layoutOptions:t,rowIndex:d,rowsCount:o.length,renderRowContainer:r,rowContainerProps:s},l.map(({photo:h,layout:f})=>I.createElement(x9,{key:h.key||h.src,photo:h,layout:f,layoutOptions:t,renderPhoto:i,imageProps:a}))))):null}function ZC(n,e,t,i){const r=new Map,a=new Set;a.add(t);for(let s=0;s<e;s+=1){const o=[...a.keys()];a.clear(),o.forEach(l=>{const d=s>0?r.get(l)[s].weight:0;n(l).forEach(({neighbor:h,weight:f})=>{let p=r.get(h);p||(p=[],r.set(h,p));const m=d+f,y=p[s+1];(!y||y.weight>m&&(y.weight/m>1.0001||l<y.node))&&(p[s+1]={node:l,weight:m}),s<e-1&&h!==i&&a.add(h)})})}return r}function JC(n,e,t){const i=[t];for(let r=t,a=e;a>0;a-=1)r=n.get(r)[a].node,i.push(r);return i.reverse()}function QC(n,e,t,i){return JC(ZC(n,e,t,i),e,i)}function eA({photos:n,spacing:e,padding:t,targetColumnWidth:i,targetColumnHeight:r}){return a=>{const s=[],o=r*1.5;let l=i/Wi(n[a])+2*t;for(let d=a+1;d<n.length+1&&(s.push({neighbor:d,weight:(r-l)**2}),!(l>o||d===n.length));d+=1)l+=i/Wi(n[d])+e+2*t;return s}}function Mg({path:n,photos:e,containerWidth:t,columnsGaps:i,columnsRatios:r,spacing:a,padding:s}){const o=[],l=r.reduce((d,h)=>d+h,0);for(let d=0;d<n.length-1;d+=1){const h=e.map((m,y)=>({photo:m,index:y})).slice(n[d],n[d+1]),f=r.reduce((m,y,b)=>m+(i[d]-i[b])*y,0),p=(t-(n.length-2)*a-2*(n.length-1)*s-f)*r[d]/l;o.push(h.map(({photo:m,index:y},b)=>({photo:m,layout:{width:p,height:p/Wi(m),index:y,photoIndex:b,photosCount:h.length}})))}return o}function tA({photos:n,layoutOptions:e,targetColumnWidth:t}){const{columns:i,spacing:r,padding:a,containerWidth:s}=e,o=[],l=[];if(n.length<=i){const m=n.length>0?n.reduce((b,_)=>b+Wi(_),0)/n.length:1;for(let b=0;b<i;b+=1)o[b]=2*a,l[b]=b<n.length?Wi(n[b]):m;const y=Mg({path:Array.from({length:i+1}).map((b,_)=>Math.min(_,n.length)),photos:n,columnsRatios:l,columnsGaps:o,containerWidth:s,spacing:r,padding:a});return{columnsGaps:o,columnsRatios:l,columnsModel:y}}const d=(n.reduce((m,y)=>m+t/Wi(y),0)+r*(n.length-i)+2*a*n.length)/i,h=eA({photos:n,targetColumnWidth:t,targetColumnHeight:d,spacing:r,padding:a}),f=QC(h,i,0,n.length);for(let m=0;m<f.length-1;m+=1){const y=n.slice(f[m],f[m+1]);o[m]=r*(y.length-1)+2*a*y.length,l[m]=1/y.reduce((b,_)=>b+1/Wi(_),0)}const p=Mg({path:f,photos:n,columnsRatios:l,columnsGaps:o,containerWidth:s,spacing:r,padding:a});return{columnsGaps:o,columnsRatios:l,columnsModel:p}}function Aw(n){const{photos:e,layoutOptions:t}=n,{columns:i,spacing:r,padding:a,containerWidth:s}=t,o=(s-r*(i-1)-2*a*i)/i,{columnsGaps:l,columnsRatios:d,columnsModel:h}=tA({photos:e,layoutOptions:t,targetColumnWidth:o});return h.findIndex(f=>f.findIndex(({layout:{width:p,height:m}})=>p<0||m<0)>=0)>=0?i>1?Aw({photos:e,layoutOptions:{...t,columns:i-1}}):void 0:{columnsModel:h,columnsGaps:l,columnsRatios:d}}function nA({photos:n,layoutOptions:e}){return Aw({photos:n,layoutOptions:e})}function iA({columnContainerProps:n,children:e}){return I.createElement("div",{...n},e)}function rA(n){const{layoutOptions:e,columnIndex:t,columnsCount:i,columnsGaps:r,columnsRatios:a}=n,{layout:s,spacing:o,padding:l}=e;if(s==="masonry"||!r||!a)return`calc((100% - ${o*(i-1)}px) / ${i})`;const d=a.reduce((f,p)=>f+p,0),h=a.reduce((f,p,m)=>f+(r[t]-r[m])*p,0);return`calc((100% - ${H5((i-1)*o+2*i*l+h,3)}px) * ${H5(a[t]/d,5)} + ${2*l}px)`}function Rw(n){const{layoutOptions:e,renderColumnContainer:t,children:i,columnContainerProps:{style:r,className:a,...s}={},...o}=n,l={className:xu("react-photo-album--column",a),style:{display:"flex",flexDirection:"column",flexWrap:"nowrap",alignItems:"flex-start",width:rA(n),justifyContent:e.layout==="columns"?"space-between":"flex-start",...r},...s};return I.createElement(I.Fragment,null,(t??iA)({layoutOptions:e,columnContainerProps:l,children:i,...o}))}function aA(n){const{photos:e,layoutOptions:t,renderPhoto:i,renderColumnContainer:r,componentsProps:{imageProps:a,columnContainerProps:s}}=n,o=nA({photos:e,layoutOptions:t});if(!o)return null;const{columnsModel:l,columnsRatios:d,columnsGaps:h}=o;return I.createElement(I.Fragment,null,l.map((f,p)=>I.createElement(Rw,{key:`column-${p}`,layoutOptions:t,columnIndex:p,columnsCount:l.length,columnsGaps:h,columnsRatios:d,renderColumnContainer:r,columnContainerProps:s},f.map(({photo:m,layout:y})=>I.createElement(x9,{key:m.key||m.src,photo:m,layout:y,layoutOptions:t,renderPhoto:i,imageProps:a})))))}function kw(n){const{photos:e,layoutOptions:t}=n,{columns:i,spacing:r,padding:a,containerWidth:s}=t,o=(s-r*(i-1)-2*a*i)/i;if(o<=0)return i>1?kw({...n,layoutOptions:{...t,columns:i-1}}):void 0;const l=[];for(let h=0;h<i;h+=1)l[h]=0;return e.reduce((h,f,p)=>{const m=l.reduce((y,b,_)=>b<l[y]-1?_:y,0);return l[m]=l[m]+o/Wi(f)+r+2*a,h[m].push({photo:f,index:p}),h},Array.from({length:i}).map(()=>[])).map(h=>h.map(({photo:f,index:p},m)=>({photo:f,layout:{width:o,height:o/Wi(f),index:p,photoIndex:m,photosCount:h.length}})))}function sA(n){const{photos:e,layoutOptions:t,renderPhoto:i,renderColumnContainer:r,componentsProps:{imageProps:a,columnContainerProps:s}}=n,o=kw({photos:e,layoutOptions:t});return o?I.createElement(I.Fragment,null,o.map((l,d)=>I.createElement(Rw,{key:`masonry-column-${d}`,layoutOptions:t,columnsCount:o.length,columnIndex:d,renderColumnContainer:r,columnContainerProps:s},l.map(({photo:h,layout:f})=>I.createElement(x9,{key:h.key||h.src,photo:h,layout:f,layoutOptions:t,renderPhoto:i,imageProps:a}))))):null}function oA({containerProps:n,children:e,containerRef:t}){return I.createElement("div",{ref:t,...n},e)}function lA(n){const{layout:e,renderContainer:t,children:i,containerRef:r,containerProps:{style:a,className:s,...o}={}}=n,l={className:xu("react-photo-album",`react-photo-album--${e}`,s),style:{display:"flex",flexWrap:"nowrap",justifyContent:"space-between",flexDirection:e==="rows"?"column":"row",...a},...o};return I.createElement(I.Fragment,null,(t??oA)({containerProps:l,containerRef:r,layout:e,children:i}))}function cA(n){const e=I.useRef(n);return(!n||!e.current||n.join()!==e.current.join())&&(e.current=n),e.current}function uA(n,{newContainerWidth:e,newScrollbarWidth:t}){const{containerWidth:i,scrollbarWidth:r}=n;return i!==void 0&&r!==void 0&&e!==void 0&&t!==void 0&&e>i&&e-i<=20&&t<r?{containerWidth:i,scrollbarWidth:t}:i!==e||r!==t?{containerWidth:e,scrollbarWidth:t}:n}function dA(n,e){let t=n==null?void 0:n.clientWidth;if(t!==void 0&&e&&e.length>0){const i=[...e.filter(a=>a>0)].sort((a,s)=>s-a);i.push(Math.floor(i[i.length-1]/2));const r=t;t=i.find((a,s)=>a<=r||s===i.length-1)}return t}function hA(n,e){const[{containerWidth:t},i]=I.useReducer(uA,{containerWidth:e}),r=I.useRef(null),a=I.useRef();return{containerRef:I.useCallback(o=>{var l;(l=a.current)==null||l.disconnect(),a.current=void 0,r.current=o;const d=()=>i({newContainerWidth:dA(r.current,n),newScrollbarWidth:window.innerWidth-document.documentElement.clientWidth});d(),o&&typeof ResizeObserver<"u"&&(a.current=new ResizeObserver(d),a.current.observe(o))},[n]),containerWidth:t}}const fA=Object.freeze([1200,600,300,0]);function w9(n,e){return typeof n=="function"?n(e):n}function Iw(n,e){return typeof n<"u"?w9(n,e):void 0}function pA(n,e){const t=fA.findIndex(i=>i<=e);return w9(n[t>=0?t:0],e)}function nc(n,e,t,i=0){const r=Iw(n,e);return Math.round(Math.max(r===void 0?pA(t,e):r,i))}function mA({layout:n,onClick:e,containerWidth:t,targetRowHeight:i,rowConstraints:r,columns:a,spacing:s,padding:o,sizes:l}){return{layout:n,onClick:e,containerWidth:t,columns:nc(a,t,[5,4,3,2],1),spacing:nc(s,t,[20,15,10,5]),padding:nc(o,t,[0,0,0,0,0]),targetRowHeight:nc(i,t,[d=>d/5,d=>d/4,d=>d/3,d=>d/2]),rowConstraints:Iw(r,t),sizes:l}}function gA(n,e,t){const{photos:i,componentsProps:r}=n,a=w9(r,e)||{};if(t){const{layout:s,spacing:o,padding:l,rowConstraints:d}=t;if(s==="rows"){const{singleRowMaxHeight:h}=d||{};if(h){const f=Math.floor(i.reduce((p,{width:m,height:y})=>p+m/y*h-2*l,l*i.length*2+o*(i.length-1)));f>0&&(a.containerProps=a.containerProps||{},a.containerProps.style={maxWidth:f,...a.containerProps.style})}}}return a}function vA(n,e,t){const{photos:i,layout:r,renderPhoto:a,renderRowContainer:s,renderColumnContainer:o}=n,l={photos:i,renderPhoto:a,componentsProps:e};return r==="rows"?I.createElement(KC,{layoutOptions:t,renderRowContainer:s,...l}):r==="columns"?I.createElement(aA,{layoutOptions:t,renderColumnContainer:o,...l}):I.createElement(sA,{layoutOptions:t,renderColumnContainer:o,...l})}function yA(n){const{photos:e,layout:t,renderContainer:i,defaultContainerWidth:r,breakpoints:a}=n,{containerRef:s,containerWidth:o}=hA(cA(a),r);if(!t||!["rows","columns","masonry"].includes(t)||!Array.isArray(e))return null;const l=o?mA({containerWidth:o,...n}):void 0,d=gA(n,o,l);return I.createElement(lA,{layout:t,containerRef:s,renderContainer:i,containerProps:d.containerProps},l&&vA(n,d,l))}function u3(){return u3=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},u3.apply(this,arguments)}function Nw(n,e){if(n==null)return{};var t={},i=Object.keys(n),r,a;for(a=0;a<i.length;a++)r=i[a],!(e.indexOf(r)>=0)&&(t[r]=n[r]);return t}function gh(n,e){return gh=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(i,r){return i.__proto__=r,i},gh(n,e)}function Dw(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,gh(n,e)}function _A(n,e){return n.classList?!!e&&n.classList.contains(e):(" "+(n.className.baseVal||n.className)+" ").indexOf(" "+e+" ")!==-1}function xA(n,e){n.classList?n.classList.add(e):_A(n,e)||(typeof n.className=="string"?n.className=n.className+" "+e:n.setAttribute("class",(n.className&&n.className.baseVal||"")+" "+e))}function Eg(n,e){return n.replace(new RegExp("(^|\\s)"+e+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}function wA(n,e){n.classList?n.classList.remove(e):typeof n.className=="string"?n.className=Eg(n.className,e):n.setAttribute("class",Eg(n.className&&n.className.baseVal||"",e))}const Pg={disabled:!1},Ow=or.createContext(null);var Bw=function(e){return e.scrollTop},Ml="unmounted",Ka="exited",Za="entering",Eo="entered",vh="exiting",Mr=function(n){Dw(e,n);function e(i,r){var a;a=n.call(this,i,r)||this;var s=r,o=s&&!s.isMounting?i.enter:i.appear,l;return a.appearStatus=null,i.in?o?(l=Ka,a.appearStatus=Za):l=Eo:i.unmountOnExit||i.mountOnEnter?l=Ml:l=Ka,a.state={status:l},a.nextCallback=null,a}e.getDerivedStateFromProps=function(r,a){var s=r.in;return s&&a.status===Ml?{status:Ka}:null};var t=e.prototype;return t.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},t.componentDidUpdate=function(r){var a=null;if(r!==this.props){var s=this.state.status;this.props.in?s!==Za&&s!==Eo&&(a=Za):(s===Za||s===Eo)&&(a=vh)}this.updateStatus(!1,a)},t.componentWillUnmount=function(){this.cancelNextCallback()},t.getTimeouts=function(){var r=this.props.timeout,a,s,o;return a=s=o=r,r!=null&&typeof r!="number"&&(a=r.exit,s=r.enter,o=r.appear!==void 0?r.appear:s),{exit:a,enter:s,appear:o}},t.updateStatus=function(r,a){if(r===void 0&&(r=!1),a!==null)if(this.cancelNextCallback(),a===Za){if(this.props.unmountOnExit||this.props.mountOnEnter){var s=this.props.nodeRef?this.props.nodeRef.current:Sl.findDOMNode(this);s&&Bw(s)}this.performEnter(r)}else this.performExit();else this.props.unmountOnExit&&this.state.status===Ka&&this.setState({status:Ml})},t.performEnter=function(r){var a=this,s=this.props.enter,o=this.context?this.context.isMounting:r,l=this.props.nodeRef?[o]:[Sl.findDOMNode(this),o],d=l[0],h=l[1],f=this.getTimeouts(),p=o?f.appear:f.enter;if(!r&&!s||Pg.disabled){this.safeSetState({status:Eo},function(){a.props.onEntered(d)});return}this.props.onEnter(d,h),this.safeSetState({status:Za},function(){a.props.onEntering(d,h),a.onTransitionEnd(p,function(){a.safeSetState({status:Eo},function(){a.props.onEntered(d,h)})})})},t.performExit=function(){var r=this,a=this.props.exit,s=this.getTimeouts(),o=this.props.nodeRef?void 0:Sl.findDOMNode(this);if(!a||Pg.disabled){this.safeSetState({status:Ka},function(){r.props.onExited(o)});return}this.props.onExit(o),this.safeSetState({status:vh},function(){r.props.onExiting(o),r.onTransitionEnd(s.exit,function(){r.safeSetState({status:Ka},function(){r.props.onExited(o)})})})},t.cancelNextCallback=function(){this.nextCallback!==null&&(this.nextCallback.cancel(),this.nextCallback=null)},t.safeSetState=function(r,a){a=this.setNextCallback(a),this.setState(r,a)},t.setNextCallback=function(r){var a=this,s=!0;return this.nextCallback=function(o){s&&(s=!1,a.nextCallback=null,r(o))},this.nextCallback.cancel=function(){s=!1},this.nextCallback},t.onTransitionEnd=function(r,a){this.setNextCallback(a);var s=this.props.nodeRef?this.props.nodeRef.current:Sl.findDOMNode(this),o=r==null&&!this.props.addEndListener;if(!s||o){setTimeout(this.nextCallback,0);return}if(this.props.addEndListener){var l=this.props.nodeRef?[this.nextCallback]:[s,this.nextCallback],d=l[0],h=l[1];this.props.addEndListener(d,h)}r!=null&&setTimeout(this.nextCallback,r)},t.render=function(){var r=this.state.status;if(r===Ml)return null;var a=this.props,s=a.children;a.in,a.mountOnEnter,a.unmountOnExit,a.appear,a.enter,a.exit,a.timeout,a.addEndListener,a.onEnter,a.onEntering,a.onEntered,a.onExit,a.onExiting,a.onExited,a.nodeRef;var o=Nw(a,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return or.createElement(Ow.Provider,{value:null},typeof s=="function"?s(r,o):or.cloneElement(or.Children.only(s),o))},e}(or.Component);Mr.contextType=Ow;Mr.propTypes={};function Js(){}Mr.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:Js,onEntering:Js,onEntered:Js,onExit:Js,onExiting:Js,onExited:Js};Mr.UNMOUNTED=Ml;Mr.EXITED=Ka;Mr.ENTERING=Za;Mr.ENTERED=Eo;Mr.EXITING=vh;const bA=Mr;var SA=function(e,t){return e&&t&&t.split(" ").forEach(function(i){return xA(e,i)})},Ed=function(e,t){return e&&t&&t.split(" ").forEach(function(i){return wA(e,i)})},b9=function(n){Dw(e,n);function e(){for(var i,r=arguments.length,a=new Array(r),s=0;s<r;s++)a[s]=arguments[s];return i=n.call.apply(n,[this].concat(a))||this,i.appliedClasses={appear:{},enter:{},exit:{}},i.onEnter=function(o,l){var d=i.resolveArguments(o,l),h=d[0],f=d[1];i.removeClasses(h,"exit"),i.addClass(h,f?"appear":"enter","base"),i.props.onEnter&&i.props.onEnter(o,l)},i.onEntering=function(o,l){var d=i.resolveArguments(o,l),h=d[0],f=d[1],p=f?"appear":"enter";i.addClass(h,p,"active"),i.props.onEntering&&i.props.onEntering(o,l)},i.onEntered=function(o,l){var d=i.resolveArguments(o,l),h=d[0],f=d[1],p=f?"appear":"enter";i.removeClasses(h,p),i.addClass(h,p,"done"),i.props.onEntered&&i.props.onEntered(o,l)},i.onExit=function(o){var l=i.resolveArguments(o),d=l[0];i.removeClasses(d,"appear"),i.removeClasses(d,"enter"),i.addClass(d,"exit","base"),i.props.onExit&&i.props.onExit(o)},i.onExiting=function(o){var l=i.resolveArguments(o),d=l[0];i.addClass(d,"exit","active"),i.props.onExiting&&i.props.onExiting(o)},i.onExited=function(o){var l=i.resolveArguments(o),d=l[0];i.removeClasses(d,"exit"),i.addClass(d,"exit","done"),i.props.onExited&&i.props.onExited(o)},i.resolveArguments=function(o,l){return i.props.nodeRef?[i.props.nodeRef.current,o]:[o,l]},i.getClassNames=function(o){var l=i.props.classNames,d=typeof l=="string",h=d&&l?l+"-":"",f=d?""+h+o:l[o],p=d?f+"-active":l[o+"Active"],m=d?f+"-done":l[o+"Done"];return{baseClassName:f,activeClassName:p,doneClassName:m}},i}var t=e.prototype;return t.addClass=function(r,a,s){var o=this.getClassNames(a)[s+"ClassName"],l=this.getClassNames("enter"),d=l.doneClassName;a==="appear"&&s==="done"&&d&&(o+=" "+d),s==="active"&&r&&Bw(r),o&&(this.appliedClasses[a][s]=o,SA(r,o))},t.removeClasses=function(r,a){var s=this.appliedClasses[a],o=s.base,l=s.active,d=s.done;this.appliedClasses[a]={},o&&Ed(r,o),l&&Ed(r,l),d&&Ed(r,d)},t.render=function(){var r=this.props;r.classNames;var a=Nw(r,["classNames"]);return or.createElement(bA,u3({},a,{onEnter:this.onEnter,onEntered:this.onEntered,onEntering:this.onEntering,onExit:this.onExit,onExiting:this.onExiting,onExited:this.onExited}))},e}(or.Component);b9.defaultProps={classNames:""};b9.propTypes={};const MA=b9;function EA({isDarkTheme:n,handleDarkModeSwitch:e,className:t=""}){return xe.jsx("button",{className:`dark-mode-button ${t}`,onClick:e,"aria-label":"Toggle dark mode",children:xe.jsx(MA,{in:n,timeout:300,classNames:"dark-mode-button__icon",children:n?xe.jsx(QT,{}):xe.jsx(eL,{})})})}function PA({onClick:n,className:e=""}){return xe.jsx(XT,{className:`close-button ${e}`,onClick:n})}function Uw({countryName:n,className:e=""}){switch(n.replace(" ","")){case"Germany":return xe.jsx(rw,{className:e});case"Italy":return xe.jsx(aw,{className:e});case"Spain":return xe.jsx(sw,{className:e});case"UnitedKingdom":return xe.jsx(iw,{className:e});case"Belgium":return xe.jsx(nL,{className:e});case"Hungary":return xe.jsx(ow,{className:e});case"Japan":return xe.jsx(cw,{className:e});case"Portugal":return xe.jsx(lw,{className:e});default:return xe.jsx(xe.Fragment,{})}}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const wu="161",Yr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},rr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Fw=0,yh=1,zw=2,TA=3,jw=0,bu=1,Ol=2,r2=3,xr=0,Kn=1,Hi=2,mr=0,ps=1,_h=2,xh=3,wh=4,Hw=5,Kr=100,Vw=101,Gw=102,bh=103,Sh=104,Ww=200,Xw=201,Yw=202,qw=203,V5=204,G5=205,$w=206,Kw=207,Zw=208,Jw=209,Qw=210,eb=211,tb=212,nb=213,ib=214,rb=0,ab=1,sb=2,l4=3,ob=4,lb=5,cb=6,ub=7,z4=0,db=1,hb=2,I2=0,fb=1,pb=2,mb=3,S9=4,gb=5,vb=6,Mh="attached",yb="detached",Su=300,wr=301,fa=302,c4=303,u4=304,w3=306,d4=1e3,On=1001,h4=1002,J1=1003,W5=1004,LA=1004,es=1005,CA=1005,N1=1006,Bl=1007,AA=1007,L2=1008,RA=1008,N2=1009,_b=1010,xb=1011,Mu=1012,M9=1013,ur=1014,Vi=1015,d3=1016,E9=1017,P9=1018,oa=1020,wb=1021,Yn=1023,bb=1024,Sb=1025,la=1026,Ts=1027,Mb=1028,T9=1029,Eb=1030,L9=1031,C9=1033,u5=33776,d5=33777,h5=33778,f5=33779,Eh=35840,Ph=35841,Th=35842,Lh=35843,A9=36196,Ch=37492,Ah=37496,Rh=37808,kh=37809,Ih=37810,Nh=37811,Dh=37812,Oh=37813,Bh=37814,Uh=37815,Fh=37816,zh=37817,jh=37818,Hh=37819,Vh=37820,Gh=37821,p5=36492,Wh=36494,Xh=36495,Pb=36283,Yh=36284,qh=36285,$h=36286,Tb=2200,Lb=2201,Cb=2202,f4=2300,p4=2301,m5=2302,os=2400,ls=2401,m4=2402,Eu=2500,R9=2501,kA=0,IA=1,NA=2,k9=3e3,ca=3001,Ab=3200,Rb=3201,xa=0,kb=1,xi="",un="srgb",B2="srgb-linear",Pu="display-p3",j4="display-p3-linear",g4="linear",M1="srgb",v4="rec709",y4="p3",DA=0,Ja=7680,OA=7681,BA=7682,UA=7683,FA=34055,zA=34056,jA=5386,HA=512,VA=513,GA=514,WA=515,XA=516,YA=517,qA=518,Kh=519,Ib=512,Nb=513,Db=514,I9=515,Ob=516,Bb=517,Ub=518,Fb=519,_4=35044,$A=35048,KA=35040,ZA=35045,JA=35049,QA=35041,eR=35046,tR=35050,nR=35042,iR="100",Zh="300 es",X5=1035,C2=2e3,x4=2001;class z2{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const a=r.indexOf(t);a!==-1&&r.splice(a,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let a=0,s=r.length;a<s;a++)r[a].call(this,e);e.target=null}}}const kn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Tg=1234567;const ms=Math.PI/180,h3=180/Math.PI;function Mi(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(kn[n&255]+kn[n>>8&255]+kn[n>>16&255]+kn[n>>24&255]+"-"+kn[e&255]+kn[e>>8&255]+"-"+kn[e>>16&15|64]+kn[e>>24&255]+"-"+kn[t&63|128]+kn[t>>8&255]+"-"+kn[t>>16&255]+kn[t>>24&255]+kn[i&255]+kn[i>>8&255]+kn[i>>16&255]+kn[i>>24&255]).toLowerCase()}function X1(n,e,t){return Math.max(e,Math.min(t,n))}function N9(n,e){return(n%e+e)%e}function rR(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)}function aR(n,e,t){return n!==e?(t-n)/(e-n):0}function Ul(n,e,t){return(1-t)*n+t*e}function sR(n,e,t,i){return Ul(n,e,1-Math.exp(-t*i))}function oR(n,e=1){return e-Math.abs(N9(n,e*2)-e)}function lR(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))}function cR(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))}function uR(n,e){return n+Math.floor(Math.random()*(e-n+1))}function dR(n,e){return n+Math.random()*(e-n)}function hR(n){return n*(.5-Math.random())}function fR(n){n!==void 0&&(Tg=n);let e=Tg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function pR(n){return n*ms}function mR(n){return n*h3}function Jh(n){return(n&n-1)===0&&n!==0}function gR(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))}function Y5(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function vR(n,e,t,i,r){const a=Math.cos,s=Math.sin,o=a(t/2),l=s(t/2),d=a((e+i)/2),h=s((e+i)/2),f=a((e-i)/2),p=s((e-i)/2),m=a((i-e)/2),y=s((i-e)/2);switch(r){case"XYX":n.set(o*h,l*f,l*p,o*d);break;case"YZY":n.set(l*p,o*h,l*f,o*d);break;case"ZXZ":n.set(l*f,l*p,o*h,o*d);break;case"XZX":n.set(o*h,l*y,l*m,o*d);break;case"YXY":n.set(l*m,o*h,l*y,o*d);break;case"ZYZ":n.set(l*y,l*m,o*h,o*d);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function qn(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function $t(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}const yR={DEG2RAD:ms,RAD2DEG:h3,generateUUID:Mi,clamp:X1,euclideanModulo:N9,mapLinear:rR,inverseLerp:aR,lerp:Ul,damp:sR,pingpong:oR,smoothstep:lR,smootherstep:cR,randInt:uR,randFloat:dR,randFloatSpread:hR,seededRandom:fR,degToRad:pR,radToDeg:mR,isPowerOfTwo:Jh,ceilPowerOfTwo:gR,floorPowerOfTwo:Y5,setQuaternionFromProperEuler:vR,normalize:$t,denormalize:qn};class Le{constructor(e=0,t=0){Le.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(X1(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),a=this.x-e.x,s=this.y-e.y;return this.x=a*i-s*r+e.x,this.y=a*r+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Qt{constructor(e,t,i,r,a,s,o,l,d){Qt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,a,s,o,l,d)}set(e,t,i,r,a,s,o,l,d){const h=this.elements;return h[0]=e,h[1]=r,h[2]=o,h[3]=t,h[4]=a,h[5]=l,h[6]=i,h[7]=s,h[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,a=this.elements,s=i[0],o=i[3],l=i[6],d=i[1],h=i[4],f=i[7],p=i[2],m=i[5],y=i[8],b=r[0],_=r[3],g=r[6],x=r[1],S=r[4],E=r[7],A=r[2],P=r[5],C=r[8];return a[0]=s*b+o*x+l*A,a[3]=s*_+o*S+l*P,a[6]=s*g+o*E+l*C,a[1]=d*b+h*x+f*A,a[4]=d*_+h*S+f*P,a[7]=d*g+h*E+f*C,a[2]=p*b+m*x+y*A,a[5]=p*_+m*S+y*P,a[8]=p*g+m*E+y*C,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],d=e[7],h=e[8];return t*s*h-t*o*d-i*a*h+i*o*l+r*a*d-r*s*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],d=e[7],h=e[8],f=h*s-o*d,p=o*l-h*a,m=d*a-s*l,y=t*f+i*p+r*m;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/y;return e[0]=f*b,e[1]=(r*d-h*i)*b,e[2]=(o*i-r*s)*b,e[3]=p*b,e[4]=(h*t-r*l)*b,e[5]=(r*a-o*t)*b,e[6]=m*b,e[7]=(i*l-d*t)*b,e[8]=(s*t-i*a)*b,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,a,s,o){const l=Math.cos(a),d=Math.sin(a);return this.set(i*l,i*d,-i*(l*s+d*o)+s+e,-r*d,r*l,-r*(-d*s+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Pd.makeScale(e,t)),this}rotate(e){return this.premultiply(Pd.makeRotation(-e)),this}translate(e,t){return this.premultiply(Pd.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Pd=new Qt;function zb(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}const _R={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ho(n,e){return new _R[n](e)}function w4(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function jb(){const n=w4("canvas");return n.style.display="block",n}const Lg={};function gs(n){n in Lg||(Lg[n]=!0,console.warn(n))}const Cg=new Qt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Ag=new Qt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ic={[B2]:{transfer:g4,primaries:v4,toReference:n=>n,fromReference:n=>n},[un]:{transfer:M1,primaries:v4,toReference:n=>n.convertSRGBToLinear(),fromReference:n=>n.convertLinearToSRGB()},[j4]:{transfer:g4,primaries:y4,toReference:n=>n.applyMatrix3(Ag),fromReference:n=>n.applyMatrix3(Cg)},[Pu]:{transfer:M1,primaries:y4,toReference:n=>n.convertSRGBToLinear().applyMatrix3(Ag),fromReference:n=>n.applyMatrix3(Cg).convertLinearToSRGB()}},xR=new Set([B2,j4]),d1={enabled:!0,_workingColorSpace:B2,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(n){if(!xR.has(n))throw new Error(`Unsupported working color space, "${n}".`);this._workingColorSpace=n},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const i=ic[e].toReference,r=ic[t].fromReference;return r(i(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this._workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this._workingColorSpace)},getPrimaries:function(n){return ic[n].primaries},getTransfer:function(n){return n===xi?g4:ic[n].transfer}};function t3(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Td(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let Qs;class D9{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Qs===void 0&&(Qs=w4("canvas")),Qs.width=e.width,Qs.height=e.height;const i=Qs.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Qs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=w4("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),a=r.data;for(let s=0;s<a.length;s++)a[s]=t3(a[s]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(t3(t[i]/255)*255):t[i]=t3(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let wR=0;class cs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:wR++}),this.uuid=Mi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let a;if(Array.isArray(r)){a=[];for(let s=0,o=r.length;s<o;s++)r[s].isDataTexture?a.push(Ld(r[s].image)):a.push(Ld(r[s]))}else a=Ld(r);i.url=a}return t||(e.images[this.uuid]=i),i}}function Ld(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?D9.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let bR=0;class B1 extends z2{constructor(e=B1.DEFAULT_IMAGE,t=B1.DEFAULT_MAPPING,i=On,r=On,a=N1,s=L2,o=Yn,l=N2,d=B1.DEFAULT_ANISOTROPY,h=xi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:bR++}),this.uuid=Mi(),this.name="",this.source=new cs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=a,this.minFilter=s,this.anisotropy=d,this.format=o,this.internalFormat=null,this.type=l,this.offset=new Le(0,0),this.repeat=new Le(1,1),this.center=new Le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Qt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof h=="string"?this.colorSpace=h:(gs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=h===ca?un:xi),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Su)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case d4:e.x=e.x-Math.floor(e.x);break;case On:e.x=e.x<0?0:1;break;case h4:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case d4:e.y=e.y-Math.floor(e.y);break;case On:e.y=e.y<0?0:1;break;case h4:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return gs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===un?ca:k9}set encoding(e){gs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===ca?un:xi}}B1.DEFAULT_IMAGE=null;B1.DEFAULT_MAPPING=Su;B1.DEFAULT_ANISOTROPY=1;class h1{constructor(e=0,t=0,i=0,r=1){h1.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,a=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r+s[12]*a,this.y=s[1]*t+s[5]*i+s[9]*r+s[13]*a,this.z=s[2]*t+s[6]*i+s[10]*r+s[14]*a,this.w=s[3]*t+s[7]*i+s[11]*r+s[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,a;const l=e.elements,d=l[0],h=l[4],f=l[8],p=l[1],m=l[5],y=l[9],b=l[2],_=l[6],g=l[10];if(Math.abs(h-p)<.01&&Math.abs(f-b)<.01&&Math.abs(y-_)<.01){if(Math.abs(h+p)<.1&&Math.abs(f+b)<.1&&Math.abs(y+_)<.1&&Math.abs(d+m+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(d+1)/2,E=(m+1)/2,A=(g+1)/2,P=(h+p)/4,C=(f+b)/4,N=(y+_)/4;return S>E&&S>A?S<.01?(i=0,r=.707106781,a=.707106781):(i=Math.sqrt(S),r=P/i,a=C/i):E>A?E<.01?(i=.707106781,r=0,a=.707106781):(r=Math.sqrt(E),i=P/r,a=N/r):A<.01?(i=.707106781,r=.707106781,a=0):(a=Math.sqrt(A),i=C/a,r=N/a),this.set(i,r,a,t),this}let x=Math.sqrt((_-y)*(_-y)+(f-b)*(f-b)+(p-h)*(p-h));return Math.abs(x)<.001&&(x=1),this.x=(_-y)/x,this.y=(f-b)/x,this.z=(p-h)/x,this.w=Math.acos((d+m+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Hb extends z2{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new h1(0,0,e,t),this.scissorTest=!1,this.viewport=new h1(0,0,e,t);const r={width:e,height:t,depth:1};i.encoding!==void 0&&(gs("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===ca?un:xi),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:N1,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},i),this.texture=new B1(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps,this.texture.internalFormat=i.internalFormat,this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new cs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class h2 extends Hb{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class Tu extends B1{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=J1,this.minFilter=J1,this.wrapR=On,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class SR extends h2{constructor(e=1,t=1,i=1,r={}){super(e,t,r),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new Tu(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class O9 extends B1{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=J1,this.minFilter=J1,this.wrapR=On,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class MR extends h2{constructor(e=1,t=1,i=1,r={}){super(e,t,r),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new O9(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class ER extends h2{constructor(e=1,t=1,i=1,r={}){super(e,t,r),this.isWebGLMultipleRenderTargets=!0;const a=this.texture;this.texture=[];for(let s=0;s<i;s++)this.texture[s]=a.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,a=this.texture.length;r<a;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Bn{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,a,s,o){let l=i[r+0],d=i[r+1],h=i[r+2],f=i[r+3];const p=a[s+0],m=a[s+1],y=a[s+2],b=a[s+3];if(o===0){e[t+0]=l,e[t+1]=d,e[t+2]=h,e[t+3]=f;return}if(o===1){e[t+0]=p,e[t+1]=m,e[t+2]=y,e[t+3]=b;return}if(f!==b||l!==p||d!==m||h!==y){let _=1-o;const g=l*p+d*m+h*y+f*b,x=g>=0?1:-1,S=1-g*g;if(S>Number.EPSILON){const A=Math.sqrt(S),P=Math.atan2(A,g*x);_=Math.sin(_*P)/A,o=Math.sin(o*P)/A}const E=o*x;if(l=l*_+p*E,d=d*_+m*E,h=h*_+y*E,f=f*_+b*E,_===1-o){const A=1/Math.sqrt(l*l+d*d+h*h+f*f);l*=A,d*=A,h*=A,f*=A}}e[t]=l,e[t+1]=d,e[t+2]=h,e[t+3]=f}static multiplyQuaternionsFlat(e,t,i,r,a,s){const o=i[r],l=i[r+1],d=i[r+2],h=i[r+3],f=a[s],p=a[s+1],m=a[s+2],y=a[s+3];return e[t]=o*y+h*f+l*m-d*p,e[t+1]=l*y+h*p+d*f-o*m,e[t+2]=d*y+h*m+o*p-l*f,e[t+3]=h*y-o*f-l*p-d*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,r=e._y,a=e._z,s=e._order,o=Math.cos,l=Math.sin,d=o(i/2),h=o(r/2),f=o(a/2),p=l(i/2),m=l(r/2),y=l(a/2);switch(s){case"XYZ":this._x=p*h*f+d*m*y,this._y=d*m*f-p*h*y,this._z=d*h*y+p*m*f,this._w=d*h*f-p*m*y;break;case"YXZ":this._x=p*h*f+d*m*y,this._y=d*m*f-p*h*y,this._z=d*h*y-p*m*f,this._w=d*h*f+p*m*y;break;case"ZXY":this._x=p*h*f-d*m*y,this._y=d*m*f+p*h*y,this._z=d*h*y+p*m*f,this._w=d*h*f-p*m*y;break;case"ZYX":this._x=p*h*f-d*m*y,this._y=d*m*f+p*h*y,this._z=d*h*y-p*m*f,this._w=d*h*f+p*m*y;break;case"YZX":this._x=p*h*f+d*m*y,this._y=d*m*f+p*h*y,this._z=d*h*y-p*m*f,this._w=d*h*f-p*m*y;break;case"XZY":this._x=p*h*f-d*m*y,this._y=d*m*f-p*h*y,this._z=d*h*y+p*m*f,this._w=d*h*f+p*m*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],a=t[8],s=t[1],o=t[5],l=t[9],d=t[2],h=t[6],f=t[10],p=i+o+f;if(p>0){const m=.5/Math.sqrt(p+1);this._w=.25/m,this._x=(h-l)*m,this._y=(a-d)*m,this._z=(s-r)*m}else if(i>o&&i>f){const m=2*Math.sqrt(1+i-o-f);this._w=(h-l)/m,this._x=.25*m,this._y=(r+s)/m,this._z=(a+d)/m}else if(o>f){const m=2*Math.sqrt(1+o-i-f);this._w=(a-d)/m,this._x=(r+s)/m,this._y=.25*m,this._z=(l+h)/m}else{const m=2*Math.sqrt(1+f-i-o);this._w=(s-r)/m,this._x=(a+d)/m,this._y=(l+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(X1(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,a=e._z,s=e._w,o=t._x,l=t._y,d=t._z,h=t._w;return this._x=i*h+s*o+r*d-a*l,this._y=r*h+s*l+a*o-i*d,this._z=a*h+s*d+i*l-r*o,this._w=s*h-i*o-r*l-a*d,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,a=this._z,s=this._w;let o=s*e._w+i*e._x+r*e._y+a*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=i,this._y=r,this._z=a,this;const l=1-o*o;if(l<=Number.EPSILON){const m=1-t;return this._w=m*s+t*this._w,this._x=m*i+t*this._x,this._y=m*r+t*this._y,this._z=m*a+t*this._z,this.normalize(),this}const d=Math.sqrt(l),h=Math.atan2(d,o),f=Math.sin((1-t)*h)/d,p=Math.sin(t*h)/d;return this._w=s*f+this._w*p,this._x=i*f+this._x*p,this._y=r*f+this._y*p,this._z=a*f+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(a),i*Math.cos(a),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class j{constructor(e=0,t=0,i=0){j.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Rg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Rg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*t+a[3]*i+a[6]*r,this.y=a[1]*t+a[4]*i+a[7]*r,this.z=a[2]*t+a[5]*i+a[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,a=e.elements,s=1/(a[3]*t+a[7]*i+a[11]*r+a[15]);return this.x=(a[0]*t+a[4]*i+a[8]*r+a[12])*s,this.y=(a[1]*t+a[5]*i+a[9]*r+a[13])*s,this.z=(a[2]*t+a[6]*i+a[10]*r+a[14])*s,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,a=e.x,s=e.y,o=e.z,l=e.w,d=2*(s*r-o*i),h=2*(o*t-a*r),f=2*(a*i-s*t);return this.x=t+l*d+s*f-o*h,this.y=i+l*h+o*d-a*f,this.z=r+l*f+a*h-s*d,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r,this.y=a[1]*t+a[5]*i+a[9]*r,this.z=a[2]*t+a[6]*i+a[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,a=e.z,s=t.x,o=t.y,l=t.z;return this.x=r*l-a*o,this.y=a*s-i*l,this.z=i*o-r*s,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Cd.copy(this).projectOnVector(e),this.sub(Cd)}reflect(e){return this.sub(Cd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(X1(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Cd=new j,Rg=new Bn;class Zn{constructor(e=new j(1/0,1/0,1/0),t=new j(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(e2.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(e2.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=e2.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const a=i.getAttribute("position");if(t===!0&&a!==void 0&&e.isInstancedMesh!==!0)for(let s=0,o=a.count;s<o;s++)e.isMesh===!0?e.getVertexPosition(s,e2):e2.fromBufferAttribute(a,s),e2.applyMatrix4(e.matrixWorld),this.expandByPoint(e2);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),rc.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),rc.copy(i.boundingBox)),rc.applyMatrix4(e.matrixWorld),this.union(rc)}const r=e.children;for(let a=0,s=r.length;a<s;a++)this.expandByObject(r[a],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,e2),e2.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(il),ac.subVectors(this.max,il),eo.subVectors(e.a,il),to.subVectors(e.b,il),no.subVectors(e.c,il),Dr.subVectors(to,eo),Or.subVectors(no,to),Ua.subVectors(eo,no);let t=[0,-Dr.z,Dr.y,0,-Or.z,Or.y,0,-Ua.z,Ua.y,Dr.z,0,-Dr.x,Or.z,0,-Or.x,Ua.z,0,-Ua.x,-Dr.y,Dr.x,0,-Or.y,Or.x,0,-Ua.y,Ua.x,0];return!Ad(t,eo,to,no,ac)||(t=[1,0,0,0,1,0,0,0,1],!Ad(t,eo,to,no,ac))?!1:(sc.crossVectors(Dr,Or),t=[sc.x,sc.y,sc.z],Ad(t,eo,to,no,ac))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,e2).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(e2).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(K2[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),K2[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),K2[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),K2[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),K2[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),K2[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),K2[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),K2[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(K2),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const K2=[new j,new j,new j,new j,new j,new j,new j,new j],e2=new j,rc=new Zn,eo=new j,to=new j,no=new j,Dr=new j,Or=new j,Ua=new j,il=new j,ac=new j,sc=new j,Fa=new j;function Ad(n,e,t,i,r){for(let a=0,s=n.length-3;a<=s;a+=3){Fa.fromArray(n,a);const o=r.x*Math.abs(Fa.x)+r.y*Math.abs(Fa.y)+r.z*Math.abs(Fa.z),l=e.dot(Fa),d=t.dot(Fa),h=i.dot(Fa);if(Math.max(-Math.max(l,d,h),Math.min(l,d,h))>o)return!1}return!0}const PR=new Zn,rl=new j,Rd=new j;class Un{constructor(e=new j,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):PR.setFromPoints(e).getCenter(i);let r=0;for(let a=0,s=e.length;a<s;a++)r=Math.max(r,i.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;rl.subVectors(e,this.center);const t=rl.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(rl,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Rd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(rl.copy(e.center).add(Rd)),this.expandByPoint(rl.copy(e.center).sub(Rd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Z2=new j,kd=new j,oc=new j,Br=new j,Id=new j,lc=new j,Nd=new j;class Ns{constructor(e=new j,t=new j(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Z2)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Z2.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Z2.copy(this.origin).addScaledVector(this.direction,t),Z2.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){kd.copy(e).add(t).multiplyScalar(.5),oc.copy(t).sub(e).normalize(),Br.copy(this.origin).sub(kd);const a=e.distanceTo(t)*.5,s=-this.direction.dot(oc),o=Br.dot(this.direction),l=-Br.dot(oc),d=Br.lengthSq(),h=Math.abs(1-s*s);let f,p,m,y;if(h>0)if(f=s*l-o,p=s*o-l,y=a*h,f>=0)if(p>=-y)if(p<=y){const b=1/h;f*=b,p*=b,m=f*(f+s*p+2*o)+p*(s*f+p+2*l)+d}else p=a,f=Math.max(0,-(s*p+o)),m=-f*f+p*(p+2*l)+d;else p=-a,f=Math.max(0,-(s*p+o)),m=-f*f+p*(p+2*l)+d;else p<=-y?(f=Math.max(0,-(-s*a+o)),p=f>0?-a:Math.min(Math.max(-a,-l),a),m=-f*f+p*(p+2*l)+d):p<=y?(f=0,p=Math.min(Math.max(-a,-l),a),m=p*(p+2*l)+d):(f=Math.max(0,-(s*a+o)),p=f>0?a:Math.min(Math.max(-a,-l),a),m=-f*f+p*(p+2*l)+d);else p=s>0?-a:a,f=Math.max(0,-(s*p+o)),m=-f*f+p*(p+2*l)+d;return i&&i.copy(this.origin).addScaledVector(this.direction,f),r&&r.copy(kd).addScaledVector(oc,p),m}intersectSphere(e,t){Z2.subVectors(e.center,this.origin);const i=Z2.dot(this.direction),r=Z2.dot(Z2)-i*i,a=e.radius*e.radius;if(r>a)return null;const s=Math.sqrt(a-r),o=i-s,l=i+s;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,a,s,o,l;const d=1/this.direction.x,h=1/this.direction.y,f=1/this.direction.z,p=this.origin;return d>=0?(i=(e.min.x-p.x)*d,r=(e.max.x-p.x)*d):(i=(e.max.x-p.x)*d,r=(e.min.x-p.x)*d),h>=0?(a=(e.min.y-p.y)*h,s=(e.max.y-p.y)*h):(a=(e.max.y-p.y)*h,s=(e.min.y-p.y)*h),i>s||a>r||((a>i||isNaN(i))&&(i=a),(s<r||isNaN(r))&&(r=s),f>=0?(o=(e.min.z-p.z)*f,l=(e.max.z-p.z)*f):(o=(e.max.z-p.z)*f,l=(e.min.z-p.z)*f),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Z2)!==null}intersectTriangle(e,t,i,r,a){Id.subVectors(t,e),lc.subVectors(i,e),Nd.crossVectors(Id,lc);let s=this.direction.dot(Nd),o;if(s>0){if(r)return null;o=1}else if(s<0)o=-1,s=-s;else return null;Br.subVectors(this.origin,e);const l=o*this.direction.dot(lc.crossVectors(Br,lc));if(l<0)return null;const d=o*this.direction.dot(Id.cross(Br));if(d<0||l+d>s)return null;const h=-o*Br.dot(Nd);return h<0?null:this.at(h/s,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ht{constructor(e,t,i,r,a,s,o,l,d,h,f,p,m,y,b,_){Ht.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,a,s,o,l,d,h,f,p,m,y,b,_)}set(e,t,i,r,a,s,o,l,d,h,f,p,m,y,b,_){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=a,g[5]=s,g[9]=o,g[13]=l,g[2]=d,g[6]=h,g[10]=f,g[14]=p,g[3]=m,g[7]=y,g[11]=b,g[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ht().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/io.setFromMatrixColumn(e,0).length(),a=1/io.setFromMatrixColumn(e,1).length(),s=1/io.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*a,t[5]=i[5]*a,t[6]=i[6]*a,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,a=e.z,s=Math.cos(i),o=Math.sin(i),l=Math.cos(r),d=Math.sin(r),h=Math.cos(a),f=Math.sin(a);if(e.order==="XYZ"){const p=s*h,m=s*f,y=o*h,b=o*f;t[0]=l*h,t[4]=-l*f,t[8]=d,t[1]=m+y*d,t[5]=p-b*d,t[9]=-o*l,t[2]=b-p*d,t[6]=y+m*d,t[10]=s*l}else if(e.order==="YXZ"){const p=l*h,m=l*f,y=d*h,b=d*f;t[0]=p+b*o,t[4]=y*o-m,t[8]=s*d,t[1]=s*f,t[5]=s*h,t[9]=-o,t[2]=m*o-y,t[6]=b+p*o,t[10]=s*l}else if(e.order==="ZXY"){const p=l*h,m=l*f,y=d*h,b=d*f;t[0]=p-b*o,t[4]=-s*f,t[8]=y+m*o,t[1]=m+y*o,t[5]=s*h,t[9]=b-p*o,t[2]=-s*d,t[6]=o,t[10]=s*l}else if(e.order==="ZYX"){const p=s*h,m=s*f,y=o*h,b=o*f;t[0]=l*h,t[4]=y*d-m,t[8]=p*d+b,t[1]=l*f,t[5]=b*d+p,t[9]=m*d-y,t[2]=-d,t[6]=o*l,t[10]=s*l}else if(e.order==="YZX"){const p=s*l,m=s*d,y=o*l,b=o*d;t[0]=l*h,t[4]=b-p*f,t[8]=y*f+m,t[1]=f,t[5]=s*h,t[9]=-o*h,t[2]=-d*h,t[6]=m*f+y,t[10]=p-b*f}else if(e.order==="XZY"){const p=s*l,m=s*d,y=o*l,b=o*d;t[0]=l*h,t[4]=-f,t[8]=d*h,t[1]=p*f+b,t[5]=s*h,t[9]=m*f-y,t[2]=y*f-m,t[6]=o*h,t[10]=b*f+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(TR,e,LR)}lookAt(e,t,i){const r=this.elements;return vi.subVectors(e,t),vi.lengthSq()===0&&(vi.z=1),vi.normalize(),Ur.crossVectors(i,vi),Ur.lengthSq()===0&&(Math.abs(i.z)===1?vi.x+=1e-4:vi.z+=1e-4,vi.normalize(),Ur.crossVectors(i,vi)),Ur.normalize(),cc.crossVectors(vi,Ur),r[0]=Ur.x,r[4]=cc.x,r[8]=vi.x,r[1]=Ur.y,r[5]=cc.y,r[9]=vi.y,r[2]=Ur.z,r[6]=cc.z,r[10]=vi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,a=this.elements,s=i[0],o=i[4],l=i[8],d=i[12],h=i[1],f=i[5],p=i[9],m=i[13],y=i[2],b=i[6],_=i[10],g=i[14],x=i[3],S=i[7],E=i[11],A=i[15],P=r[0],C=r[4],N=r[8],Y=r[12],T=r[1],R=r[5],ee=r[9],he=r[13],q=r[2],ue=r[6],se=r[10],ve=r[14],z=r[3],K=r[7],Z=r[11],re=r[15];return a[0]=s*P+o*T+l*q+d*z,a[4]=s*C+o*R+l*ue+d*K,a[8]=s*N+o*ee+l*se+d*Z,a[12]=s*Y+o*he+l*ve+d*re,a[1]=h*P+f*T+p*q+m*z,a[5]=h*C+f*R+p*ue+m*K,a[9]=h*N+f*ee+p*se+m*Z,a[13]=h*Y+f*he+p*ve+m*re,a[2]=y*P+b*T+_*q+g*z,a[6]=y*C+b*R+_*ue+g*K,a[10]=y*N+b*ee+_*se+g*Z,a[14]=y*Y+b*he+_*ve+g*re,a[3]=x*P+S*T+E*q+A*z,a[7]=x*C+S*R+E*ue+A*K,a[11]=x*N+S*ee+E*se+A*Z,a[15]=x*Y+S*he+E*ve+A*re,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],a=e[12],s=e[1],o=e[5],l=e[9],d=e[13],h=e[2],f=e[6],p=e[10],m=e[14],y=e[3],b=e[7],_=e[11],g=e[15];return y*(+a*l*f-r*d*f-a*o*p+i*d*p+r*o*m-i*l*m)+b*(+t*l*m-t*d*p+a*s*p-r*s*m+r*d*h-a*l*h)+_*(+t*d*f-t*o*m-a*s*f+i*s*m+a*o*h-i*d*h)+g*(-r*o*h-t*l*f+t*o*p+r*s*f-i*s*p+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],d=e[7],h=e[8],f=e[9],p=e[10],m=e[11],y=e[12],b=e[13],_=e[14],g=e[15],x=f*_*d-b*p*d+b*l*m-o*_*m-f*l*g+o*p*g,S=y*p*d-h*_*d-y*l*m+s*_*m+h*l*g-s*p*g,E=h*b*d-y*f*d+y*o*m-s*b*m-h*o*g+s*f*g,A=y*f*l-h*b*l-y*o*p+s*b*p+h*o*_-s*f*_,P=t*x+i*S+r*E+a*A;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/P;return e[0]=x*C,e[1]=(b*p*a-f*_*a-b*r*m+i*_*m+f*r*g-i*p*g)*C,e[2]=(o*_*a-b*l*a+b*r*d-i*_*d-o*r*g+i*l*g)*C,e[3]=(f*l*a-o*p*a-f*r*d+i*p*d+o*r*m-i*l*m)*C,e[4]=S*C,e[5]=(h*_*a-y*p*a+y*r*m-t*_*m-h*r*g+t*p*g)*C,e[6]=(y*l*a-s*_*a-y*r*d+t*_*d+s*r*g-t*l*g)*C,e[7]=(s*p*a-h*l*a+h*r*d-t*p*d-s*r*m+t*l*m)*C,e[8]=E*C,e[9]=(y*f*a-h*b*a-y*i*m+t*b*m+h*i*g-t*f*g)*C,e[10]=(s*b*a-y*o*a+y*i*d-t*b*d-s*i*g+t*o*g)*C,e[11]=(h*o*a-s*f*a-h*i*d+t*f*d+s*i*m-t*o*m)*C,e[12]=A*C,e[13]=(h*b*r-y*f*r+y*i*p-t*b*p-h*i*_+t*f*_)*C,e[14]=(y*o*r-s*b*r-y*i*l+t*b*l+s*i*_-t*o*_)*C,e[15]=(s*f*r-h*o*r+h*i*l-t*f*l-s*i*p+t*o*p)*C,this}scale(e){const t=this.elements,i=e.x,r=e.y,a=e.z;return t[0]*=i,t[4]*=r,t[8]*=a,t[1]*=i,t[5]*=r,t[9]*=a,t[2]*=i,t[6]*=r,t[10]*=a,t[3]*=i,t[7]*=r,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),a=1-i,s=e.x,o=e.y,l=e.z,d=a*s,h=a*o;return this.set(d*s+i,d*o-r*l,d*l+r*o,0,d*o+r*l,h*o+i,h*l-r*s,0,d*l-r*o,h*l+r*s,a*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,a,s){return this.set(1,i,a,0,e,1,s,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,a=t._x,s=t._y,o=t._z,l=t._w,d=a+a,h=s+s,f=o+o,p=a*d,m=a*h,y=a*f,b=s*h,_=s*f,g=o*f,x=l*d,S=l*h,E=l*f,A=i.x,P=i.y,C=i.z;return r[0]=(1-(b+g))*A,r[1]=(m+E)*A,r[2]=(y-S)*A,r[3]=0,r[4]=(m-E)*P,r[5]=(1-(p+g))*P,r[6]=(_+x)*P,r[7]=0,r[8]=(y+S)*C,r[9]=(_-x)*C,r[10]=(1-(p+b))*C,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let a=io.set(r[0],r[1],r[2]).length();const s=io.set(r[4],r[5],r[6]).length(),o=io.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),e.x=r[12],e.y=r[13],e.z=r[14],t2.copy(this);const d=1/a,h=1/s,f=1/o;return t2.elements[0]*=d,t2.elements[1]*=d,t2.elements[2]*=d,t2.elements[4]*=h,t2.elements[5]*=h,t2.elements[6]*=h,t2.elements[8]*=f,t2.elements[9]*=f,t2.elements[10]*=f,t.setFromRotationMatrix(t2),i.x=a,i.y=s,i.z=o,this}makePerspective(e,t,i,r,a,s,o=C2){const l=this.elements,d=2*a/(t-e),h=2*a/(i-r),f=(t+e)/(t-e),p=(i+r)/(i-r);let m,y;if(o===C2)m=-(s+a)/(s-a),y=-2*s*a/(s-a);else if(o===x4)m=-s/(s-a),y=-s*a/(s-a);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=d,l[4]=0,l[8]=f,l[12]=0,l[1]=0,l[5]=h,l[9]=p,l[13]=0,l[2]=0,l[6]=0,l[10]=m,l[14]=y,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,r,a,s,o=C2){const l=this.elements,d=1/(t-e),h=1/(i-r),f=1/(s-a),p=(t+e)*d,m=(i+r)*h;let y,b;if(o===C2)y=(s+a)*f,b=-2*f;else if(o===x4)y=a*f,b=-1*f;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*d,l[4]=0,l[8]=0,l[12]=-p,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-m,l[2]=0,l[6]=0,l[10]=b,l[14]=-y,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const io=new j,t2=new Ht,TR=new j(0,0,0),LR=new j(1,1,1),Ur=new j,cc=new j,vi=new j,kg=new Ht,Ig=new Bn;class H4{constructor(e=0,t=0,i=0,r=H4.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,a=r[0],s=r[4],o=r[8],l=r[1],d=r[5],h=r[9],f=r[2],p=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(X1(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(p,d),this._z=0);break;case"YXZ":this._x=Math.asin(-X1(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,m),this._z=Math.atan2(l,d)):(this._y=Math.atan2(-f,a),this._z=0);break;case"ZXY":this._x=Math.asin(X1(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-f,m),this._z=Math.atan2(-s,d)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-X1(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(p,m),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,d));break;case"YZX":this._z=Math.asin(X1(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,d),this._y=Math.atan2(-f,a)):(this._x=0,this._y=Math.atan2(o,m));break;case"XZY":this._z=Math.asin(-X1(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(p,d),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return kg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(kg,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Ig.setFromEuler(this),this.setFromQuaternion(Ig,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}H4.DEFAULT_ORDER="XYZ";class vs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let CR=0;const Ng=new j,ro=new Bn,J2=new Ht,uc=new j,al=new j,AR=new j,RR=new Bn,Dg=new j(1,0,0),Og=new j(0,1,0),Bg=new j(0,0,1),kR={type:"added"},IR={type:"removed"};class c1 extends z2{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:CR++}),this.uuid=Mi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=c1.DEFAULT_UP.clone();const e=new j,t=new H4,i=new Bn,r=new j(1,1,1);function a(){i.setFromEuler(t,!1)}function s(){t.setFromQuaternion(i,void 0,!1)}t._onChange(a),i._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Ht},normalMatrix:{value:new Qt}}),this.matrix=new Ht,this.matrixWorld=new Ht,this.matrixAutoUpdate=c1.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=c1.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new vs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ro.setFromAxisAngle(e,t),this.quaternion.multiply(ro),this}rotateOnWorldAxis(e,t){return ro.setFromAxisAngle(e,t),this.quaternion.premultiply(ro),this}rotateX(e){return this.rotateOnAxis(Dg,e)}rotateY(e){return this.rotateOnAxis(Og,e)}rotateZ(e){return this.rotateOnAxis(Bg,e)}translateOnAxis(e,t){return Ng.copy(e).applyQuaternion(this.quaternion),this.position.add(Ng.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Dg,e)}translateY(e){return this.translateOnAxis(Og,e)}translateZ(e){return this.translateOnAxis(Bg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(J2.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?uc.copy(e):uc.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),al.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?J2.lookAt(al,uc,this.up):J2.lookAt(uc,al,this.up),this.quaternion.setFromRotationMatrix(J2),r&&(J2.extractRotation(r.matrixWorld),ro.setFromRotationMatrix(J2),this.quaternion.premultiply(ro.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(kR)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(IR)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),J2.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),J2.multiply(e.parent.matrixWorld)),e.applyMatrix4(J2),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const s=this.children[i].getObjectByProperty(e,t);if(s!==void 0)return s}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const r=this.children;for(let a=0,s=r.length;a<s;a++)r[a].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(al,e,AR),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(al,RR,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++){const a=t[i];(a.matrixWorldAutoUpdate===!0||e===!0)&&a.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let a=0,s=r.length;a<s;a++){const o=r[a];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function a(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=a(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let d=0,h=l.length;d<h;d++){const f=l[d];a(e.shapes,f)}else a(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,d=this.material.length;l<d;l++)o.push(a(e.materials,this.material[l]));r.material=o}else r.material=a(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(a(e.animations,l))}}if(t){const o=s(e.geometries),l=s(e.materials),d=s(e.textures),h=s(e.images),f=s(e.shapes),p=s(e.skeletons),m=s(e.animations),y=s(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),d.length>0&&(i.textures=d),h.length>0&&(i.images=h),f.length>0&&(i.shapes=f),p.length>0&&(i.skeletons=p),m.length>0&&(i.animations=m),y.length>0&&(i.nodes=y)}return i.object=r,i;function s(o){const l=[];for(const d in o){const h=o[d];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}c1.DEFAULT_UP=new j(0,1,0);c1.DEFAULT_MATRIX_AUTO_UPDATE=!0;c1.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const n2=new j,Q2=new j,Dd=new j,er=new j,ao=new j,so=new j,Ug=new j,Od=new j,Bd=new j,Ud=new j;class wi{constructor(e=new j,t=new j,i=new j){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),n2.subVectors(e,t),r.cross(n2);const a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}static getBarycoord(e,t,i,r,a){n2.subVectors(r,t),Q2.subVectors(i,t),Dd.subVectors(e,t);const s=n2.dot(n2),o=n2.dot(Q2),l=n2.dot(Dd),d=Q2.dot(Q2),h=Q2.dot(Dd),f=s*d-o*o;if(f===0)return a.set(0,0,0),null;const p=1/f,m=(d*l-o*h)*p,y=(s*h-o*l)*p;return a.set(1-m-y,y,m)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,er)===null?!1:er.x>=0&&er.y>=0&&er.x+er.y<=1}static getInterpolation(e,t,i,r,a,s,o,l){return this.getBarycoord(e,t,i,r,er)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(a,er.x),l.addScaledVector(s,er.y),l.addScaledVector(o,er.z),l)}static isFrontFacing(e,t,i,r){return n2.subVectors(i,t),Q2.subVectors(e,t),n2.cross(Q2).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return n2.subVectors(this.c,this.b),Q2.subVectors(this.a,this.b),n2.cross(Q2).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return wi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return wi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,r,a){return wi.getInterpolation(e,this.a,this.b,this.c,t,i,r,a)}containsPoint(e){return wi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return wi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,a=this.c;let s,o;ao.subVectors(r,i),so.subVectors(a,i),Od.subVectors(e,i);const l=ao.dot(Od),d=so.dot(Od);if(l<=0&&d<=0)return t.copy(i);Bd.subVectors(e,r);const h=ao.dot(Bd),f=so.dot(Bd);if(h>=0&&f<=h)return t.copy(r);const p=l*f-h*d;if(p<=0&&l>=0&&h<=0)return s=l/(l-h),t.copy(i).addScaledVector(ao,s);Ud.subVectors(e,a);const m=ao.dot(Ud),y=so.dot(Ud);if(y>=0&&m<=y)return t.copy(a);const b=m*d-l*y;if(b<=0&&d>=0&&y<=0)return o=d/(d-y),t.copy(i).addScaledVector(so,o);const _=h*y-m*f;if(_<=0&&f-h>=0&&m-y>=0)return Ug.subVectors(a,r),o=(f-h)/(f-h+(m-y)),t.copy(r).addScaledVector(Ug,o);const g=1/(_+b+p);return s=b*g,o=p*g,t.copy(i).addScaledVector(ao,s).addScaledVector(so,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Vb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Fr={h:0,s:0,l:0},dc={h:0,s:0,l:0};function Fd(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}let gt=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=un){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,d1.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=d1.workingColorSpace){return this.r=e,this.g=t,this.b=i,d1.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=d1.workingColorSpace){if(e=N9(e,1),t=X1(t,0,1),i=X1(i,0,1),t===0)this.r=this.g=this.b=i;else{const a=i<=.5?i*(1+t):i+t-i*t,s=2*i-a;this.r=Fd(s,a,e+1/3),this.g=Fd(s,a,e),this.b=Fd(s,a,e-1/3)}return d1.toWorkingColorSpace(this,r),this}setStyle(e,t=un){function i(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let a;const s=r[1],o=r[2];switch(s){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,t);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,t);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=r[1],s=a.length;if(s===3)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,t);if(s===6)return this.setHex(parseInt(a,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=un){const i=Vb[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=t3(e.r),this.g=t3(e.g),this.b=t3(e.b),this}copyLinearToSRGB(e){return this.r=Td(e.r),this.g=Td(e.g),this.b=Td(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=un){return d1.fromWorkingColorSpace(In.copy(this),e),Math.round(X1(In.r*255,0,255))*65536+Math.round(X1(In.g*255,0,255))*256+Math.round(X1(In.b*255,0,255))}getHexString(e=un){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=d1.workingColorSpace){d1.fromWorkingColorSpace(In.copy(this),t);const i=In.r,r=In.g,a=In.b,s=Math.max(i,r,a),o=Math.min(i,r,a);let l,d;const h=(o+s)/2;if(o===s)l=0,d=0;else{const f=s-o;switch(d=h<=.5?f/(s+o):f/(2-s-o),s){case i:l=(r-a)/f+(r<a?6:0);break;case r:l=(a-i)/f+2;break;case a:l=(i-r)/f+4;break}l/=6}return e.h=l,e.s=d,e.l=h,e}getRGB(e,t=d1.workingColorSpace){return d1.fromWorkingColorSpace(In.copy(this),t),e.r=In.r,e.g=In.g,e.b=In.b,e}getStyle(e=un){d1.fromWorkingColorSpace(In.copy(this),e);const t=In.r,i=In.g,r=In.b;return e!==un?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(Fr),this.setHSL(Fr.h+e,Fr.s+t,Fr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Fr),e.getHSL(dc);const i=Ul(Fr.h,dc.h,t),r=Ul(Fr.s,dc.s,t),a=Ul(Fr.l,dc.l,t);return this.setHSL(i,r,a),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,a=e.elements;return this.r=a[0]*t+a[3]*i+a[6]*r,this.g=a[1]*t+a[4]*i+a[7]*r,this.b=a[2]*t+a[5]*i+a[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const In=new gt;gt.NAMES=Vb;let NR=0;class En extends z2{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:NR++}),this.uuid=Mi(),this.name="",this.type="Material",this.blending=ps,this.side=xr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=V5,this.blendDst=G5,this.blendEquation=Kr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new gt(0,0,0),this.blendAlpha=0,this.depthFunc=l4,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Kh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ja,this.stencilZFail=Ja,this.stencilZPass=Ja,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==ps&&(i.blending=this.blending),this.side!==xr&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==V5&&(i.blendSrc=this.blendSrc),this.blendDst!==G5&&(i.blendDst=this.blendDst),this.blendEquation!==Kr&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==l4&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Kh&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ja&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Ja&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Ja&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(a){const s=[];for(const o in a){const l=a[o];delete l.metadata,s.push(l)}return s}if(t){const a=r(e.textures),s=r(e.images);a.length>0&&(i.textures=a),s.length>0&&(i.images=s)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let a=0;a!==r;++a)i[a]=t[a].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class wa extends En{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new gt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=z4,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const sr=DR();function DR(){const n=new ArrayBuffer(4),e=new Float32Array(n),t=new Uint32Array(n),i=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const d=l-127;d<-27?(i[l]=0,i[l|256]=32768,r[l]=24,r[l|256]=24):d<-14?(i[l]=1024>>-d-14,i[l|256]=1024>>-d-14|32768,r[l]=-d-1,r[l|256]=-d-1):d<=15?(i[l]=d+15<<10,i[l|256]=d+15<<10|32768,r[l]=13,r[l|256]=13):d<128?(i[l]=31744,i[l|256]=64512,r[l]=24,r[l|256]=24):(i[l]=31744,i[l|256]=64512,r[l]=13,r[l|256]=13)}const a=new Uint32Array(2048),s=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let d=l<<13,h=0;for(;!(d&8388608);)d<<=1,h-=8388608;d&=-8388609,h+=947912704,a[l]=d|h}for(let l=1024;l<2048;++l)a[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)s[l]=l<<23;s[31]=1199570944,s[32]=2147483648;for(let l=33;l<63;++l)s[l]=2147483648+(l-32<<23);s[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:r,mantissaTable:a,exponentTable:s,offsetTable:o}}function si(n){Math.abs(n)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),n=X1(n,-65504,65504),sr.floatView[0]=n;const e=sr.uint32View[0],t=e>>23&511;return sr.baseTable[t]+((e&8388607)>>sr.shiftTable[t])}function El(n){const e=n>>10;return sr.uint32View[0]=sr.mantissaTable[sr.offsetTable[e]+(n&1023)]+sr.exponentTable[e],sr.floatView[0]}const OR={toHalfFloat:si,fromHalfFloat:El},nn=new j,hc=new Le;class p1{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=_4,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Vi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return gs("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,a=this.itemSize;r<a;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)hc.fromBufferAttribute(this,t),hc.applyMatrix3(e),this.setXY(t,hc.x,hc.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix3(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix4(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)nn.fromBufferAttribute(this,t),nn.applyNormalMatrix(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)nn.fromBufferAttribute(this,t),nn.transformDirection(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=qn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=$t(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array),r=$t(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,a){return e*=this.itemSize,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array),r=$t(r,this.array),a=$t(a,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==_4&&(e.usage=this.usage),e}}class BR extends p1{constructor(e,t,i){super(new Int8Array(e),t,i)}}class UR extends p1{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class FR extends p1{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class zR extends p1{constructor(e,t,i){super(new Int16Array(e),t,i)}}class B9 extends p1{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class jR extends p1{constructor(e,t,i){super(new Int32Array(e),t,i)}}class U9 extends p1{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class HR extends p1{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=El(this.array[e*this.itemSize]);return this.normalized&&(t=qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize]=si(t),this}getY(e){let t=El(this.array[e*this.itemSize+1]);return this.normalized&&(t=qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize+1]=si(t),this}getZ(e){let t=El(this.array[e*this.itemSize+2]);return this.normalized&&(t=qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize+2]=si(t),this}getW(e){let t=El(this.array[e*this.itemSize+3]);return this.normalized&&(t=qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=$t(t,this.array)),this.array[e*this.itemSize+3]=si(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array)),this.array[e+0]=si(t),this.array[e+1]=si(i),this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array),r=$t(r,this.array)),this.array[e+0]=si(t),this.array[e+1]=si(i),this.array[e+2]=si(r),this}setXYZW(e,t,i,r,a){return e*=this.itemSize,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array),r=$t(r,this.array),a=$t(a,this.array)),this.array[e+0]=si(t),this.array[e+1]=si(i),this.array[e+2]=si(r),this.array[e+3]=si(a),this}}class Et extends p1{constructor(e,t,i){super(new Float32Array(e),t,i)}}class VR extends p1{constructor(e,t,i){super(new Float64Array(e),t,i)}}let GR=0;const Ui=new Ht,zd=new c1,oo=new j,yi=new Zn,sl=new Zn,yn=new j;class Zt extends z2{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:GR++}),this.uuid=Mi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(zb(e)?U9:B9)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const a=new Qt().getNormalMatrix(e);i.applyNormalMatrix(a),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ui.makeRotationFromQuaternion(e),this.applyMatrix4(Ui),this}rotateX(e){return Ui.makeRotationX(e),this.applyMatrix4(Ui),this}rotateY(e){return Ui.makeRotationY(e),this.applyMatrix4(Ui),this}rotateZ(e){return Ui.makeRotationZ(e),this.applyMatrix4(Ui),this}translate(e,t,i){return Ui.makeTranslation(e,t,i),this.applyMatrix4(Ui),this}scale(e,t,i){return Ui.makeScale(e,t,i),this.applyMatrix4(Ui),this}lookAt(e){return zd.lookAt(e),zd.updateMatrix(),this.applyMatrix4(zd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(oo).negate(),this.translate(oo.x,oo.y,oo.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const a=e[i];t.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new Et(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Zn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new j(-1/0,-1/0,-1/0),new j(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const a=t[i];yi.setFromBufferAttribute(a),this.morphTargetsRelative?(yn.addVectors(this.boundingBox.min,yi.min),this.boundingBox.expandByPoint(yn),yn.addVectors(this.boundingBox.max,yi.max),this.boundingBox.expandByPoint(yn)):(this.boundingBox.expandByPoint(yi.min),this.boundingBox.expandByPoint(yi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Un);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new j,1/0);return}if(e){const i=this.boundingSphere.center;if(yi.setFromBufferAttribute(e),t)for(let a=0,s=t.length;a<s;a++){const o=t[a];sl.setFromBufferAttribute(o),this.morphTargetsRelative?(yn.addVectors(yi.min,sl.min),yi.expandByPoint(yn),yn.addVectors(yi.max,sl.max),yi.expandByPoint(yn)):(yi.expandByPoint(sl.min),yi.expandByPoint(sl.max))}yi.getCenter(i);let r=0;for(let a=0,s=e.count;a<s;a++)yn.fromBufferAttribute(e,a),r=Math.max(r,i.distanceToSquared(yn));if(t)for(let a=0,s=t.length;a<s;a++){const o=t[a],l=this.morphTargetsRelative;for(let d=0,h=o.count;d<h;d++)yn.fromBufferAttribute(o,d),l&&(oo.fromBufferAttribute(e,d),yn.add(oo)),r=Math.max(r,i.distanceToSquared(yn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,a=t.normal.array,s=t.uv.array,o=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new p1(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,d=[],h=[];for(let T=0;T<o;T++)d[T]=new j,h[T]=new j;const f=new j,p=new j,m=new j,y=new Le,b=new Le,_=new Le,g=new j,x=new j;function S(T,R,ee){f.fromArray(r,T*3),p.fromArray(r,R*3),m.fromArray(r,ee*3),y.fromArray(s,T*2),b.fromArray(s,R*2),_.fromArray(s,ee*2),p.sub(f),m.sub(f),b.sub(y),_.sub(y);const he=1/(b.x*_.y-_.x*b.y);isFinite(he)&&(g.copy(p).multiplyScalar(_.y).addScaledVector(m,-b.y).multiplyScalar(he),x.copy(m).multiplyScalar(b.x).addScaledVector(p,-_.x).multiplyScalar(he),d[T].add(g),d[R].add(g),d[ee].add(g),h[T].add(x),h[R].add(x),h[ee].add(x))}let E=this.groups;E.length===0&&(E=[{start:0,count:i.length}]);for(let T=0,R=E.length;T<R;++T){const ee=E[T],he=ee.start,q=ee.count;for(let ue=he,se=he+q;ue<se;ue+=3)S(i[ue+0],i[ue+1],i[ue+2])}const A=new j,P=new j,C=new j,N=new j;function Y(T){C.fromArray(a,T*3),N.copy(C);const R=d[T];A.copy(R),A.sub(C.multiplyScalar(C.dot(R))).normalize(),P.crossVectors(N,R);const he=P.dot(h[T])<0?-1:1;l[T*4]=A.x,l[T*4+1]=A.y,l[T*4+2]=A.z,l[T*4+3]=he}for(let T=0,R=E.length;T<R;++T){const ee=E[T],he=ee.start,q=ee.count;for(let ue=he,se=he+q;ue<se;ue+=3)Y(i[ue+0]),Y(i[ue+1]),Y(i[ue+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new p1(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let p=0,m=i.count;p<m;p++)i.setXYZ(p,0,0,0);const r=new j,a=new j,s=new j,o=new j,l=new j,d=new j,h=new j,f=new j;if(e)for(let p=0,m=e.count;p<m;p+=3){const y=e.getX(p+0),b=e.getX(p+1),_=e.getX(p+2);r.fromBufferAttribute(t,y),a.fromBufferAttribute(t,b),s.fromBufferAttribute(t,_),h.subVectors(s,a),f.subVectors(r,a),h.cross(f),o.fromBufferAttribute(i,y),l.fromBufferAttribute(i,b),d.fromBufferAttribute(i,_),o.add(h),l.add(h),d.add(h),i.setXYZ(y,o.x,o.y,o.z),i.setXYZ(b,l.x,l.y,l.z),i.setXYZ(_,d.x,d.y,d.z)}else for(let p=0,m=t.count;p<m;p+=3)r.fromBufferAttribute(t,p+0),a.fromBufferAttribute(t,p+1),s.fromBufferAttribute(t,p+2),h.subVectors(s,a),f.subVectors(r,a),h.cross(f),i.setXYZ(p+0,h.x,h.y,h.z),i.setXYZ(p+1,h.x,h.y,h.z),i.setXYZ(p+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)yn.fromBufferAttribute(e,t),yn.normalize(),e.setXYZ(t,yn.x,yn.y,yn.z)}toNonIndexed(){function e(o,l){const d=o.array,h=o.itemSize,f=o.normalized,p=new d.constructor(l.length*h);let m=0,y=0;for(let b=0,_=l.length;b<_;b++){o.isInterleavedBufferAttribute?m=l[b]*o.data.stride+o.offset:m=l[b]*h;for(let g=0;g<h;g++)p[y++]=d[m++]}return new p1(p,h,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Zt,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],d=e(l,i);t.setAttribute(o,d)}const a=this.morphAttributes;for(const o in a){const l=[],d=a[o];for(let h=0,f=d.length;h<f;h++){const p=d[h],m=e(p,i);l.push(m)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,l=s.length;o<l;o++){const d=s[o];t.addGroup(d.start,d.count,d.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const d in l)l[d]!==void 0&&(e[d]=l[d]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const d=i[l];e.data.attributes[l]=d.toJSON(e.data)}const r={};let a=!1;for(const l in this.morphAttributes){const d=this.morphAttributes[l],h=[];for(let f=0,p=d.length;f<p;f++){const m=d[f];h.push(m.toJSON(e.data))}h.length>0&&(r[l]=h,a=!0)}a&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const d in r){const h=r[d];this.setAttribute(d,h.clone(t))}const a=e.morphAttributes;for(const d in a){const h=[],f=a[d];for(let p=0,m=f.length;p<m;p++)h.push(f[p].clone(t));this.morphAttributes[d]=h}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let d=0,h=s.length;d<h;d++){const f=s[d];this.addGroup(f.start,f.count,f.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Fg=new Ht,za=new Ns,fc=new Un,zg=new j,lo=new j,co=new j,uo=new j,jd=new j,pc=new j,mc=new Le,gc=new Le,vc=new Le,jg=new j,Hg=new j,Vg=new j,yc=new j,_c=new j;class an extends c1{constructor(e=new Zt,t=new wa){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,a=i.morphAttributes.position,s=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const o=this.morphTargetInfluences;if(a&&o){pc.set(0,0,0);for(let l=0,d=a.length;l<d;l++){const h=o[l],f=a[l];h!==0&&(jd.fromBufferAttribute(f,e),s?pc.addScaledVector(jd,h):pc.addScaledVector(jd.sub(t),h))}t.add(pc)}return t}raycast(e,t){const i=this.geometry,r=this.material,a=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),fc.copy(i.boundingSphere),fc.applyMatrix4(a),za.copy(e.ray).recast(e.near),!(fc.containsPoint(za.origin)===!1&&(za.intersectSphere(fc,zg)===null||za.origin.distanceToSquared(zg)>(e.far-e.near)**2))&&(Fg.copy(a).invert(),za.copy(e.ray).applyMatrix4(Fg),!(i.boundingBox!==null&&za.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,za)))}_computeIntersections(e,t,i){let r;const a=this.geometry,s=this.material,o=a.index,l=a.attributes.position,d=a.attributes.uv,h=a.attributes.uv1,f=a.attributes.normal,p=a.groups,m=a.drawRange;if(o!==null)if(Array.isArray(s))for(let y=0,b=p.length;y<b;y++){const _=p[y],g=s[_.materialIndex],x=Math.max(_.start,m.start),S=Math.min(o.count,Math.min(_.start+_.count,m.start+m.count));for(let E=x,A=S;E<A;E+=3){const P=o.getX(E),C=o.getX(E+1),N=o.getX(E+2);r=xc(this,g,e,i,d,h,f,P,C,N),r&&(r.faceIndex=Math.floor(E/3),r.face.materialIndex=_.materialIndex,t.push(r))}}else{const y=Math.max(0,m.start),b=Math.min(o.count,m.start+m.count);for(let _=y,g=b;_<g;_+=3){const x=o.getX(_),S=o.getX(_+1),E=o.getX(_+2);r=xc(this,s,e,i,d,h,f,x,S,E),r&&(r.faceIndex=Math.floor(_/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(s))for(let y=0,b=p.length;y<b;y++){const _=p[y],g=s[_.materialIndex],x=Math.max(_.start,m.start),S=Math.min(l.count,Math.min(_.start+_.count,m.start+m.count));for(let E=x,A=S;E<A;E+=3){const P=E,C=E+1,N=E+2;r=xc(this,g,e,i,d,h,f,P,C,N),r&&(r.faceIndex=Math.floor(E/3),r.face.materialIndex=_.materialIndex,t.push(r))}}else{const y=Math.max(0,m.start),b=Math.min(l.count,m.start+m.count);for(let _=y,g=b;_<g;_+=3){const x=_,S=_+1,E=_+2;r=xc(this,s,e,i,d,h,f,x,S,E),r&&(r.faceIndex=Math.floor(_/3),t.push(r))}}}}function WR(n,e,t,i,r,a,s,o){let l;if(e.side===Kn?l=i.intersectTriangle(s,a,r,!0,o):l=i.intersectTriangle(r,a,s,e.side===xr,o),l===null)return null;_c.copy(o),_c.applyMatrix4(n.matrixWorld);const d=t.ray.origin.distanceTo(_c);return d<t.near||d>t.far?null:{distance:d,point:_c.clone(),object:n}}function xc(n,e,t,i,r,a,s,o,l,d){n.getVertexPosition(o,lo),n.getVertexPosition(l,co),n.getVertexPosition(d,uo);const h=WR(n,e,t,i,lo,co,uo,yc);if(h){r&&(mc.fromBufferAttribute(r,o),gc.fromBufferAttribute(r,l),vc.fromBufferAttribute(r,d),h.uv=wi.getInterpolation(yc,lo,co,uo,mc,gc,vc,new Le)),a&&(mc.fromBufferAttribute(a,o),gc.fromBufferAttribute(a,l),vc.fromBufferAttribute(a,d),h.uv1=wi.getInterpolation(yc,lo,co,uo,mc,gc,vc,new Le),h.uv2=h.uv1),s&&(jg.fromBufferAttribute(s,o),Hg.fromBufferAttribute(s,l),Vg.fromBufferAttribute(s,d),h.normal=wi.getInterpolation(yc,lo,co,uo,jg,Hg,Vg,new j),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const f={a:o,b:l,c:d,normal:new j,materialIndex:0};wi.getNormal(lo,co,uo,f.normal),h.face=f}return h}class Ds extends Zt{constructor(e=1,t=1,i=1,r=1,a=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:a,depthSegments:s};const o=this;r=Math.floor(r),a=Math.floor(a),s=Math.floor(s);const l=[],d=[],h=[],f=[];let p=0,m=0;y("z","y","x",-1,-1,i,t,e,s,a,0),y("z","y","x",1,-1,i,t,-e,s,a,1),y("x","z","y",1,1,e,i,t,r,s,2),y("x","z","y",1,-1,e,i,-t,r,s,3),y("x","y","z",1,-1,e,t,i,r,a,4),y("x","y","z",-1,-1,e,t,-i,r,a,5),this.setIndex(l),this.setAttribute("position",new Et(d,3)),this.setAttribute("normal",new Et(h,3)),this.setAttribute("uv",new Et(f,2));function y(b,_,g,x,S,E,A,P,C,N,Y){const T=E/C,R=A/N,ee=E/2,he=A/2,q=P/2,ue=C+1,se=N+1;let ve=0,z=0;const K=new j;for(let Z=0;Z<se;Z++){const re=Z*R-he;for(let _e=0;_e<ue;_e++){const je=_e*T-ee;K[b]=je*x,K[_]=re*S,K[g]=q,d.push(K.x,K.y,K.z),K[b]=0,K[_]=0,K[g]=P>0?1:-1,h.push(K.x,K.y,K.z),f.push(_e/C),f.push(1-Z/N),ve+=1}}for(let Z=0;Z<N;Z++)for(let re=0;re<C;re++){const _e=p+re+ue*Z,je=p+re+ue*(Z+1),ce=p+(re+1)+ue*(Z+1),Ee=p+(re+1)+ue*Z;l.push(_e,je,Ee),l.push(je,ce,Ee),z+=6}o.addGroup(m,z,Y),m+=z,p+=ve}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ds(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function f3(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Wn(n){const e={};for(let t=0;t<n.length;t++){const i=f3(n[t]);for(const r in i)e[r]=i[r]}return e}function XR(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function Gb(n){return n.getRenderTarget()===null?n.outputColorSpace:d1.workingColorSpace}const Wb={clone:f3,merge:Wn};var YR=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,qR=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class f2 extends En{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=YR,this.fragmentShader=qR,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=f3(e.uniforms),this.uniformsGroups=XR(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const s=this.uniforms[r].value;s&&s.isTexture?t.uniforms[r]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[r]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[r]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[r]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[r]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[r]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[r]={type:"m4",value:s.toArray()}:t.uniforms[r]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class V4 extends c1{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ht,this.projectionMatrix=new Ht,this.projectionMatrixInverse=new Ht,this.coordinateSystem=C2}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const zr=new j,Gg=new Le,Wg=new Le;class Y1 extends V4{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=h3*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ms*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return h3*2*Math.atan(Math.tan(ms*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){zr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(zr.x,zr.y).multiplyScalar(-e/zr.z),zr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(zr.x,zr.y).multiplyScalar(-e/zr.z)}getViewSize(e,t){return this.getViewBounds(e,Gg,Wg),t.subVectors(Wg,Gg)}setViewOffset(e,t,i,r,a,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ms*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,a=-.5*r;const s=this.view;if(this.view!==null&&this.view.enabled){const l=s.fullWidth,d=s.fullHeight;a+=s.offsetX*r/l,t-=s.offsetY*i/d,r*=s.width/l,i*=s.height/d}const o=this.filmOffset;o!==0&&(a+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ho=-90,fo=1;class Xb extends c1{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Y1(ho,fo,e,t);r.layers=this.layers,this.add(r);const a=new Y1(ho,fo,e,t);a.layers=this.layers,this.add(a);const s=new Y1(ho,fo,e,t);s.layers=this.layers,this.add(s);const o=new Y1(ho,fo,e,t);o.layers=this.layers,this.add(o);const l=new Y1(ho,fo,e,t);l.layers=this.layers,this.add(l);const d=new Y1(ho,fo,e,t);d.layers=this.layers,this.add(d)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,a,s,o,l]=t;for(const d of t)this.remove(d);if(e===C2)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===x4)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const d of t)this.add(d),d.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[a,s,o,l,d,h]=this.children,f=e.getRenderTarget(),p=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const b=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(t,a),e.setRenderTarget(i,1,r),e.render(t,s),e.setRenderTarget(i,2,r),e.render(t,o),e.setRenderTarget(i,3,r),e.render(t,l),e.setRenderTarget(i,4,r),e.render(t,d),i.texture.generateMipmaps=b,e.setRenderTarget(i,5,r),e.render(t,h),e.setRenderTarget(f,p,m),e.xr.enabled=y,i.texture.needsPMREMUpdate=!0}}class G4 extends B1{constructor(e,t,i,r,a,s,o,l,d,h){e=e!==void 0?e:[],t=t!==void 0?t:wr,super(e,t,i,r,a,s,o,l,d,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Yb extends h2{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];t.encoding!==void 0&&(gs("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===ca?un:xi),this.texture=new G4(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:N1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Ds(5,5,5),a=new f2({name:"CubemapFromEquirect",uniforms:f3(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Kn,blending:mr});a.uniforms.tEquirect.value=t;const s=new an(r,a),o=t.minFilter;return t.minFilter===L2&&(t.minFilter=N1),new Xb(1,10,this).update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,i,r){const a=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,i,r);e.setRenderTarget(a)}}const Hd=new j,$R=new j,KR=new Qt;class ar{constructor(e=new j(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Hd.subVectors(i,t).cross($R.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Hd),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/r;return a<0||a>1?null:t.copy(e.start).addScaledVector(i,a)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||KR.getNormalMatrix(e),r=this.coplanarPoint(Hd).applyMatrix4(e),a=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ja=new Un,wc=new j;class W4{constructor(e=new ar,t=new ar,i=new ar,r=new ar,a=new ar,s=new ar){this.planes=[e,t,i,r,a,s]}set(e,t,i,r,a,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(r),o[4].copy(a),o[5].copy(s),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=C2){const i=this.planes,r=e.elements,a=r[0],s=r[1],o=r[2],l=r[3],d=r[4],h=r[5],f=r[6],p=r[7],m=r[8],y=r[9],b=r[10],_=r[11],g=r[12],x=r[13],S=r[14],E=r[15];if(i[0].setComponents(l-a,p-d,_-m,E-g).normalize(),i[1].setComponents(l+a,p+d,_+m,E+g).normalize(),i[2].setComponents(l+s,p+h,_+y,E+x).normalize(),i[3].setComponents(l-s,p-h,_-y,E-x).normalize(),i[4].setComponents(l-o,p-f,_-b,E-S).normalize(),t===C2)i[5].setComponents(l+o,p+f,_+b,E+S).normalize();else if(t===x4)i[5].setComponents(o,f,b,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ja.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ja.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ja)}intersectsSprite(e){return ja.center.set(0,0,0),ja.radius=.7071067811865476,ja.applyMatrix4(e.matrixWorld),this.intersectsSphere(ja)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(wc.x=r.normal.x>0?e.max.x:e.min.x,wc.y=r.normal.y>0?e.max.y:e.min.y,wc.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(wc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function qb(){let n=null,e=!1,t=null,i=null;function r(a,s){t(a,s),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){n=a}}}function ZR(n,e){const t=e.isWebGL2,i=new WeakMap;function r(d,h){const f=d.array,p=d.usage,m=f.byteLength,y=n.createBuffer();n.bindBuffer(h,y),n.bufferData(h,f,p),d.onUploadCallback();let b;if(f instanceof Float32Array)b=n.FLOAT;else if(f instanceof Uint16Array)if(d.isFloat16BufferAttribute)if(t)b=n.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else b=n.UNSIGNED_SHORT;else if(f instanceof Int16Array)b=n.SHORT;else if(f instanceof Uint32Array)b=n.UNSIGNED_INT;else if(f instanceof Int32Array)b=n.INT;else if(f instanceof Int8Array)b=n.BYTE;else if(f instanceof Uint8Array)b=n.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)b=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:y,type:b,bytesPerElement:f.BYTES_PER_ELEMENT,version:d.version,size:m}}function a(d,h,f){const p=h.array,m=h._updateRange,y=h.updateRanges;if(n.bindBuffer(f,d),m.count===-1&&y.length===0&&n.bufferSubData(f,0,p),y.length!==0){for(let b=0,_=y.length;b<_;b++){const g=y[b];t?n.bufferSubData(f,g.start*p.BYTES_PER_ELEMENT,p,g.start,g.count):n.bufferSubData(f,g.start*p.BYTES_PER_ELEMENT,p.subarray(g.start,g.start+g.count))}h.clearUpdateRanges()}m.count!==-1&&(t?n.bufferSubData(f,m.offset*p.BYTES_PER_ELEMENT,p,m.offset,m.count):n.bufferSubData(f,m.offset*p.BYTES_PER_ELEMENT,p.subarray(m.offset,m.offset+m.count)),m.count=-1),h.onUploadCallback()}function s(d){return d.isInterleavedBufferAttribute&&(d=d.data),i.get(d)}function o(d){d.isInterleavedBufferAttribute&&(d=d.data);const h=i.get(d);h&&(n.deleteBuffer(h.buffer),i.delete(d))}function l(d,h){if(d.isGLBufferAttribute){const p=i.get(d);(!p||p.version<d.version)&&i.set(d,{buffer:d.buffer,type:d.type,bytesPerElement:d.elementSize,version:d.version});return}d.isInterleavedBufferAttribute&&(d=d.data);const f=i.get(d);if(f===void 0)i.set(d,r(d,h));else if(f.version<d.version){if(f.size!==d.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");a(f.buffer,d,h),f.version=d.version}}return{get:s,remove:o,update:l}}class b3 extends Zt{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const a=e/2,s=t/2,o=Math.floor(i),l=Math.floor(r),d=o+1,h=l+1,f=e/o,p=t/l,m=[],y=[],b=[],_=[];for(let g=0;g<h;g++){const x=g*p-s;for(let S=0;S<d;S++){const E=S*f-a;y.push(E,-x,0),b.push(0,0,1),_.push(S/o),_.push(1-g/l)}}for(let g=0;g<l;g++)for(let x=0;x<o;x++){const S=x+d*g,E=x+d*(g+1),A=x+1+d*(g+1),P=x+1+d*g;m.push(S,E,P),m.push(E,A,P)}this.setIndex(m),this.setAttribute("position",new Et(y,3)),this.setAttribute("normal",new Et(b,3)),this.setAttribute("uv",new Et(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new b3(e.width,e.height,e.widthSegments,e.heightSegments)}}var JR=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,QR=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,ek=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,tk=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,nk=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,ik=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,rk=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,ak=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,sk=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,ok=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,lk=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,ck=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,uk=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,dk=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,hk=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,fk=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,pk=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,mk=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,gk=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,vk=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,yk=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,_k=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,xk=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,wk=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,bk=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Sk=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Mk=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Ek=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Pk=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Tk=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Lk="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ck=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,Ak=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Rk=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,kk=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ik=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Nk=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Dk=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Ok=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Bk=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Uk=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Fk=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,zk=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,jk=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Hk=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Vk=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Gk=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Wk=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Xk=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Yk=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,qk=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,$k=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Kk=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Zk=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Jk=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Qk=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,eI=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,tI=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,nI=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,iI=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,rI=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,aI=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,sI=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,oI=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,lI=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,cI=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,uI=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,dI=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,hI=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,fI=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,pI=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,mI=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,gI=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,vI=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,yI=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,_I=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,xI=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,wI=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,bI=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,SI=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,MI=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,EI=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,PI=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,TI=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,LI=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,CI=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,AI=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,RI=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,kI=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,II=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,NI=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,DI=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,OI=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,BI=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,UI=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,FI=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,zI=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,jI=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,HI=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,VI=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,GI=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,WI=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,XI=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,YI=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,qI=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,$I=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,KI=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const ZI=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,JI=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,QI=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,eN=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,tN=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,nN=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,iN=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,rN=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,aN=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,sN=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,oN=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,lN=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cN=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,uN=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dN=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,hN=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fN=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pN=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mN=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,gN=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vN=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,yN=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,_N=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xN=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wN=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,bN=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,SN=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,MN=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,EN=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,PN=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,TN=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,LN=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,CN=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,AN=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Kt={alphahash_fragment:JR,alphahash_pars_fragment:QR,alphamap_fragment:ek,alphamap_pars_fragment:tk,alphatest_fragment:nk,alphatest_pars_fragment:ik,aomap_fragment:rk,aomap_pars_fragment:ak,batching_pars_vertex:sk,batching_vertex:ok,begin_vertex:lk,beginnormal_vertex:ck,bsdfs:uk,iridescence_fragment:dk,bumpmap_pars_fragment:hk,clipping_planes_fragment:fk,clipping_planes_pars_fragment:pk,clipping_planes_pars_vertex:mk,clipping_planes_vertex:gk,color_fragment:vk,color_pars_fragment:yk,color_pars_vertex:_k,color_vertex:xk,common:wk,cube_uv_reflection_fragment:bk,defaultnormal_vertex:Sk,displacementmap_pars_vertex:Mk,displacementmap_vertex:Ek,emissivemap_fragment:Pk,emissivemap_pars_fragment:Tk,colorspace_fragment:Lk,colorspace_pars_fragment:Ck,envmap_fragment:Ak,envmap_common_pars_fragment:Rk,envmap_pars_fragment:kk,envmap_pars_vertex:Ik,envmap_physical_pars_fragment:Wk,envmap_vertex:Nk,fog_vertex:Dk,fog_pars_vertex:Ok,fog_fragment:Bk,fog_pars_fragment:Uk,gradientmap_pars_fragment:Fk,lightmap_fragment:zk,lightmap_pars_fragment:jk,lights_lambert_fragment:Hk,lights_lambert_pars_fragment:Vk,lights_pars_begin:Gk,lights_toon_fragment:Xk,lights_toon_pars_fragment:Yk,lights_phong_fragment:qk,lights_phong_pars_fragment:$k,lights_physical_fragment:Kk,lights_physical_pars_fragment:Zk,lights_fragment_begin:Jk,lights_fragment_maps:Qk,lights_fragment_end:eI,logdepthbuf_fragment:tI,logdepthbuf_pars_fragment:nI,logdepthbuf_pars_vertex:iI,logdepthbuf_vertex:rI,map_fragment:aI,map_pars_fragment:sI,map_particle_fragment:oI,map_particle_pars_fragment:lI,metalnessmap_fragment:cI,metalnessmap_pars_fragment:uI,morphcolor_vertex:dI,morphnormal_vertex:hI,morphtarget_pars_vertex:fI,morphtarget_vertex:pI,normal_fragment_begin:mI,normal_fragment_maps:gI,normal_pars_fragment:vI,normal_pars_vertex:yI,normal_vertex:_I,normalmap_pars_fragment:xI,clearcoat_normal_fragment_begin:wI,clearcoat_normal_fragment_maps:bI,clearcoat_pars_fragment:SI,iridescence_pars_fragment:MI,opaque_fragment:EI,packing:PI,premultiplied_alpha_fragment:TI,project_vertex:LI,dithering_fragment:CI,dithering_pars_fragment:AI,roughnessmap_fragment:RI,roughnessmap_pars_fragment:kI,shadowmap_pars_fragment:II,shadowmap_pars_vertex:NI,shadowmap_vertex:DI,shadowmask_pars_fragment:OI,skinbase_vertex:BI,skinning_pars_vertex:UI,skinning_vertex:FI,skinnormal_vertex:zI,specularmap_fragment:jI,specularmap_pars_fragment:HI,tonemapping_fragment:VI,tonemapping_pars_fragment:GI,transmission_fragment:WI,transmission_pars_fragment:XI,uv_pars_fragment:YI,uv_pars_vertex:qI,uv_vertex:$I,worldpos_vertex:KI,background_vert:ZI,background_frag:JI,backgroundCube_vert:QI,backgroundCube_frag:eN,cube_vert:tN,cube_frag:nN,depth_vert:iN,depth_frag:rN,distanceRGBA_vert:aN,distanceRGBA_frag:sN,equirect_vert:oN,equirect_frag:lN,linedashed_vert:cN,linedashed_frag:uN,meshbasic_vert:dN,meshbasic_frag:hN,meshlambert_vert:fN,meshlambert_frag:pN,meshmatcap_vert:mN,meshmatcap_frag:gN,meshnormal_vert:vN,meshnormal_frag:yN,meshphong_vert:_N,meshphong_frag:xN,meshphysical_vert:wN,meshphysical_frag:bN,meshtoon_vert:SN,meshtoon_frag:MN,points_vert:EN,points_frag:PN,shadow_vert:TN,shadow_frag:LN,sprite_vert:CN,sprite_frag:AN},Qe={common:{diffuse:{value:new gt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Qt},alphaMap:{value:null},alphaMapTransform:{value:new Qt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Qt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Qt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Qt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Qt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Qt},normalScale:{value:new Le(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Qt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Qt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Qt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Qt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new gt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new gt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Qt},alphaTest:{value:0},uvTransform:{value:new Qt}},sprite:{diffuse:{value:new gt(16777215)},opacity:{value:1},center:{value:new Le(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Qt},alphaMap:{value:null},alphaMapTransform:{value:new Qt},alphaTest:{value:0}}},l2={basic:{uniforms:Wn([Qe.common,Qe.specularmap,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.fog]),vertexShader:Kt.meshbasic_vert,fragmentShader:Kt.meshbasic_frag},lambert:{uniforms:Wn([Qe.common,Qe.specularmap,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.fog,Qe.lights,{emissive:{value:new gt(0)}}]),vertexShader:Kt.meshlambert_vert,fragmentShader:Kt.meshlambert_frag},phong:{uniforms:Wn([Qe.common,Qe.specularmap,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.fog,Qe.lights,{emissive:{value:new gt(0)},specular:{value:new gt(1118481)},shininess:{value:30}}]),vertexShader:Kt.meshphong_vert,fragmentShader:Kt.meshphong_frag},standard:{uniforms:Wn([Qe.common,Qe.envmap,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.roughnessmap,Qe.metalnessmap,Qe.fog,Qe.lights,{emissive:{value:new gt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Kt.meshphysical_vert,fragmentShader:Kt.meshphysical_frag},toon:{uniforms:Wn([Qe.common,Qe.aomap,Qe.lightmap,Qe.emissivemap,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.gradientmap,Qe.fog,Qe.lights,{emissive:{value:new gt(0)}}]),vertexShader:Kt.meshtoon_vert,fragmentShader:Kt.meshtoon_frag},matcap:{uniforms:Wn([Qe.common,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,Qe.fog,{matcap:{value:null}}]),vertexShader:Kt.meshmatcap_vert,fragmentShader:Kt.meshmatcap_frag},points:{uniforms:Wn([Qe.points,Qe.fog]),vertexShader:Kt.points_vert,fragmentShader:Kt.points_frag},dashed:{uniforms:Wn([Qe.common,Qe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Kt.linedashed_vert,fragmentShader:Kt.linedashed_frag},depth:{uniforms:Wn([Qe.common,Qe.displacementmap]),vertexShader:Kt.depth_vert,fragmentShader:Kt.depth_frag},normal:{uniforms:Wn([Qe.common,Qe.bumpmap,Qe.normalmap,Qe.displacementmap,{opacity:{value:1}}]),vertexShader:Kt.meshnormal_vert,fragmentShader:Kt.meshnormal_frag},sprite:{uniforms:Wn([Qe.sprite,Qe.fog]),vertexShader:Kt.sprite_vert,fragmentShader:Kt.sprite_frag},background:{uniforms:{uvTransform:{value:new Qt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Kt.background_vert,fragmentShader:Kt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Kt.backgroundCube_vert,fragmentShader:Kt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Kt.cube_vert,fragmentShader:Kt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Kt.equirect_vert,fragmentShader:Kt.equirect_frag},distanceRGBA:{uniforms:Wn([Qe.common,Qe.displacementmap,{referencePosition:{value:new j},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Kt.distanceRGBA_vert,fragmentShader:Kt.distanceRGBA_frag},shadow:{uniforms:Wn([Qe.lights,Qe.fog,{color:{value:new gt(0)},opacity:{value:1}}]),vertexShader:Kt.shadow_vert,fragmentShader:Kt.shadow_frag}};l2.physical={uniforms:Wn([l2.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Qt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Qt},clearcoatNormalScale:{value:new Le(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Qt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Qt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Qt},sheen:{value:0},sheenColor:{value:new gt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Qt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Qt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Qt},transmissionSamplerSize:{value:new Le},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Qt},attenuationDistance:{value:0},attenuationColor:{value:new gt(0)},specularColor:{value:new gt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Qt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Qt},anisotropyVector:{value:new Le},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Qt}}]),vertexShader:Kt.meshphysical_vert,fragmentShader:Kt.meshphysical_frag};const bc={r:0,b:0,g:0};function RN(n,e,t,i,r,a,s){const o=new gt(0);let l=a===!0?0:1,d,h,f=null,p=0,m=null;function y(_,g){let x=!1,S=g.isScene===!0?g.background:null;S&&S.isTexture&&(S=(g.backgroundBlurriness>0?t:e).get(S)),S===null?b(o,l):S&&S.isColor&&(b(S,1),x=!0);const E=n.xr.getEnvironmentBlendMode();E==="additive"?i.buffers.color.setClear(0,0,0,1,s):E==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,s),(n.autoClear||x)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),S&&(S.isCubeTexture||S.mapping===w3)?(h===void 0&&(h=new an(new Ds(1,1,1),new f2({name:"BackgroundCubeMaterial",uniforms:f3(l2.backgroundCube.uniforms),vertexShader:l2.backgroundCube.vertexShader,fragmentShader:l2.backgroundCube.fragmentShader,side:Kn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(A,P,C){this.matrixWorld.copyPosition(C.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),h.material.uniforms.envMap.value=S,h.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,h.material.toneMapped=d1.getTransfer(S.colorSpace)!==M1,(f!==S||p!==S.version||m!==n.toneMapping)&&(h.material.needsUpdate=!0,f=S,p=S.version,m=n.toneMapping),h.layers.enableAll(),_.unshift(h,h.geometry,h.material,0,0,null)):S&&S.isTexture&&(d===void 0&&(d=new an(new b3(2,2),new f2({name:"BackgroundMaterial",uniforms:f3(l2.background.uniforms),vertexShader:l2.background.vertexShader,fragmentShader:l2.background.fragmentShader,side:xr,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),Object.defineProperty(d.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(d)),d.material.uniforms.t2D.value=S,d.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,d.material.toneMapped=d1.getTransfer(S.colorSpace)!==M1,S.matrixAutoUpdate===!0&&S.updateMatrix(),d.material.uniforms.uvTransform.value.copy(S.matrix),(f!==S||p!==S.version||m!==n.toneMapping)&&(d.material.needsUpdate=!0,f=S,p=S.version,m=n.toneMapping),d.layers.enableAll(),_.unshift(d,d.geometry,d.material,0,0,null))}function b(_,g){_.getRGB(bc,Gb(n)),i.buffers.color.setClear(bc.r,bc.g,bc.b,g,s)}return{getClearColor:function(){return o},setClearColor:function(_,g=1){o.set(_),l=g,b(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(_){l=_,b(o,l)},render:y}}function kN(n,e,t,i){const r=n.getParameter(n.MAX_VERTEX_ATTRIBS),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||a!==null,o={},l=_(null);let d=l,h=!1;function f(q,ue,se,ve,z){let K=!1;if(s){const Z=b(ve,se,ue);d!==Z&&(d=Z,m(d.object)),K=g(q,ve,se,z),K&&x(q,ve,se,z)}else{const Z=ue.wireframe===!0;(d.geometry!==ve.id||d.program!==se.id||d.wireframe!==Z)&&(d.geometry=ve.id,d.program=se.id,d.wireframe=Z,K=!0)}z!==null&&t.update(z,n.ELEMENT_ARRAY_BUFFER),(K||h)&&(h=!1,N(q,ue,se,ve),z!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(z).buffer))}function p(){return i.isWebGL2?n.createVertexArray():a.createVertexArrayOES()}function m(q){return i.isWebGL2?n.bindVertexArray(q):a.bindVertexArrayOES(q)}function y(q){return i.isWebGL2?n.deleteVertexArray(q):a.deleteVertexArrayOES(q)}function b(q,ue,se){const ve=se.wireframe===!0;let z=o[q.id];z===void 0&&(z={},o[q.id]=z);let K=z[ue.id];K===void 0&&(K={},z[ue.id]=K);let Z=K[ve];return Z===void 0&&(Z=_(p()),K[ve]=Z),Z}function _(q){const ue=[],se=[],ve=[];for(let z=0;z<r;z++)ue[z]=0,se[z]=0,ve[z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:ue,enabledAttributes:se,attributeDivisors:ve,object:q,attributes:{},index:null}}function g(q,ue,se,ve){const z=d.attributes,K=ue.attributes;let Z=0;const re=se.getAttributes();for(const _e in re)if(re[_e].location>=0){const ce=z[_e];let Ee=K[_e];if(Ee===void 0&&(_e==="instanceMatrix"&&q.instanceMatrix&&(Ee=q.instanceMatrix),_e==="instanceColor"&&q.instanceColor&&(Ee=q.instanceColor)),ce===void 0||ce.attribute!==Ee||Ee&&ce.data!==Ee.data)return!0;Z++}return d.attributesNum!==Z||d.index!==ve}function x(q,ue,se,ve){const z={},K=ue.attributes;let Z=0;const re=se.getAttributes();for(const _e in re)if(re[_e].location>=0){let ce=K[_e];ce===void 0&&(_e==="instanceMatrix"&&q.instanceMatrix&&(ce=q.instanceMatrix),_e==="instanceColor"&&q.instanceColor&&(ce=q.instanceColor));const Ee={};Ee.attribute=ce,ce&&ce.data&&(Ee.data=ce.data),z[_e]=Ee,Z++}d.attributes=z,d.attributesNum=Z,d.index=ve}function S(){const q=d.newAttributes;for(let ue=0,se=q.length;ue<se;ue++)q[ue]=0}function E(q){A(q,0)}function A(q,ue){const se=d.newAttributes,ve=d.enabledAttributes,z=d.attributeDivisors;se[q]=1,ve[q]===0&&(n.enableVertexAttribArray(q),ve[q]=1),z[q]!==ue&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](q,ue),z[q]=ue)}function P(){const q=d.newAttributes,ue=d.enabledAttributes;for(let se=0,ve=ue.length;se<ve;se++)ue[se]!==q[se]&&(n.disableVertexAttribArray(se),ue[se]=0)}function C(q,ue,se,ve,z,K,Z){Z===!0?n.vertexAttribIPointer(q,ue,se,z,K):n.vertexAttribPointer(q,ue,se,ve,z,K)}function N(q,ue,se,ve){if(i.isWebGL2===!1&&(q.isInstancedMesh||ve.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const z=ve.attributes,K=se.getAttributes(),Z=ue.defaultAttributeValues;for(const re in K){const _e=K[re];if(_e.location>=0){let je=z[re];if(je===void 0&&(re==="instanceMatrix"&&q.instanceMatrix&&(je=q.instanceMatrix),re==="instanceColor"&&q.instanceColor&&(je=q.instanceColor)),je!==void 0){const ce=je.normalized,Ee=je.itemSize,ze=t.get(je);if(ze===void 0)continue;const Je=ze.buffer,St=ze.type,pt=ze.bytesPerElement,Tt=i.isWebGL2===!0&&(St===n.INT||St===n.UNSIGNED_INT||je.gpuType===M9);if(je.isInterleavedBufferAttribute){const $e=je.data,X=$e.stride,Ne=je.offset;if($e.isInstancedInterleavedBuffer){for(let Te=0;Te<_e.locationSize;Te++)A(_e.location+Te,$e.meshPerAttribute);q.isInstancedMesh!==!0&&ve._maxInstanceCount===void 0&&(ve._maxInstanceCount=$e.meshPerAttribute*$e.count)}else for(let Te=0;Te<_e.locationSize;Te++)E(_e.location+Te);n.bindBuffer(n.ARRAY_BUFFER,Je);for(let Te=0;Te<_e.locationSize;Te++)C(_e.location+Te,Ee/_e.locationSize,St,ce,X*pt,(Ne+Ee/_e.locationSize*Te)*pt,Tt)}else{if(je.isInstancedBufferAttribute){for(let $e=0;$e<_e.locationSize;$e++)A(_e.location+$e,je.meshPerAttribute);q.isInstancedMesh!==!0&&ve._maxInstanceCount===void 0&&(ve._maxInstanceCount=je.meshPerAttribute*je.count)}else for(let $e=0;$e<_e.locationSize;$e++)E(_e.location+$e);n.bindBuffer(n.ARRAY_BUFFER,Je);for(let $e=0;$e<_e.locationSize;$e++)C(_e.location+$e,Ee/_e.locationSize,St,ce,Ee*pt,Ee/_e.locationSize*$e*pt,Tt)}}else if(Z!==void 0){const ce=Z[re];if(ce!==void 0)switch(ce.length){case 2:n.vertexAttrib2fv(_e.location,ce);break;case 3:n.vertexAttrib3fv(_e.location,ce);break;case 4:n.vertexAttrib4fv(_e.location,ce);break;default:n.vertexAttrib1fv(_e.location,ce)}}}}P()}function Y(){ee();for(const q in o){const ue=o[q];for(const se in ue){const ve=ue[se];for(const z in ve)y(ve[z].object),delete ve[z];delete ue[se]}delete o[q]}}function T(q){if(o[q.id]===void 0)return;const ue=o[q.id];for(const se in ue){const ve=ue[se];for(const z in ve)y(ve[z].object),delete ve[z];delete ue[se]}delete o[q.id]}function R(q){for(const ue in o){const se=o[ue];if(se[q.id]===void 0)continue;const ve=se[q.id];for(const z in ve)y(ve[z].object),delete ve[z];delete se[q.id]}}function ee(){he(),h=!0,d!==l&&(d=l,m(d.object))}function he(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:f,reset:ee,resetDefaultState:he,dispose:Y,releaseStatesOfGeometry:T,releaseStatesOfProgram:R,initAttributes:S,enableAttribute:E,disableUnusedAttributes:P}}function IN(n,e,t,i){const r=i.isWebGL2;let a;function s(h){a=h}function o(h,f){n.drawArrays(a,h,f),t.update(f,a,1)}function l(h,f,p){if(p===0)return;let m,y;if(r)m=n,y="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),y="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[y](a,h,f,p),t.update(f,a,p)}function d(h,f,p){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let y=0;y<p;y++)this.render(h[y],f[y]);else{m.multiDrawArraysWEBGL(a,h,0,f,0,p);let y=0;for(let b=0;b<p;b++)y+=f[b];t.update(y,a,1)}}this.setMode=s,this.render=o,this.renderInstances=l,this.renderMultiDraw=d}function NN(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const C=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(C){if(C==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";C="mediump"}return C==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext<"u"&&n.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const d=s||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,f=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),p=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=n.getParameter(n.MAX_TEXTURE_SIZE),y=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),b=n.getParameter(n.MAX_VERTEX_ATTRIBS),_=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),g=n.getParameter(n.MAX_VARYING_VECTORS),x=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),S=p>0,E=s||e.has("OES_texture_float"),A=S&&E,P=s?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:s,drawBuffers:d,getMaxAnisotropy:r,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:h,maxTextures:f,maxVertexTextures:p,maxTextureSize:m,maxCubemapSize:y,maxAttributes:b,maxVertexUniforms:_,maxVaryings:g,maxFragmentUniforms:x,vertexTextures:S,floatFragmentTextures:E,floatVertexTextures:A,maxSamples:P}}function DN(n){const e=this;let t=null,i=0,r=!1,a=!1;const s=new ar,o=new Qt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,p){const m=f.length!==0||p||i!==0||r;return r=p,i=f.length,m},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(f,p){t=h(f,p,0)},this.setState=function(f,p,m){const y=f.clippingPlanes,b=f.clipIntersection,_=f.clipShadows,g=n.get(f);if(!r||y===null||y.length===0||a&&!_)a?h(null):d();else{const x=a?0:i,S=x*4;let E=g.clippingState||null;l.value=E,E=h(y,p,S,m);for(let A=0;A!==S;++A)E[A]=t[A];g.clippingState=E,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=x}};function d(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(f,p,m,y){const b=f!==null?f.length:0;let _=null;if(b!==0){if(_=l.value,y!==!0||_===null){const g=m+b*4,x=p.matrixWorldInverse;o.getNormalMatrix(x),(_===null||_.length<g)&&(_=new Float32Array(g));for(let S=0,E=m;S!==b;++S,E+=4)s.copy(f[S]).applyMatrix4(x,o),s.normal.toArray(_,E),_[E+3]=s.constant}l.value=_,l.needsUpdate=!0}return e.numPlanes=b,e.numIntersection=0,_}}function ON(n){let e=new WeakMap;function t(s,o){return o===c4?s.mapping=wr:o===u4&&(s.mapping=fa),s}function i(s){if(s&&s.isTexture){const o=s.mapping;if(o===c4||o===u4)if(e.has(s)){const l=e.get(s).texture;return t(l,s.mapping)}else{const l=s.image;if(l&&l.height>0){const d=new Yb(l.height);return d.fromEquirectangularTexture(n,s),e.set(s,d),s.addEventListener("dispose",r),t(d.texture,s.mapping)}else return null}}return s}function r(s){const o=s.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function a(){e=new WeakMap}return{get:i,dispose:a}}class dr extends V4{constructor(e=-1,t=1,i=1,r=-1,a=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=a,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,a,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let a=i-e,s=i+e,o=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const d=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=d*this.view.offsetX,s=a+d*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(a,s,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Vo=4,Xg=[.125,.215,.35,.446,.526,.582],ts=20,Vd=new dr,Yg=new gt;let Gd=null,Wd=0,Xd=0;const Qa=(1+Math.sqrt(5))/2,po=1/Qa,qg=[new j(1,1,1),new j(-1,1,1),new j(1,1,-1),new j(-1,1,-1),new j(0,Qa,po),new j(0,Qa,-po),new j(po,0,Qa),new j(-po,0,Qa),new j(Qa,po,0),new j(-Qa,po,0)];class Qh{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){Gd=this._renderer.getRenderTarget(),Wd=this._renderer.getActiveCubeFace(),Xd=this._renderer.getActiveMipmapLevel(),this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,i,r,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Zg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Kg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Gd,Wd,Xd),e.scissorTest=!1,Sc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===wr||e.mapping===fa?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Gd=this._renderer.getRenderTarget(),Wd=this._renderer.getActiveCubeFace(),Xd=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:N1,minFilter:N1,generateMipmaps:!1,type:d3,format:Yn,colorSpace:B2,depthBuffer:!1},r=$g(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=$g(e,t,i);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=BN(a)),this._blurMaterial=UN(a,e,t)}return r}_compileMaterial(e){const t=new an(this._lodPlanes[0],e);this._renderer.compile(t,Vd)}_sceneToCubeUV(e,t,i,r){const o=new Y1(90,1,t,i),l=[1,-1,1,1,1,1],d=[1,1,1,-1,-1,-1],h=this._renderer,f=h.autoClear,p=h.toneMapping;h.getClearColor(Yg),h.toneMapping=I2,h.autoClear=!1;const m=new wa({name:"PMREM.Background",side:Kn,depthWrite:!1,depthTest:!1}),y=new an(new Ds,m);let b=!1;const _=e.background;_?_.isColor&&(m.color.copy(_),e.background=null,b=!0):(m.color.copy(Yg),b=!0);for(let g=0;g<6;g++){const x=g%3;x===0?(o.up.set(0,l[g],0),o.lookAt(d[g],0,0)):x===1?(o.up.set(0,0,l[g]),o.lookAt(0,d[g],0)):(o.up.set(0,l[g],0),o.lookAt(0,0,d[g]));const S=this._cubeSize;Sc(r,x*S,g>2?S:0,S,S),h.setRenderTarget(r),b&&h.render(y,o),h.render(e,o)}y.geometry.dispose(),y.material.dispose(),h.toneMapping=p,h.autoClear=f,e.background=_}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===wr||e.mapping===fa;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Zg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Kg());const a=r?this._cubemapMaterial:this._equirectMaterial,s=new an(this._lodPlanes[0],a),o=a.uniforms;o.envMap.value=e;const l=this._cubeSize;Sc(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(s,Vd)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),s=qg[(r-1)%qg.length];this._blur(e,r-1,r,a,s)}t.autoClear=i}_blur(e,t,i,r,a){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,r,"latitudinal",a),this._halfBlur(s,e,i,i,r,"longitudinal",a)}_halfBlur(e,t,i,r,a,s,o){const l=this._renderer,d=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,f=new an(this._lodPlanes[r],d),p=d.uniforms,m=this._sizeLods[i]-1,y=isFinite(a)?Math.PI/(2*m):2*Math.PI/(2*ts-1),b=a/y,_=isFinite(a)?1+Math.floor(h*b):ts;_>ts&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${ts}`);const g=[];let x=0;for(let C=0;C<ts;++C){const N=C/b,Y=Math.exp(-N*N/2);g.push(Y),C===0?x+=Y:C<_&&(x+=2*Y)}for(let C=0;C<g.length;C++)g[C]=g[C]/x;p.envMap.value=e.texture,p.samples.value=_,p.weights.value=g,p.latitudinal.value=s==="latitudinal",o&&(p.poleAxis.value=o);const{_lodMax:S}=this;p.dTheta.value=y,p.mipInt.value=S-i;const E=this._sizeLods[r],A=3*E*(r>S-Vo?r-S+Vo:0),P=4*(this._cubeSize-E);Sc(t,A,P,3*E,2*E),l.setRenderTarget(t),l.render(f,Vd)}}function BN(n){const e=[],t=[],i=[];let r=n;const a=n-Vo+1+Xg.length;for(let s=0;s<a;s++){const o=Math.pow(2,r);t.push(o);let l=1/o;s>n-Vo?l=Xg[s-n+Vo-1]:s===0&&(l=0),i.push(l);const d=1/(o-2),h=-d,f=1+d,p=[h,h,f,h,f,f,h,h,f,f,h,f],m=6,y=6,b=3,_=2,g=1,x=new Float32Array(b*y*m),S=new Float32Array(_*y*m),E=new Float32Array(g*y*m);for(let P=0;P<m;P++){const C=P%3*2/3-1,N=P>2?0:-1,Y=[C,N,0,C+2/3,N,0,C+2/3,N+1,0,C,N,0,C+2/3,N+1,0,C,N+1,0];x.set(Y,b*y*P),S.set(p,_*y*P);const T=[P,P,P,P,P,P];E.set(T,g*y*P)}const A=new Zt;A.setAttribute("position",new p1(x,b)),A.setAttribute("uv",new p1(S,_)),A.setAttribute("faceIndex",new p1(E,g)),e.push(A),r>Vo&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function $g(n,e,t){const i=new h2(n,e,t);return i.texture.mapping=w3,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Sc(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function UN(n,e,t){const i=new Float32Array(ts),r=new j(0,1,0);return new f2({name:"SphericalGaussianBlur",defines:{n:ts,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:F9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:mr,depthTest:!1,depthWrite:!1})}function Kg(){return new f2({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:F9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:mr,depthTest:!1,depthWrite:!1})}function Zg(){return new f2({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:F9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:mr,depthTest:!1,depthWrite:!1})}function F9(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function FN(n){let e=new WeakMap,t=null;function i(o){if(o&&o.isTexture){const l=o.mapping,d=l===c4||l===u4,h=l===wr||l===fa;if(d||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let f=e.get(o);return t===null&&(t=new Qh(n)),f=d?t.fromEquirectangular(o,f):t.fromCubemap(o,f),e.set(o,f),f.texture}else{if(e.has(o))return e.get(o).texture;{const f=o.image;if(d&&f&&f.height>0||h&&f&&r(f)){t===null&&(t=new Qh(n));const p=d?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,p),o.addEventListener("dispose",a),p.texture}else return null}}}return o}function r(o){let l=0;const d=6;for(let h=0;h<d;h++)o[h]!==void 0&&l++;return l===d}function a(o){const l=o.target;l.removeEventListener("dispose",a);const d=e.get(l);d!==void 0&&(e.delete(l),d.dispose())}function s(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:s}}function zN(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function jN(n,e,t,i){const r={},a=new WeakMap;function s(f){const p=f.target;p.index!==null&&e.remove(p.index);for(const y in p.attributes)e.remove(p.attributes[y]);for(const y in p.morphAttributes){const b=p.morphAttributes[y];for(let _=0,g=b.length;_<g;_++)e.remove(b[_])}p.removeEventListener("dispose",s),delete r[p.id];const m=a.get(p);m&&(e.remove(m),a.delete(p)),i.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function o(f,p){return r[p.id]===!0||(p.addEventListener("dispose",s),r[p.id]=!0,t.memory.geometries++),p}function l(f){const p=f.attributes;for(const y in p)e.update(p[y],n.ARRAY_BUFFER);const m=f.morphAttributes;for(const y in m){const b=m[y];for(let _=0,g=b.length;_<g;_++)e.update(b[_],n.ARRAY_BUFFER)}}function d(f){const p=[],m=f.index,y=f.attributes.position;let b=0;if(m!==null){const x=m.array;b=m.version;for(let S=0,E=x.length;S<E;S+=3){const A=x[S+0],P=x[S+1],C=x[S+2];p.push(A,P,P,C,C,A)}}else if(y!==void 0){const x=y.array;b=y.version;for(let S=0,E=x.length/3-1;S<E;S+=3){const A=S+0,P=S+1,C=S+2;p.push(A,P,P,C,C,A)}}else return;const _=new(zb(p)?U9:B9)(p,1);_.version=b;const g=a.get(f);g&&e.remove(g),a.set(f,_)}function h(f){const p=a.get(f);if(p){const m=f.index;m!==null&&p.version<m.version&&d(f)}else d(f);return a.get(f)}return{get:o,update:l,getWireframeAttribute:h}}function HN(n,e,t,i){const r=i.isWebGL2;let a;function s(m){a=m}let o,l;function d(m){o=m.type,l=m.bytesPerElement}function h(m,y){n.drawElements(a,y,o,m*l),t.update(y,a,1)}function f(m,y,b){if(b===0)return;let _,g;if(r)_=n,g="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[g](a,y,o,m*l,b),t.update(y,a,b)}function p(m,y,b){if(b===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let g=0;g<b;g++)this.render(m[g]/l,y[g]);else{_.multiDrawElementsWEBGL(a,y,0,o,m,0,b);let g=0;for(let x=0;x<b;x++)g+=y[x];t.update(g,a,1)}}this.setMode=s,this.setIndex=d,this.render=h,this.renderInstances=f,this.renderMultiDraw=p}function VN(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,s,o){switch(t.calls++,s){case n.TRIANGLES:t.triangles+=o*(a/3);break;case n.LINES:t.lines+=o*(a/2);break;case n.LINE_STRIP:t.lines+=o*(a-1);break;case n.LINE_LOOP:t.lines+=o*a;break;case n.POINTS:t.points+=o*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function GN(n,e){return n[0]-e[0]}function WN(n,e){return Math.abs(e[1])-Math.abs(n[1])}function XN(n,e,t){const i={},r=new Float32Array(8),a=new WeakMap,s=new h1,o=[];for(let d=0;d<8;d++)o[d]=[d,0];function l(d,h,f){const p=d.morphTargetInfluences;if(e.isWebGL2===!0){const y=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,b=y!==void 0?y.length:0;let _=a.get(h);if(_===void 0||_.count!==b){let ue=function(){he.dispose(),a.delete(h),h.removeEventListener("dispose",ue)};var m=ue;_!==void 0&&_.texture.dispose();const S=h.morphAttributes.position!==void 0,E=h.morphAttributes.normal!==void 0,A=h.morphAttributes.color!==void 0,P=h.morphAttributes.position||[],C=h.morphAttributes.normal||[],N=h.morphAttributes.color||[];let Y=0;S===!0&&(Y=1),E===!0&&(Y=2),A===!0&&(Y=3);let T=h.attributes.position.count*Y,R=1;T>e.maxTextureSize&&(R=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const ee=new Float32Array(T*R*4*b),he=new Tu(ee,T,R,b);he.type=Vi,he.needsUpdate=!0;const q=Y*4;for(let se=0;se<b;se++){const ve=P[se],z=C[se],K=N[se],Z=T*R*4*se;for(let re=0;re<ve.count;re++){const _e=re*q;S===!0&&(s.fromBufferAttribute(ve,re),ee[Z+_e+0]=s.x,ee[Z+_e+1]=s.y,ee[Z+_e+2]=s.z,ee[Z+_e+3]=0),E===!0&&(s.fromBufferAttribute(z,re),ee[Z+_e+4]=s.x,ee[Z+_e+5]=s.y,ee[Z+_e+6]=s.z,ee[Z+_e+7]=0),A===!0&&(s.fromBufferAttribute(K,re),ee[Z+_e+8]=s.x,ee[Z+_e+9]=s.y,ee[Z+_e+10]=s.z,ee[Z+_e+11]=K.itemSize===4?s.w:1)}}_={count:b,texture:he,size:new Le(T,R)},a.set(h,_),h.addEventListener("dispose",ue)}let g=0;for(let S=0;S<p.length;S++)g+=p[S];const x=h.morphTargetsRelative?1:1-g;f.getUniforms().setValue(n,"morphTargetBaseInfluence",x),f.getUniforms().setValue(n,"morphTargetInfluences",p),f.getUniforms().setValue(n,"morphTargetsTexture",_.texture,t),f.getUniforms().setValue(n,"morphTargetsTextureSize",_.size)}else{const y=p===void 0?0:p.length;let b=i[h.id];if(b===void 0||b.length!==y){b=[];for(let E=0;E<y;E++)b[E]=[E,0];i[h.id]=b}for(let E=0;E<y;E++){const A=b[E];A[0]=E,A[1]=p[E]}b.sort(WN);for(let E=0;E<8;E++)E<y&&b[E][1]?(o[E][0]=b[E][0],o[E][1]=b[E][1]):(o[E][0]=Number.MAX_SAFE_INTEGER,o[E][1]=0);o.sort(GN);const _=h.morphAttributes.position,g=h.morphAttributes.normal;let x=0;for(let E=0;E<8;E++){const A=o[E],P=A[0],C=A[1];P!==Number.MAX_SAFE_INTEGER&&C?(_&&h.getAttribute("morphTarget"+E)!==_[P]&&h.setAttribute("morphTarget"+E,_[P]),g&&h.getAttribute("morphNormal"+E)!==g[P]&&h.setAttribute("morphNormal"+E,g[P]),r[E]=C,x+=C):(_&&h.hasAttribute("morphTarget"+E)===!0&&h.deleteAttribute("morphTarget"+E),g&&h.hasAttribute("morphNormal"+E)===!0&&h.deleteAttribute("morphNormal"+E),r[E]=0)}const S=h.morphTargetsRelative?1:1-x;f.getUniforms().setValue(n,"morphTargetBaseInfluence",S),f.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:l}}function YN(n,e,t,i){let r=new WeakMap;function a(l){const d=i.render.frame,h=l.geometry,f=e.get(l,h);if(r.get(f)!==d&&(e.update(f),r.set(f,d)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),r.get(l)!==d&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,d))),l.isSkinnedMesh){const p=l.skeleton;r.get(p)!==d&&(p.update(),r.set(p,d))}return f}function s(){r=new WeakMap}function o(l){const d=l.target;d.removeEventListener("dispose",o),t.remove(d.instanceMatrix),d.instanceColor!==null&&t.remove(d.instanceColor)}return{update:a,dispose:s}}class z9 extends B1{constructor(e,t,i,r,a,s,o,l,d,h){if(h=h!==void 0?h:la,h!==la&&h!==Ts)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===la&&(i=ur),i===void 0&&h===Ts&&(i=oa),super(null,r,a,s,o,l,h,i,d),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:J1,this.minFilter=l!==void 0?l:J1,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const $b=new B1,Kb=new z9(1,1);Kb.compareFunction=I9;const Zb=new Tu,Jb=new O9,Qb=new G4,Jg=[],Qg=[],ev=new Float32Array(16),tv=new Float32Array(9),nv=new Float32Array(4);function S3(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let a=Jg[r];if(a===void 0&&(a=new Float32Array(r),Jg[r]=a),e!==0){i.toArray(a,0);for(let s=1,o=0;s!==e;++s)o+=t,n[s].toArray(a,o)}return a}function hn(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function fn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Lu(n,e){let t=Qg[e];t===void 0&&(t=new Int32Array(e),Qg[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function qN(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function $N(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(hn(t,e))return;n.uniform2fv(this.addr,e),fn(t,e)}}function KN(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(hn(t,e))return;n.uniform3fv(this.addr,e),fn(t,e)}}function ZN(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(hn(t,e))return;n.uniform4fv(this.addr,e),fn(t,e)}}function JN(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(hn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),fn(t,e)}else{if(hn(t,i))return;nv.set(i),n.uniformMatrix2fv(this.addr,!1,nv),fn(t,i)}}function QN(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(hn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),fn(t,e)}else{if(hn(t,i))return;tv.set(i),n.uniformMatrix3fv(this.addr,!1,tv),fn(t,i)}}function eD(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(hn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),fn(t,e)}else{if(hn(t,i))return;ev.set(i),n.uniformMatrix4fv(this.addr,!1,ev),fn(t,i)}}function tD(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function nD(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(hn(t,e))return;n.uniform2iv(this.addr,e),fn(t,e)}}function iD(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(hn(t,e))return;n.uniform3iv(this.addr,e),fn(t,e)}}function rD(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(hn(t,e))return;n.uniform4iv(this.addr,e),fn(t,e)}}function aD(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function sD(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(hn(t,e))return;n.uniform2uiv(this.addr,e),fn(t,e)}}function oD(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(hn(t,e))return;n.uniform3uiv(this.addr,e),fn(t,e)}}function lD(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(hn(t,e))return;n.uniform4uiv(this.addr,e),fn(t,e)}}function cD(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r);const a=this.type===n.SAMPLER_2D_SHADOW?Kb:$b;t.setTexture2D(e||a,r)}function uD(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||Jb,r)}function dD(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||Qb,r)}function hD(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||Zb,r)}function fD(n){switch(n){case 5126:return qN;case 35664:return $N;case 35665:return KN;case 35666:return ZN;case 35674:return JN;case 35675:return QN;case 35676:return eD;case 5124:case 35670:return tD;case 35667:case 35671:return nD;case 35668:case 35672:return iD;case 35669:case 35673:return rD;case 5125:return aD;case 36294:return sD;case 36295:return oD;case 36296:return lD;case 35678:case 36198:case 36298:case 36306:case 35682:return cD;case 35679:case 36299:case 36307:return uD;case 35680:case 36300:case 36308:case 36293:return dD;case 36289:case 36303:case 36311:case 36292:return hD}}function pD(n,e){n.uniform1fv(this.addr,e)}function mD(n,e){const t=S3(e,this.size,2);n.uniform2fv(this.addr,t)}function gD(n,e){const t=S3(e,this.size,3);n.uniform3fv(this.addr,t)}function vD(n,e){const t=S3(e,this.size,4);n.uniform4fv(this.addr,t)}function yD(n,e){const t=S3(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function _D(n,e){const t=S3(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function xD(n,e){const t=S3(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function wD(n,e){n.uniform1iv(this.addr,e)}function bD(n,e){n.uniform2iv(this.addr,e)}function SD(n,e){n.uniform3iv(this.addr,e)}function MD(n,e){n.uniform4iv(this.addr,e)}function ED(n,e){n.uniform1uiv(this.addr,e)}function PD(n,e){n.uniform2uiv(this.addr,e)}function TD(n,e){n.uniform3uiv(this.addr,e)}function LD(n,e){n.uniform4uiv(this.addr,e)}function CD(n,e,t){const i=this.cache,r=e.length,a=Lu(t,r);hn(i,a)||(n.uniform1iv(this.addr,a),fn(i,a));for(let s=0;s!==r;++s)t.setTexture2D(e[s]||$b,a[s])}function AD(n,e,t){const i=this.cache,r=e.length,a=Lu(t,r);hn(i,a)||(n.uniform1iv(this.addr,a),fn(i,a));for(let s=0;s!==r;++s)t.setTexture3D(e[s]||Jb,a[s])}function RD(n,e,t){const i=this.cache,r=e.length,a=Lu(t,r);hn(i,a)||(n.uniform1iv(this.addr,a),fn(i,a));for(let s=0;s!==r;++s)t.setTextureCube(e[s]||Qb,a[s])}function kD(n,e,t){const i=this.cache,r=e.length,a=Lu(t,r);hn(i,a)||(n.uniform1iv(this.addr,a),fn(i,a));for(let s=0;s!==r;++s)t.setTexture2DArray(e[s]||Zb,a[s])}function ID(n){switch(n){case 5126:return pD;case 35664:return mD;case 35665:return gD;case 35666:return vD;case 35674:return yD;case 35675:return _D;case 35676:return xD;case 5124:case 35670:return wD;case 35667:case 35671:return bD;case 35668:case 35672:return SD;case 35669:case 35673:return MD;case 5125:return ED;case 36294:return PD;case 36295:return TD;case 36296:return LD;case 35678:case 36198:case 36298:case 36306:case 35682:return CD;case 35679:case 36299:case 36307:return AD;case 35680:case 36300:case 36308:case 36293:return RD;case 36289:case 36303:case 36311:case 36292:return kD}}class ND{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=fD(t.type)}}class DD{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=ID(t.type)}}class OD{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let a=0,s=r.length;a!==s;++a){const o=r[a];o.setValue(e,t[o.id],i)}}}const Yd=/(\w+)(\])?(\[|\.)?/g;function iv(n,e){n.seq.push(e),n.map[e.id]=e}function BD(n,e,t){const i=n.name,r=i.length;for(Yd.lastIndex=0;;){const a=Yd.exec(i),s=Yd.lastIndex;let o=a[1];const l=a[2]==="]",d=a[3];if(l&&(o=o|0),d===void 0||d==="["&&s+2===r){iv(t,d===void 0?new ND(o,n,e):new DD(o,n,e));break}else{let f=t.map[o];f===void 0&&(f=new OD(o),iv(t,f)),t=f}}}class g5{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const a=e.getActiveUniform(t,r),s=e.getUniformLocation(t,a.name);BD(a,s,this)}}setValue(e,t,i,r){const a=this.map[t];a!==void 0&&a.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let a=0,s=t.length;a!==s;++a){const o=t[a],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,a=e.length;r!==a;++r){const s=e[r];s.id in t&&i.push(s)}return i}}function rv(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}const UD=37297;let FD=0;function zD(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let s=r;s<a;s++){const o=s+1;i.push(`${o===e?">":" "} ${o}: ${t[s]}`)}return i.join(`
`)}function jD(n){const e=d1.getPrimaries(d1.workingColorSpace),t=d1.getPrimaries(n);let i;switch(e===t?i="":e===y4&&t===v4?i="LinearDisplayP3ToLinearSRGB":e===v4&&t===y4&&(i="LinearSRGBToLinearDisplayP3"),n){case B2:case j4:return[i,"LinearTransferOETF"];case un:case Pu:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),[i,"LinearTransferOETF"]}}function av(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const s=parseInt(a[1]);return t.toUpperCase()+`

`+r+`

`+zD(n.getShaderSource(e),s)}else return r}function HD(n,e){const t=jD(e);return`vec4 ${n}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function VD(n,e){let t;switch(e){case fb:t="Linear";break;case pb:t="Reinhard";break;case mb:t="OptimizedCineon";break;case S9:t="ACESFilmic";break;case vb:t="AgX";break;case gb:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function GD(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.normalMapTangentSpace||n.clearcoatNormalMap||n.flatShading||n.alphaToCoverage||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Go).join(`
`)}function WD(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Go).join(`
`)}function XD(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function YD(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const a=n.getActiveAttrib(e,r),s=a.name;let o=1;a.type===n.FLOAT_MAT2&&(o=2),a.type===n.FLOAT_MAT3&&(o=3),a.type===n.FLOAT_MAT4&&(o=4),t[s]={type:a.type,location:n.getAttribLocation(e,s),locationSize:o}}return t}function Go(n){return n!==""}function sv(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ov(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const qD=/^[ \t]*#include +<([\w\d./]+)>/gm;function e7(n){return n.replace(qD,KD)}const $D=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function KD(n,e){let t=Kt[e];if(t===void 0){const i=$D.get(e);if(i!==void 0)t=Kt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return e7(t)}const ZD=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function lv(n){return n.replace(ZD,JD)}function JD(n,e,t,i){let r="";for(let a=parseInt(e);a<parseInt(t);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function cv(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	`;return n.isWebGL2&&(e+=`precision ${n.precision} sampler3D;
		precision ${n.precision} sampler2DArray;
		precision ${n.precision} sampler2DShadow;
		precision ${n.precision} samplerCubeShadow;
		precision ${n.precision} sampler2DArrayShadow;
		precision ${n.precision} isampler2D;
		precision ${n.precision} isampler3D;
		precision ${n.precision} isamplerCube;
		precision ${n.precision} isampler2DArray;
		precision ${n.precision} usampler2D;
		precision ${n.precision} usampler3D;
		precision ${n.precision} usamplerCube;
		precision ${n.precision} usampler2DArray;
		`),n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function QD(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===bu?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===Ol?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===r2&&(e="SHADOWMAP_TYPE_VSM"),e}function eO(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case wr:case fa:e="ENVMAP_TYPE_CUBE";break;case w3:e="ENVMAP_TYPE_CUBE_UV";break}return e}function tO(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case fa:e="ENVMAP_MODE_REFRACTION";break}return e}function nO(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case z4:e="ENVMAP_BLENDING_MULTIPLY";break;case db:e="ENVMAP_BLENDING_MIX";break;case hb:e="ENVMAP_BLENDING_ADD";break}return e}function iO(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function rO(n,e,t,i){const r=n.getContext(),a=t.defines;let s=t.vertexShader,o=t.fragmentShader;const l=QD(t),d=eO(t),h=tO(t),f=nO(t),p=iO(t),m=t.isWebGL2?"":GD(t),y=WD(t),b=XD(a),_=r.createProgram();let g,x,S=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b].filter(Go).join(`
`),g.length>0&&(g+=`
`),x=[m,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b].filter(Go).join(`
`),x.length>0&&(x+=`
`)):(g=[cv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Go).join(`
`),x=[m,cv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,b,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==I2?"#define TONE_MAPPING":"",t.toneMapping!==I2?Kt.tonemapping_pars_fragment:"",t.toneMapping!==I2?VD("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Kt.colorspace_pars_fragment,HD("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Go).join(`
`)),s=e7(s),s=sv(s,t),s=ov(s,t),o=e7(o),o=sv(o,t),o=ov(o,t),s=lv(s),o=lv(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(S=`#version 300 es
`,g=[y,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,x=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===Zh?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Zh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const E=S+g+s,A=S+x+o,P=rv(r,r.VERTEX_SHADER,E),C=rv(r,r.FRAGMENT_SHADER,A);r.attachShader(_,P),r.attachShader(_,C),t.index0AttributeName!==void 0?r.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(_,0,"position"),r.linkProgram(_);function N(ee){if(n.debug.checkShaderErrors){const he=r.getProgramInfoLog(_).trim(),q=r.getShaderInfoLog(P).trim(),ue=r.getShaderInfoLog(C).trim();let se=!0,ve=!0;if(r.getProgramParameter(_,r.LINK_STATUS)===!1)if(se=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,_,P,C);else{const z=av(r,P,"vertex"),K=av(r,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(_,r.VALIDATE_STATUS)+`

Material Name: `+ee.name+`
Material Type: `+ee.type+`

Program Info Log: `+he+`
`+z+`
`+K)}else he!==""?console.warn("THREE.WebGLProgram: Program Info Log:",he):(q===""||ue==="")&&(ve=!1);ve&&(ee.diagnostics={runnable:se,programLog:he,vertexShader:{log:q,prefix:g},fragmentShader:{log:ue,prefix:x}})}r.deleteShader(P),r.deleteShader(C),Y=new g5(r,_),T=YD(r,_)}let Y;this.getUniforms=function(){return Y===void 0&&N(this),Y};let T;this.getAttributes=function(){return T===void 0&&N(this),T};let R=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return R===!1&&(R=r.getProgramParameter(_,UD)),R},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=FD++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=P,this.fragmentShader=C,this}let aO=0;class sO{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),a=this._getShaderStage(i),s=this._getShaderCacheForMaterial(e);return s.has(r)===!1&&(s.add(r),r.usedTimes++),s.has(a)===!1&&(s.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new oO(e),t.set(e,i)),i}}class oO{constructor(e){this.id=aO++,this.code=e,this.usedTimes=0}}function lO(n,e,t,i,r,a,s){const o=new vs,l=new sO,d=new Set,h=[],f=r.isWebGL2,p=r.logarithmicDepthBuffer,m=r.vertexTextures;let y=r.precision;const b={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(T){return d.add(T),T===0?"uv":`uv${T}`}function g(T,R,ee,he,q){const ue=he.fog,se=q.geometry,ve=T.isMeshStandardMaterial?he.environment:null,z=(T.isMeshStandardMaterial?t:e).get(T.envMap||ve),K=z&&z.mapping===w3?z.image.height:null,Z=b[T.type];T.precision!==null&&(y=r.getMaxPrecision(T.precision),y!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",y,"instead."));const re=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,_e=re!==void 0?re.length:0;let je=0;se.morphAttributes.position!==void 0&&(je=1),se.morphAttributes.normal!==void 0&&(je=2),se.morphAttributes.color!==void 0&&(je=3);let ce,Ee,ze,Je;if(Z){const Be=l2[Z];ce=Be.vertexShader,Ee=Be.fragmentShader}else ce=T.vertexShader,Ee=T.fragmentShader,l.update(T),ze=l.getVertexShaderID(T),Je=l.getFragmentShaderID(T);const St=n.getRenderTarget(),pt=q.isInstancedMesh===!0,Tt=q.isBatchedMesh===!0,$e=!!T.map,X=!!T.matcap,Ne=!!z,Te=!!T.aoMap,De=!!T.lightMap,Pe=!!T.bumpMap,xt=!!T.normalMap,et=!!T.displacementMap,D=!!T.emissiveMap,k=!!T.metalnessMap,oe=!!T.roughnessMap,ke=T.anisotropy>0,Ae=T.clearcoat>0,Se=T.iridescence>0,nt=T.sheen>0,We=T.transmission>0,Ke=ke&&!!T.anisotropyMap,Mt=Ae&&!!T.clearcoatMap,Lt=Ae&&!!T.clearcoatNormalMap,Ie=Ae&&!!T.clearcoatRoughnessMap,Xt=Se&&!!T.iridescenceMap,Vt=Se&&!!T.iridescenceThicknessMap,de=nt&&!!T.sheenColorMap,yt=nt&&!!T.sheenRoughnessMap,st=!!T.specularMap,Q=!!T.specularColorMap,Ce=!!T.specularIntensityMap,tt=We&&!!T.transmissionMap,it=We&&!!T.thicknessMap,kt=!!T.gradientMap,G=!!T.alphaMap,Ue=T.alphaTest>0,W=!!T.alphaHash,J=!!T.extensions;let ne=I2;T.toneMapped&&(St===null||St.isXRRenderTarget===!0)&&(ne=n.toneMapping);const Me={isWebGL2:f,shaderID:Z,shaderType:T.type,shaderName:T.name,vertexShader:ce,fragmentShader:Ee,defines:T.defines,customVertexShaderID:ze,customFragmentShaderID:Je,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:y,batching:Tt,instancing:pt,instancingColor:pt&&q.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:St===null?n.outputColorSpace:St.isXRRenderTarget===!0?St.texture.colorSpace:B2,alphaToCoverage:!!T.alphaToCoverage,map:$e,matcap:X,envMap:Ne,envMapMode:Ne&&z.mapping,envMapCubeUVHeight:K,aoMap:Te,lightMap:De,bumpMap:Pe,normalMap:xt,displacementMap:m&&et,emissiveMap:D,normalMapObjectSpace:xt&&T.normalMapType===kb,normalMapTangentSpace:xt&&T.normalMapType===xa,metalnessMap:k,roughnessMap:oe,anisotropy:ke,anisotropyMap:Ke,clearcoat:Ae,clearcoatMap:Mt,clearcoatNormalMap:Lt,clearcoatRoughnessMap:Ie,iridescence:Se,iridescenceMap:Xt,iridescenceThicknessMap:Vt,sheen:nt,sheenColorMap:de,sheenRoughnessMap:yt,specularMap:st,specularColorMap:Q,specularIntensityMap:Ce,transmission:We,transmissionMap:tt,thicknessMap:it,gradientMap:kt,opaque:T.transparent===!1&&T.blending===ps&&T.alphaToCoverage===!1,alphaMap:G,alphaTest:Ue,alphaHash:W,combine:T.combine,mapUv:$e&&_(T.map.channel),aoMapUv:Te&&_(T.aoMap.channel),lightMapUv:De&&_(T.lightMap.channel),bumpMapUv:Pe&&_(T.bumpMap.channel),normalMapUv:xt&&_(T.normalMap.channel),displacementMapUv:et&&_(T.displacementMap.channel),emissiveMapUv:D&&_(T.emissiveMap.channel),metalnessMapUv:k&&_(T.metalnessMap.channel),roughnessMapUv:oe&&_(T.roughnessMap.channel),anisotropyMapUv:Ke&&_(T.anisotropyMap.channel),clearcoatMapUv:Mt&&_(T.clearcoatMap.channel),clearcoatNormalMapUv:Lt&&_(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ie&&_(T.clearcoatRoughnessMap.channel),iridescenceMapUv:Xt&&_(T.iridescenceMap.channel),iridescenceThicknessMapUv:Vt&&_(T.iridescenceThicknessMap.channel),sheenColorMapUv:de&&_(T.sheenColorMap.channel),sheenRoughnessMapUv:yt&&_(T.sheenRoughnessMap.channel),specularMapUv:st&&_(T.specularMap.channel),specularColorMapUv:Q&&_(T.specularColorMap.channel),specularIntensityMapUv:Ce&&_(T.specularIntensityMap.channel),transmissionMapUv:tt&&_(T.transmissionMap.channel),thicknessMapUv:it&&_(T.thicknessMap.channel),alphaMapUv:G&&_(T.alphaMap.channel),vertexTangents:!!se.attributes.tangent&&(xt||ke),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,pointsUvs:q.isPoints===!0&&!!se.attributes.uv&&($e||G),fog:!!ue,useFog:T.fog===!0,fogExp2:!!ue&&ue.isFogExp2,flatShading:T.flatShading===!0,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:q.isSkinnedMesh===!0,morphTargets:se.morphAttributes.position!==void 0,morphNormals:se.morphAttributes.normal!==void 0,morphColors:se.morphAttributes.color!==void 0,morphTargetsCount:_e,morphTextureStride:je,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numLightProbes:R.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:T.dithering,shadowMapEnabled:n.shadowMap.enabled&&ee.length>0,shadowMapType:n.shadowMap.type,toneMapping:ne,useLegacyLights:n._useLegacyLights,decodeVideoTexture:$e&&T.map.isVideoTexture===!0&&d1.getTransfer(T.map.colorSpace)===M1,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===Hi,flipSided:T.side===Kn,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:J&&T.extensions.derivatives===!0,extensionFragDepth:J&&T.extensions.fragDepth===!0,extensionDrawBuffers:J&&T.extensions.drawBuffers===!0,extensionShaderTextureLOD:J&&T.extensions.shaderTextureLOD===!0,extensionClipCullDistance:J&&T.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:J&&T.extensions.multiDraw===!0&&i.has("WEBGL_multi_draw"),rendererExtensionFragDepth:f||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||i.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()};return Me.vertexUv1s=d.has(1),Me.vertexUv2s=d.has(2),Me.vertexUv3s=d.has(3),d.clear(),Me}function x(T){const R=[];if(T.shaderID?R.push(T.shaderID):(R.push(T.customVertexShaderID),R.push(T.customFragmentShaderID)),T.defines!==void 0)for(const ee in T.defines)R.push(ee),R.push(T.defines[ee]);return T.isRawShaderMaterial===!1&&(S(R,T),E(R,T),R.push(n.outputColorSpace)),R.push(T.customProgramCacheKey),R.join()}function S(T,R){T.push(R.precision),T.push(R.outputColorSpace),T.push(R.envMapMode),T.push(R.envMapCubeUVHeight),T.push(R.mapUv),T.push(R.alphaMapUv),T.push(R.lightMapUv),T.push(R.aoMapUv),T.push(R.bumpMapUv),T.push(R.normalMapUv),T.push(R.displacementMapUv),T.push(R.emissiveMapUv),T.push(R.metalnessMapUv),T.push(R.roughnessMapUv),T.push(R.anisotropyMapUv),T.push(R.clearcoatMapUv),T.push(R.clearcoatNormalMapUv),T.push(R.clearcoatRoughnessMapUv),T.push(R.iridescenceMapUv),T.push(R.iridescenceThicknessMapUv),T.push(R.sheenColorMapUv),T.push(R.sheenRoughnessMapUv),T.push(R.specularMapUv),T.push(R.specularColorMapUv),T.push(R.specularIntensityMapUv),T.push(R.transmissionMapUv),T.push(R.thicknessMapUv),T.push(R.combine),T.push(R.fogExp2),T.push(R.sizeAttenuation),T.push(R.morphTargetsCount),T.push(R.morphAttributeCount),T.push(R.numDirLights),T.push(R.numPointLights),T.push(R.numSpotLights),T.push(R.numSpotLightMaps),T.push(R.numHemiLights),T.push(R.numRectAreaLights),T.push(R.numDirLightShadows),T.push(R.numPointLightShadows),T.push(R.numSpotLightShadows),T.push(R.numSpotLightShadowsWithMaps),T.push(R.numLightProbes),T.push(R.shadowMapType),T.push(R.toneMapping),T.push(R.numClippingPlanes),T.push(R.numClipIntersection),T.push(R.depthPacking)}function E(T,R){o.disableAll(),R.isWebGL2&&o.enable(0),R.supportsVertexTextures&&o.enable(1),R.instancing&&o.enable(2),R.instancingColor&&o.enable(3),R.matcap&&o.enable(4),R.envMap&&o.enable(5),R.normalMapObjectSpace&&o.enable(6),R.normalMapTangentSpace&&o.enable(7),R.clearcoat&&o.enable(8),R.iridescence&&o.enable(9),R.alphaTest&&o.enable(10),R.vertexColors&&o.enable(11),R.vertexAlphas&&o.enable(12),R.vertexUv1s&&o.enable(13),R.vertexUv2s&&o.enable(14),R.vertexUv3s&&o.enable(15),R.vertexTangents&&o.enable(16),R.anisotropy&&o.enable(17),R.alphaHash&&o.enable(18),R.batching&&o.enable(19),T.push(o.mask),o.disableAll(),R.fog&&o.enable(0),R.useFog&&o.enable(1),R.flatShading&&o.enable(2),R.logarithmicDepthBuffer&&o.enable(3),R.skinning&&o.enable(4),R.morphTargets&&o.enable(5),R.morphNormals&&o.enable(6),R.morphColors&&o.enable(7),R.premultipliedAlpha&&o.enable(8),R.shadowMapEnabled&&o.enable(9),R.useLegacyLights&&o.enable(10),R.doubleSided&&o.enable(11),R.flipSided&&o.enable(12),R.useDepthPacking&&o.enable(13),R.dithering&&o.enable(14),R.transmission&&o.enable(15),R.sheen&&o.enable(16),R.opaque&&o.enable(17),R.pointsUvs&&o.enable(18),R.decodeVideoTexture&&o.enable(19),R.alphaToCoverage&&o.enable(20),T.push(o.mask)}function A(T){const R=b[T.type];let ee;if(R){const he=l2[R];ee=Wb.clone(he.uniforms)}else ee=T.uniforms;return ee}function P(T,R){let ee;for(let he=0,q=h.length;he<q;he++){const ue=h[he];if(ue.cacheKey===R){ee=ue,++ee.usedTimes;break}}return ee===void 0&&(ee=new rO(n,R,T,a),h.push(ee)),ee}function C(T){if(--T.usedTimes===0){const R=h.indexOf(T);h[R]=h[h.length-1],h.pop(),T.destroy()}}function N(T){l.remove(T)}function Y(){l.dispose()}return{getParameters:g,getProgramCacheKey:x,getUniforms:A,acquireProgram:P,releaseProgram:C,releaseShaderCache:N,programs:h,dispose:Y}}function cO(){let n=new WeakMap;function e(a){let s=n.get(a);return s===void 0&&(s={},n.set(a,s)),s}function t(a){n.delete(a)}function i(a,s,o){n.get(a)[s]=o}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function uO(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function uv(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function dv(){const n=[];let e=0;const t=[],i=[],r=[];function a(){e=0,t.length=0,i.length=0,r.length=0}function s(f,p,m,y,b,_){let g=n[e];return g===void 0?(g={id:f.id,object:f,geometry:p,material:m,groupOrder:y,renderOrder:f.renderOrder,z:b,group:_},n[e]=g):(g.id=f.id,g.object=f,g.geometry=p,g.material=m,g.groupOrder=y,g.renderOrder=f.renderOrder,g.z=b,g.group=_),e++,g}function o(f,p,m,y,b,_){const g=s(f,p,m,y,b,_);m.transmission>0?i.push(g):m.transparent===!0?r.push(g):t.push(g)}function l(f,p,m,y,b,_){const g=s(f,p,m,y,b,_);m.transmission>0?i.unshift(g):m.transparent===!0?r.unshift(g):t.unshift(g)}function d(f,p){t.length>1&&t.sort(f||uO),i.length>1&&i.sort(p||uv),r.length>1&&r.sort(p||uv)}function h(){for(let f=e,p=n.length;f<p;f++){const m=n[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:i,transparent:r,init:a,push:o,unshift:l,finish:h,sort:d}}function dO(){let n=new WeakMap;function e(i,r){const a=n.get(i);let s;return a===void 0?(s=new dv,n.set(i,[s])):r>=a.length?(s=new dv,a.push(s)):s=a[r],s}function t(){n=new WeakMap}return{get:e,dispose:t}}function hO(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new j,color:new gt};break;case"SpotLight":t={position:new j,direction:new j,color:new gt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new j,color:new gt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new j,skyColor:new gt,groundColor:new gt};break;case"RectAreaLight":t={color:new gt,position:new j,halfWidth:new j,halfHeight:new j};break}return n[e.id]=t,t}}}function fO(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let pO=0;function mO(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function gO(n,e){const t=new hO,i=fO(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)r.probe.push(new j);const a=new j,s=new Ht,o=new Ht;function l(h,f){let p=0,m=0,y=0;for(let ee=0;ee<9;ee++)r.probe[ee].set(0,0,0);let b=0,_=0,g=0,x=0,S=0,E=0,A=0,P=0,C=0,N=0,Y=0;h.sort(mO);const T=f===!0?Math.PI:1;for(let ee=0,he=h.length;ee<he;ee++){const q=h[ee],ue=q.color,se=q.intensity,ve=q.distance,z=q.shadow&&q.shadow.map?q.shadow.map.texture:null;if(q.isAmbientLight)p+=ue.r*se*T,m+=ue.g*se*T,y+=ue.b*se*T;else if(q.isLightProbe){for(let K=0;K<9;K++)r.probe[K].addScaledVector(q.sh.coefficients[K],se);Y++}else if(q.isDirectionalLight){const K=t.get(q);if(K.color.copy(q.color).multiplyScalar(q.intensity*T),q.castShadow){const Z=q.shadow,re=i.get(q);re.shadowBias=Z.bias,re.shadowNormalBias=Z.normalBias,re.shadowRadius=Z.radius,re.shadowMapSize=Z.mapSize,r.directionalShadow[b]=re,r.directionalShadowMap[b]=z,r.directionalShadowMatrix[b]=q.shadow.matrix,E++}r.directional[b]=K,b++}else if(q.isSpotLight){const K=t.get(q);K.position.setFromMatrixPosition(q.matrixWorld),K.color.copy(ue).multiplyScalar(se*T),K.distance=ve,K.coneCos=Math.cos(q.angle),K.penumbraCos=Math.cos(q.angle*(1-q.penumbra)),K.decay=q.decay,r.spot[g]=K;const Z=q.shadow;if(q.map&&(r.spotLightMap[C]=q.map,C++,Z.updateMatrices(q),q.castShadow&&N++),r.spotLightMatrix[g]=Z.matrix,q.castShadow){const re=i.get(q);re.shadowBias=Z.bias,re.shadowNormalBias=Z.normalBias,re.shadowRadius=Z.radius,re.shadowMapSize=Z.mapSize,r.spotShadow[g]=re,r.spotShadowMap[g]=z,P++}g++}else if(q.isRectAreaLight){const K=t.get(q);K.color.copy(ue).multiplyScalar(se),K.halfWidth.set(q.width*.5,0,0),K.halfHeight.set(0,q.height*.5,0),r.rectArea[x]=K,x++}else if(q.isPointLight){const K=t.get(q);if(K.color.copy(q.color).multiplyScalar(q.intensity*T),K.distance=q.distance,K.decay=q.decay,q.castShadow){const Z=q.shadow,re=i.get(q);re.shadowBias=Z.bias,re.shadowNormalBias=Z.normalBias,re.shadowRadius=Z.radius,re.shadowMapSize=Z.mapSize,re.shadowCameraNear=Z.camera.near,re.shadowCameraFar=Z.camera.far,r.pointShadow[_]=re,r.pointShadowMap[_]=z,r.pointShadowMatrix[_]=q.shadow.matrix,A++}r.point[_]=K,_++}else if(q.isHemisphereLight){const K=t.get(q);K.skyColor.copy(q.color).multiplyScalar(se*T),K.groundColor.copy(q.groundColor).multiplyScalar(se*T),r.hemi[S]=K,S++}}x>0&&(e.isWebGL2?n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Qe.LTC_FLOAT_1,r.rectAreaLTC2=Qe.LTC_FLOAT_2):(r.rectAreaLTC1=Qe.LTC_HALF_1,r.rectAreaLTC2=Qe.LTC_HALF_2):n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Qe.LTC_FLOAT_1,r.rectAreaLTC2=Qe.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Qe.LTC_HALF_1,r.rectAreaLTC2=Qe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=p,r.ambient[1]=m,r.ambient[2]=y;const R=r.hash;(R.directionalLength!==b||R.pointLength!==_||R.spotLength!==g||R.rectAreaLength!==x||R.hemiLength!==S||R.numDirectionalShadows!==E||R.numPointShadows!==A||R.numSpotShadows!==P||R.numSpotMaps!==C||R.numLightProbes!==Y)&&(r.directional.length=b,r.spot.length=g,r.rectArea.length=x,r.point.length=_,r.hemi.length=S,r.directionalShadow.length=E,r.directionalShadowMap.length=E,r.pointShadow.length=A,r.pointShadowMap.length=A,r.spotShadow.length=P,r.spotShadowMap.length=P,r.directionalShadowMatrix.length=E,r.pointShadowMatrix.length=A,r.spotLightMatrix.length=P+C-N,r.spotLightMap.length=C,r.numSpotLightShadowsWithMaps=N,r.numLightProbes=Y,R.directionalLength=b,R.pointLength=_,R.spotLength=g,R.rectAreaLength=x,R.hemiLength=S,R.numDirectionalShadows=E,R.numPointShadows=A,R.numSpotShadows=P,R.numSpotMaps=C,R.numLightProbes=Y,r.version=pO++)}function d(h,f){let p=0,m=0,y=0,b=0,_=0;const g=f.matrixWorldInverse;for(let x=0,S=h.length;x<S;x++){const E=h[x];if(E.isDirectionalLight){const A=r.directional[p];A.direction.setFromMatrixPosition(E.matrixWorld),a.setFromMatrixPosition(E.target.matrixWorld),A.direction.sub(a),A.direction.transformDirection(g),p++}else if(E.isSpotLight){const A=r.spot[y];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(g),A.direction.setFromMatrixPosition(E.matrixWorld),a.setFromMatrixPosition(E.target.matrixWorld),A.direction.sub(a),A.direction.transformDirection(g),y++}else if(E.isRectAreaLight){const A=r.rectArea[b];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(g),o.identity(),s.copy(E.matrixWorld),s.premultiply(g),o.extractRotation(s),A.halfWidth.set(E.width*.5,0,0),A.halfHeight.set(0,E.height*.5,0),A.halfWidth.applyMatrix4(o),A.halfHeight.applyMatrix4(o),b++}else if(E.isPointLight){const A=r.point[m];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(g),m++}else if(E.isHemisphereLight){const A=r.hemi[_];A.direction.setFromMatrixPosition(E.matrixWorld),A.direction.transformDirection(g),_++}}}return{setup:l,setupView:d,state:r}}function hv(n,e){const t=new gO(n,e),i=[],r=[];function a(){i.length=0,r.length=0}function s(f){i.push(f)}function o(f){r.push(f)}function l(f){t.setup(i,f)}function d(f){t.setupView(i,f)}return{init:a,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:d,pushLight:s,pushShadow:o}}function vO(n,e){let t=new WeakMap;function i(a,s=0){const o=t.get(a);let l;return o===void 0?(l=new hv(n,e),t.set(a,[l])):s>=o.length?(l=new hv(n,e),o.push(l)):l=o[s],l}function r(){t=new WeakMap}return{get:i,dispose:r}}class j9 extends En{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ab,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class H9 extends En{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const yO=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,_O=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function xO(n,e,t){let i=new W4;const r=new Le,a=new Le,s=new h1,o=new j9({depthPacking:Rb}),l=new H9,d={},h=t.maxTextureSize,f={[xr]:Kn,[Kn]:xr,[Hi]:Hi},p=new f2({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Le},radius:{value:4}},vertexShader:yO,fragmentShader:_O}),m=p.clone();m.defines.HORIZONTAL_PASS=1;const y=new Zt;y.setAttribute("position",new p1(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new an(y,p),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=bu;let g=this.type;this.render=function(P,C,N){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||P.length===0)return;const Y=n.getRenderTarget(),T=n.getActiveCubeFace(),R=n.getActiveMipmapLevel(),ee=n.state;ee.setBlending(mr),ee.buffers.color.setClear(1,1,1,1),ee.buffers.depth.setTest(!0),ee.setScissorTest(!1);const he=g!==r2&&this.type===r2,q=g===r2&&this.type!==r2;for(let ue=0,se=P.length;ue<se;ue++){const ve=P[ue],z=ve.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",ve,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;r.copy(z.mapSize);const K=z.getFrameExtents();if(r.multiply(K),a.copy(z.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/K.x),r.x=a.x*K.x,z.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/K.y),r.y=a.y*K.y,z.mapSize.y=a.y)),z.map===null||he===!0||q===!0){const re=this.type!==r2?{minFilter:J1,magFilter:J1}:{};z.map!==null&&z.map.dispose(),z.map=new h2(r.x,r.y,re),z.map.texture.name=ve.name+".shadowMap",z.camera.updateProjectionMatrix()}n.setRenderTarget(z.map),n.clear();const Z=z.getViewportCount();for(let re=0;re<Z;re++){const _e=z.getViewport(re);s.set(a.x*_e.x,a.y*_e.y,a.x*_e.z,a.y*_e.w),ee.viewport(s),z.updateMatrices(ve,re),i=z.getFrustum(),E(C,N,z.camera,ve,this.type)}z.isPointLightShadow!==!0&&this.type===r2&&x(z,N),z.needsUpdate=!1}g=this.type,_.needsUpdate=!1,n.setRenderTarget(Y,T,R)};function x(P,C){const N=e.update(b);p.defines.VSM_SAMPLES!==P.blurSamples&&(p.defines.VSM_SAMPLES=P.blurSamples,m.defines.VSM_SAMPLES=P.blurSamples,p.needsUpdate=!0,m.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new h2(r.x,r.y)),p.uniforms.shadow_pass.value=P.map.texture,p.uniforms.resolution.value=P.mapSize,p.uniforms.radius.value=P.radius,n.setRenderTarget(P.mapPass),n.clear(),n.renderBufferDirect(C,null,N,p,b,null),m.uniforms.shadow_pass.value=P.mapPass.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,n.setRenderTarget(P.map),n.clear(),n.renderBufferDirect(C,null,N,m,b,null)}function S(P,C,N,Y){let T=null;const R=N.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(R!==void 0)T=R;else if(T=N.isPointLight===!0?l:o,n.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const ee=T.uuid,he=C.uuid;let q=d[ee];q===void 0&&(q={},d[ee]=q);let ue=q[he];ue===void 0&&(ue=T.clone(),q[he]=ue,C.addEventListener("dispose",A)),T=ue}if(T.visible=C.visible,T.wireframe=C.wireframe,Y===r2?T.side=C.shadowSide!==null?C.shadowSide:C.side:T.side=C.shadowSide!==null?C.shadowSide:f[C.side],T.alphaMap=C.alphaMap,T.alphaTest=C.alphaTest,T.map=C.map,T.clipShadows=C.clipShadows,T.clippingPlanes=C.clippingPlanes,T.clipIntersection=C.clipIntersection,T.displacementMap=C.displacementMap,T.displacementScale=C.displacementScale,T.displacementBias=C.displacementBias,T.wireframeLinewidth=C.wireframeLinewidth,T.linewidth=C.linewidth,N.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const ee=n.properties.get(T);ee.light=N}return T}function E(P,C,N,Y,T){if(P.visible===!1)return;if(P.layers.test(C.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&T===r2)&&(!P.frustumCulled||i.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,P.matrixWorld);const he=e.update(P),q=P.material;if(Array.isArray(q)){const ue=he.groups;for(let se=0,ve=ue.length;se<ve;se++){const z=ue[se],K=q[z.materialIndex];if(K&&K.visible){const Z=S(P,K,Y,T);P.onBeforeShadow(n,P,C,N,he,Z,z),n.renderBufferDirect(N,null,he,Z,P,z),P.onAfterShadow(n,P,C,N,he,Z,z)}}}else if(q.visible){const ue=S(P,q,Y,T);P.onBeforeShadow(n,P,C,N,he,ue,null),n.renderBufferDirect(N,null,he,ue,P,null),P.onAfterShadow(n,P,C,N,he,ue,null)}}const ee=P.children;for(let he=0,q=ee.length;he<q;he++)E(ee[he],C,N,Y,T)}function A(P){P.target.removeEventListener("dispose",A);for(const N in d){const Y=d[N],T=P.target.uuid;T in Y&&(Y[T].dispose(),delete Y[T])}}}function wO(n,e,t){const i=t.isWebGL2;function r(){let G=!1;const Ue=new h1;let W=null;const J=new h1(0,0,0,0);return{setMask:function(ne){W!==ne&&!G&&(n.colorMask(ne,ne,ne,ne),W=ne)},setLocked:function(ne){G=ne},setClear:function(ne,Me,Be,mt,ut){ut===!0&&(ne*=mt,Me*=mt,Be*=mt),Ue.set(ne,Me,Be,mt),J.equals(Ue)===!1&&(n.clearColor(ne,Me,Be,mt),J.copy(Ue))},reset:function(){G=!1,W=null,J.set(-1,0,0,0)}}}function a(){let G=!1,Ue=null,W=null,J=null;return{setTest:function(ne){ne?pt(n.DEPTH_TEST):Tt(n.DEPTH_TEST)},setMask:function(ne){Ue!==ne&&!G&&(n.depthMask(ne),Ue=ne)},setFunc:function(ne){if(W!==ne){switch(ne){case rb:n.depthFunc(n.NEVER);break;case ab:n.depthFunc(n.ALWAYS);break;case sb:n.depthFunc(n.LESS);break;case l4:n.depthFunc(n.LEQUAL);break;case ob:n.depthFunc(n.EQUAL);break;case lb:n.depthFunc(n.GEQUAL);break;case cb:n.depthFunc(n.GREATER);break;case ub:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}W=ne}},setLocked:function(ne){G=ne},setClear:function(ne){J!==ne&&(n.clearDepth(ne),J=ne)},reset:function(){G=!1,Ue=null,W=null,J=null}}}function s(){let G=!1,Ue=null,W=null,J=null,ne=null,Me=null,Be=null,mt=null,ut=null;return{setTest:function(qe){G||(qe?pt(n.STENCIL_TEST):Tt(n.STENCIL_TEST))},setMask:function(qe){Ue!==qe&&!G&&(n.stencilMask(qe),Ue=qe)},setFunc:function(qe,ot,Bt){(W!==qe||J!==ot||ne!==Bt)&&(n.stencilFunc(qe,ot,Bt),W=qe,J=ot,ne=Bt)},setOp:function(qe,ot,Bt){(Me!==qe||Be!==ot||mt!==Bt)&&(n.stencilOp(qe,ot,Bt),Me=qe,Be=ot,mt=Bt)},setLocked:function(qe){G=qe},setClear:function(qe){ut!==qe&&(n.clearStencil(qe),ut=qe)},reset:function(){G=!1,Ue=null,W=null,J=null,ne=null,Me=null,Be=null,mt=null,ut=null}}}const o=new r,l=new a,d=new s,h=new WeakMap,f=new WeakMap;let p={},m={},y=new WeakMap,b=[],_=null,g=!1,x=null,S=null,E=null,A=null,P=null,C=null,N=null,Y=new gt(0,0,0),T=0,R=!1,ee=null,he=null,q=null,ue=null,se=null;const ve=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,K=0;const Z=n.getParameter(n.VERSION);Z.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(Z)[1]),z=K>=1):Z.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),z=K>=2);let re=null,_e={};const je=n.getParameter(n.SCISSOR_BOX),ce=n.getParameter(n.VIEWPORT),Ee=new h1().fromArray(je),ze=new h1().fromArray(ce);function Je(G,Ue,W,J){const ne=new Uint8Array(4),Me=n.createTexture();n.bindTexture(G,Me),n.texParameteri(G,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(G,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let Be=0;Be<W;Be++)i&&(G===n.TEXTURE_3D||G===n.TEXTURE_2D_ARRAY)?n.texImage3D(Ue,0,n.RGBA,1,1,J,0,n.RGBA,n.UNSIGNED_BYTE,ne):n.texImage2D(Ue+Be,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,ne);return Me}const St={};St[n.TEXTURE_2D]=Je(n.TEXTURE_2D,n.TEXTURE_2D,1),St[n.TEXTURE_CUBE_MAP]=Je(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(St[n.TEXTURE_2D_ARRAY]=Je(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),St[n.TEXTURE_3D]=Je(n.TEXTURE_3D,n.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),d.setClear(0),pt(n.DEPTH_TEST),l.setFunc(l4),et(!1),D(yh),pt(n.CULL_FACE),Pe(mr);function pt(G){p[G]!==!0&&(n.enable(G),p[G]=!0)}function Tt(G){p[G]!==!1&&(n.disable(G),p[G]=!1)}function $e(G,Ue){return m[G]!==Ue?(n.bindFramebuffer(G,Ue),m[G]=Ue,i&&(G===n.DRAW_FRAMEBUFFER&&(m[n.FRAMEBUFFER]=Ue),G===n.FRAMEBUFFER&&(m[n.DRAW_FRAMEBUFFER]=Ue)),!0):!1}function X(G,Ue){let W=b,J=!1;if(G)if(W=y.get(Ue),W===void 0&&(W=[],y.set(Ue,W)),G.isWebGLMultipleRenderTargets){const ne=G.texture;if(W.length!==ne.length||W[0]!==n.COLOR_ATTACHMENT0){for(let Me=0,Be=ne.length;Me<Be;Me++)W[Me]=n.COLOR_ATTACHMENT0+Me;W.length=ne.length,J=!0}}else W[0]!==n.COLOR_ATTACHMENT0&&(W[0]=n.COLOR_ATTACHMENT0,J=!0);else W[0]!==n.BACK&&(W[0]=n.BACK,J=!0);J&&(t.isWebGL2?n.drawBuffers(W):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(W))}function Ne(G){return _!==G?(n.useProgram(G),_=G,!0):!1}const Te={[Kr]:n.FUNC_ADD,[Vw]:n.FUNC_SUBTRACT,[Gw]:n.FUNC_REVERSE_SUBTRACT};if(i)Te[bh]=n.MIN,Te[Sh]=n.MAX;else{const G=e.get("EXT_blend_minmax");G!==null&&(Te[bh]=G.MIN_EXT,Te[Sh]=G.MAX_EXT)}const De={[Ww]:n.ZERO,[Xw]:n.ONE,[Yw]:n.SRC_COLOR,[V5]:n.SRC_ALPHA,[Qw]:n.SRC_ALPHA_SATURATE,[Zw]:n.DST_COLOR,[$w]:n.DST_ALPHA,[qw]:n.ONE_MINUS_SRC_COLOR,[G5]:n.ONE_MINUS_SRC_ALPHA,[Jw]:n.ONE_MINUS_DST_COLOR,[Kw]:n.ONE_MINUS_DST_ALPHA,[eb]:n.CONSTANT_COLOR,[tb]:n.ONE_MINUS_CONSTANT_COLOR,[nb]:n.CONSTANT_ALPHA,[ib]:n.ONE_MINUS_CONSTANT_ALPHA};function Pe(G,Ue,W,J,ne,Me,Be,mt,ut,qe){if(G===mr){g===!0&&(Tt(n.BLEND),g=!1);return}if(g===!1&&(pt(n.BLEND),g=!0),G!==Hw){if(G!==x||qe!==R){if((S!==Kr||P!==Kr)&&(n.blendEquation(n.FUNC_ADD),S=Kr,P=Kr),qe)switch(G){case ps:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case _h:n.blendFunc(n.ONE,n.ONE);break;case xh:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case wh:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case ps:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case _h:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case xh:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case wh:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}E=null,A=null,C=null,N=null,Y.set(0,0,0),T=0,x=G,R=qe}return}ne=ne||Ue,Me=Me||W,Be=Be||J,(Ue!==S||ne!==P)&&(n.blendEquationSeparate(Te[Ue],Te[ne]),S=Ue,P=ne),(W!==E||J!==A||Me!==C||Be!==N)&&(n.blendFuncSeparate(De[W],De[J],De[Me],De[Be]),E=W,A=J,C=Me,N=Be),(mt.equals(Y)===!1||ut!==T)&&(n.blendColor(mt.r,mt.g,mt.b,ut),Y.copy(mt),T=ut),x=G,R=!1}function xt(G,Ue){G.side===Hi?Tt(n.CULL_FACE):pt(n.CULL_FACE);let W=G.side===Kn;Ue&&(W=!W),et(W),G.blending===ps&&G.transparent===!1?Pe(mr):Pe(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),l.setFunc(G.depthFunc),l.setTest(G.depthTest),l.setMask(G.depthWrite),o.setMask(G.colorWrite);const J=G.stencilWrite;d.setTest(J),J&&(d.setMask(G.stencilWriteMask),d.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),d.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),oe(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?pt(n.SAMPLE_ALPHA_TO_COVERAGE):Tt(n.SAMPLE_ALPHA_TO_COVERAGE)}function et(G){ee!==G&&(G?n.frontFace(n.CW):n.frontFace(n.CCW),ee=G)}function D(G){G!==Fw?(pt(n.CULL_FACE),G!==he&&(G===yh?n.cullFace(n.BACK):G===zw?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):Tt(n.CULL_FACE),he=G}function k(G){G!==q&&(z&&n.lineWidth(G),q=G)}function oe(G,Ue,W){G?(pt(n.POLYGON_OFFSET_FILL),(ue!==Ue||se!==W)&&(n.polygonOffset(Ue,W),ue=Ue,se=W)):Tt(n.POLYGON_OFFSET_FILL)}function ke(G){G?pt(n.SCISSOR_TEST):Tt(n.SCISSOR_TEST)}function Ae(G){G===void 0&&(G=n.TEXTURE0+ve-1),re!==G&&(n.activeTexture(G),re=G)}function Se(G,Ue,W){W===void 0&&(re===null?W=n.TEXTURE0+ve-1:W=re);let J=_e[W];J===void 0&&(J={type:void 0,texture:void 0},_e[W]=J),(J.type!==G||J.texture!==Ue)&&(re!==W&&(n.activeTexture(W),re=W),n.bindTexture(G,Ue||St[G]),J.type=G,J.texture=Ue)}function nt(){const G=_e[re];G!==void 0&&G.type!==void 0&&(n.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function We(){try{n.compressedTexImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ke(){try{n.compressedTexImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Mt(){try{n.texSubImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Lt(){try{n.texSubImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ie(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Xt(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Vt(){try{n.texStorage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function de(){try{n.texStorage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function yt(){try{n.texImage2D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function st(){try{n.texImage3D.apply(n,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Q(G){Ee.equals(G)===!1&&(n.scissor(G.x,G.y,G.z,G.w),Ee.copy(G))}function Ce(G){ze.equals(G)===!1&&(n.viewport(G.x,G.y,G.z,G.w),ze.copy(G))}function tt(G,Ue){let W=f.get(Ue);W===void 0&&(W=new WeakMap,f.set(Ue,W));let J=W.get(G);J===void 0&&(J=n.getUniformBlockIndex(Ue,G.name),W.set(G,J))}function it(G,Ue){const J=f.get(Ue).get(G);h.get(Ue)!==J&&(n.uniformBlockBinding(Ue,J,G.__bindingPointIndex),h.set(Ue,J))}function kt(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),i===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),p={},re=null,_e={},m={},y=new WeakMap,b=[],_=null,g=!1,x=null,S=null,E=null,A=null,P=null,C=null,N=null,Y=new gt(0,0,0),T=0,R=!1,ee=null,he=null,q=null,ue=null,se=null,Ee.set(0,0,n.canvas.width,n.canvas.height),ze.set(0,0,n.canvas.width,n.canvas.height),o.reset(),l.reset(),d.reset()}return{buffers:{color:o,depth:l,stencil:d},enable:pt,disable:Tt,bindFramebuffer:$e,drawBuffers:X,useProgram:Ne,setBlending:Pe,setMaterial:xt,setFlipSided:et,setCullFace:D,setLineWidth:k,setPolygonOffset:oe,setScissorTest:ke,activeTexture:Ae,bindTexture:Se,unbindTexture:nt,compressedTexImage2D:We,compressedTexImage3D:Ke,texImage2D:yt,texImage3D:st,updateUBOMapping:tt,uniformBlockBinding:it,texStorage2D:Vt,texStorage3D:de,texSubImage2D:Mt,texSubImage3D:Lt,compressedTexSubImage2D:Ie,compressedTexSubImage3D:Xt,scissor:Q,viewport:Ce,reset:kt}}function bO(n,e,t,i,r,a,s){const o=r.isWebGL2,l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new WeakMap;let f;const p=new WeakMap;let m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(D,k){return m?new OffscreenCanvas(D,k):w4("canvas")}function b(D,k,oe,ke){let Ae=1;if((D.width>ke||D.height>ke)&&(Ae=ke/Math.max(D.width,D.height)),Ae<1||k===!0)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap){const Se=k?Y5:Math.floor,nt=Se(Ae*D.width),We=Se(Ae*D.height);f===void 0&&(f=y(nt,We));const Ke=oe?y(nt,We):f;return Ke.width=nt,Ke.height=We,Ke.getContext("2d").drawImage(D,0,0,nt,We),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+nt+"x"+We+")."),Ke}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D;return D}function _(D){return Jh(D.width)&&Jh(D.height)}function g(D){return o?!1:D.wrapS!==On||D.wrapT!==On||D.minFilter!==J1&&D.minFilter!==N1}function x(D,k){return D.generateMipmaps&&k&&D.minFilter!==J1&&D.minFilter!==N1}function S(D){n.generateMipmap(D)}function E(D,k,oe,ke,Ae=!1){if(o===!1)return k;if(D!==null){if(n[D]!==void 0)return n[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let Se=k;if(k===n.RED&&(oe===n.FLOAT&&(Se=n.R32F),oe===n.HALF_FLOAT&&(Se=n.R16F),oe===n.UNSIGNED_BYTE&&(Se=n.R8)),k===n.RED_INTEGER&&(oe===n.UNSIGNED_BYTE&&(Se=n.R8UI),oe===n.UNSIGNED_SHORT&&(Se=n.R16UI),oe===n.UNSIGNED_INT&&(Se=n.R32UI),oe===n.BYTE&&(Se=n.R8I),oe===n.SHORT&&(Se=n.R16I),oe===n.INT&&(Se=n.R32I)),k===n.RG&&(oe===n.FLOAT&&(Se=n.RG32F),oe===n.HALF_FLOAT&&(Se=n.RG16F),oe===n.UNSIGNED_BYTE&&(Se=n.RG8)),k===n.RGBA){const nt=Ae?g4:d1.getTransfer(ke);oe===n.FLOAT&&(Se=n.RGBA32F),oe===n.HALF_FLOAT&&(Se=n.RGBA16F),oe===n.UNSIGNED_BYTE&&(Se=nt===M1?n.SRGB8_ALPHA8:n.RGBA8),oe===n.UNSIGNED_SHORT_4_4_4_4&&(Se=n.RGBA4),oe===n.UNSIGNED_SHORT_5_5_5_1&&(Se=n.RGB5_A1)}return(Se===n.R16F||Se===n.R32F||Se===n.RG16F||Se===n.RG32F||Se===n.RGBA16F||Se===n.RGBA32F)&&e.get("EXT_color_buffer_float"),Se}function A(D,k,oe){return x(D,oe)===!0||D.isFramebufferTexture&&D.minFilter!==J1&&D.minFilter!==N1?Math.log2(Math.max(k.width,k.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?k.mipmaps.length:1}function P(D){return D===J1||D===W5||D===es?n.NEAREST:n.LINEAR}function C(D){const k=D.target;k.removeEventListener("dispose",C),Y(k),k.isVideoTexture&&h.delete(k)}function N(D){const k=D.target;k.removeEventListener("dispose",N),R(k)}function Y(D){const k=i.get(D);if(k.__webglInit===void 0)return;const oe=D.source,ke=p.get(oe);if(ke){const Ae=ke[k.__cacheKey];Ae.usedTimes--,Ae.usedTimes===0&&T(D),Object.keys(ke).length===0&&p.delete(oe)}i.remove(D)}function T(D){const k=i.get(D);n.deleteTexture(k.__webglTexture);const oe=D.source,ke=p.get(oe);delete ke[k.__cacheKey],s.memory.textures--}function R(D){const k=D.texture,oe=i.get(D),ke=i.get(k);if(ke.__webglTexture!==void 0&&(n.deleteTexture(ke.__webglTexture),s.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let Ae=0;Ae<6;Ae++){if(Array.isArray(oe.__webglFramebuffer[Ae]))for(let Se=0;Se<oe.__webglFramebuffer[Ae].length;Se++)n.deleteFramebuffer(oe.__webglFramebuffer[Ae][Se]);else n.deleteFramebuffer(oe.__webglFramebuffer[Ae]);oe.__webglDepthbuffer&&n.deleteRenderbuffer(oe.__webglDepthbuffer[Ae])}else{if(Array.isArray(oe.__webglFramebuffer))for(let Ae=0;Ae<oe.__webglFramebuffer.length;Ae++)n.deleteFramebuffer(oe.__webglFramebuffer[Ae]);else n.deleteFramebuffer(oe.__webglFramebuffer);if(oe.__webglDepthbuffer&&n.deleteRenderbuffer(oe.__webglDepthbuffer),oe.__webglMultisampledFramebuffer&&n.deleteFramebuffer(oe.__webglMultisampledFramebuffer),oe.__webglColorRenderbuffer)for(let Ae=0;Ae<oe.__webglColorRenderbuffer.length;Ae++)oe.__webglColorRenderbuffer[Ae]&&n.deleteRenderbuffer(oe.__webglColorRenderbuffer[Ae]);oe.__webglDepthRenderbuffer&&n.deleteRenderbuffer(oe.__webglDepthRenderbuffer)}if(D.isWebGLMultipleRenderTargets)for(let Ae=0,Se=k.length;Ae<Se;Ae++){const nt=i.get(k[Ae]);nt.__webglTexture&&(n.deleteTexture(nt.__webglTexture),s.memory.textures--),i.remove(k[Ae])}i.remove(k),i.remove(D)}let ee=0;function he(){ee=0}function q(){const D=ee;return D>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+r.maxTextures),ee+=1,D}function ue(D){const k=[];return k.push(D.wrapS),k.push(D.wrapT),k.push(D.wrapR||0),k.push(D.magFilter),k.push(D.minFilter),k.push(D.anisotropy),k.push(D.internalFormat),k.push(D.format),k.push(D.type),k.push(D.generateMipmaps),k.push(D.premultiplyAlpha),k.push(D.flipY),k.push(D.unpackAlignment),k.push(D.colorSpace),k.join()}function se(D,k){const oe=i.get(D);if(D.isVideoTexture&&xt(D),D.isRenderTargetTexture===!1&&D.version>0&&oe.__version!==D.version){const ke=D.image;if(ke===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ke.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ee(oe,D,k);return}}t.bindTexture(n.TEXTURE_2D,oe.__webglTexture,n.TEXTURE0+k)}function ve(D,k){const oe=i.get(D);if(D.version>0&&oe.__version!==D.version){Ee(oe,D,k);return}t.bindTexture(n.TEXTURE_2D_ARRAY,oe.__webglTexture,n.TEXTURE0+k)}function z(D,k){const oe=i.get(D);if(D.version>0&&oe.__version!==D.version){Ee(oe,D,k);return}t.bindTexture(n.TEXTURE_3D,oe.__webglTexture,n.TEXTURE0+k)}function K(D,k){const oe=i.get(D);if(D.version>0&&oe.__version!==D.version){ze(oe,D,k);return}t.bindTexture(n.TEXTURE_CUBE_MAP,oe.__webglTexture,n.TEXTURE0+k)}const Z={[d4]:n.REPEAT,[On]:n.CLAMP_TO_EDGE,[h4]:n.MIRRORED_REPEAT},re={[J1]:n.NEAREST,[W5]:n.NEAREST_MIPMAP_NEAREST,[es]:n.NEAREST_MIPMAP_LINEAR,[N1]:n.LINEAR,[Bl]:n.LINEAR_MIPMAP_NEAREST,[L2]:n.LINEAR_MIPMAP_LINEAR},_e={[Ib]:n.NEVER,[Fb]:n.ALWAYS,[Nb]:n.LESS,[I9]:n.LEQUAL,[Db]:n.EQUAL,[Ub]:n.GEQUAL,[Ob]:n.GREATER,[Bb]:n.NOTEQUAL};function je(D,k,oe){if(k.type===Vi&&e.has("OES_texture_float_linear")===!1&&(k.magFilter===N1||k.magFilter===Bl||k.magFilter===es||k.magFilter===L2||k.minFilter===N1||k.minFilter===Bl||k.minFilter===es||k.minFilter===L2)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),oe?(n.texParameteri(D,n.TEXTURE_WRAP_S,Z[k.wrapS]),n.texParameteri(D,n.TEXTURE_WRAP_T,Z[k.wrapT]),(D===n.TEXTURE_3D||D===n.TEXTURE_2D_ARRAY)&&n.texParameteri(D,n.TEXTURE_WRAP_R,Z[k.wrapR]),n.texParameteri(D,n.TEXTURE_MAG_FILTER,re[k.magFilter]),n.texParameteri(D,n.TEXTURE_MIN_FILTER,re[k.minFilter])):(n.texParameteri(D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(D===n.TEXTURE_3D||D===n.TEXTURE_2D_ARRAY)&&n.texParameteri(D,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(k.wrapS!==On||k.wrapT!==On)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(D,n.TEXTURE_MAG_FILTER,P(k.magFilter)),n.texParameteri(D,n.TEXTURE_MIN_FILTER,P(k.minFilter)),k.minFilter!==J1&&k.minFilter!==N1&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),k.compareFunction&&(n.texParameteri(D,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(D,n.TEXTURE_COMPARE_FUNC,_e[k.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const ke=e.get("EXT_texture_filter_anisotropic");if(k.magFilter===J1||k.minFilter!==es&&k.minFilter!==L2||k.type===Vi&&e.has("OES_texture_float_linear")===!1||o===!1&&k.type===d3&&e.has("OES_texture_half_float_linear")===!1)return;(k.anisotropy>1||i.get(k).__currentAnisotropy)&&(n.texParameterf(D,ke.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(k.anisotropy,r.getMaxAnisotropy())),i.get(k).__currentAnisotropy=k.anisotropy)}}function ce(D,k){let oe=!1;D.__webglInit===void 0&&(D.__webglInit=!0,k.addEventListener("dispose",C));const ke=k.source;let Ae=p.get(ke);Ae===void 0&&(Ae={},p.set(ke,Ae));const Se=ue(k);if(Se!==D.__cacheKey){Ae[Se]===void 0&&(Ae[Se]={texture:n.createTexture(),usedTimes:0},s.memory.textures++,oe=!0),Ae[Se].usedTimes++;const nt=Ae[D.__cacheKey];nt!==void 0&&(Ae[D.__cacheKey].usedTimes--,nt.usedTimes===0&&T(k)),D.__cacheKey=Se,D.__webglTexture=Ae[Se].texture}return oe}function Ee(D,k,oe){let ke=n.TEXTURE_2D;(k.isDataArrayTexture||k.isCompressedArrayTexture)&&(ke=n.TEXTURE_2D_ARRAY),k.isData3DTexture&&(ke=n.TEXTURE_3D);const Ae=ce(D,k),Se=k.source;t.bindTexture(ke,D.__webglTexture,n.TEXTURE0+oe);const nt=i.get(Se);if(Se.version!==nt.__version||Ae===!0){t.activeTexture(n.TEXTURE0+oe);const We=d1.getPrimaries(d1.workingColorSpace),Ke=k.colorSpace===xi?null:d1.getPrimaries(k.colorSpace),Mt=k.colorSpace===xi||We===Ke?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,k.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,k.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Mt);const Lt=g(k)&&_(k.image)===!1;let Ie=b(k.image,Lt,!1,r.maxTextureSize);Ie=et(k,Ie);const Xt=_(Ie)||o,Vt=a.convert(k.format,k.colorSpace);let de=a.convert(k.type),yt=E(k.internalFormat,Vt,de,k.colorSpace,k.isVideoTexture);je(ke,k,Xt);let st;const Q=k.mipmaps,Ce=o&&k.isVideoTexture!==!0&&yt!==A9,tt=nt.__version===void 0||Ae===!0,it=Se.dataReady,kt=A(k,Ie,Xt);if(k.isDepthTexture)yt=n.DEPTH_COMPONENT,o?k.type===Vi?yt=n.DEPTH_COMPONENT32F:k.type===ur?yt=n.DEPTH_COMPONENT24:k.type===oa?yt=n.DEPTH24_STENCIL8:yt=n.DEPTH_COMPONENT16:k.type===Vi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),k.format===la&&yt===n.DEPTH_COMPONENT&&k.type!==Mu&&k.type!==ur&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),k.type=ur,de=a.convert(k.type)),k.format===Ts&&yt===n.DEPTH_COMPONENT&&(yt=n.DEPTH_STENCIL,k.type!==oa&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),k.type=oa,de=a.convert(k.type))),tt&&(Ce?t.texStorage2D(n.TEXTURE_2D,1,yt,Ie.width,Ie.height):t.texImage2D(n.TEXTURE_2D,0,yt,Ie.width,Ie.height,0,Vt,de,null));else if(k.isDataTexture)if(Q.length>0&&Xt){Ce&&tt&&t.texStorage2D(n.TEXTURE_2D,kt,yt,Q[0].width,Q[0].height);for(let G=0,Ue=Q.length;G<Ue;G++)st=Q[G],Ce?it&&t.texSubImage2D(n.TEXTURE_2D,G,0,0,st.width,st.height,Vt,de,st.data):t.texImage2D(n.TEXTURE_2D,G,yt,st.width,st.height,0,Vt,de,st.data);k.generateMipmaps=!1}else Ce?(tt&&t.texStorage2D(n.TEXTURE_2D,kt,yt,Ie.width,Ie.height),it&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Ie.width,Ie.height,Vt,de,Ie.data)):t.texImage2D(n.TEXTURE_2D,0,yt,Ie.width,Ie.height,0,Vt,de,Ie.data);else if(k.isCompressedTexture)if(k.isCompressedArrayTexture){Ce&&tt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,kt,yt,Q[0].width,Q[0].height,Ie.depth);for(let G=0,Ue=Q.length;G<Ue;G++)st=Q[G],k.format!==Yn?Vt!==null?Ce?it&&t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,G,0,0,0,st.width,st.height,Ie.depth,Vt,st.data,0,0):t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,G,yt,st.width,st.height,Ie.depth,0,st.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ce?it&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,G,0,0,0,st.width,st.height,Ie.depth,Vt,de,st.data):t.texImage3D(n.TEXTURE_2D_ARRAY,G,yt,st.width,st.height,Ie.depth,0,Vt,de,st.data)}else{Ce&&tt&&t.texStorage2D(n.TEXTURE_2D,kt,yt,Q[0].width,Q[0].height);for(let G=0,Ue=Q.length;G<Ue;G++)st=Q[G],k.format!==Yn?Vt!==null?Ce?it&&t.compressedTexSubImage2D(n.TEXTURE_2D,G,0,0,st.width,st.height,Vt,st.data):t.compressedTexImage2D(n.TEXTURE_2D,G,yt,st.width,st.height,0,st.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ce?it&&t.texSubImage2D(n.TEXTURE_2D,G,0,0,st.width,st.height,Vt,de,st.data):t.texImage2D(n.TEXTURE_2D,G,yt,st.width,st.height,0,Vt,de,st.data)}else if(k.isDataArrayTexture)Ce?(tt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,kt,yt,Ie.width,Ie.height,Ie.depth),it&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,Ie.width,Ie.height,Ie.depth,Vt,de,Ie.data)):t.texImage3D(n.TEXTURE_2D_ARRAY,0,yt,Ie.width,Ie.height,Ie.depth,0,Vt,de,Ie.data);else if(k.isData3DTexture)Ce?(tt&&t.texStorage3D(n.TEXTURE_3D,kt,yt,Ie.width,Ie.height,Ie.depth),it&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,Ie.width,Ie.height,Ie.depth,Vt,de,Ie.data)):t.texImage3D(n.TEXTURE_3D,0,yt,Ie.width,Ie.height,Ie.depth,0,Vt,de,Ie.data);else if(k.isFramebufferTexture){if(tt)if(Ce)t.texStorage2D(n.TEXTURE_2D,kt,yt,Ie.width,Ie.height);else{let G=Ie.width,Ue=Ie.height;for(let W=0;W<kt;W++)t.texImage2D(n.TEXTURE_2D,W,yt,G,Ue,0,Vt,de,null),G>>=1,Ue>>=1}}else if(Q.length>0&&Xt){Ce&&tt&&t.texStorage2D(n.TEXTURE_2D,kt,yt,Q[0].width,Q[0].height);for(let G=0,Ue=Q.length;G<Ue;G++)st=Q[G],Ce?it&&t.texSubImage2D(n.TEXTURE_2D,G,0,0,Vt,de,st):t.texImage2D(n.TEXTURE_2D,G,yt,Vt,de,st);k.generateMipmaps=!1}else Ce?(tt&&t.texStorage2D(n.TEXTURE_2D,kt,yt,Ie.width,Ie.height),it&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Vt,de,Ie)):t.texImage2D(n.TEXTURE_2D,0,yt,Vt,de,Ie);x(k,Xt)&&S(ke),nt.__version=Se.version,k.onUpdate&&k.onUpdate(k)}D.__version=k.version}function ze(D,k,oe){if(k.image.length!==6)return;const ke=ce(D,k),Ae=k.source;t.bindTexture(n.TEXTURE_CUBE_MAP,D.__webglTexture,n.TEXTURE0+oe);const Se=i.get(Ae);if(Ae.version!==Se.__version||ke===!0){t.activeTexture(n.TEXTURE0+oe);const nt=d1.getPrimaries(d1.workingColorSpace),We=k.colorSpace===xi?null:d1.getPrimaries(k.colorSpace),Ke=k.colorSpace===xi||nt===We?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,k.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,k.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ke);const Mt=k.isCompressedTexture||k.image[0].isCompressedTexture,Lt=k.image[0]&&k.image[0].isDataTexture,Ie=[];for(let G=0;G<6;G++)!Mt&&!Lt?Ie[G]=b(k.image[G],!1,!0,r.maxCubemapSize):Ie[G]=Lt?k.image[G].image:k.image[G],Ie[G]=et(k,Ie[G]);const Xt=Ie[0],Vt=_(Xt)||o,de=a.convert(k.format,k.colorSpace),yt=a.convert(k.type),st=E(k.internalFormat,de,yt,k.colorSpace),Q=o&&k.isVideoTexture!==!0,Ce=Se.__version===void 0||ke===!0,tt=Ae.dataReady;let it=A(k,Xt,Vt);je(n.TEXTURE_CUBE_MAP,k,Vt);let kt;if(Mt){Q&&Ce&&t.texStorage2D(n.TEXTURE_CUBE_MAP,it,st,Xt.width,Xt.height);for(let G=0;G<6;G++){kt=Ie[G].mipmaps;for(let Ue=0;Ue<kt.length;Ue++){const W=kt[Ue];k.format!==Yn?de!==null?Q?tt&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue,0,0,W.width,W.height,de,W.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue,st,W.width,W.height,0,W.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Q?tt&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue,0,0,W.width,W.height,de,yt,W.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue,st,W.width,W.height,0,de,yt,W.data)}}}else{kt=k.mipmaps,Q&&Ce&&(kt.length>0&&it++,t.texStorage2D(n.TEXTURE_CUBE_MAP,it,st,Ie[0].width,Ie[0].height));for(let G=0;G<6;G++)if(Lt){Q?tt&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,0,0,0,Ie[G].width,Ie[G].height,de,yt,Ie[G].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,0,st,Ie[G].width,Ie[G].height,0,de,yt,Ie[G].data);for(let Ue=0;Ue<kt.length;Ue++){const J=kt[Ue].image[G].image;Q?tt&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue+1,0,0,J.width,J.height,de,yt,J.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue+1,st,J.width,J.height,0,de,yt,J.data)}}else{Q?tt&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,0,0,0,de,yt,Ie[G]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,0,st,de,yt,Ie[G]);for(let Ue=0;Ue<kt.length;Ue++){const W=kt[Ue];Q?tt&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue+1,0,0,de,yt,W.image[G]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ue+1,st,de,yt,W.image[G])}}}x(k,Vt)&&S(n.TEXTURE_CUBE_MAP),Se.__version=Ae.version,k.onUpdate&&k.onUpdate(k)}D.__version=k.version}function Je(D,k,oe,ke,Ae,Se){const nt=a.convert(oe.format,oe.colorSpace),We=a.convert(oe.type),Ke=E(oe.internalFormat,nt,We,oe.colorSpace);if(!i.get(k).__hasExternalTextures){const Lt=Math.max(1,k.width>>Se),Ie=Math.max(1,k.height>>Se);Ae===n.TEXTURE_3D||Ae===n.TEXTURE_2D_ARRAY?t.texImage3D(Ae,Se,Ke,Lt,Ie,k.depth,0,nt,We,null):t.texImage2D(Ae,Se,Ke,Lt,Ie,0,nt,We,null)}t.bindFramebuffer(n.FRAMEBUFFER,D),Pe(k)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,ke,Ae,i.get(oe).__webglTexture,0,De(k)):(Ae===n.TEXTURE_2D||Ae>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&Ae<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,ke,Ae,i.get(oe).__webglTexture,Se),t.bindFramebuffer(n.FRAMEBUFFER,null)}function St(D,k,oe){if(n.bindRenderbuffer(n.RENDERBUFFER,D),k.depthBuffer&&!k.stencilBuffer){let ke=o===!0?n.DEPTH_COMPONENT24:n.DEPTH_COMPONENT16;if(oe||Pe(k)){const Ae=k.depthTexture;Ae&&Ae.isDepthTexture&&(Ae.type===Vi?ke=n.DEPTH_COMPONENT32F:Ae.type===ur&&(ke=n.DEPTH_COMPONENT24));const Se=De(k);Pe(k)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Se,ke,k.width,k.height):n.renderbufferStorageMultisample(n.RENDERBUFFER,Se,ke,k.width,k.height)}else n.renderbufferStorage(n.RENDERBUFFER,ke,k.width,k.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,D)}else if(k.depthBuffer&&k.stencilBuffer){const ke=De(k);oe&&Pe(k)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,ke,n.DEPTH24_STENCIL8,k.width,k.height):Pe(k)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,ke,n.DEPTH24_STENCIL8,k.width,k.height):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,k.width,k.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,D)}else{const ke=k.isWebGLMultipleRenderTargets===!0?k.texture:[k.texture];for(let Ae=0;Ae<ke.length;Ae++){const Se=ke[Ae],nt=a.convert(Se.format,Se.colorSpace),We=a.convert(Se.type),Ke=E(Se.internalFormat,nt,We,Se.colorSpace),Mt=De(k);oe&&Pe(k)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Mt,Ke,k.width,k.height):Pe(k)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Mt,Ke,k.width,k.height):n.renderbufferStorage(n.RENDERBUFFER,Ke,k.width,k.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function pt(D,k){if(k&&k.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,D),!(k.depthTexture&&k.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(k.depthTexture).__webglTexture||k.depthTexture.image.width!==k.width||k.depthTexture.image.height!==k.height)&&(k.depthTexture.image.width=k.width,k.depthTexture.image.height=k.height,k.depthTexture.needsUpdate=!0),se(k.depthTexture,0);const ke=i.get(k.depthTexture).__webglTexture,Ae=De(k);if(k.depthTexture.format===la)Pe(k)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ke,0,Ae):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ke,0);else if(k.depthTexture.format===Ts)Pe(k)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ke,0,Ae):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ke,0);else throw new Error("Unknown depthTexture format")}function Tt(D){const k=i.get(D),oe=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!k.__autoAllocateDepthBuffer){if(oe)throw new Error("target.depthTexture not supported in Cube render targets");pt(k.__webglFramebuffer,D)}else if(oe){k.__webglDepthbuffer=[];for(let ke=0;ke<6;ke++)t.bindFramebuffer(n.FRAMEBUFFER,k.__webglFramebuffer[ke]),k.__webglDepthbuffer[ke]=n.createRenderbuffer(),St(k.__webglDepthbuffer[ke],D,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,k.__webglFramebuffer),k.__webglDepthbuffer=n.createRenderbuffer(),St(k.__webglDepthbuffer,D,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function $e(D,k,oe){const ke=i.get(D);k!==void 0&&Je(ke.__webglFramebuffer,D,D.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),oe!==void 0&&Tt(D)}function X(D){const k=D.texture,oe=i.get(D),ke=i.get(k);D.addEventListener("dispose",N),D.isWebGLMultipleRenderTargets!==!0&&(ke.__webglTexture===void 0&&(ke.__webglTexture=n.createTexture()),ke.__version=k.version,s.memory.textures++);const Ae=D.isWebGLCubeRenderTarget===!0,Se=D.isWebGLMultipleRenderTargets===!0,nt=_(D)||o;if(Ae){oe.__webglFramebuffer=[];for(let We=0;We<6;We++)if(o&&k.mipmaps&&k.mipmaps.length>0){oe.__webglFramebuffer[We]=[];for(let Ke=0;Ke<k.mipmaps.length;Ke++)oe.__webglFramebuffer[We][Ke]=n.createFramebuffer()}else oe.__webglFramebuffer[We]=n.createFramebuffer()}else{if(o&&k.mipmaps&&k.mipmaps.length>0){oe.__webglFramebuffer=[];for(let We=0;We<k.mipmaps.length;We++)oe.__webglFramebuffer[We]=n.createFramebuffer()}else oe.__webglFramebuffer=n.createFramebuffer();if(Se)if(r.drawBuffers){const We=D.texture;for(let Ke=0,Mt=We.length;Ke<Mt;Ke++){const Lt=i.get(We[Ke]);Lt.__webglTexture===void 0&&(Lt.__webglTexture=n.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&D.samples>0&&Pe(D)===!1){const We=Se?k:[k];oe.__webglMultisampledFramebuffer=n.createFramebuffer(),oe.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,oe.__webglMultisampledFramebuffer);for(let Ke=0;Ke<We.length;Ke++){const Mt=We[Ke];oe.__webglColorRenderbuffer[Ke]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,oe.__webglColorRenderbuffer[Ke]);const Lt=a.convert(Mt.format,Mt.colorSpace),Ie=a.convert(Mt.type),Xt=E(Mt.internalFormat,Lt,Ie,Mt.colorSpace,D.isXRRenderTarget===!0),Vt=De(D);n.renderbufferStorageMultisample(n.RENDERBUFFER,Vt,Xt,D.width,D.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Ke,n.RENDERBUFFER,oe.__webglColorRenderbuffer[Ke])}n.bindRenderbuffer(n.RENDERBUFFER,null),D.depthBuffer&&(oe.__webglDepthRenderbuffer=n.createRenderbuffer(),St(oe.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(Ae){t.bindTexture(n.TEXTURE_CUBE_MAP,ke.__webglTexture),je(n.TEXTURE_CUBE_MAP,k,nt);for(let We=0;We<6;We++)if(o&&k.mipmaps&&k.mipmaps.length>0)for(let Ke=0;Ke<k.mipmaps.length;Ke++)Je(oe.__webglFramebuffer[We][Ke],D,k,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+We,Ke);else Je(oe.__webglFramebuffer[We],D,k,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+We,0);x(k,nt)&&S(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Se){const We=D.texture;for(let Ke=0,Mt=We.length;Ke<Mt;Ke++){const Lt=We[Ke],Ie=i.get(Lt);t.bindTexture(n.TEXTURE_2D,Ie.__webglTexture),je(n.TEXTURE_2D,Lt,nt),Je(oe.__webglFramebuffer,D,Lt,n.COLOR_ATTACHMENT0+Ke,n.TEXTURE_2D,0),x(Lt,nt)&&S(n.TEXTURE_2D)}t.unbindTexture()}else{let We=n.TEXTURE_2D;if((D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(o?We=D.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(We,ke.__webglTexture),je(We,k,nt),o&&k.mipmaps&&k.mipmaps.length>0)for(let Ke=0;Ke<k.mipmaps.length;Ke++)Je(oe.__webglFramebuffer[Ke],D,k,n.COLOR_ATTACHMENT0,We,Ke);else Je(oe.__webglFramebuffer,D,k,n.COLOR_ATTACHMENT0,We,0);x(k,nt)&&S(We),t.unbindTexture()}D.depthBuffer&&Tt(D)}function Ne(D){const k=_(D)||o,oe=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let ke=0,Ae=oe.length;ke<Ae;ke++){const Se=oe[ke];if(x(Se,k)){const nt=D.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,We=i.get(Se).__webglTexture;t.bindTexture(nt,We),S(nt),t.unbindTexture()}}}function Te(D){if(o&&D.samples>0&&Pe(D)===!1){const k=D.isWebGLMultipleRenderTargets?D.texture:[D.texture],oe=D.width,ke=D.height;let Ae=n.COLOR_BUFFER_BIT;const Se=[],nt=D.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,We=i.get(D),Ke=D.isWebGLMultipleRenderTargets===!0;if(Ke)for(let Mt=0;Mt<k.length;Mt++)t.bindFramebuffer(n.FRAMEBUFFER,We.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Mt,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,We.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Mt,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,We.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,We.__webglFramebuffer);for(let Mt=0;Mt<k.length;Mt++){Se.push(n.COLOR_ATTACHMENT0+Mt),D.depthBuffer&&Se.push(nt);const Lt=We.__ignoreDepthValues!==void 0?We.__ignoreDepthValues:!1;if(Lt===!1&&(D.depthBuffer&&(Ae|=n.DEPTH_BUFFER_BIT),D.stencilBuffer&&(Ae|=n.STENCIL_BUFFER_BIT)),Ke&&n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,We.__webglColorRenderbuffer[Mt]),Lt===!0&&(n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[nt]),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[nt])),Ke){const Ie=i.get(k[Mt]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,Ie,0)}n.blitFramebuffer(0,0,oe,ke,0,0,oe,ke,Ae,n.NEAREST),d&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,Se)}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),Ke)for(let Mt=0;Mt<k.length;Mt++){t.bindFramebuffer(n.FRAMEBUFFER,We.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Mt,n.RENDERBUFFER,We.__webglColorRenderbuffer[Mt]);const Lt=i.get(k[Mt]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,We.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Mt,n.TEXTURE_2D,Lt,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,We.__webglMultisampledFramebuffer)}}function De(D){return Math.min(r.maxSamples,D.samples)}function Pe(D){const k=i.get(D);return o&&D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&k.__useRenderToTexture!==!1}function xt(D){const k=s.render.frame;h.get(D)!==k&&(h.set(D,k),D.update())}function et(D,k){const oe=D.colorSpace,ke=D.format,Ae=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||D.format===X5||oe!==B2&&oe!==xi&&(d1.getTransfer(oe)===M1?o===!1?e.has("EXT_sRGB")===!0&&ke===Yn?(D.format=X5,D.minFilter=N1,D.generateMipmaps=!1):k=D9.sRGBToLinear(k):(ke!==Yn||Ae!==N2)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",oe)),k}this.allocateTextureUnit=q,this.resetTextureUnits=he,this.setTexture2D=se,this.setTexture2DArray=ve,this.setTexture3D=z,this.setTextureCube=K,this.rebindTextures=$e,this.setupRenderTarget=X,this.updateRenderTargetMipmap=Ne,this.updateMultisampleRenderTarget=Te,this.setupDepthRenderbuffer=Tt,this.setupFrameBufferTexture=Je,this.useMultisampledRTT=Pe}function eS(n,e,t){const i=t.isWebGL2;function r(a,s=xi){let o;const l=d1.getTransfer(s);if(a===N2)return n.UNSIGNED_BYTE;if(a===E9)return n.UNSIGNED_SHORT_4_4_4_4;if(a===P9)return n.UNSIGNED_SHORT_5_5_5_1;if(a===_b)return n.BYTE;if(a===xb)return n.SHORT;if(a===Mu)return n.UNSIGNED_SHORT;if(a===M9)return n.INT;if(a===ur)return n.UNSIGNED_INT;if(a===Vi)return n.FLOAT;if(a===d3)return i?n.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(a===wb)return n.ALPHA;if(a===Yn)return n.RGBA;if(a===bb)return n.LUMINANCE;if(a===Sb)return n.LUMINANCE_ALPHA;if(a===la)return n.DEPTH_COMPONENT;if(a===Ts)return n.DEPTH_STENCIL;if(a===X5)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(a===Mb)return n.RED;if(a===T9)return n.RED_INTEGER;if(a===Eb)return n.RG;if(a===L9)return n.RG_INTEGER;if(a===C9)return n.RGBA_INTEGER;if(a===u5||a===d5||a===h5||a===f5)if(l===M1)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(a===u5)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===d5)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===h5)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===f5)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(a===u5)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===d5)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===h5)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===f5)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===Eh||a===Ph||a===Th||a===Lh)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(a===Eh)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===Ph)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===Th)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===Lh)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===A9)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===Ch||a===Ah)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(a===Ch)return l===M1?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(a===Ah)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===Rh||a===kh||a===Ih||a===Nh||a===Dh||a===Oh||a===Bh||a===Uh||a===Fh||a===zh||a===jh||a===Hh||a===Vh||a===Gh)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(a===Rh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===kh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===Ih)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===Nh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===Dh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===Oh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===Bh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===Uh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===Fh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===zh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===jh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===Hh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===Vh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===Gh)return l===M1?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===p5||a===Wh||a===Xh)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(a===p5)return l===M1?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(a===Wh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(a===Xh)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(a===Pb||a===Yh||a===qh||a===$h)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(a===p5)return o.COMPRESSED_RED_RGTC1_EXT;if(a===Yh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(a===qh)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(a===$h)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return a===oa?i?n.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):n[a]!==void 0?n[a]:null}return{convert:r}}class tS extends Y1{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}let Wo=class extends c1{constructor(){super(),this.isGroup=!0,this.type="Group"}};const SO={type:"move"};class qd{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Wo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Wo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new j,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new j),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Wo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new j,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new j),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,a=null,s=null;const o=this._targetRay,l=this._grip,d=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(d&&e.hand){s=!0;for(const b of e.hand.values()){const _=t.getJointPose(b,i),g=this._getHandJoint(d,b);_!==null&&(g.matrix.fromArray(_.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=_.radius),g.visible=_!==null}const h=d.joints["index-finger-tip"],f=d.joints["thumb-tip"],p=h.position.distanceTo(f.position),m=.02,y=.005;d.inputState.pinching&&p>m+y?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!d.inputState.pinching&&p<=m-y&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,i),a!==null&&(l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,a.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(a.linearVelocity)):l.hasLinearVelocity=!1,a.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(a.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&a!==null&&(r=a),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(SO)))}return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=a!==null),d!==null&&(d.visible=s!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Wo;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}const MO=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,EO=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class PO{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const r=new B1,a=e.properties.get(r);a.__webglTexture=t.texture,(t.depthNear!=i.depthNear||t.depthFar!=i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}render(e,t){if(this.texture!==null){if(this.mesh===null){const i=t.cameras[0].viewport,r=new f2({extensions:{fragDepth:!0},vertexShader:MO,fragmentShader:EO,uniforms:{depthColor:{value:this.texture},depthWidth:{value:i.z},depthHeight:{value:i.w}}});this.mesh=new an(new b3(20,20),r)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class TO extends z2{constructor(e,t){super();const i=this;let r=null,a=1,s=null,o="local-floor",l=1,d=null,h=null,f=null,p=null,m=null,y=null;const b=new PO,_=t.getContextAttributes();let g=null,x=null;const S=[],E=[],A=new Le;let P=null;const C=new Y1;C.layers.enable(1),C.viewport=new h1;const N=new Y1;N.layers.enable(2),N.viewport=new h1;const Y=[C,N],T=new tS;T.layers.enable(1),T.layers.enable(2);let R=null,ee=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ce){let Ee=S[ce];return Ee===void 0&&(Ee=new qd,S[ce]=Ee),Ee.getTargetRaySpace()},this.getControllerGrip=function(ce){let Ee=S[ce];return Ee===void 0&&(Ee=new qd,S[ce]=Ee),Ee.getGripSpace()},this.getHand=function(ce){let Ee=S[ce];return Ee===void 0&&(Ee=new qd,S[ce]=Ee),Ee.getHandSpace()};function he(ce){const Ee=E.indexOf(ce.inputSource);if(Ee===-1)return;const ze=S[Ee];ze!==void 0&&(ze.update(ce.inputSource,ce.frame,d||s),ze.dispatchEvent({type:ce.type,data:ce.inputSource}))}function q(){r.removeEventListener("select",he),r.removeEventListener("selectstart",he),r.removeEventListener("selectend",he),r.removeEventListener("squeeze",he),r.removeEventListener("squeezestart",he),r.removeEventListener("squeezeend",he),r.removeEventListener("end",q),r.removeEventListener("inputsourceschange",ue);for(let ce=0;ce<S.length;ce++){const Ee=E[ce];Ee!==null&&(E[ce]=null,S[ce].disconnect(Ee))}R=null,ee=null,b.reset(),e.setRenderTarget(g),m=null,p=null,f=null,r=null,x=null,je.stop(),i.isPresenting=!1,e.setPixelRatio(P),e.setSize(A.width,A.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ce){a=ce,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ce){o=ce,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d||s},this.setReferenceSpace=function(ce){d=ce},this.getBaseLayer=function(){return p!==null?p:m},this.getBinding=function(){return f},this.getFrame=function(){return y},this.getSession=function(){return r},this.setSession=async function(ce){if(r=ce,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",he),r.addEventListener("selectstart",he),r.addEventListener("selectend",he),r.addEventListener("squeeze",he),r.addEventListener("squeezestart",he),r.addEventListener("squeezeend",he),r.addEventListener("end",q),r.addEventListener("inputsourceschange",ue),_.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(A),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Ee={antialias:r.renderState.layers===void 0?_.antialias:!0,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:a};m=new XRWebGLLayer(r,t,Ee),r.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),x=new h2(m.framebufferWidth,m.framebufferHeight,{format:Yn,type:N2,colorSpace:e.outputColorSpace,stencilBuffer:_.stencil})}else{let Ee=null,ze=null,Je=null;_.depth&&(Je=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Ee=_.stencil?Ts:la,ze=_.stencil?oa:ur);const St={colorFormat:t.RGBA8,depthFormat:Je,scaleFactor:a};f=new XRWebGLBinding(r,t),p=f.createProjectionLayer(St),r.updateRenderState({layers:[p]}),e.setPixelRatio(1),e.setSize(p.textureWidth,p.textureHeight,!1),x=new h2(p.textureWidth,p.textureHeight,{format:Yn,type:N2,depthTexture:new z9(p.textureWidth,p.textureHeight,ze,void 0,void 0,void 0,void 0,void 0,void 0,Ee),stencilBuffer:_.stencil,colorSpace:e.outputColorSpace,samples:_.antialias?4:0});const pt=e.properties.get(x);pt.__ignoreDepthValues=p.ignoreDepthValues}x.isXRRenderTarget=!0,this.setFoveation(l),d=null,s=await r.requestReferenceSpace(o),je.setContext(r),je.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function ue(ce){for(let Ee=0;Ee<ce.removed.length;Ee++){const ze=ce.removed[Ee],Je=E.indexOf(ze);Je>=0&&(E[Je]=null,S[Je].disconnect(ze))}for(let Ee=0;Ee<ce.added.length;Ee++){const ze=ce.added[Ee];let Je=E.indexOf(ze);if(Je===-1){for(let pt=0;pt<S.length;pt++)if(pt>=E.length){E.push(ze),Je=pt;break}else if(E[pt]===null){E[pt]=ze,Je=pt;break}if(Je===-1)break}const St=S[Je];St&&St.connect(ze)}}const se=new j,ve=new j;function z(ce,Ee,ze){se.setFromMatrixPosition(Ee.matrixWorld),ve.setFromMatrixPosition(ze.matrixWorld);const Je=se.distanceTo(ve),St=Ee.projectionMatrix.elements,pt=ze.projectionMatrix.elements,Tt=St[14]/(St[10]-1),$e=St[14]/(St[10]+1),X=(St[9]+1)/St[5],Ne=(St[9]-1)/St[5],Te=(St[8]-1)/St[0],De=(pt[8]+1)/pt[0],Pe=Tt*Te,xt=Tt*De,et=Je/(-Te+De),D=et*-Te;Ee.matrixWorld.decompose(ce.position,ce.quaternion,ce.scale),ce.translateX(D),ce.translateZ(et),ce.matrixWorld.compose(ce.position,ce.quaternion,ce.scale),ce.matrixWorldInverse.copy(ce.matrixWorld).invert();const k=Tt+et,oe=$e+et,ke=Pe-D,Ae=xt+(Je-D),Se=X*$e/oe*k,nt=Ne*$e/oe*k;ce.projectionMatrix.makePerspective(ke,Ae,Se,nt,k,oe),ce.projectionMatrixInverse.copy(ce.projectionMatrix).invert()}function K(ce,Ee){Ee===null?ce.matrixWorld.copy(ce.matrix):ce.matrixWorld.multiplyMatrices(Ee.matrixWorld,ce.matrix),ce.matrixWorldInverse.copy(ce.matrixWorld).invert()}this.updateCamera=function(ce){if(r===null)return;b.texture!==null&&(ce.near=b.depthNear,ce.far=b.depthFar),T.near=N.near=C.near=ce.near,T.far=N.far=C.far=ce.far,(R!==T.near||ee!==T.far)&&(r.updateRenderState({depthNear:T.near,depthFar:T.far}),R=T.near,ee=T.far,C.near=R,C.far=ee,N.near=R,N.far=ee,C.updateProjectionMatrix(),N.updateProjectionMatrix(),ce.updateProjectionMatrix());const Ee=ce.parent,ze=T.cameras;K(T,Ee);for(let Je=0;Je<ze.length;Je++)K(ze[Je],Ee);ze.length===2?z(T,C,N):T.projectionMatrix.copy(C.projectionMatrix),Z(ce,T,Ee)};function Z(ce,Ee,ze){ze===null?ce.matrix.copy(Ee.matrixWorld):(ce.matrix.copy(ze.matrixWorld),ce.matrix.invert(),ce.matrix.multiply(Ee.matrixWorld)),ce.matrix.decompose(ce.position,ce.quaternion,ce.scale),ce.updateMatrixWorld(!0),ce.projectionMatrix.copy(Ee.projectionMatrix),ce.projectionMatrixInverse.copy(Ee.projectionMatrixInverse),ce.isPerspectiveCamera&&(ce.fov=h3*2*Math.atan(1/ce.projectionMatrix.elements[5]),ce.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(p===null&&m===null))return l},this.setFoveation=function(ce){l=ce,p!==null&&(p.fixedFoveation=ce),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=ce)},this.hasDepthSensing=function(){return b.texture!==null};let re=null;function _e(ce,Ee){if(h=Ee.getViewerPose(d||s),y=Ee,h!==null){const ze=h.views;m!==null&&(e.setRenderTargetFramebuffer(x,m.framebuffer),e.setRenderTarget(x));let Je=!1;ze.length!==T.cameras.length&&(T.cameras.length=0,Je=!0);for(let pt=0;pt<ze.length;pt++){const Tt=ze[pt];let $e=null;if(m!==null)$e=m.getViewport(Tt);else{const Ne=f.getViewSubImage(p,Tt);$e=Ne.viewport,pt===0&&(e.setRenderTargetTextures(x,Ne.colorTexture,p.ignoreDepthValues?void 0:Ne.depthStencilTexture),e.setRenderTarget(x))}let X=Y[pt];X===void 0&&(X=new Y1,X.layers.enable(pt),X.viewport=new h1,Y[pt]=X),X.matrix.fromArray(Tt.transform.matrix),X.matrix.decompose(X.position,X.quaternion,X.scale),X.projectionMatrix.fromArray(Tt.projectionMatrix),X.projectionMatrixInverse.copy(X.projectionMatrix).invert(),X.viewport.set($e.x,$e.y,$e.width,$e.height),pt===0&&(T.matrix.copy(X.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),Je===!0&&T.cameras.push(X)}const St=r.enabledFeatures;if(St&&St.includes("depth-sensing")){const pt=f.getDepthInformation(ze[0]);pt&&pt.isValid&&pt.texture&&b.init(e,pt,r.renderState)}}for(let ze=0;ze<S.length;ze++){const Je=E[ze],St=S[ze];Je!==null&&St!==void 0&&St.update(Je,Ee,d||s)}b.render(e,T),re&&re(ce,Ee),Ee.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:Ee}),y=null}const je=new qb;je.setAnimationLoop(_e),this.setAnimationLoop=function(ce){re=ce},this.dispose=function(){}}}function LO(n,e){function t(_,g){_.matrixAutoUpdate===!0&&_.updateMatrix(),g.value.copy(_.matrix)}function i(_,g){g.color.getRGB(_.fogColor.value,Gb(n)),g.isFog?(_.fogNear.value=g.near,_.fogFar.value=g.far):g.isFogExp2&&(_.fogDensity.value=g.density)}function r(_,g,x,S,E){g.isMeshBasicMaterial||g.isMeshLambertMaterial?a(_,g):g.isMeshToonMaterial?(a(_,g),f(_,g)):g.isMeshPhongMaterial?(a(_,g),h(_,g)):g.isMeshStandardMaterial?(a(_,g),p(_,g),g.isMeshPhysicalMaterial&&m(_,g,E)):g.isMeshMatcapMaterial?(a(_,g),y(_,g)):g.isMeshDepthMaterial?a(_,g):g.isMeshDistanceMaterial?(a(_,g),b(_,g)):g.isMeshNormalMaterial?a(_,g):g.isLineBasicMaterial?(s(_,g),g.isLineDashedMaterial&&o(_,g)):g.isPointsMaterial?l(_,g,x,S):g.isSpriteMaterial?d(_,g):g.isShadowMaterial?(_.color.value.copy(g.color),_.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function a(_,g){_.opacity.value=g.opacity,g.color&&_.diffuse.value.copy(g.color),g.emissive&&_.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.bumpMap&&(_.bumpMap.value=g.bumpMap,t(g.bumpMap,_.bumpMapTransform),_.bumpScale.value=g.bumpScale,g.side===Kn&&(_.bumpScale.value*=-1)),g.normalMap&&(_.normalMap.value=g.normalMap,t(g.normalMap,_.normalMapTransform),_.normalScale.value.copy(g.normalScale),g.side===Kn&&_.normalScale.value.negate()),g.displacementMap&&(_.displacementMap.value=g.displacementMap,t(g.displacementMap,_.displacementMapTransform),_.displacementScale.value=g.displacementScale,_.displacementBias.value=g.displacementBias),g.emissiveMap&&(_.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,_.emissiveMapTransform)),g.specularMap&&(_.specularMap.value=g.specularMap,t(g.specularMap,_.specularMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest);const x=e.get(g).envMap;if(x&&(_.envMap.value=x,_.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=g.reflectivity,_.ior.value=g.ior,_.refractionRatio.value=g.refractionRatio),g.lightMap){_.lightMap.value=g.lightMap;const S=n._useLegacyLights===!0?Math.PI:1;_.lightMapIntensity.value=g.lightMapIntensity*S,t(g.lightMap,_.lightMapTransform)}g.aoMap&&(_.aoMap.value=g.aoMap,_.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,_.aoMapTransform))}function s(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform))}function o(_,g){_.dashSize.value=g.dashSize,_.totalSize.value=g.dashSize+g.gapSize,_.scale.value=g.scale}function l(_,g,x,S){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.size.value=g.size*x,_.scale.value=S*.5,g.map&&(_.map.value=g.map,t(g.map,_.uvTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function d(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.rotation.value=g.rotation,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function h(_,g){_.specular.value.copy(g.specular),_.shininess.value=Math.max(g.shininess,1e-4)}function f(_,g){g.gradientMap&&(_.gradientMap.value=g.gradientMap)}function p(_,g){_.metalness.value=g.metalness,g.metalnessMap&&(_.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,_.metalnessMapTransform)),_.roughness.value=g.roughness,g.roughnessMap&&(_.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,_.roughnessMapTransform)),e.get(g).envMap&&(_.envMapIntensity.value=g.envMapIntensity)}function m(_,g,x){_.ior.value=g.ior,g.sheen>0&&(_.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),_.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(_.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,_.sheenColorMapTransform)),g.sheenRoughnessMap&&(_.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,_.sheenRoughnessMapTransform))),g.clearcoat>0&&(_.clearcoat.value=g.clearcoat,_.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(_.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,_.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(_.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Kn&&_.clearcoatNormalScale.value.negate())),g.iridescence>0&&(_.iridescence.value=g.iridescence,_.iridescenceIOR.value=g.iridescenceIOR,_.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(_.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,_.iridescenceMapTransform)),g.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),g.transmission>0&&(_.transmission.value=g.transmission,_.transmissionSamplerMap.value=x.texture,_.transmissionSamplerSize.value.set(x.width,x.height),g.transmissionMap&&(_.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,_.transmissionMapTransform)),_.thickness.value=g.thickness,g.thicknessMap&&(_.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=g.attenuationDistance,_.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(_.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(_.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=g.specularIntensity,_.specularColor.value.copy(g.specularColor),g.specularColorMap&&(_.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,_.specularColorMapTransform)),g.specularIntensityMap&&(_.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,_.specularIntensityMapTransform))}function y(_,g){g.matcap&&(_.matcap.value=g.matcap)}function b(_,g){const x=e.get(g).light;_.referencePosition.value.setFromMatrixPosition(x.matrixWorld),_.nearDistance.value=x.shadow.camera.near,_.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function CO(n,e,t,i){let r={},a={},s=[];const o=t.isWebGL2?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(x,S){const E=S.program;i.uniformBlockBinding(x,E)}function d(x,S){let E=r[x.id];E===void 0&&(y(x),E=h(x),r[x.id]=E,x.addEventListener("dispose",_));const A=S.program;i.updateUBOMapping(x,A);const P=e.render.frame;a[x.id]!==P&&(p(x),a[x.id]=P)}function h(x){const S=f();x.__bindingPointIndex=S;const E=n.createBuffer(),A=x.__size,P=x.usage;return n.bindBuffer(n.UNIFORM_BUFFER,E),n.bufferData(n.UNIFORM_BUFFER,A,P),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,S,E),E}function f(){for(let x=0;x<o;x++)if(s.indexOf(x)===-1)return s.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(x){const S=r[x.id],E=x.uniforms,A=x.__cache;n.bindBuffer(n.UNIFORM_BUFFER,S);for(let P=0,C=E.length;P<C;P++){const N=Array.isArray(E[P])?E[P]:[E[P]];for(let Y=0,T=N.length;Y<T;Y++){const R=N[Y];if(m(R,P,Y,A)===!0){const ee=R.__offset,he=Array.isArray(R.value)?R.value:[R.value];let q=0;for(let ue=0;ue<he.length;ue++){const se=he[ue],ve=b(se);typeof se=="number"||typeof se=="boolean"?(R.__data[0]=se,n.bufferSubData(n.UNIFORM_BUFFER,ee+q,R.__data)):se.isMatrix3?(R.__data[0]=se.elements[0],R.__data[1]=se.elements[1],R.__data[2]=se.elements[2],R.__data[3]=0,R.__data[4]=se.elements[3],R.__data[5]=se.elements[4],R.__data[6]=se.elements[5],R.__data[7]=0,R.__data[8]=se.elements[6],R.__data[9]=se.elements[7],R.__data[10]=se.elements[8],R.__data[11]=0):(se.toArray(R.__data,q),q+=ve.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,ee,R.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function m(x,S,E,A){const P=x.value,C=S+"_"+E;if(A[C]===void 0)return typeof P=="number"||typeof P=="boolean"?A[C]=P:A[C]=P.clone(),!0;{const N=A[C];if(typeof P=="number"||typeof P=="boolean"){if(N!==P)return A[C]=P,!0}else if(N.equals(P)===!1)return N.copy(P),!0}return!1}function y(x){const S=x.uniforms;let E=0;const A=16;for(let C=0,N=S.length;C<N;C++){const Y=Array.isArray(S[C])?S[C]:[S[C]];for(let T=0,R=Y.length;T<R;T++){const ee=Y[T],he=Array.isArray(ee.value)?ee.value:[ee.value];for(let q=0,ue=he.length;q<ue;q++){const se=he[q],ve=b(se),z=E%A;z!==0&&A-z<ve.boundary&&(E+=A-z),ee.__data=new Float32Array(ve.storage/Float32Array.BYTES_PER_ELEMENT),ee.__offset=E,E+=ve.storage}}}const P=E%A;return P>0&&(E+=A-P),x.__size=E,x.__cache={},this}function b(x){const S={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(S.boundary=4,S.storage=4):x.isVector2?(S.boundary=8,S.storage=8):x.isVector3||x.isColor?(S.boundary=16,S.storage=12):x.isVector4?(S.boundary=16,S.storage=16):x.isMatrix3?(S.boundary=48,S.storage=48):x.isMatrix4?(S.boundary=64,S.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),S}function _(x){const S=x.target;S.removeEventListener("dispose",_);const E=s.indexOf(S.__bindingPointIndex);s.splice(E,1),n.deleteBuffer(r[S.id]),delete r[S.id],delete a[S.id]}function g(){for(const x in r)n.deleteBuffer(r[x]);s=[],r={},a={}}return{bind:l,update:d,dispose:g}}class V9{constructor(e={}){const{canvas:t=jb(),context:i=null,depth:r=!0,stencil:a=!0,alpha:s=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:d=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:f=!1}=e;this.isWebGLRenderer=!0;let p;i!==null?p=i.getContextAttributes().alpha:p=s;const m=new Uint32Array(4),y=new Int32Array(4);let b=null,_=null;const g=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=un,this._useLegacyLights=!1,this.toneMapping=I2,this.toneMappingExposure=1;const S=this;let E=!1,A=0,P=0,C=null,N=-1,Y=null;const T=new h1,R=new h1;let ee=null;const he=new gt(0);let q=0,ue=t.width,se=t.height,ve=1,z=null,K=null;const Z=new h1(0,0,ue,se),re=new h1(0,0,ue,se);let _e=!1;const je=new W4;let ce=!1,Ee=!1,ze=null;const Je=new Ht,St=new Le,pt=new j,Tt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function $e(){return C===null?ve:1}let X=i;function Ne(O,le){for(let fe=0;fe<O.length;fe++){const ye=O[fe],pe=t.getContext(ye,le);if(pe!==null)return pe}return null}try{const O={alpha:!0,depth:r,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:d,powerPreference:h,failIfMajorPerformanceCaveat:f};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${wu}`),t.addEventListener("webglcontextlost",kt,!1),t.addEventListener("webglcontextrestored",G,!1),t.addEventListener("webglcontextcreationerror",Ue,!1),X===null){const le=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&le.shift(),X=Ne(le,O),X===null)throw Ne(le)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&X instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),X.getShaderPrecisionFormat===void 0&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(O){throw console.error("THREE.WebGLRenderer: "+O.message),O}let Te,De,Pe,xt,et,D,k,oe,ke,Ae,Se,nt,We,Ke,Mt,Lt,Ie,Xt,Vt,de,yt,st,Q,Ce;function tt(){Te=new zN(X),De=new NN(X,Te,e),Te.init(De),st=new eS(X,Te,De),Pe=new wO(X,Te,De),xt=new VN(X),et=new cO,D=new bO(X,Te,Pe,et,De,st,xt),k=new ON(S),oe=new FN(S),ke=new ZR(X,De),Q=new kN(X,Te,ke,De),Ae=new jN(X,ke,xt,Q),Se=new YN(X,Ae,ke,xt),Vt=new XN(X,De,D),Lt=new DN(et),nt=new lO(S,k,oe,Te,De,Q,Lt),We=new LO(S,et),Ke=new dO,Mt=new vO(Te,De),Xt=new RN(S,k,oe,Pe,Se,p,l),Ie=new xO(S,Se,De),Ce=new CO(X,xt,De,Pe),de=new IN(X,Te,xt,De),yt=new HN(X,Te,xt,De),xt.programs=nt.programs,S.capabilities=De,S.extensions=Te,S.properties=et,S.renderLists=Ke,S.shadowMap=Ie,S.state=Pe,S.info=xt}tt();const it=new TO(S,X);this.xr=it,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const O=Te.get("WEBGL_lose_context");O&&O.loseContext()},this.forceContextRestore=function(){const O=Te.get("WEBGL_lose_context");O&&O.restoreContext()},this.getPixelRatio=function(){return ve},this.setPixelRatio=function(O){O!==void 0&&(ve=O,this.setSize(ue,se,!1))},this.getSize=function(O){return O.set(ue,se)},this.setSize=function(O,le,fe=!0){if(it.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ue=O,se=le,t.width=Math.floor(O*ve),t.height=Math.floor(le*ve),fe===!0&&(t.style.width=O+"px",t.style.height=le+"px"),this.setViewport(0,0,O,le)},this.getDrawingBufferSize=function(O){return O.set(ue*ve,se*ve).floor()},this.setDrawingBufferSize=function(O,le,fe){ue=O,se=le,ve=fe,t.width=Math.floor(O*fe),t.height=Math.floor(le*fe),this.setViewport(0,0,O,le)},this.getCurrentViewport=function(O){return O.copy(T)},this.getViewport=function(O){return O.copy(Z)},this.setViewport=function(O,le,fe,ye){O.isVector4?Z.set(O.x,O.y,O.z,O.w):Z.set(O,le,fe,ye),Pe.viewport(T.copy(Z).multiplyScalar(ve).floor())},this.getScissor=function(O){return O.copy(re)},this.setScissor=function(O,le,fe,ye){O.isVector4?re.set(O.x,O.y,O.z,O.w):re.set(O,le,fe,ye),Pe.scissor(R.copy(re).multiplyScalar(ve).floor())},this.getScissorTest=function(){return _e},this.setScissorTest=function(O){Pe.setScissorTest(_e=O)},this.setOpaqueSort=function(O){z=O},this.setTransparentSort=function(O){K=O},this.getClearColor=function(O){return O.copy(Xt.getClearColor())},this.setClearColor=function(){Xt.setClearColor.apply(Xt,arguments)},this.getClearAlpha=function(){return Xt.getClearAlpha()},this.setClearAlpha=function(){Xt.setClearAlpha.apply(Xt,arguments)},this.clear=function(O=!0,le=!0,fe=!0){let ye=0;if(O){let pe=!1;if(C!==null){const rt=C.texture.format;pe=rt===C9||rt===L9||rt===T9}if(pe){const rt=C.texture.type,Ve=rt===N2||rt===ur||rt===Mu||rt===oa||rt===E9||rt===P9,Ze=Xt.getClearColor(),Ye=Xt.getClearAlpha(),At=Ze.r,Dt=Ze.g,zt=Ze.b;Ve?(m[0]=At,m[1]=Dt,m[2]=zt,m[3]=Ye,X.clearBufferuiv(X.COLOR,0,m)):(y[0]=At,y[1]=Dt,y[2]=zt,y[3]=Ye,X.clearBufferiv(X.COLOR,0,y))}else ye|=X.COLOR_BUFFER_BIT}le&&(ye|=X.DEPTH_BUFFER_BIT),fe&&(ye|=X.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),X.clear(ye)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",kt,!1),t.removeEventListener("webglcontextrestored",G,!1),t.removeEventListener("webglcontextcreationerror",Ue,!1),Ke.dispose(),Mt.dispose(),et.dispose(),k.dispose(),oe.dispose(),Se.dispose(),Q.dispose(),Ce.dispose(),nt.dispose(),it.dispose(),it.removeEventListener("sessionstart",ut),it.removeEventListener("sessionend",qe),ze&&(ze.dispose(),ze=null),ot.stop()};function kt(O){O.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function G(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const O=xt.autoReset,le=Ie.enabled,fe=Ie.autoUpdate,ye=Ie.needsUpdate,pe=Ie.type;tt(),xt.autoReset=O,Ie.enabled=le,Ie.autoUpdate=fe,Ie.needsUpdate=ye,Ie.type=pe}function Ue(O){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",O.statusMessage)}function W(O){const le=O.target;le.removeEventListener("dispose",W),J(le)}function J(O){ne(O),et.remove(O)}function ne(O){const le=et.get(O).programs;le!==void 0&&(le.forEach(function(fe){nt.releaseProgram(fe)}),O.isShaderMaterial&&nt.releaseShaderCache(O))}this.renderBufferDirect=function(O,le,fe,ye,pe,rt){le===null&&(le=Tt);const Ve=pe.isMesh&&pe.matrixWorld.determinant()<0,Ze=g2(O,le,fe,ye,pe);Pe.setMaterial(ye,Ve);let Ye=fe.index,At=1;if(ye.wireframe===!0){if(Ye=Ae.getWireframeAttribute(fe),Ye===void 0)return;At=2}const Dt=fe.drawRange,zt=fe.attributes.position;let b1=Dt.start*At,sn=(Dt.start+Dt.count)*At;rt!==null&&(b1=Math.max(b1,rt.start*At),sn=Math.min(sn,(rt.start+rt.count)*At)),Ye!==null?(b1=Math.max(b1,0),sn=Math.min(sn,Ye.count)):zt!=null&&(b1=Math.max(b1,0),sn=Math.min(sn,zt.count));const v1=sn-b1;if(v1<0||v1===1/0)return;Q.setup(pe,ye,Ze,fe,Ye);let z1,Ot=de;if(Ye!==null&&(z1=ke.get(Ye),Ot=yt,Ot.setIndex(z1)),pe.isMesh)ye.wireframe===!0?(Pe.setLineWidth(ye.wireframeLinewidth*$e()),Ot.setMode(X.LINES)):Ot.setMode(X.TRIANGLES);else if(pe.isLine){let B=ye.linewidth;B===void 0&&(B=1),Pe.setLineWidth(B*$e()),pe.isLineSegments?Ot.setMode(X.LINES):pe.isLineLoop?Ot.setMode(X.LINE_LOOP):Ot.setMode(X.LINE_STRIP)}else pe.isPoints?Ot.setMode(X.POINTS):pe.isSprite&&Ot.setMode(X.TRIANGLES);if(pe.isBatchedMesh)Ot.renderMultiDraw(pe._multiDrawStarts,pe._multiDrawCounts,pe._multiDrawCount);else if(pe.isInstancedMesh)Ot.renderInstances(b1,v1,pe.count);else if(fe.isInstancedBufferGeometry){const B=fe._maxInstanceCount!==void 0?fe._maxInstanceCount:1/0,U=Math.min(fe.instanceCount,B);Ot.renderInstances(b1,v1,U)}else Ot.render(b1,v1)};function Me(O,le,fe){O.transparent===!0&&O.side===Hi&&O.forceSinglePass===!1?(O.side=Kn,O.needsUpdate=!0,w1(O,le,fe),O.side=xr,O.needsUpdate=!0,w1(O,le,fe),O.side=Hi):w1(O,le,fe)}this.compile=function(O,le,fe=null){fe===null&&(fe=O),_=Mt.get(fe),_.init(),x.push(_),fe.traverseVisible(function(pe){pe.isLight&&pe.layers.test(le.layers)&&(_.pushLight(pe),pe.castShadow&&_.pushShadow(pe))}),O!==fe&&O.traverseVisible(function(pe){pe.isLight&&pe.layers.test(le.layers)&&(_.pushLight(pe),pe.castShadow&&_.pushShadow(pe))}),_.setupLights(S._useLegacyLights);const ye=new Set;return O.traverse(function(pe){const rt=pe.material;if(rt)if(Array.isArray(rt))for(let Ve=0;Ve<rt.length;Ve++){const Ze=rt[Ve];Me(Ze,fe,pe),ye.add(Ze)}else Me(rt,fe,pe),ye.add(rt)}),x.pop(),_=null,ye},this.compileAsync=function(O,le,fe=null){const ye=this.compile(O,le,fe);return new Promise(pe=>{function rt(){if(ye.forEach(function(Ve){et.get(Ve).currentProgram.isReady()&&ye.delete(Ve)}),ye.size===0){pe(O);return}setTimeout(rt,10)}Te.get("KHR_parallel_shader_compile")!==null?rt():setTimeout(rt,10)})};let Be=null;function mt(O){Be&&Be(O)}function ut(){ot.stop()}function qe(){ot.start()}const ot=new qb;ot.setAnimationLoop(mt),typeof self<"u"&&ot.setContext(self),this.setAnimationLoop=function(O){Be=O,it.setAnimationLoop(O),O===null?ot.stop():ot.start()},it.addEventListener("sessionstart",ut),it.addEventListener("sessionend",qe),this.render=function(O,le){if(le!==void 0&&le.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),le.parent===null&&le.matrixWorldAutoUpdate===!0&&le.updateMatrixWorld(),it.enabled===!0&&it.isPresenting===!0&&(it.cameraAutoUpdate===!0&&it.updateCamera(le),le=it.getCamera()),O.isScene===!0&&O.onBeforeRender(S,O,le,C),_=Mt.get(O,x.length),_.init(),x.push(_),Je.multiplyMatrices(le.projectionMatrix,le.matrixWorldInverse),je.setFromProjectionMatrix(Je),Ee=this.localClippingEnabled,ce=Lt.init(this.clippingPlanes,Ee),b=Ke.get(O,g.length),b.init(),g.push(b),Bt(O,le,0,S.sortObjects),b.finish(),S.sortObjects===!0&&b.sort(z,K),this.info.render.frame++,ce===!0&&Lt.beginShadows();const fe=_.state.shadowsArray;if(Ie.render(fe,O,le),ce===!0&&Lt.endShadows(),this.info.autoReset===!0&&this.info.reset(),(it.enabled===!1||it.isPresenting===!1||it.hasDepthSensing()===!1)&&Xt.render(b,O),_.setupLights(S._useLegacyLights),le.isArrayCamera){const ye=le.cameras;for(let pe=0,rt=ye.length;pe<rt;pe++){const Ve=ye[pe];m1(b,O,Ve,Ve.viewport)}}else m1(b,O,le);C!==null&&(D.updateMultisampleRenderTarget(C),D.updateRenderTargetMipmap(C)),O.isScene===!0&&O.onAfterRender(S,O,le),Q.resetDefaultState(),N=-1,Y=null,x.pop(),x.length>0?_=x[x.length-1]:_=null,g.pop(),g.length>0?b=g[g.length-1]:b=null};function Bt(O,le,fe,ye){if(O.visible===!1)return;if(O.layers.test(le.layers)){if(O.isGroup)fe=O.renderOrder;else if(O.isLOD)O.autoUpdate===!0&&O.update(le);else if(O.isLight)_.pushLight(O),O.castShadow&&_.pushShadow(O);else if(O.isSprite){if(!O.frustumCulled||je.intersectsSprite(O)){ye&&pt.setFromMatrixPosition(O.matrixWorld).applyMatrix4(Je);const Ve=Se.update(O),Ze=O.material;Ze.visible&&b.push(O,Ve,Ze,fe,pt.z,null)}}else if((O.isMesh||O.isLine||O.isPoints)&&(!O.frustumCulled||je.intersectsObject(O))){const Ve=Se.update(O),Ze=O.material;if(ye&&(O.boundingSphere!==void 0?(O.boundingSphere===null&&O.computeBoundingSphere(),pt.copy(O.boundingSphere.center)):(Ve.boundingSphere===null&&Ve.computeBoundingSphere(),pt.copy(Ve.boundingSphere.center)),pt.applyMatrix4(O.matrixWorld).applyMatrix4(Je)),Array.isArray(Ze)){const Ye=Ve.groups;for(let At=0,Dt=Ye.length;At<Dt;At++){const zt=Ye[At],b1=Ze[zt.materialIndex];b1&&b1.visible&&b.push(O,Ve,b1,fe,pt.z,zt)}}else Ze.visible&&b.push(O,Ve,Ze,fe,pt.z,null)}}const rt=O.children;for(let Ve=0,Ze=rt.length;Ve<Ze;Ve++)Bt(rt[Ve],le,fe,ye)}function m1(O,le,fe,ye){const pe=O.opaque,rt=O.transmissive,Ve=O.transparent;_.setupLightsView(fe),ce===!0&&Lt.setGlobalState(S.clippingPlanes,fe),rt.length>0&&Ft(pe,rt,le,fe),ye&&Pe.viewport(T.copy(ye)),pe.length>0&&t1(pe,le,fe),rt.length>0&&t1(rt,le,fe),Ve.length>0&&t1(Ve,le,fe),Pe.buffers.depth.setTest(!0),Pe.buffers.depth.setMask(!0),Pe.buffers.color.setMask(!0),Pe.setPolygonOffset(!1)}function Ft(O,le,fe,ye){if((fe.isScene===!0?fe.overrideMaterial:null)!==null)return;const rt=De.isWebGL2;ze===null&&(ze=new h2(1,1,{generateMipmaps:!0,type:Te.has("EXT_color_buffer_half_float")?d3:N2,minFilter:L2,samples:rt?4:0})),S.getDrawingBufferSize(St),rt?ze.setSize(St.x,St.y):ze.setSize(Y5(St.x),Y5(St.y));const Ve=S.getRenderTarget();S.setRenderTarget(ze),S.getClearColor(he),q=S.getClearAlpha(),q<1&&S.setClearColor(16777215,.5),S.clear();const Ze=S.toneMapping;S.toneMapping=I2,t1(O,fe,ye),D.updateMultisampleRenderTarget(ze),D.updateRenderTargetMipmap(ze);let Ye=!1;for(let At=0,Dt=le.length;At<Dt;At++){const zt=le[At],b1=zt.object,sn=zt.geometry,v1=zt.material,z1=zt.group;if(v1.side===Hi&&b1.layers.test(ye.layers)){const Ot=v1.side;v1.side=Kn,v1.needsUpdate=!0,g1(b1,fe,ye,sn,v1,z1),v1.side=Ot,v1.needsUpdate=!0,Ye=!0}}Ye===!0&&(D.updateMultisampleRenderTarget(ze),D.updateRenderTargetMipmap(ze)),S.setRenderTarget(Ve),S.setClearColor(he,q),S.toneMapping=Ze}function t1(O,le,fe){const ye=le.isScene===!0?le.overrideMaterial:null;for(let pe=0,rt=O.length;pe<rt;pe++){const Ve=O[pe],Ze=Ve.object,Ye=Ve.geometry,At=ye===null?Ve.material:ye,Dt=Ve.group;Ze.layers.test(fe.layers)&&g1(Ze,le,fe,Ye,At,Dt)}}function g1(O,le,fe,ye,pe,rt){O.onBeforeRender(S,le,fe,ye,pe,rt),O.modelViewMatrix.multiplyMatrices(fe.matrixWorldInverse,O.matrixWorld),O.normalMatrix.getNormalMatrix(O.modelViewMatrix),pe.onBeforeRender(S,le,fe,ye,O,rt),pe.transparent===!0&&pe.side===Hi&&pe.forceSinglePass===!1?(pe.side=Kn,pe.needsUpdate=!0,S.renderBufferDirect(fe,le,ye,pe,O,rt),pe.side=xr,pe.needsUpdate=!0,S.renderBufferDirect(fe,le,ye,pe,O,rt),pe.side=Hi):S.renderBufferDirect(fe,le,ye,pe,O,rt),O.onAfterRender(S,le,fe,ye,pe,rt)}function w1(O,le,fe){le.isScene!==!0&&(le=Tt);const ye=et.get(O),pe=_.state.lights,rt=_.state.shadowsArray,Ve=pe.state.version,Ze=nt.getParameters(O,pe.state,rt,le,fe),Ye=nt.getProgramCacheKey(Ze);let At=ye.programs;ye.environment=O.isMeshStandardMaterial?le.environment:null,ye.fog=le.fog,ye.envMap=(O.isMeshStandardMaterial?oe:k).get(O.envMap||ye.environment),At===void 0&&(O.addEventListener("dispose",W),At=new Map,ye.programs=At);let Dt=At.get(Ye);if(Dt!==void 0){if(ye.currentProgram===Dt&&ye.lightsStateVersion===Ve)return ti(O,Ze),Dt}else Ze.uniforms=nt.getUniforms(O),O.onBuild(fe,Ze,S),O.onBeforeCompile(Ze,S),Dt=nt.acquireProgram(Ze,Ye),At.set(Ye,Dt),ye.uniforms=Ze.uniforms;const zt=ye.uniforms;return(!O.isShaderMaterial&&!O.isRawShaderMaterial||O.clipping===!0)&&(zt.clippingPlanes=Lt.uniform),ti(O,Ze),ye.needsLights=ni(O),ye.lightsStateVersion=Ve,ye.needsLights&&(zt.ambientLightColor.value=pe.state.ambient,zt.lightProbe.value=pe.state.probe,zt.directionalLights.value=pe.state.directional,zt.directionalLightShadows.value=pe.state.directionalShadow,zt.spotLights.value=pe.state.spot,zt.spotLightShadows.value=pe.state.spotShadow,zt.rectAreaLights.value=pe.state.rectArea,zt.ltc_1.value=pe.state.rectAreaLTC1,zt.ltc_2.value=pe.state.rectAreaLTC2,zt.pointLights.value=pe.state.point,zt.pointLightShadows.value=pe.state.pointShadow,zt.hemisphereLights.value=pe.state.hemi,zt.directionalShadowMap.value=pe.state.directionalShadowMap,zt.directionalShadowMatrix.value=pe.state.directionalShadowMatrix,zt.spotShadowMap.value=pe.state.spotShadowMap,zt.spotLightMatrix.value=pe.state.spotLightMatrix,zt.spotLightMap.value=pe.state.spotLightMap,zt.pointShadowMap.value=pe.state.pointShadowMap,zt.pointShadowMatrix.value=pe.state.pointShadowMatrix),ye.currentProgram=Dt,ye.uniformsList=null,Dt}function y1(O){if(O.uniformsList===null){const le=O.currentProgram.getUniforms();O.uniformsList=g5.seqWithValue(le.seq,O.uniforms)}return O.uniformsList}function ti(O,le){const fe=et.get(O);fe.outputColorSpace=le.outputColorSpace,fe.batching=le.batching,fe.instancing=le.instancing,fe.instancingColor=le.instancingColor,fe.skinning=le.skinning,fe.morphTargets=le.morphTargets,fe.morphNormals=le.morphNormals,fe.morphColors=le.morphColors,fe.morphTargetsCount=le.morphTargetsCount,fe.numClippingPlanes=le.numClippingPlanes,fe.numIntersection=le.numClipIntersection,fe.vertexAlphas=le.vertexAlphas,fe.vertexTangents=le.vertexTangents,fe.toneMapping=le.toneMapping}function g2(O,le,fe,ye,pe){le.isScene!==!0&&(le=Tt),D.resetTextureUnits();const rt=le.fog,Ve=ye.isMeshStandardMaterial?le.environment:null,Ze=C===null?S.outputColorSpace:C.isXRRenderTarget===!0?C.texture.colorSpace:B2,Ye=(ye.isMeshStandardMaterial?oe:k).get(ye.envMap||Ve),At=ye.vertexColors===!0&&!!fe.attributes.color&&fe.attributes.color.itemSize===4,Dt=!!fe.attributes.tangent&&(!!ye.normalMap||ye.anisotropy>0),zt=!!fe.morphAttributes.position,b1=!!fe.morphAttributes.normal,sn=!!fe.morphAttributes.color;let v1=I2;ye.toneMapped&&(C===null||C.isXRRenderTarget===!0)&&(v1=S.toneMapping);const z1=fe.morphAttributes.position||fe.morphAttributes.normal||fe.morphAttributes.color,Ot=z1!==void 0?z1.length:0,B=et.get(ye),U=_.state.lights;if(ce===!0&&(Ee===!0||O!==Y)){const Re=O===Y&&ye.id===N;Lt.setState(ye,O,Re)}let $=!1;ye.version===B.__version?(B.needsLights&&B.lightsStateVersion!==U.state.version||B.outputColorSpace!==Ze||pe.isBatchedMesh&&B.batching===!1||!pe.isBatchedMesh&&B.batching===!0||pe.isInstancedMesh&&B.instancing===!1||!pe.isInstancedMesh&&B.instancing===!0||pe.isSkinnedMesh&&B.skinning===!1||!pe.isSkinnedMesh&&B.skinning===!0||pe.isInstancedMesh&&B.instancingColor===!0&&pe.instanceColor===null||pe.isInstancedMesh&&B.instancingColor===!1&&pe.instanceColor!==null||B.envMap!==Ye||ye.fog===!0&&B.fog!==rt||B.numClippingPlanes!==void 0&&(B.numClippingPlanes!==Lt.numPlanes||B.numIntersection!==Lt.numIntersection)||B.vertexAlphas!==At||B.vertexTangents!==Dt||B.morphTargets!==zt||B.morphNormals!==b1||B.morphColors!==sn||B.toneMapping!==v1||De.isWebGL2===!0&&B.morphTargetsCount!==Ot)&&($=!0):($=!0,B.__version=ye.version);let ie=B.currentProgram;$===!0&&(ie=w1(ye,le,pe));let Fe=!1,ht=!1,Rt=!1;const F=ie.getUniforms(),H=B.uniforms;if(Pe.useProgram(ie.program)&&(Fe=!0,ht=!0,Rt=!0),ye.id!==N&&(N=ye.id,ht=!0),Fe||Y!==O){F.setValue(X,"projectionMatrix",O.projectionMatrix),F.setValue(X,"viewMatrix",O.matrixWorldInverse);const Re=F.map.cameraPosition;Re!==void 0&&Re.setValue(X,pt.setFromMatrixPosition(O.matrixWorld)),De.logarithmicDepthBuffer&&F.setValue(X,"logDepthBufFC",2/(Math.log(O.far+1)/Math.LN2)),(ye.isMeshPhongMaterial||ye.isMeshToonMaterial||ye.isMeshLambertMaterial||ye.isMeshBasicMaterial||ye.isMeshStandardMaterial||ye.isShaderMaterial)&&F.setValue(X,"isOrthographic",O.isOrthographicCamera===!0),Y!==O&&(Y=O,ht=!0,Rt=!0)}if(pe.isSkinnedMesh){F.setOptional(X,pe,"bindMatrix"),F.setOptional(X,pe,"bindMatrixInverse");const Re=pe.skeleton;Re&&(De.floatVertexTextures?(Re.boneTexture===null&&Re.computeBoneTexture(),F.setValue(X,"boneTexture",Re.boneTexture,D)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}pe.isBatchedMesh&&(F.setOptional(X,pe,"batchingTexture"),F.setValue(X,"batchingTexture",pe._matricesTexture,D));const ge=fe.morphAttributes;if((ge.position!==void 0||ge.normal!==void 0||ge.color!==void 0&&De.isWebGL2===!0)&&Vt.update(pe,fe,ie),(ht||B.receiveShadow!==pe.receiveShadow)&&(B.receiveShadow=pe.receiveShadow,F.setValue(X,"receiveShadow",pe.receiveShadow)),ye.isMeshGouraudMaterial&&ye.envMap!==null&&(H.envMap.value=Ye,H.flipEnvMap.value=Ye.isCubeTexture&&Ye.isRenderTargetTexture===!1?-1:1),ht&&(F.setValue(X,"toneMappingExposure",S.toneMappingExposure),B.needsLights&&Li(H,Rt),rt&&ye.fog===!0&&We.refreshFogUniforms(H,rt),We.refreshMaterialUniforms(H,ye,ve,se,ze),g5.upload(X,y1(B),H,D)),ye.isShaderMaterial&&ye.uniformsNeedUpdate===!0&&(g5.upload(X,y1(B),H,D),ye.uniformsNeedUpdate=!1),ye.isSpriteMaterial&&F.setValue(X,"center",pe.center),F.setValue(X,"modelViewMatrix",pe.modelViewMatrix),F.setValue(X,"normalMatrix",pe.normalMatrix),F.setValue(X,"modelMatrix",pe.matrixWorld),ye.isShaderMaterial||ye.isRawShaderMaterial){const Re=ye.uniformsGroups;for(let He=0,Oe=Re.length;He<Oe;He++)if(De.isWebGL2){const It=Re[He];Ce.update(It,ie),Ce.bind(It,ie)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return ie}function Li(O,le){O.ambientLightColor.needsUpdate=le,O.lightProbe.needsUpdate=le,O.directionalLights.needsUpdate=le,O.directionalLightShadows.needsUpdate=le,O.pointLights.needsUpdate=le,O.pointLightShadows.needsUpdate=le,O.spotLights.needsUpdate=le,O.spotLightShadows.needsUpdate=le,O.rectAreaLights.needsUpdate=le,O.hemisphereLights.needsUpdate=le}function ni(O){return O.isMeshLambertMaterial||O.isMeshToonMaterial||O.isMeshPhongMaterial||O.isMeshStandardMaterial||O.isShadowMaterial||O.isShaderMaterial&&O.lights===!0}this.getActiveCubeFace=function(){return A},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(O,le,fe){et.get(O.texture).__webglTexture=le,et.get(O.depthTexture).__webglTexture=fe;const ye=et.get(O);ye.__hasExternalTextures=!0,ye.__hasExternalTextures&&(ye.__autoAllocateDepthBuffer=fe===void 0,ye.__autoAllocateDepthBuffer||Te.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ye.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(O,le){const fe=et.get(O);fe.__webglFramebuffer=le,fe.__useDefaultFramebuffer=le===void 0},this.setRenderTarget=function(O,le=0,fe=0){C=O,A=le,P=fe;let ye=!0,pe=null,rt=!1,Ve=!1;if(O){const Ye=et.get(O);Ye.__useDefaultFramebuffer!==void 0?(Pe.bindFramebuffer(X.FRAMEBUFFER,null),ye=!1):Ye.__webglFramebuffer===void 0?D.setupRenderTarget(O):Ye.__hasExternalTextures&&D.rebindTextures(O,et.get(O.texture).__webglTexture,et.get(O.depthTexture).__webglTexture);const At=O.texture;(At.isData3DTexture||At.isDataArrayTexture||At.isCompressedArrayTexture)&&(Ve=!0);const Dt=et.get(O).__webglFramebuffer;O.isWebGLCubeRenderTarget?(Array.isArray(Dt[le])?pe=Dt[le][fe]:pe=Dt[le],rt=!0):De.isWebGL2&&O.samples>0&&D.useMultisampledRTT(O)===!1?pe=et.get(O).__webglMultisampledFramebuffer:Array.isArray(Dt)?pe=Dt[fe]:pe=Dt,T.copy(O.viewport),R.copy(O.scissor),ee=O.scissorTest}else T.copy(Z).multiplyScalar(ve).floor(),R.copy(re).multiplyScalar(ve).floor(),ee=_e;if(Pe.bindFramebuffer(X.FRAMEBUFFER,pe)&&De.drawBuffers&&ye&&Pe.drawBuffers(O,pe),Pe.viewport(T),Pe.scissor(R),Pe.setScissorTest(ee),rt){const Ye=et.get(O.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ye.__webglTexture,fe)}else if(Ve){const Ye=et.get(O.texture),At=le||0;X.framebufferTextureLayer(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,Ye.__webglTexture,fe||0,At)}N=-1},this.readRenderTargetPixels=function(O,le,fe,ye,pe,rt,Ve){if(!(O&&O.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ze=et.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&Ve!==void 0&&(Ze=Ze[Ve]),Ze){Pe.bindFramebuffer(X.FRAMEBUFFER,Ze);try{const Ye=O.texture,At=Ye.format,Dt=Ye.type;if(At!==Yn&&st.convert(At)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const zt=Dt===d3&&(Te.has("EXT_color_buffer_half_float")||De.isWebGL2&&Te.has("EXT_color_buffer_float"));if(Dt!==N2&&st.convert(Dt)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Dt===Vi&&(De.isWebGL2||Te.has("OES_texture_float")||Te.has("WEBGL_color_buffer_float")))&&!zt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}le>=0&&le<=O.width-ye&&fe>=0&&fe<=O.height-pe&&X.readPixels(le,fe,ye,pe,st.convert(At),st.convert(Dt),rt)}finally{const Ye=C!==null?et.get(C).__webglFramebuffer:null;Pe.bindFramebuffer(X.FRAMEBUFFER,Ye)}}},this.copyFramebufferToTexture=function(O,le,fe=0){const ye=Math.pow(2,-fe),pe=Math.floor(le.image.width*ye),rt=Math.floor(le.image.height*ye);D.setTexture2D(le,0),X.copyTexSubImage2D(X.TEXTURE_2D,fe,0,0,O.x,O.y,pe,rt),Pe.unbindTexture()},this.copyTextureToTexture=function(O,le,fe,ye=0){const pe=le.image.width,rt=le.image.height,Ve=st.convert(fe.format),Ze=st.convert(fe.type);D.setTexture2D(fe,0),X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,fe.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,fe.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,fe.unpackAlignment),le.isDataTexture?X.texSubImage2D(X.TEXTURE_2D,ye,O.x,O.y,pe,rt,Ve,Ze,le.image.data):le.isCompressedTexture?X.compressedTexSubImage2D(X.TEXTURE_2D,ye,O.x,O.y,le.mipmaps[0].width,le.mipmaps[0].height,Ve,le.mipmaps[0].data):X.texSubImage2D(X.TEXTURE_2D,ye,O.x,O.y,Ve,Ze,le.image),ye===0&&fe.generateMipmaps&&X.generateMipmap(X.TEXTURE_2D),Pe.unbindTexture()},this.copyTextureToTexture3D=function(O,le,fe,ye,pe=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const rt=O.max.x-O.min.x+1,Ve=O.max.y-O.min.y+1,Ze=O.max.z-O.min.z+1,Ye=st.convert(ye.format),At=st.convert(ye.type);let Dt;if(ye.isData3DTexture)D.setTexture3D(ye,0),Dt=X.TEXTURE_3D;else if(ye.isDataArrayTexture||ye.isCompressedArrayTexture)D.setTexture2DArray(ye,0),Dt=X.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,ye.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ye.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,ye.unpackAlignment);const zt=X.getParameter(X.UNPACK_ROW_LENGTH),b1=X.getParameter(X.UNPACK_IMAGE_HEIGHT),sn=X.getParameter(X.UNPACK_SKIP_PIXELS),v1=X.getParameter(X.UNPACK_SKIP_ROWS),z1=X.getParameter(X.UNPACK_SKIP_IMAGES),Ot=fe.isCompressedTexture?fe.mipmaps[pe]:fe.image;X.pixelStorei(X.UNPACK_ROW_LENGTH,Ot.width),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,Ot.height),X.pixelStorei(X.UNPACK_SKIP_PIXELS,O.min.x),X.pixelStorei(X.UNPACK_SKIP_ROWS,O.min.y),X.pixelStorei(X.UNPACK_SKIP_IMAGES,O.min.z),fe.isDataTexture||fe.isData3DTexture?X.texSubImage3D(Dt,pe,le.x,le.y,le.z,rt,Ve,Ze,Ye,At,Ot.data):fe.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),X.compressedTexSubImage3D(Dt,pe,le.x,le.y,le.z,rt,Ve,Ze,Ye,Ot.data)):X.texSubImage3D(Dt,pe,le.x,le.y,le.z,rt,Ve,Ze,Ye,At,Ot),X.pixelStorei(X.UNPACK_ROW_LENGTH,zt),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,b1),X.pixelStorei(X.UNPACK_SKIP_PIXELS,sn),X.pixelStorei(X.UNPACK_SKIP_ROWS,v1),X.pixelStorei(X.UNPACK_SKIP_IMAGES,z1),pe===0&&ye.generateMipmaps&&X.generateMipmap(Dt),Pe.unbindTexture()},this.initTexture=function(O){O.isCubeTexture?D.setTextureCube(O,0):O.isData3DTexture?D.setTexture3D(O,0):O.isDataArrayTexture||O.isCompressedArrayTexture?D.setTexture2DArray(O,0):D.setTexture2D(O,0),Pe.unbindTexture()},this.resetState=function(){A=0,P=0,C=null,Pe.reset(),Q.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return C2}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Pu?"display-p3":"srgb",t.unpackColorSpace=d1.workingColorSpace===j4?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===un?ca:k9}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===ca?un:B2}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class nS extends V9{}nS.prototype.isWebGL1Renderer=!0;class Cu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new gt(e),this.density=t}clone(){return new Cu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Au{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new gt(e),this.near=t,this.far=i}clone(){return new Au(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class q5 extends c1{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class Ru{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=_4,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=Mi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return gs("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,a=this.stride;r<a;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Gn=new j;class Ls{constructor(e,t,i,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Gn.fromBufferAttribute(this,t),Gn.applyMatrix4(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Gn.fromBufferAttribute(this,t),Gn.applyNormalMatrix(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Gn.fromBufferAttribute(this,t),Gn.transformDirection(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=qn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=$t(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=$t(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=$t(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=$t(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=$t(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=qn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=qn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=qn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=qn(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array),r=$t(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,a){return e=e*this.data.stride+this.offset,this.normalized&&(t=$t(t,this.array),i=$t(i,this.array),r=$t(r,this.array),a=$t(a,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=a,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[r+a])}return new p1(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ls(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[r+a])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ku extends En{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new gt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let mo;const ol=new j,go=new j,vo=new j,yo=new Le,ll=new Le,iS=new Ht,Mc=new j,cl=new j,Ec=new j,fv=new Le,$d=new Le,pv=new Le;class G9 extends c1{constructor(e=new ku){if(super(),this.isSprite=!0,this.type="Sprite",mo===void 0){mo=new Zt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Ru(t,5);mo.setIndex([0,1,2,0,2,3]),mo.setAttribute("position",new Ls(i,3,0,!1)),mo.setAttribute("uv",new Ls(i,2,3,!1))}this.geometry=mo,this.material=e,this.center=new Le(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),go.setFromMatrixScale(this.matrixWorld),iS.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),vo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&go.multiplyScalar(-vo.z);const i=this.material.rotation;let r,a;i!==0&&(a=Math.cos(i),r=Math.sin(i));const s=this.center;Pc(Mc.set(-.5,-.5,0),vo,s,go,r,a),Pc(cl.set(.5,-.5,0),vo,s,go,r,a),Pc(Ec.set(.5,.5,0),vo,s,go,r,a),fv.set(0,0),$d.set(1,0),pv.set(1,1);let o=e.ray.intersectTriangle(Mc,cl,Ec,!1,ol);if(o===null&&(Pc(cl.set(-.5,.5,0),vo,s,go,r,a),$d.set(0,1),o=e.ray.intersectTriangle(Mc,Ec,cl,!1,ol),o===null))return;const l=e.ray.origin.distanceTo(ol);l<e.near||l>e.far||t.push({distance:l,point:ol.clone(),uv:wi.getInterpolation(ol,Mc,cl,Ec,fv,$d,pv,new Le),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Pc(n,e,t,i,r,a){yo.subVectors(n,t).addScalar(.5).multiply(i),r!==void 0?(ll.x=a*yo.x-r*yo.y,ll.y=r*yo.x+a*yo.y):ll.copy(yo),n.copy(e),n.x+=ll.x,n.y+=ll.y,n.applyMatrix4(iS)}const Tc=new j,mv=new j;class rS extends c1{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,r=t.length;i<r;i++){const a=t[i];this.addLevel(a.object.clone(),a.distance,a.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const r=this.levels;let a;for(a=0;a<r.length&&!(t<r[a].distance);a++);return r.splice(a,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),e<a)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){Tc.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(Tc);this.getObjectForDistance(r).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Tc.setFromMatrixPosition(e.matrixWorld),mv.setFromMatrixPosition(this.matrixWorld);const i=Tc.distanceTo(mv)/e.zoom;t[0].object.visible=!0;let r,a;for(r=1,a=t.length;r<a;r++){let s=t[r].distance;if(t[r].object.visible&&(s-=s*t[r].hysteresis),i>=s)t[r-1].object.visible=!1,t[r].object.visible=!0;else break}for(this._currentLevel=r-1;r<a;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let r=0,a=i.length;r<a;r++){const s=i[r];t.object.levels.push({object:s.object.uuid,distance:s.distance,hysteresis:s.hysteresis})}return t}}const gv=new j,vv=new h1,yv=new h1,AO=new j,_v=new Ht,Lc=new j,Kd=new Un,xv=new Ht,Zd=new Ns;class aS extends an{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Mh,this.bindMatrix=new Ht,this.bindMatrixInverse=new Ht,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Zn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Lc),this.boundingBox.expandByPoint(Lc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Un),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Lc),this.boundingSphere.expandByPoint(Lc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,r=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Kd.copy(this.boundingSphere),Kd.applyMatrix4(r),e.ray.intersectsSphere(Kd)!==!1&&(xv.copy(r).invert(),Zd.copy(e.ray).applyMatrix4(xv),!(this.boundingBox!==null&&Zd.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Zd)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new h1,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){e.fromBufferAttribute(t,i);const a=1/e.manhattanLength();a!==1/0?e.multiplyScalar(a):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Mh?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===yb?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,r=this.geometry;vv.fromBufferAttribute(r.attributes.skinIndex,e),yv.fromBufferAttribute(r.attributes.skinWeight,e),gv.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let a=0;a<4;a++){const s=yv.getComponent(a);if(s!==0){const o=vv.getComponent(a);_v.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),t.addScaledVector(AO.copy(gv).applyMatrix4(_v),s)}}return t.applyMatrix4(this.bindMatrixInverse)}}class W9 extends c1{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ys extends B1{constructor(e=null,t=1,i=1,r,a,s,o,l,d=J1,h=J1,f,p){super(null,s,o,l,d,h,r,a,f,p),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const wv=new Ht,RO=new Ht;class Iu{constructor(e=[],t=[]){this.uuid=Mi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new Ht)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new Ht;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let a=0,s=e.length;a<s;a++){const o=e[a]?e[a].matrixWorld:RO;wv.multiplyMatrices(o,t[a]),wv.toArray(i,a*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new Iu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new ys(t,e,e,Yn,Vi);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){const a=e.bones[i];let s=t[a];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",a),s=new W9),this.bones.push(s),this.boneInverses.push(new Ht().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let r=0,a=t.length;r<a;r++){const s=t[r];e.bones.push(s.uuid);const o=i[r];e.boneInverses.push(o.toArray())}return e}}class p3 extends p1{constructor(e,t,i,r=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const _o=new Ht,bv=new Ht,Cc=[],Sv=new Zn,kO=new Ht,ul=new an,dl=new Un;class sS extends an{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new p3(new Float32Array(i*16),16),this.instanceColor=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<i;r++)this.setMatrixAt(r,kO)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Zn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,_o),Sv.copy(e.boundingBox).applyMatrix4(_o),this.boundingBox.union(Sv)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Un),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,_o),dl.copy(e.boundingSphere).applyMatrix4(_o),this.boundingSphere.union(dl)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const i=this.matrixWorld,r=this.count;if(ul.geometry=this.geometry,ul.material=this.material,ul.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),dl.copy(this.boundingSphere),dl.applyMatrix4(i),e.ray.intersectsSphere(dl)!==!1))for(let a=0;a<r;a++){this.getMatrixAt(a,_o),bv.multiplyMatrices(i,_o),ul.matrixWorld=bv,ul.raycast(e,Cc);for(let s=0,o=Cc.length;s<o;s++){const l=Cc[s];l.instanceId=a,l.object=this,t.push(l)}Cc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new p3(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function IO(n,e){return n.z-e.z}function NO(n,e){return e.z-n.z}class DO{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const i=this.pool,r=this.list;this.index>=i.length&&i.push({start:-1,count:-1,z:-1});const a=i[this.index];r.push(a),this.index++,a.start=e.start,a.count=e.count,a.z=t}reset(){this.list.length=0,this.index=0}}const xo="batchId",jr=new Ht,Mv=new Ht,OO=new Ht,Ev=new Ht,Jd=new W4,Ac=new Zn,Ha=new Un,hl=new j,Qd=new DO,Nn=new an,Rc=[];function BO(n,e,t=0){const i=e.itemSize;if(n.isInterleavedBufferAttribute||n.array.constructor!==e.array.constructor){const r=n.count;for(let a=0;a<r;a++)for(let s=0;s<i;s++)e.setComponent(a+t,s,n.getComponent(a,s))}else e.array.set(n.array,t*i);e.needsUpdate=!0}class oS extends an{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,i=t*2,r){super(new Zt,r),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new ys(t,e,e,Yn,Vi);this._matricesTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,r=this._maxGeometryCount,a=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in e.attributes){const l=e.getAttribute(o),{array:d,itemSize:h,normalized:f}=l,p=new d.constructor(i*h),m=new l.constructor(p,h,f);m.setUsage(l.usage),t.setAttribute(o,m)}if(e.getIndex()!==null){const o=i>65536?new Uint32Array(a):new Uint16Array(a);t.setIndex(new p1(o,1))}const s=r>65536?new Uint32Array(i):new Uint16Array(i);t.setAttribute(xo,new p1(s,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(xo))throw new Error(`BatchedMesh: Geometry cannot use attribute "${xo}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(i===xo)continue;if(!e.hasAttribute(i))throw new Error(`BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const r=e.getAttribute(i),a=t.getAttribute(i);if(r.itemSize!==a.itemSize||r.normalized!==a.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Zn);const e=this._geometryCount,t=this.boundingBox,i=this._active;t.makeEmpty();for(let r=0;r<e;r++)i[r]!==!1&&(this.getMatrixAt(r,jr),this.getBoundingBoxAt(r,Ac).applyMatrix4(jr),t.union(Ac))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Un);const e=this._geometryCount,t=this.boundingSphere,i=this._active;t.makeEmpty();for(let r=0;r<e;r++)i[r]!==!1&&(this.getMatrixAt(r,jr),this.getBoundingSphereAt(r,Ha).applyMatrix4(jr),t.union(Ha))}addGeometry(e,t=-1,i=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const r={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let a=null;const s=this._reservedRanges,o=this._drawRanges,l=this._bounds;this._geometryCount!==0&&(a=s[s.length-1]),t===-1?r.vertexCount=e.getAttribute("position").count:r.vertexCount=t,a===null?r.vertexStart=0:r.vertexStart=a.vertexStart+a.vertexCount;const d=e.getIndex(),h=d!==null;if(h&&(i===-1?r.indexCount=d.count:r.indexCount=i,a===null?r.indexStart=0:r.indexStart=a.indexStart+a.indexCount),r.indexStart!==-1&&r.indexStart+r.indexCount>this._maxIndexCount||r.vertexStart+r.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const f=this._visibility,p=this._active,m=this._matricesTexture,y=this._matricesTexture.image.data;f.push(!0),p.push(!0);const b=this._geometryCount;this._geometryCount++,OO.toArray(y,b*16),m.needsUpdate=!0,s.push(r),o.push({start:h?r.indexStart:r.vertexStart,count:-1}),l.push({boxInitialized:!1,box:new Zn,sphereInitialized:!1,sphere:new Un});const _=this.geometry.getAttribute(xo);for(let g=0;g<r.vertexCount;g++)_.setX(r.vertexStart+g,b);return _.needsUpdate=!0,this.setGeometryAt(b,e),b}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,r=i.getIndex()!==null,a=i.getIndex(),s=t.getIndex(),o=this._reservedRanges[e];if(r&&s.count>o.indexCount||t.attributes.position.count>o.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const l=o.vertexStart,d=o.vertexCount;for(const m in i.attributes){if(m===xo)continue;const y=t.getAttribute(m),b=i.getAttribute(m);BO(y,b,l);const _=y.itemSize;for(let g=y.count,x=d;g<x;g++){const S=l+g;for(let E=0;E<_;E++)b.setComponent(S,E,0)}b.needsUpdate=!0}if(r){const m=o.indexStart;for(let y=0;y<s.count;y++)a.setX(m+y,l+s.getX(y));for(let y=s.count,b=o.indexCount;y<b;y++)a.setX(m+y,l);a.needsUpdate=!0}const h=this._bounds[e];t.boundingBox!==null?(h.box.copy(t.boundingBox),h.boxInitialized=!0):h.boxInitialized=!1,t.boundingSphere!==null?(h.sphere.copy(t.boundingSphere),h.sphereInitialized=!0):h.sphereInitialized=!1;const f=this._drawRanges[e],p=t.getAttribute("position");return f.count=r?s.count:p.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const r=this._bounds[e],a=r.box,s=this.geometry;if(r.boxInitialized===!1){a.makeEmpty();const o=s.index,l=s.attributes.position,d=this._drawRanges[e];for(let h=d.start,f=d.start+d.count;h<f;h++){let p=h;o&&(p=o.getX(p)),a.expandByPoint(hl.fromBufferAttribute(l,p))}r.boxInitialized=!0}return t.copy(a),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const r=this._bounds[e],a=r.sphere,s=this.geometry;if(r.sphereInitialized===!1){a.makeEmpty(),this.getBoundingBoxAt(e,Ac),Ac.getCenter(a.center);const o=s.index,l=s.attributes.position,d=this._drawRanges[e];let h=0;for(let f=d.start,p=d.start+d.count;f<p;f++){let m=f;o&&(m=o.getX(m)),hl.fromBufferAttribute(l,m),h=Math.max(h,a.center.distanceToSquared(hl))}a.radius=Math.sqrt(h),r.sphereInitialized=!0}return t.copy(a),t}setMatrixAt(e,t){const i=this._active,r=this._matricesTexture,a=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||i[e]===!1?this:(t.toArray(a,e*16),r.needsUpdate=!0,this)}getMatrixAt(e,t){const i=this._active,r=this._matricesTexture.image.data,a=this._geometryCount;return e>=a||i[e]===!1?null:t.fromArray(r,e*16)}setVisibleAt(e,t){const i=this._visibility,r=this._active,a=this._geometryCount;return e>=a||r[e]===!1||i[e]===t?this:(i[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,i=this._active,r=this._geometryCount;return e>=r||i[e]===!1?!1:t[e]}raycast(e,t){const i=this._visibility,r=this._active,a=this._drawRanges,s=this._geometryCount,o=this.matrixWorld,l=this.geometry;Nn.material=this.material,Nn.geometry.index=l.index,Nn.geometry.attributes=l.attributes,Nn.geometry.boundingBox===null&&(Nn.geometry.boundingBox=new Zn),Nn.geometry.boundingSphere===null&&(Nn.geometry.boundingSphere=new Un);for(let d=0;d<s;d++){if(!i[d]||!r[d])continue;const h=a[d];Nn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(d,Nn.matrixWorld).premultiply(o),this.getBoundingBoxAt(d,Nn.geometry.boundingBox),this.getBoundingSphereAt(d,Nn.geometry.boundingSphere),Nn.raycast(e,Rc);for(let f=0,p=Rc.length;f<p;f++){const m=Rc[f];m.object=this,m.batchId=d,t.push(m)}Rc.length=0}Nn.material=null,Nn.geometry.index=null,Nn.geometry.attributes={},Nn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,i,r,a){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const s=r.getIndex(),o=s===null?1:s.array.BYTES_PER_ELEMENT,l=this._active,d=this._visibility,h=this._multiDrawStarts,f=this._multiDrawCounts,p=this._drawRanges,m=this.perObjectFrustumCulled;m&&(Ev.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),Jd.setFromProjectionMatrix(Ev,e.coordinateSystem));let y=0;if(this.sortObjects){Mv.copy(this.matrixWorld).invert(),hl.setFromMatrixPosition(i.matrixWorld).applyMatrix4(Mv);for(let g=0,x=d.length;g<x;g++)if(d[g]&&l[g]){this.getMatrixAt(g,jr),this.getBoundingSphereAt(g,Ha).applyMatrix4(jr);let S=!1;if(m&&(S=!Jd.intersectsSphere(Ha)),!S){const E=hl.distanceTo(Ha.center);Qd.push(p[g],E)}}const b=Qd.list,_=this.customSort;_===null?b.sort(a.transparent?NO:IO):_.call(this,b,i);for(let g=0,x=b.length;g<x;g++){const S=b[g];h[y]=S.start*o,f[y]=S.count,y++}Qd.reset()}else for(let b=0,_=d.length;b<_;b++)if(d[b]&&l[b]){let g=!1;if(m&&(this.getMatrixAt(b,jr),this.getBoundingSphereAt(b,Ha).applyMatrix4(jr),g=!Jd.intersectsSphere(Ha)),!g){const x=p[b];h[y]=x.start*o,f[y]=x.count,y++}}this._multiDrawCount=y,this._visibilityChanged=!1}onBeforeShadow(e,t,i,r,a,s){this.onBeforeRender(e,null,r,a,s)}}class ei extends En{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new gt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Pv=new j,Tv=new j,Lv=new Ht,e8=new Ns,kc=new Un;class pa extends c1{constructor(e=new Zt,t=new ei){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let r=1,a=t.count;r<a;r++)Pv.fromBufferAttribute(t,r-1),Tv.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=Pv.distanceTo(Tv);e.setAttribute("lineDistance",new Et(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,a=e.params.Line.threshold,s=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),kc.copy(i.boundingSphere),kc.applyMatrix4(r),kc.radius+=a,e.ray.intersectsSphere(kc)===!1)return;Lv.copy(r).invert(),e8.copy(e.ray).applyMatrix4(Lv);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,d=new j,h=new j,f=new j,p=new j,m=this.isLineSegments?2:1,y=i.index,_=i.attributes.position;if(y!==null){const g=Math.max(0,s.start),x=Math.min(y.count,s.start+s.count);for(let S=g,E=x-1;S<E;S+=m){const A=y.getX(S),P=y.getX(S+1);if(d.fromBufferAttribute(_,A),h.fromBufferAttribute(_,P),e8.distanceSqToSegment(d,h,p,f)>l)continue;p.applyMatrix4(this.matrixWorld);const N=e.ray.origin.distanceTo(p);N<e.near||N>e.far||t.push({distance:N,point:f.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const g=Math.max(0,s.start),x=Math.min(_.count,s.start+s.count);for(let S=g,E=x-1;S<E;S+=m){if(d.fromBufferAttribute(_,S),h.fromBufferAttribute(_,S+1),e8.distanceSqToSegment(d,h,p,f)>l)continue;p.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(p);P<e.near||P>e.far||t.push({distance:P,point:f.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}}const Cv=new j,Av=new j;class j2 extends pa{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let r=0,a=t.count;r<a;r+=2)Cv.fromBufferAttribute(t,r),Av.fromBufferAttribute(t,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+Cv.distanceTo(Av);e.setAttribute("lineDistance",new Et(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class lS extends pa{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class X9 extends En{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new gt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Rv=new Ht,t7=new Ns,Ic=new Un,Nc=new j;class cS extends c1{constructor(e=new Zt,t=new X9){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,a=e.params.Points.threshold,s=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ic.copy(i.boundingSphere),Ic.applyMatrix4(r),Ic.radius+=a,e.ray.intersectsSphere(Ic)===!1)return;Rv.copy(r).invert(),t7.copy(e.ray).applyMatrix4(Rv);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,d=i.index,f=i.attributes.position;if(d!==null){const p=Math.max(0,s.start),m=Math.min(d.count,s.start+s.count);for(let y=p,b=m;y<b;y++){const _=d.getX(y);Nc.fromBufferAttribute(f,_),kv(Nc,_,l,r,e,t,this)}}else{const p=Math.max(0,s.start),m=Math.min(f.count,s.start+s.count);for(let y=p,b=m;y<b;y++)Nc.fromBufferAttribute(f,y),kv(Nc,y,l,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}}function kv(n,e,t,i,r,a,s){const o=t7.distanceSqToPoint(n);if(o<t){const l=new j;t7.closestPointToPoint(n,l),l.applyMatrix4(i);const d=r.ray.origin.distanceTo(l);if(d<r.near||d>r.far)return;a.push({distance:d,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:s})}}class UO extends B1{constructor(e,t,i,r,a,s,o,l,d){super(e,t,i,r,a,s,o,l,d),this.isVideoTexture=!0,this.minFilter=s!==void 0?s:N1,this.magFilter=a!==void 0?a:N1,this.generateMipmaps=!1;const h=this;function f(){h.needsUpdate=!0,e.requestVideoFrameCallback(f)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(f)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class FO extends B1{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=J1,this.minFilter=J1,this.generateMipmaps=!1,this.needsUpdate=!0}}class Nu extends B1{constructor(e,t,i,r,a,s,o,l,d,h,f,p){super(null,s,o,l,d,h,r,a,f,p),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class zO extends Nu{constructor(e,t,i,r,a,s){super(e,t,i,a,s),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=On}}class jO extends Nu{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,wr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class HO extends B1{constructor(e,t,i,r,a,s,o,l,d){super(e,t,i,r,a,s,o,l,d),this.isCanvasTexture=!0,this.needsUpdate=!0}}class p2{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,r=this.getPoint(0),a=0;t.push(0);for(let s=1;s<=e;s++)i=this.getPoint(s/e),a+=i.distanceTo(r),t.push(a),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let r=0;const a=i.length;let s;t?s=t:s=e*i[a-1];let o=0,l=a-1,d;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),d=i[r]-s,d<0)o=r+1;else if(d>0)l=r-1;else{l=r;break}if(r=l,i[r]===s)return r/(a-1);const h=i[r],p=i[r+1]-h,m=(s-h)/p;return(r+m)/(a-1)}getTangent(e,t){let r=e-1e-4,a=e+1e-4;r<0&&(r=0),a>1&&(a=1);const s=this.getPoint(r),o=this.getPoint(a),l=t||(s.isVector2?new Le:new j);return l.copy(o).sub(s).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new j,r=[],a=[],s=[],o=new j,l=new Ht;for(let m=0;m<=e;m++){const y=m/e;r[m]=this.getTangentAt(y,new j)}a[0]=new j,s[0]=new j;let d=Number.MAX_VALUE;const h=Math.abs(r[0].x),f=Math.abs(r[0].y),p=Math.abs(r[0].z);h<=d&&(d=h,i.set(1,0,0)),f<=d&&(d=f,i.set(0,1,0)),p<=d&&i.set(0,0,1),o.crossVectors(r[0],i).normalize(),a[0].crossVectors(r[0],o),s[0].crossVectors(r[0],a[0]);for(let m=1;m<=e;m++){if(a[m]=a[m-1].clone(),s[m]=s[m-1].clone(),o.crossVectors(r[m-1],r[m]),o.length()>Number.EPSILON){o.normalize();const y=Math.acos(X1(r[m-1].dot(r[m]),-1,1));a[m].applyMatrix4(l.makeRotationAxis(o,y))}s[m].crossVectors(r[m],a[m])}if(t===!0){let m=Math.acos(X1(a[0].dot(a[e]),-1,1));m/=e,r[0].dot(o.crossVectors(a[0],a[e]))>0&&(m=-m);for(let y=1;y<=e;y++)a[y].applyMatrix4(l.makeRotationAxis(r[y],m*y)),s[y].crossVectors(r[y],a[y])}return{tangents:r,normals:a,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Du extends p2{constructor(e=0,t=0,i=1,r=1,a=0,s=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=a,this.aEndAngle=s,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const i=t||new Le,r=Math.PI*2;let a=this.aEndAngle-this.aStartAngle;const s=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=r;for(;a>r;)a-=r;a<Number.EPSILON&&(s?a=0:a=r),this.aClockwise===!0&&!s&&(a===r?a=-r:a=a-r);const o=this.aStartAngle+e*a;let l=this.aX+this.xRadius*Math.cos(o),d=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),f=Math.sin(this.aRotation),p=l-this.aX,m=d-this.aY;l=p*h-m*f+this.aX,d=p*f+m*h+this.aY}return i.set(l,d)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class uS extends Du{constructor(e,t,i,r,a,s){super(e,t,i,i,r,a,s),this.isArcCurve=!0,this.type="ArcCurve"}}function Y9(){let n=0,e=0,t=0,i=0;function r(a,s,o,l){n=a,e=o,t=-3*a+3*s-2*o-l,i=2*a-2*s+o+l}return{initCatmullRom:function(a,s,o,l,d){r(s,o,d*(o-a),d*(l-s))},initNonuniformCatmullRom:function(a,s,o,l,d,h,f){let p=(s-a)/d-(o-a)/(d+h)+(o-s)/h,m=(o-s)/h-(l-s)/(h+f)+(l-o)/f;p*=h,m*=h,r(s,o,p,m)},calc:function(a){const s=a*a,o=s*a;return n+e*a+t*s+i*o}}}const Dc=new j,t8=new Y9,n8=new Y9,i8=new Y9;class dS extends p2{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new j){const i=t,r=this.points,a=r.length,s=(a-(this.closed?0:1))*e;let o=Math.floor(s),l=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/a)+1)*a:l===0&&o===a-1&&(o=a-2,l=1);let d,h;this.closed||o>0?d=r[(o-1)%a]:(Dc.subVectors(r[0],r[1]).add(r[0]),d=Dc);const f=r[o%a],p=r[(o+1)%a];if(this.closed||o+2<a?h=r[(o+2)%a]:(Dc.subVectors(r[a-1],r[a-2]).add(r[a-1]),h=Dc),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let y=Math.pow(d.distanceToSquared(f),m),b=Math.pow(f.distanceToSquared(p),m),_=Math.pow(p.distanceToSquared(h),m);b<1e-4&&(b=1),y<1e-4&&(y=b),_<1e-4&&(_=b),t8.initNonuniformCatmullRom(d.x,f.x,p.x,h.x,y,b,_),n8.initNonuniformCatmullRom(d.y,f.y,p.y,h.y,y,b,_),i8.initNonuniformCatmullRom(d.z,f.z,p.z,h.z,y,b,_)}else this.curveType==="catmullrom"&&(t8.initCatmullRom(d.x,f.x,p.x,h.x,this.tension),n8.initCatmullRom(d.y,f.y,p.y,h.y,this.tension),i8.initCatmullRom(d.z,f.z,p.z,h.z,this.tension));return i.set(t8.calc(l),n8.calc(l),i8.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new j().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Iv(n,e,t,i,r){const a=(i-e)*.5,s=(r-t)*.5,o=n*n,l=n*o;return(2*t-2*i+a+s)*l+(-3*t+3*i-2*a-s)*o+a*n+t}function VO(n,e){const t=1-n;return t*t*e}function GO(n,e){return 2*(1-n)*n*e}function WO(n,e){return n*n*e}function Fl(n,e,t,i){return VO(n,e)+GO(n,t)+WO(n,i)}function XO(n,e){const t=1-n;return t*t*t*e}function YO(n,e){const t=1-n;return 3*t*t*n*e}function qO(n,e){return 3*(1-n)*n*n*e}function $O(n,e){return n*n*n*e}function zl(n,e,t,i,r){return XO(n,e)+YO(n,t)+qO(n,i)+$O(n,r)}class q9 extends p2{constructor(e=new Le,t=new Le,i=new Le,r=new Le){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new Le){const i=t,r=this.v0,a=this.v1,s=this.v2,o=this.v3;return i.set(zl(e,r.x,a.x,s.x,o.x),zl(e,r.y,a.y,s.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class hS extends p2{constructor(e=new j,t=new j,i=new j,r=new j){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new j){const i=t,r=this.v0,a=this.v1,s=this.v2,o=this.v3;return i.set(zl(e,r.x,a.x,s.x,o.x),zl(e,r.y,a.y,s.y,o.y),zl(e,r.z,a.z,s.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class $9 extends p2{constructor(e=new Le,t=new Le){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Le){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Le){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class fS extends p2{constructor(e=new j,t=new j){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new j){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new j){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class K9 extends p2{constructor(e=new Le,t=new Le,i=new Le){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Le){const i=t,r=this.v0,a=this.v1,s=this.v2;return i.set(Fl(e,r.x,a.x,s.x),Fl(e,r.y,a.y,s.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Z9 extends p2{constructor(e=new j,t=new j,i=new j){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new j){const i=t,r=this.v0,a=this.v1,s=this.v2;return i.set(Fl(e,r.x,a.x,s.x),Fl(e,r.y,a.y,s.y),Fl(e,r.z,a.z,s.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class J9 extends p2{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Le){const i=t,r=this.points,a=(r.length-1)*e,s=Math.floor(a),o=a-s,l=r[s===0?s:s-1],d=r[s],h=r[s>r.length-2?r.length-1:s+1],f=r[s>r.length-3?r.length-1:s+2];return i.set(Iv(o,l.x,d.x,h.x,f.x),Iv(o,l.y,d.y,h.y,f.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new Le().fromArray(r))}return this}}var $5=Object.freeze({__proto__:null,ArcCurve:uS,CatmullRomCurve3:dS,CubicBezierCurve:q9,CubicBezierCurve3:hS,EllipseCurve:Du,LineCurve:$9,LineCurve3:fS,QuadraticBezierCurve:K9,QuadraticBezierCurve3:Z9,SplineCurve:J9});class pS extends p2{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new $5[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),r=this.getCurveLengths();let a=0;for(;a<r.length;){if(r[a]>=i){const s=r[a]-i,o=this.curves[a],l=o.getLength(),d=l===0?0:1-s/l;return o.getPointAt(d,t)}a++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let r=0,a=this.curves;r<a.length;r++){const s=a[r],o=s.isEllipseCurve?e*2:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,l=s.getPoints(o);for(let d=0;d<l.length;d++){const h=l[d];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(new $5[r.type]().fromJSON(r))}return this}}class b4 extends pS{constructor(e){super(),this.type="Path",this.currentPoint=new Le,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new $9(this.currentPoint.clone(),new Le(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){const a=new K9(this.currentPoint.clone(),new Le(e,t),new Le(i,r));return this.curves.push(a),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,a,s){const o=new q9(this.currentPoint.clone(),new Le(e,t),new Le(i,r),new Le(a,s));return this.curves.push(o),this.currentPoint.set(a,s),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new J9(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,a,s){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,i,r,a,s),this}absarc(e,t,i,r,a,s){return this.absellipse(e,t,i,i,r,a,s),this}ellipse(e,t,i,r,a,s,o,l){const d=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+d,t+h,i,r,a,s,o,l),this}absellipse(e,t,i,r,a,s,o,l){const d=new Du(e,t,i,r,a,s,o,l);if(this.curves.length>0){const f=d.getPoint(0);f.equals(this.currentPoint)||this.lineTo(f.x,f.y)}this.curves.push(d);const h=d.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class X4 extends Zt{constructor(e=[new Le(0,-.5),new Le(.5,0),new Le(0,.5)],t=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=X1(r,0,Math.PI*2);const a=[],s=[],o=[],l=[],d=[],h=1/t,f=new j,p=new Le,m=new j,y=new j,b=new j;let _=0,g=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:_=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,m.x=g*1,m.y=-_,m.z=g*0,b.copy(m),m.normalize(),l.push(m.x,m.y,m.z);break;case e.length-1:l.push(b.x,b.y,b.z);break;default:_=e[x+1].x-e[x].x,g=e[x+1].y-e[x].y,m.x=g*1,m.y=-_,m.z=g*0,y.copy(m),m.x+=b.x,m.y+=b.y,m.z+=b.z,m.normalize(),l.push(m.x,m.y,m.z),b.copy(y)}for(let x=0;x<=t;x++){const S=i+x*h*r,E=Math.sin(S),A=Math.cos(S);for(let P=0;P<=e.length-1;P++){f.x=e[P].x*E,f.y=e[P].y,f.z=e[P].x*A,s.push(f.x,f.y,f.z),p.x=x/t,p.y=P/(e.length-1),o.push(p.x,p.y);const C=l[3*P+0]*E,N=l[3*P+1],Y=l[3*P+0]*A;d.push(C,N,Y)}}for(let x=0;x<t;x++)for(let S=0;S<e.length-1;S++){const E=S+x*e.length,A=E,P=E+e.length,C=E+e.length+1,N=E+1;a.push(A,P,N),a.push(C,N,P)}this.setIndex(a),this.setAttribute("position",new Et(s,3)),this.setAttribute("uv",new Et(o,2)),this.setAttribute("normal",new Et(d,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new X4(e.points,e.segments,e.phiStart,e.phiLength)}}class Ou extends X4{constructor(e=1,t=1,i=4,r=8){const a=new b4;a.absarc(0,-t/2,e,Math.PI*1.5,0),a.absarc(0,t/2,e,0,Math.PI*.5),super(a.getPoints(i),r),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:r}}static fromJSON(e){return new Ou(e.radius,e.length,e.capSegments,e.radialSegments)}}class Bu extends Zt{constructor(e=1,t=32,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);const a=[],s=[],o=[],l=[],d=new j,h=new Le;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let f=0,p=3;f<=t;f++,p+=3){const m=i+f/t*r;d.x=e*Math.cos(m),d.y=e*Math.sin(m),s.push(d.x,d.y,d.z),o.push(0,0,1),h.x=(s[p]/e+1)/2,h.y=(s[p+1]/e+1)/2,l.push(h.x,h.y)}for(let f=1;f<=t;f++)a.push(f,f+1,0);this.setIndex(a),this.setAttribute("position",new Et(s,3)),this.setAttribute("normal",new Et(o,3)),this.setAttribute("uv",new Et(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Bu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class M3 extends Zt{constructor(e=1,t=1,i=1,r=32,a=1,s=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:a,openEnded:s,thetaStart:o,thetaLength:l};const d=this;r=Math.floor(r),a=Math.floor(a);const h=[],f=[],p=[],m=[];let y=0;const b=[],_=i/2;let g=0;x(),s===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(h),this.setAttribute("position",new Et(f,3)),this.setAttribute("normal",new Et(p,3)),this.setAttribute("uv",new Et(m,2));function x(){const E=new j,A=new j;let P=0;const C=(t-e)/i;for(let N=0;N<=a;N++){const Y=[],T=N/a,R=T*(t-e)+e;for(let ee=0;ee<=r;ee++){const he=ee/r,q=he*l+o,ue=Math.sin(q),se=Math.cos(q);A.x=R*ue,A.y=-T*i+_,A.z=R*se,f.push(A.x,A.y,A.z),E.set(ue,C,se).normalize(),p.push(E.x,E.y,E.z),m.push(he,1-T),Y.push(y++)}b.push(Y)}for(let N=0;N<r;N++)for(let Y=0;Y<a;Y++){const T=b[Y][N],R=b[Y+1][N],ee=b[Y+1][N+1],he=b[Y][N+1];h.push(T,R,he),h.push(R,ee,he),P+=6}d.addGroup(g,P,0),g+=P}function S(E){const A=y,P=new Le,C=new j;let N=0;const Y=E===!0?e:t,T=E===!0?1:-1;for(let ee=1;ee<=r;ee++)f.push(0,_*T,0),p.push(0,T,0),m.push(.5,.5),y++;const R=y;for(let ee=0;ee<=r;ee++){const q=ee/r*l+o,ue=Math.cos(q),se=Math.sin(q);C.x=Y*se,C.y=_*T,C.z=Y*ue,f.push(C.x,C.y,C.z),p.push(0,T,0),P.x=ue*.5+.5,P.y=se*.5*T+.5,m.push(P.x,P.y),y++}for(let ee=0;ee<r;ee++){const he=A+ee,q=R+ee;E===!0?h.push(q,q+1,he):h.push(q+1,q,he),N+=3}d.addGroup(g,N,E===!0?1:2),g+=N}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new M3(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Uu extends M3{constructor(e=1,t=1,i=32,r=1,a=!1,s=0,o=Math.PI*2){super(0,e,t,i,r,a,s,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o}}static fromJSON(e){return new Uu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ba extends Zt{constructor(e=[],t=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};const a=[],s=[];o(r),d(i),h(),this.setAttribute("position",new Et(a,3)),this.setAttribute("normal",new Et(a.slice(),3)),this.setAttribute("uv",new Et(s,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function o(x){const S=new j,E=new j,A=new j;for(let P=0;P<t.length;P+=3)m(t[P+0],S),m(t[P+1],E),m(t[P+2],A),l(S,E,A,x)}function l(x,S,E,A){const P=A+1,C=[];for(let N=0;N<=P;N++){C[N]=[];const Y=x.clone().lerp(E,N/P),T=S.clone().lerp(E,N/P),R=P-N;for(let ee=0;ee<=R;ee++)ee===0&&N===P?C[N][ee]=Y:C[N][ee]=Y.clone().lerp(T,ee/R)}for(let N=0;N<P;N++)for(let Y=0;Y<2*(P-N)-1;Y++){const T=Math.floor(Y/2);Y%2===0?(p(C[N][T+1]),p(C[N+1][T]),p(C[N][T])):(p(C[N][T+1]),p(C[N+1][T+1]),p(C[N+1][T]))}}function d(x){const S=new j;for(let E=0;E<a.length;E+=3)S.x=a[E+0],S.y=a[E+1],S.z=a[E+2],S.normalize().multiplyScalar(x),a[E+0]=S.x,a[E+1]=S.y,a[E+2]=S.z}function h(){const x=new j;for(let S=0;S<a.length;S+=3){x.x=a[S+0],x.y=a[S+1],x.z=a[S+2];const E=_(x)/2/Math.PI+.5,A=g(x)/Math.PI+.5;s.push(E,1-A)}y(),f()}function f(){for(let x=0;x<s.length;x+=6){const S=s[x+0],E=s[x+2],A=s[x+4],P=Math.max(S,E,A),C=Math.min(S,E,A);P>.9&&C<.1&&(S<.2&&(s[x+0]+=1),E<.2&&(s[x+2]+=1),A<.2&&(s[x+4]+=1))}}function p(x){a.push(x.x,x.y,x.z)}function m(x,S){const E=x*3;S.x=e[E+0],S.y=e[E+1],S.z=e[E+2]}function y(){const x=new j,S=new j,E=new j,A=new j,P=new Le,C=new Le,N=new Le;for(let Y=0,T=0;Y<a.length;Y+=9,T+=6){x.set(a[Y+0],a[Y+1],a[Y+2]),S.set(a[Y+3],a[Y+4],a[Y+5]),E.set(a[Y+6],a[Y+7],a[Y+8]),P.set(s[T+0],s[T+1]),C.set(s[T+2],s[T+3]),N.set(s[T+4],s[T+5]),A.copy(x).add(S).add(E).divideScalar(3);const R=_(A);b(P,T+0,x,R),b(C,T+2,S,R),b(N,T+4,E,R)}}function b(x,S,E,A){A<0&&x.x===1&&(s[S]=x.x-1),E.x===0&&E.z===0&&(s[S]=A/2/Math.PI+.5)}function _(x){return Math.atan2(x.z,-x.x)}function g(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ba(e.vertices,e.indices,e.radius,e.details)}}class Fu extends ba{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=1/i,a=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(a,s,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Fu(e.radius,e.detail)}}const Oc=new j,Bc=new j,r8=new j,Uc=new wi;class mS extends Zt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const r=Math.pow(10,4),a=Math.cos(ms*t),s=e.getIndex(),o=e.getAttribute("position"),l=s?s.count:o.count,d=[0,0,0],h=["a","b","c"],f=new Array(3),p={},m=[];for(let y=0;y<l;y+=3){s?(d[0]=s.getX(y),d[1]=s.getX(y+1),d[2]=s.getX(y+2)):(d[0]=y,d[1]=y+1,d[2]=y+2);const{a:b,b:_,c:g}=Uc;if(b.fromBufferAttribute(o,d[0]),_.fromBufferAttribute(o,d[1]),g.fromBufferAttribute(o,d[2]),Uc.getNormal(r8),f[0]=`${Math.round(b.x*r)},${Math.round(b.y*r)},${Math.round(b.z*r)}`,f[1]=`${Math.round(_.x*r)},${Math.round(_.y*r)},${Math.round(_.z*r)}`,f[2]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,!(f[0]===f[1]||f[1]===f[2]||f[2]===f[0]))for(let x=0;x<3;x++){const S=(x+1)%3,E=f[x],A=f[S],P=Uc[h[x]],C=Uc[h[S]],N=`${E}_${A}`,Y=`${A}_${E}`;Y in p&&p[Y]?(r8.dot(p[Y].normal)<=a&&(m.push(P.x,P.y,P.z),m.push(C.x,C.y,C.z)),p[Y]=null):N in p||(p[N]={index0:d[x],index1:d[S],normal:r8.clone()})}}for(const y in p)if(p[y]){const{index0:b,index1:_}=p[y];Oc.fromBufferAttribute(o,b),Bc.fromBufferAttribute(o,_),m.push(Oc.x,Oc.y,Oc.z),m.push(Bc.x,Bc.y,Bc.z)}this.setAttribute("position",new Et(m,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class D2 extends b4{constructor(e){super(e),this.uuid=Mi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(new b4().fromJSON(r))}return this}}const KO={triangulate:function(n,e,t=2){const i=e&&e.length,r=i?e[0]*t:n.length;let a=gS(n,0,r,t,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,d,h,f,p,m;if(i&&(a=tB(n,e,a,t)),n.length>80*t){o=d=n[0],l=h=n[1];for(let y=t;y<r;y+=t)f=n[y],p=n[y+1],f<o&&(o=f),p<l&&(l=p),f>d&&(d=f),p>h&&(h=p);m=Math.max(d-o,h-l),m=m!==0?32767/m:0}return S4(a,s,t,o,l,m,0),s}};function gS(n,e,t,i,r){let a,s;if(r===hB(n,e,t,i)>0)for(a=e;a<t;a+=i)s=Nv(a,n[a],n[a+1],s);else for(a=t-i;a>=e;a-=i)s=Nv(a,n[a],n[a+1],s);return s&&zu(s,s.next)&&(E4(s),s=s.next),s}function Cs(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(zu(t,t.next)||D1(t.prev,t,t.next)===0)){if(E4(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function S4(n,e,t,i,r,a,s){if(!n)return;!s&&a&&sB(n,i,r,a);let o=n,l,d;for(;n.prev!==n.next;){if(l=n.prev,d=n.next,a?JO(n,i,r,a):ZO(n)){e.push(l.i/t|0),e.push(n.i/t|0),e.push(d.i/t|0),E4(n),n=d.next,o=d.next;continue}if(n=d,n===o){s?s===1?(n=QO(Cs(n),e,t),S4(n,e,t,i,r,a,2)):s===2&&eB(n,e,t,i,r,a):S4(Cs(n),e,t,i,r,a,1);break}}}function ZO(n){const e=n.prev,t=n,i=n.next;if(D1(e,t,i)>=0)return!1;const r=e.x,a=t.x,s=i.x,o=e.y,l=t.y,d=i.y,h=r<a?r<s?r:s:a<s?a:s,f=o<l?o<d?o:d:l<d?l:d,p=r>a?r>s?r:s:a>s?a:s,m=o>l?o>d?o:d:l>d?l:d;let y=i.next;for(;y!==e;){if(y.x>=h&&y.x<=p&&y.y>=f&&y.y<=m&&Xo(r,o,a,l,s,d,y.x,y.y)&&D1(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function JO(n,e,t,i){const r=n.prev,a=n,s=n.next;if(D1(r,a,s)>=0)return!1;const o=r.x,l=a.x,d=s.x,h=r.y,f=a.y,p=s.y,m=o<l?o<d?o:d:l<d?l:d,y=h<f?h<p?h:p:f<p?f:p,b=o>l?o>d?o:d:l>d?l:d,_=h>f?h>p?h:p:f>p?f:p,g=n7(m,y,e,t,i),x=n7(b,_,e,t,i);let S=n.prevZ,E=n.nextZ;for(;S&&S.z>=g&&E&&E.z<=x;){if(S.x>=m&&S.x<=b&&S.y>=y&&S.y<=_&&S!==r&&S!==s&&Xo(o,h,l,f,d,p,S.x,S.y)&&D1(S.prev,S,S.next)>=0||(S=S.prevZ,E.x>=m&&E.x<=b&&E.y>=y&&E.y<=_&&E!==r&&E!==s&&Xo(o,h,l,f,d,p,E.x,E.y)&&D1(E.prev,E,E.next)>=0))return!1;E=E.nextZ}for(;S&&S.z>=g;){if(S.x>=m&&S.x<=b&&S.y>=y&&S.y<=_&&S!==r&&S!==s&&Xo(o,h,l,f,d,p,S.x,S.y)&&D1(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;E&&E.z<=x;){if(E.x>=m&&E.x<=b&&E.y>=y&&E.y<=_&&E!==r&&E!==s&&Xo(o,h,l,f,d,p,E.x,E.y)&&D1(E.prev,E,E.next)>=0)return!1;E=E.nextZ}return!0}function QO(n,e,t){let i=n;do{const r=i.prev,a=i.next.next;!zu(r,a)&&vS(r,i,i.next,a)&&M4(r,a)&&M4(a,r)&&(e.push(r.i/t|0),e.push(i.i/t|0),e.push(a.i/t|0),E4(i),E4(i.next),i=n=a),i=i.next}while(i!==n);return Cs(i)}function eB(n,e,t,i,r,a){let s=n;do{let o=s.next.next;for(;o!==s.prev;){if(s.i!==o.i&&cB(s,o)){let l=yS(s,o);s=Cs(s,s.next),l=Cs(l,l.next),S4(s,e,t,i,r,a,0),S4(l,e,t,i,r,a,0);return}o=o.next}s=s.next}while(s!==n)}function tB(n,e,t,i){const r=[];let a,s,o,l,d;for(a=0,s=e.length;a<s;a++)o=e[a]*i,l=a<s-1?e[a+1]*i:n.length,d=gS(n,o,l,i,!1),d===d.next&&(d.steiner=!0),r.push(lB(d));for(r.sort(nB),a=0;a<r.length;a++)t=iB(r[a],t);return t}function nB(n,e){return n.x-e.x}function iB(n,e){const t=rB(n,e);if(!t)return e;const i=yS(t,n);return Cs(i,i.next),Cs(t,t.next)}function rB(n,e){let t=e,i=-1/0,r;const a=n.x,s=n.y;do{if(s<=t.y&&s>=t.next.y&&t.next.y!==t.y){const p=t.x+(s-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(p<=a&&p>i&&(i=p,r=t.x<t.next.x?t:t.next,p===a))return r}t=t.next}while(t!==e);if(!r)return null;const o=r,l=r.x,d=r.y;let h=1/0,f;t=r;do a>=t.x&&t.x>=l&&a!==t.x&&Xo(s<d?a:i,s,l,d,s<d?i:a,s,t.x,t.y)&&(f=Math.abs(s-t.y)/(a-t.x),M4(t,n)&&(f<h||f===h&&(t.x>r.x||t.x===r.x&&aB(r,t)))&&(r=t,h=f)),t=t.next;while(t!==o);return r}function aB(n,e){return D1(n.prev,n,e.prev)<0&&D1(e.next,n,n.next)<0}function sB(n,e,t,i){let r=n;do r.z===0&&(r.z=n7(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,oB(r)}function oB(n){let e,t,i,r,a,s,o,l,d=1;do{for(t=n,n=null,a=null,s=0;t;){for(s++,i=t,o=0,e=0;e<d&&(o++,i=i.nextZ,!!i);e++);for(l=d;o>0||l>0&&i;)o!==0&&(l===0||!i||t.z<=i.z)?(r=t,t=t.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:n=r,r.prevZ=a,a=r;t=i}a.nextZ=null,d*=2}while(s>1);return n}function n7(n,e,t,i,r){return n=(n-t)*r|0,e=(e-i)*r|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function lB(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function Xo(n,e,t,i,r,a,s,o){return(r-s)*(e-o)>=(n-s)*(a-o)&&(n-s)*(i-o)>=(t-s)*(e-o)&&(t-s)*(a-o)>=(r-s)*(i-o)}function cB(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!uB(n,e)&&(M4(n,e)&&M4(e,n)&&dB(n,e)&&(D1(n.prev,n,e.prev)||D1(n,e.prev,e))||zu(n,e)&&D1(n.prev,n,n.next)>0&&D1(e.prev,e,e.next)>0)}function D1(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function zu(n,e){return n.x===e.x&&n.y===e.y}function vS(n,e,t,i){const r=zc(D1(n,e,t)),a=zc(D1(n,e,i)),s=zc(D1(t,i,n)),o=zc(D1(t,i,e));return!!(r!==a&&s!==o||r===0&&Fc(n,t,e)||a===0&&Fc(n,i,e)||s===0&&Fc(t,n,i)||o===0&&Fc(t,e,i))}function Fc(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function zc(n){return n>0?1:n<0?-1:0}function uB(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&vS(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function M4(n,e){return D1(n.prev,n,n.next)<0?D1(n,e,n.next)>=0&&D1(n,n.prev,e)>=0:D1(n,e,n.prev)<0||D1(n,n.next,e)<0}function dB(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,a=(n.y+e.y)/2;do t.y>a!=t.next.y>a&&t.next.y!==t.y&&r<(t.next.x-t.x)*(a-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function yS(n,e){const t=new i7(n.i,n.x,n.y),i=new i7(e.i,e.x,e.y),r=n.next,a=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,a.next=i,i.prev=a,i}function Nv(n,e,t,i){const r=new i7(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function E4(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function i7(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function hB(n,e,t,i){let r=0;for(let a=e,s=t-i;a<t;a+=i)r+=(n[s]-n[a])*(n[a+1]+n[s+1]),s=a;return r}class O2{static area(e){const t=e.length;let i=0;for(let r=t-1,a=0;a<t;r=a++)i+=e[r].x*e[a].y-e[a].x*e[r].y;return i*.5}static isClockWise(e){return O2.area(e)<0}static triangulateShape(e,t){const i=[],r=[],a=[];Dv(e),Ov(i,e);let s=e.length;t.forEach(Dv);for(let l=0;l<t.length;l++)r.push(s),s+=t[l].length,Ov(i,t[l]);const o=KO.triangulate(i,r);for(let l=0;l<o.length;l+=3)a.push(o.slice(l,l+3));return a}}function Dv(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function Ov(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class ju extends Zt{constructor(e=new D2([new Le(.5,.5),new Le(-.5,.5),new Le(-.5,-.5),new Le(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],a=[];for(let o=0,l=e.length;o<l;o++){const d=e[o];s(d)}this.setAttribute("position",new Et(r,3)),this.setAttribute("uv",new Et(a,2)),this.computeVertexNormals();function s(o){const l=[],d=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,f=t.depth!==void 0?t.depth:1;let p=t.bevelEnabled!==void 0?t.bevelEnabled:!0,m=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:m-.1,b=t.bevelOffset!==void 0?t.bevelOffset:0,_=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:fB;let S,E=!1,A,P,C,N;g&&(S=g.getSpacedPoints(h),E=!0,p=!1,A=g.computeFrenetFrames(h,!1),P=new j,C=new j,N=new j),p||(_=0,m=0,y=0,b=0);const Y=o.extractPoints(d);let T=Y.shape;const R=Y.holes;if(!O2.isClockWise(T)){T=T.reverse();for(let X=0,Ne=R.length;X<Ne;X++){const Te=R[X];O2.isClockWise(Te)&&(R[X]=Te.reverse())}}const he=O2.triangulateShape(T,R),q=T;for(let X=0,Ne=R.length;X<Ne;X++){const Te=R[X];T=T.concat(Te)}function ue(X,Ne,Te){return Ne||console.error("THREE.ExtrudeGeometry: vec does not exist"),X.clone().addScaledVector(Ne,Te)}const se=T.length,ve=he.length;function z(X,Ne,Te){let De,Pe,xt;const et=X.x-Ne.x,D=X.y-Ne.y,k=Te.x-X.x,oe=Te.y-X.y,ke=et*et+D*D,Ae=et*oe-D*k;if(Math.abs(Ae)>Number.EPSILON){const Se=Math.sqrt(ke),nt=Math.sqrt(k*k+oe*oe),We=Ne.x-D/Se,Ke=Ne.y+et/Se,Mt=Te.x-oe/nt,Lt=Te.y+k/nt,Ie=((Mt-We)*oe-(Lt-Ke)*k)/(et*oe-D*k);De=We+et*Ie-X.x,Pe=Ke+D*Ie-X.y;const Xt=De*De+Pe*Pe;if(Xt<=2)return new Le(De,Pe);xt=Math.sqrt(Xt/2)}else{let Se=!1;et>Number.EPSILON?k>Number.EPSILON&&(Se=!0):et<-Number.EPSILON?k<-Number.EPSILON&&(Se=!0):Math.sign(D)===Math.sign(oe)&&(Se=!0),Se?(De=-D,Pe=et,xt=Math.sqrt(ke)):(De=et,Pe=D,xt=Math.sqrt(ke/2))}return new Le(De/xt,Pe/xt)}const K=[];for(let X=0,Ne=q.length,Te=Ne-1,De=X+1;X<Ne;X++,Te++,De++)Te===Ne&&(Te=0),De===Ne&&(De=0),K[X]=z(q[X],q[Te],q[De]);const Z=[];let re,_e=K.concat();for(let X=0,Ne=R.length;X<Ne;X++){const Te=R[X];re=[];for(let De=0,Pe=Te.length,xt=Pe-1,et=De+1;De<Pe;De++,xt++,et++)xt===Pe&&(xt=0),et===Pe&&(et=0),re[De]=z(Te[De],Te[xt],Te[et]);Z.push(re),_e=_e.concat(re)}for(let X=0;X<_;X++){const Ne=X/_,Te=m*Math.cos(Ne*Math.PI/2),De=y*Math.sin(Ne*Math.PI/2)+b;for(let Pe=0,xt=q.length;Pe<xt;Pe++){const et=ue(q[Pe],K[Pe],De);Je(et.x,et.y,-Te)}for(let Pe=0,xt=R.length;Pe<xt;Pe++){const et=R[Pe];re=Z[Pe];for(let D=0,k=et.length;D<k;D++){const oe=ue(et[D],re[D],De);Je(oe.x,oe.y,-Te)}}}const je=y+b;for(let X=0;X<se;X++){const Ne=p?ue(T[X],_e[X],je):T[X];E?(C.copy(A.normals[0]).multiplyScalar(Ne.x),P.copy(A.binormals[0]).multiplyScalar(Ne.y),N.copy(S[0]).add(C).add(P),Je(N.x,N.y,N.z)):Je(Ne.x,Ne.y,0)}for(let X=1;X<=h;X++)for(let Ne=0;Ne<se;Ne++){const Te=p?ue(T[Ne],_e[Ne],je):T[Ne];E?(C.copy(A.normals[X]).multiplyScalar(Te.x),P.copy(A.binormals[X]).multiplyScalar(Te.y),N.copy(S[X]).add(C).add(P),Je(N.x,N.y,N.z)):Je(Te.x,Te.y,f/h*X)}for(let X=_-1;X>=0;X--){const Ne=X/_,Te=m*Math.cos(Ne*Math.PI/2),De=y*Math.sin(Ne*Math.PI/2)+b;for(let Pe=0,xt=q.length;Pe<xt;Pe++){const et=ue(q[Pe],K[Pe],De);Je(et.x,et.y,f+Te)}for(let Pe=0,xt=R.length;Pe<xt;Pe++){const et=R[Pe];re=Z[Pe];for(let D=0,k=et.length;D<k;D++){const oe=ue(et[D],re[D],De);E?Je(oe.x,oe.y+S[h-1].y,S[h-1].x+Te):Je(oe.x,oe.y,f+Te)}}}ce(),Ee();function ce(){const X=r.length/3;if(p){let Ne=0,Te=se*Ne;for(let De=0;De<ve;De++){const Pe=he[De];St(Pe[2]+Te,Pe[1]+Te,Pe[0]+Te)}Ne=h+_*2,Te=se*Ne;for(let De=0;De<ve;De++){const Pe=he[De];St(Pe[0]+Te,Pe[1]+Te,Pe[2]+Te)}}else{for(let Ne=0;Ne<ve;Ne++){const Te=he[Ne];St(Te[2],Te[1],Te[0])}for(let Ne=0;Ne<ve;Ne++){const Te=he[Ne];St(Te[0]+se*h,Te[1]+se*h,Te[2]+se*h)}}i.addGroup(X,r.length/3-X,0)}function Ee(){const X=r.length/3;let Ne=0;ze(q,Ne),Ne+=q.length;for(let Te=0,De=R.length;Te<De;Te++){const Pe=R[Te];ze(Pe,Ne),Ne+=Pe.length}i.addGroup(X,r.length/3-X,1)}function ze(X,Ne){let Te=X.length;for(;--Te>=0;){const De=Te;let Pe=Te-1;Pe<0&&(Pe=X.length-1);for(let xt=0,et=h+_*2;xt<et;xt++){const D=se*xt,k=se*(xt+1),oe=Ne+De+D,ke=Ne+Pe+D,Ae=Ne+Pe+k,Se=Ne+De+k;pt(oe,ke,Ae,Se)}}}function Je(X,Ne,Te){l.push(X),l.push(Ne),l.push(Te)}function St(X,Ne,Te){Tt(X),Tt(Ne),Tt(Te);const De=r.length/3,Pe=x.generateTopUV(i,r,De-3,De-2,De-1);$e(Pe[0]),$e(Pe[1]),$e(Pe[2])}function pt(X,Ne,Te,De){Tt(X),Tt(Ne),Tt(De),Tt(Ne),Tt(Te),Tt(De);const Pe=r.length/3,xt=x.generateSideWallUV(i,r,Pe-6,Pe-3,Pe-2,Pe-1);$e(xt[0]),$e(xt[1]),$e(xt[3]),$e(xt[1]),$e(xt[2]),$e(xt[3])}function Tt(X){r.push(l[X*3+0]),r.push(l[X*3+1]),r.push(l[X*3+2])}function $e(X){a.push(X.x),a.push(X.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return pB(t,i,e)}static fromJSON(e,t){const i=[];for(let a=0,s=e.shapes.length;a<s;a++){const o=t[e.shapes[a]];i.push(o)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new $5[r.type]().fromJSON(r)),new ju(i,e.options)}}const fB={generateTopUV:function(n,e,t,i,r){const a=e[t*3],s=e[t*3+1],o=e[i*3],l=e[i*3+1],d=e[r*3],h=e[r*3+1];return[new Le(a,s),new Le(o,l),new Le(d,h)]},generateSideWallUV:function(n,e,t,i,r,a){const s=e[t*3],o=e[t*3+1],l=e[t*3+2],d=e[i*3],h=e[i*3+1],f=e[i*3+2],p=e[r*3],m=e[r*3+1],y=e[r*3+2],b=e[a*3],_=e[a*3+1],g=e[a*3+2];return Math.abs(o-h)<Math.abs(s-d)?[new Le(s,1-l),new Le(d,1-f),new Le(p,1-y),new Le(b,1-g)]:[new Le(o,1-l),new Le(h,1-f),new Le(m,1-y),new Le(_,1-g)]}};function pB(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const a=n[i];t.shapes.push(a.uuid)}else t.shapes.push(n.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Hu extends ba{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],a=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,a,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Hu(e.radius,e.detail)}}class Y4 extends ba{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Y4(e.radius,e.detail)}}class Vu extends Zt{constructor(e=.5,t=1,i=32,r=1,a=0,s=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:a,thetaLength:s},i=Math.max(3,i),r=Math.max(1,r);const o=[],l=[],d=[],h=[];let f=e;const p=(t-e)/r,m=new j,y=new Le;for(let b=0;b<=r;b++){for(let _=0;_<=i;_++){const g=a+_/i*s;m.x=f*Math.cos(g),m.y=f*Math.sin(g),l.push(m.x,m.y,m.z),d.push(0,0,1),y.x=(m.x/t+1)/2,y.y=(m.y/t+1)/2,h.push(y.x,y.y)}f+=p}for(let b=0;b<r;b++){const _=b*(i+1);for(let g=0;g<i;g++){const x=g+_,S=x,E=x+i+1,A=x+i+2,P=x+1;o.push(S,E,P),o.push(E,A,P)}}this.setIndex(o),this.setAttribute("position",new Et(l,3)),this.setAttribute("normal",new Et(d,3)),this.setAttribute("uv",new Et(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Vu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Gu extends Zt{constructor(e=new D2([new Le(0,.5),new Le(-.5,-.5),new Le(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],r=[],a=[],s=[];let o=0,l=0;if(Array.isArray(e)===!1)d(e);else for(let h=0;h<e.length;h++)d(e[h]),this.addGroup(o,l,h),o+=l,l=0;this.setIndex(i),this.setAttribute("position",new Et(r,3)),this.setAttribute("normal",new Et(a,3)),this.setAttribute("uv",new Et(s,2));function d(h){const f=r.length/3,p=h.extractPoints(t);let m=p.shape;const y=p.holes;O2.isClockWise(m)===!1&&(m=m.reverse());for(let _=0,g=y.length;_<g;_++){const x=y[_];O2.isClockWise(x)===!0&&(y[_]=x.reverse())}const b=O2.triangulateShape(m,y);for(let _=0,g=y.length;_<g;_++){const x=y[_];m=m.concat(x)}for(let _=0,g=m.length;_<g;_++){const x=m[_];r.push(x.x,x.y,0),a.push(0,0,1),s.push(x.x,x.y)}for(let _=0,g=b.length;_<g;_++){const x=b[_],S=x[0]+f,E=x[1]+f,A=x[2]+f;i.push(S,E,A),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return mB(t,e)}static fromJSON(e,t){const i=[];for(let r=0,a=e.shapes.length;r<a;r++){const s=t[e.shapes[r]];i.push(s)}return new Gu(i,e.curveSegments)}}function mB(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const r=n[t];e.shapes.push(r.uuid)}else e.shapes.push(n.uuid);return e}class q4 extends Zt{constructor(e=1,t=32,i=16,r=0,a=Math.PI*2,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:a,thetaStart:s,thetaLength:o},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(s+o,Math.PI);let d=0;const h=[],f=new j,p=new j,m=[],y=[],b=[],_=[];for(let g=0;g<=i;g++){const x=[],S=g/i;let E=0;g===0&&s===0?E=.5/t:g===i&&l===Math.PI&&(E=-.5/t);for(let A=0;A<=t;A++){const P=A/t;f.x=-e*Math.cos(r+P*a)*Math.sin(s+S*o),f.y=e*Math.cos(s+S*o),f.z=e*Math.sin(r+P*a)*Math.sin(s+S*o),y.push(f.x,f.y,f.z),p.copy(f).normalize(),b.push(p.x,p.y,p.z),_.push(P+E,1-S),x.push(d++)}h.push(x)}for(let g=0;g<i;g++)for(let x=0;x<t;x++){const S=h[g][x+1],E=h[g][x],A=h[g+1][x],P=h[g+1][x+1];(g!==0||s>0)&&m.push(S,E,P),(g!==i-1||l<Math.PI)&&m.push(E,A,P)}this.setIndex(m),this.setAttribute("position",new Et(y,3)),this.setAttribute("normal",new Et(b,3)),this.setAttribute("uv",new Et(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new q4(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Wu extends ba{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Wu(e.radius,e.detail)}}class Xu extends Zt{constructor(e=1,t=.4,i=12,r=48,a=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:a},i=Math.floor(i),r=Math.floor(r);const s=[],o=[],l=[],d=[],h=new j,f=new j,p=new j;for(let m=0;m<=i;m++)for(let y=0;y<=r;y++){const b=y/r*a,_=m/i*Math.PI*2;f.x=(e+t*Math.cos(_))*Math.cos(b),f.y=(e+t*Math.cos(_))*Math.sin(b),f.z=t*Math.sin(_),o.push(f.x,f.y,f.z),h.x=e*Math.cos(b),h.y=e*Math.sin(b),p.subVectors(f,h).normalize(),l.push(p.x,p.y,p.z),d.push(y/r),d.push(m/i)}for(let m=1;m<=i;m++)for(let y=1;y<=r;y++){const b=(r+1)*m+y-1,_=(r+1)*(m-1)+y-1,g=(r+1)*(m-1)+y,x=(r+1)*m+y;s.push(b,_,x),s.push(_,g,x)}this.setIndex(s),this.setAttribute("position",new Et(o,3)),this.setAttribute("normal",new Et(l,3)),this.setAttribute("uv",new Et(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Yu extends Zt{constructor(e=1,t=.4,i=64,r=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:a,q:s},i=Math.floor(i),r=Math.floor(r);const o=[],l=[],d=[],h=[],f=new j,p=new j,m=new j,y=new j,b=new j,_=new j,g=new j;for(let S=0;S<=i;++S){const E=S/i*a*Math.PI*2;x(E,a,s,e,m),x(E+.01,a,s,e,y),_.subVectors(y,m),g.addVectors(y,m),b.crossVectors(_,g),g.crossVectors(b,_),b.normalize(),g.normalize();for(let A=0;A<=r;++A){const P=A/r*Math.PI*2,C=-t*Math.cos(P),N=t*Math.sin(P);f.x=m.x+(C*g.x+N*b.x),f.y=m.y+(C*g.y+N*b.y),f.z=m.z+(C*g.z+N*b.z),l.push(f.x,f.y,f.z),p.subVectors(f,m).normalize(),d.push(p.x,p.y,p.z),h.push(S/i),h.push(A/r)}}for(let S=1;S<=i;S++)for(let E=1;E<=r;E++){const A=(r+1)*(S-1)+(E-1),P=(r+1)*S+(E-1),C=(r+1)*S+E,N=(r+1)*(S-1)+E;o.push(A,P,N),o.push(P,C,N)}this.setIndex(o),this.setAttribute("position",new Et(l,3)),this.setAttribute("normal",new Et(d,3)),this.setAttribute("uv",new Et(h,2));function x(S,E,A,P,C){const N=Math.cos(S),Y=Math.sin(S),T=A/E*S,R=Math.cos(T);C.x=P*(2+R)*.5*N,C.y=P*(2+R)*Y*.5,C.z=P*Math.sin(T)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class qu extends Zt{constructor(e=new Z9(new j(-1,-1,0),new j(-1,1,0),new j(1,1,0)),t=64,i=1,r=8,a=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:a};const s=e.computeFrenetFrames(t,a);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const o=new j,l=new j,d=new Le;let h=new j;const f=[],p=[],m=[],y=[];b(),this.setIndex(y),this.setAttribute("position",new Et(f,3)),this.setAttribute("normal",new Et(p,3)),this.setAttribute("uv",new Et(m,2));function b(){for(let S=0;S<t;S++)_(S);_(a===!1?t:0),x(),g()}function _(S){h=e.getPointAt(S/t,h);const E=s.normals[S],A=s.binormals[S];for(let P=0;P<=r;P++){const C=P/r*Math.PI*2,N=Math.sin(C),Y=-Math.cos(C);l.x=Y*E.x+N*A.x,l.y=Y*E.y+N*A.y,l.z=Y*E.z+N*A.z,l.normalize(),p.push(l.x,l.y,l.z),o.x=h.x+i*l.x,o.y=h.y+i*l.y,o.z=h.z+i*l.z,f.push(o.x,o.y,o.z)}}function g(){for(let S=1;S<=t;S++)for(let E=1;E<=r;E++){const A=(r+1)*(S-1)+(E-1),P=(r+1)*S+(E-1),C=(r+1)*S+E,N=(r+1)*(S-1)+E;y.push(A,P,N),y.push(P,C,N)}}function x(){for(let S=0;S<=t;S++)for(let E=0;E<=r;E++)d.x=S/t,d.y=E/r,m.push(d.x,d.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new qu(new $5[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class _S extends Zt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,r=new j,a=new j;if(e.index!==null){const s=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let d=0,h=l.length;d<h;++d){const f=l[d],p=f.start,m=f.count;for(let y=p,b=p+m;y<b;y+=3)for(let _=0;_<3;_++){const g=o.getX(y+_),x=o.getX(y+(_+1)%3);r.fromBufferAttribute(s,g),a.fromBufferAttribute(s,x),Bv(r,a,i)===!0&&(t.push(r.x,r.y,r.z),t.push(a.x,a.y,a.z))}}}else{const s=e.attributes.position;for(let o=0,l=s.count/3;o<l;o++)for(let d=0;d<3;d++){const h=3*o+d,f=3*o+(d+1)%3;r.fromBufferAttribute(s,h),a.fromBufferAttribute(s,f),Bv(r,a,i)===!0&&(t.push(r.x,r.y,r.z),t.push(a.x,a.y,a.z))}}this.setAttribute("position",new Et(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Bv(n,e,t){const i=`${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;return t.has(i)===!0||t.has(r)===!0?!1:(t.add(i),t.add(r),!0)}var Uv=Object.freeze({__proto__:null,BoxGeometry:Ds,CapsuleGeometry:Ou,CircleGeometry:Bu,ConeGeometry:Uu,CylinderGeometry:M3,DodecahedronGeometry:Fu,EdgesGeometry:mS,ExtrudeGeometry:ju,IcosahedronGeometry:Hu,LatheGeometry:X4,OctahedronGeometry:Y4,PlaneGeometry:b3,PolyhedronGeometry:ba,RingGeometry:Vu,ShapeGeometry:Gu,SphereGeometry:q4,TetrahedronGeometry:Wu,TorusGeometry:Xu,TorusKnotGeometry:Yu,TubeGeometry:qu,WireframeGeometry:_S});class xS extends En{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new gt(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class wS extends f2{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Q9 extends En{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new gt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xa,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class bS extends Q9{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Le(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return X1(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new gt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new gt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new gt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class SS extends En{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new gt(16777215),this.specular=new gt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xa,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=z4,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class MS extends En{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new gt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xa,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class ES extends En{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xa,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class PS extends En{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new gt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xa,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=z4,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class TS extends En{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new gt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xa,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class LS extends ei{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function us(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)}function CS(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)}function AS(n){function e(r,a){return n[r]-n[a]}const t=n.length,i=new Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(e),i}function r7(n,e,t){const i=n.length,r=new n.constructor(i);for(let a=0,s=0;s!==i;++a){const o=t[a]*e;for(let l=0;l!==e;++l)r[s++]=n[o+l]}return r}function ef(n,e,t,i){let r=1,a=n[0];for(;a!==void 0&&a[i]===void 0;)a=n[r++];if(a===void 0)return;let s=a[i];if(s!==void 0)if(Array.isArray(s))do s=a[i],s!==void 0&&(e.push(a.time),t.push.apply(t,s)),a=n[r++];while(a!==void 0);else if(s.toArray!==void 0)do s=a[i],s!==void 0&&(e.push(a.time),s.toArray(t,t.length)),a=n[r++];while(a!==void 0);else do s=a[i],s!==void 0&&(e.push(a.time),t.push(s)),a=n[r++];while(a!==void 0)}function gB(n,e,t,i,r=30){const a=n.clone();a.name=e;const s=[];for(let l=0;l<a.tracks.length;++l){const d=a.tracks[l],h=d.getValueSize(),f=[],p=[];for(let m=0;m<d.times.length;++m){const y=d.times[m]*r;if(!(y<t||y>=i)){f.push(d.times[m]);for(let b=0;b<h;++b)p.push(d.values[m*h+b])}}f.length!==0&&(d.times=us(f,d.times.constructor),d.values=us(p,d.values.constructor),s.push(d))}a.tracks=s;let o=1/0;for(let l=0;l<a.tracks.length;++l)o>a.tracks[l].times[0]&&(o=a.tracks[l].times[0]);for(let l=0;l<a.tracks.length;++l)a.tracks[l].shift(-1*o);return a.resetDuration(),a}function vB(n,e=0,t=n,i=30){i<=0&&(i=30);const r=t.tracks.length,a=e/i;for(let s=0;s<r;++s){const o=t.tracks[s],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const d=n.tracks.find(function(g){return g.name===o.name&&g.ValueTypeName===l});if(d===void 0)continue;let h=0;const f=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=f/3);let p=0;const m=d.getValueSize();d.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);const y=o.times.length-1;let b;if(a<=o.times[0]){const g=h,x=f-h;b=o.values.slice(g,x)}else if(a>=o.times[y]){const g=y*f+h,x=g+f-h;b=o.values.slice(g,x)}else{const g=o.createInterpolant(),x=h,S=f-h;g.evaluate(a),b=g.resultBuffer.slice(x,S)}l==="quaternion"&&new Bn().fromArray(b).normalize().conjugate().toArray(b);const _=d.times.length;for(let g=0;g<_;++g){const x=g*m+p;if(l==="quaternion")Bn.multiplyQuaternionsFlat(d.values,x,b,0,d.values,x);else{const S=m-p*2;for(let E=0;E<S;++E)d.values[x+E]-=b[E]}}}return n.blendMode=R9,n}const yB={convertArray:us,isTypedArray:CS,getKeyframeOrder:AS,sortedArray:r7,flattenJSON:ef,subclip:gB,makeClipAdditive:vB};class $4{constructor(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,r=t[i],a=t[i-1];e:{t:{let s;n:{i:if(!(e<r)){for(let o=i+2;;){if(r===void 0){if(e<a)break i;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===o)break;if(a=r,r=t[++i],e<r)break t}s=t.length;break n}if(!(e>=a)){const o=t[1];e<o&&(i=2,a=o);for(let l=i-2;;){if(a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(r=a,a=t[--i-1],e>=a)break t}s=i,i=0;break n}break e}for(;i<s;){const o=i+s>>>1;e<t[o]?s=o:i=o+1}if(r=t[i],a=t[i-1],a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,a,r)}return this.interpolate_(i,a,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,r=this.valueSize,a=e*r;for(let s=0;s!==r;++s)t[s]=i[a+s];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class RS extends $4{constructor(e,t,i,r){super(e,t,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:os,endingEnd:os}}intervalChanged_(e,t,i){const r=this.parameterPositions;let a=e-2,s=e+1,o=r[a],l=r[s];if(o===void 0)switch(this.getSettings_().endingStart){case ls:a=e,o=2*t-i;break;case m4:a=r.length-2,o=t+r[a]-r[a+1];break;default:a=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case ls:s=e,l=2*i-t;break;case m4:s=1,l=i+r[1]-r[0];break;default:s=e-1,l=t}const d=(i-t)*.5,h=this.valueSize;this._weightPrev=d/(t-o),this._weightNext=d/(l-i),this._offsetPrev=a*h,this._offsetNext=s*h}interpolate_(e,t,i,r){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,l=e*o,d=l-o,h=this._offsetPrev,f=this._offsetNext,p=this._weightPrev,m=this._weightNext,y=(i-t)/(r-t),b=y*y,_=b*y,g=-p*_+2*p*b-p*y,x=(1+p)*_+(-1.5-2*p)*b+(-.5+p)*y+1,S=(-1-m)*_+(1.5+m)*b+.5*y,E=m*_-m*b;for(let A=0;A!==o;++A)a[A]=g*s[h+A]+x*s[d+A]+S*s[l+A]+E*s[f+A];return a}}class tf extends $4{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,l=e*o,d=l-o,h=(i-t)/(r-t),f=1-h;for(let p=0;p!==o;++p)a[p]=s[d+p]*f+s[l+p]*h;return a}}class kS extends $4{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class m2{constructor(e,t,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=us(t,this.TimeBufferType),this.values=us(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:us(e.times,Array),values:us(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new kS(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new tf(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new RS(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case f4:t=this.InterpolantFactoryMethodDiscrete;break;case p4:t=this.InterpolantFactoryMethodLinear;break;case m5:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return f4;case this.InterpolantFactoryMethodLinear:return p4;case this.InterpolantFactoryMethodSmooth:return m5}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=e}return this}trim(e,t){const i=this.times,r=i.length;let a=0,s=r-1;for(;a!==r&&i[a]<e;)++a;for(;s!==-1&&i[s]>t;)--s;if(++s,a!==0||s!==r){a>=s&&(s=Math.max(s,1),a=s-1);const o=this.getValueSize();this.times=i.slice(a,s),this.values=this.values.slice(a*o,s*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,a=i.length;a===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let o=0;o!==a;o++){const l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(s!==null&&s>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,s),e=!1;break}s=l}if(r!==void 0&&CS(r))for(let o=0,l=r.length;o!==l;++o){const d=r[o];if(isNaN(d)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,d),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),r=this.getInterpolation()===m5,a=e.length-1;let s=1;for(let o=1;o<a;++o){let l=!1;const d=e[o],h=e[o+1];if(d!==h&&(o!==1||d!==e[0]))if(r)l=!0;else{const f=o*i,p=f-i,m=f+i;for(let y=0;y!==i;++y){const b=t[f+y];if(b!==t[p+y]||b!==t[m+y]){l=!0;break}}}if(l){if(o!==s){e[s]=e[o];const f=o*i,p=s*i;for(let m=0;m!==i;++m)t[p+m]=t[f+m]}++s}}if(a>0){e[s]=e[a];for(let o=a*i,l=s*i,d=0;d!==i;++d)t[l+d]=t[o+d];++s}return s!==e.length?(this.times=e.slice(0,s),this.values=t.slice(0,s*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,r=new i(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}m2.prototype.TimeBufferType=Float32Array;m2.prototype.ValueBufferType=Float32Array;m2.prototype.DefaultInterpolation=p4;class Os extends m2{}Os.prototype.ValueTypeName="bool";Os.prototype.ValueBufferType=Array;Os.prototype.DefaultInterpolation=f4;Os.prototype.InterpolantFactoryMethodLinear=void 0;Os.prototype.InterpolantFactoryMethodSmooth=void 0;class nf extends m2{}nf.prototype.ValueTypeName="color";class P4 extends m2{}P4.prototype.ValueTypeName="number";class IS extends $4{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,l=(i-t)/(r-t);let d=e*o;for(let h=d+o;d!==h;d+=4)Bn.slerpFlat(a,0,s,d-o,s,d,l);return a}}class E3 extends m2{InterpolantFactoryMethodLinear(e){return new IS(this.times,this.values,this.getValueSize(),e)}}E3.prototype.ValueTypeName="quaternion";E3.prototype.DefaultInterpolation=p4;E3.prototype.InterpolantFactoryMethodSmooth=void 0;class Bs extends m2{}Bs.prototype.ValueTypeName="string";Bs.prototype.ValueBufferType=Array;Bs.prototype.DefaultInterpolation=f4;Bs.prototype.InterpolantFactoryMethodLinear=void 0;Bs.prototype.InterpolantFactoryMethodSmooth=void 0;class T4 extends m2{}T4.prototype.ValueTypeName="vector";class L4{constructor(e,t=-1,i,r=Eu){this.name=e,this.tracks=i,this.duration=t,this.blendMode=r,this.uuid=Mi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,r=1/(e.fps||1);for(let s=0,o=i.length;s!==o;++s)t.push(xB(i[s]).scale(r));const a=new this(e.name,e.duration,t,e.blendMode);return a.uuid=e.uuid,a}static toJSON(e){const t=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let a=0,s=i.length;a!==s;++a)t.push(m2.toJSON(i[a]));return r}static CreateFromMorphTargetSequence(e,t,i,r){const a=t.length,s=[];for(let o=0;o<a;o++){let l=[],d=[];l.push((o+a-1)%a,o,(o+1)%a),d.push(0,1,0);const h=AS(l);l=r7(l,1,h),d=r7(d,1,h),!r&&l[0]===0&&(l.push(a),d.push(d[0])),s.push(new P4(".morphTargetInfluences["+t[o].name+"]",l,d).scale(1/i))}return new this(e,-1,s)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===t)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const r={},a=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const d=e[o],h=d.name.match(a);if(h&&h.length>1){const f=h[1];let p=r[f];p||(r[f]=p=[]),p.push(d)}}const s=[];for(const o in r)s.push(this.CreateFromMorphTargetSequence(o,r[o],t,i));return s}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(f,p,m,y,b){if(m.length!==0){const _=[],g=[];ef(m,_,g,y),_.length!==0&&b.push(new f(p,_,g))}},r=[],a=e.name||"default",s=e.fps||30,o=e.blendMode;let l=e.length||-1;const d=e.hierarchy||[];for(let f=0;f<d.length;f++){const p=d[f].keys;if(!(!p||p.length===0))if(p[0].morphTargets){const m={};let y;for(y=0;y<p.length;y++)if(p[y].morphTargets)for(let b=0;b<p[y].morphTargets.length;b++)m[p[y].morphTargets[b]]=-1;for(const b in m){const _=[],g=[];for(let x=0;x!==p[y].morphTargets.length;++x){const S=p[y];_.push(S.time),g.push(S.morphTarget===b?1:0)}r.push(new P4(".morphTargetInfluence["+b+"]",_,g))}l=m.length*s}else{const m=".bones["+t[f].name+"]";i(T4,m+".position",p,"pos",r),i(E3,m+".quaternion",p,"rot",r),i(T4,m+".scale",p,"scl",r)}}return r.length===0?null:new this(a,l,r,o)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,r=e.length;i!==r;++i){const a=this.tracks[i];t=Math.max(t,a.times[a.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function _B(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return P4;case"vector":case"vector2":case"vector3":case"vector4":return T4;case"color":return nf;case"quaternion":return E3;case"bool":case"boolean":return Os;case"string":return Bs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function xB(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=_B(n.type);if(n.times===void 0){const t=[],i=[];ef(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}const hr={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class rf{constructor(e,t,i){const r=this;let a=!1,s=0,o=0,l;const d=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){o++,a===!1&&r.onStart!==void 0&&r.onStart(h,s,o),a=!0},this.itemEnd=function(h){s++,r.onProgress!==void 0&&r.onProgress(h,s,o),s===o&&(a=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(h){r.onError!==void 0&&r.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,f){return d.push(h,f),this},this.removeHandler=function(h){const f=d.indexOf(h);return f!==-1&&d.splice(f,2),this},this.getHandler=function(h){for(let f=0,p=d.length;f<p;f+=2){const m=d[f],y=d[f+1];if(m.global&&(m.lastIndex=0),m.test(h))return y}return null}}}const NS=new rf;class hi{constructor(e){this.manager=e!==void 0?e:NS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(r,a){i.load(e,r,t,a)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}hi.DEFAULT_MATERIAL_NAME="__DEFAULT";const tr={};class wB extends Error{constructor(e,t){super(e),this.response=t}}class br extends hi{constructor(e){super(e)}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=hr.get(e);if(a!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(a),this.manager.itemEnd(e)},0),a;if(tr[e]!==void 0){tr[e].push({onLoad:t,onProgress:i,onError:r});return}tr[e]=[],tr[e].push({onLoad:t,onProgress:i,onError:r});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(s).then(d=>{if(d.status===200||d.status===0){if(d.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||d.body===void 0||d.body.getReader===void 0)return d;const h=tr[e],f=d.body.getReader(),p=d.headers.get("Content-Length")||d.headers.get("X-File-Size"),m=p?parseInt(p):0,y=m!==0;let b=0;const _=new ReadableStream({start(g){x();function x(){f.read().then(({done:S,value:E})=>{if(S)g.close();else{b+=E.byteLength;const A=new ProgressEvent("progress",{lengthComputable:y,loaded:b,total:m});for(let P=0,C=h.length;P<C;P++){const N=h[P];N.onProgress&&N.onProgress(A)}g.enqueue(E),x()}})}}});return new Response(_)}else throw new wB(`fetch for "${d.url}" responded with ${d.status}: ${d.statusText}`,d)}).then(d=>{switch(l){case"arraybuffer":return d.arrayBuffer();case"blob":return d.blob();case"document":return d.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return d.json();default:if(o===void 0)return d.text();{const f=/charset="?([^;"\s]*)"?/i.exec(o),p=f&&f[1]?f[1].toLowerCase():void 0,m=new TextDecoder(p);return d.arrayBuffer().then(y=>m.decode(y))}}}).then(d=>{hr.add(e,d);const h=tr[e];delete tr[e];for(let f=0,p=h.length;f<p;f++){const m=h[f];m.onLoad&&m.onLoad(d)}}).catch(d=>{const h=tr[e];if(h===void 0)throw this.manager.itemError(e),d;delete tr[e];for(let f=0,p=h.length;f<p;f++){const m=h[f];m.onError&&m.onError(d)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class bB extends hi{constructor(e){super(e)}load(e,t,i,r){const a=this,s=new br(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(o){try{t(a.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),a.manager.itemError(e)}},i,r)}parse(e){const t=[];for(let i=0;i<e.length;i++){const r=L4.parse(e[i]);t.push(r)}return t}}class SB extends hi{constructor(e){super(e)}load(e,t,i,r){const a=this,s=[],o=new Nu,l=new br(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(a.withCredentials);let d=0;function h(f){l.load(e[f],function(p){const m=a.parse(p,!0);s[f]={width:m.width,height:m.height,format:m.format,mipmaps:m.mipmaps},d+=1,d===6&&(m.mipmapCount===1&&(o.minFilter=N1),o.image=s,o.format=m.format,o.needsUpdate=!0,t&&t(o))},i,r)}if(Array.isArray(e))for(let f=0,p=e.length;f<p;++f)h(f);else l.load(e,function(f){const p=a.parse(f,!0);if(p.isCubemap){const m=p.mipmaps.length/p.mipmapCount;for(let y=0;y<m;y++){s[y]={mipmaps:[]};for(let b=0;b<p.mipmapCount;b++)s[y].mipmaps.push(p.mipmaps[y*p.mipmapCount+b]),s[y].format=p.format,s[y].width=p.width,s[y].height=p.height}o.image=s}else o.image.width=p.width,o.image.height=p.height,o.mipmaps=p.mipmaps;p.mipmapCount===1&&(o.minFilter=N1),o.format=p.format,o.needsUpdate=!0,t&&t(o)},i,r);return o}}class C4 extends hi{constructor(e){super(e)}load(e,t,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,s=hr.get(e);if(s!==void 0)return a.manager.itemStart(e),setTimeout(function(){t&&t(s),a.manager.itemEnd(e)},0),s;const o=w4("img");function l(){h(),hr.add(e,this),t&&t(this),a.manager.itemEnd(e)}function d(f){h(),r&&r(f),a.manager.itemError(e),a.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",d,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",d,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),a.manager.itemStart(e),o.src=e,o}}class MB extends hi{constructor(e){super(e)}load(e,t,i,r){const a=new G4;a.colorSpace=un;const s=new C4(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function l(d){s.load(e[d],function(h){a.images[d]=h,o++,o===6&&(a.needsUpdate=!0,t&&t(a))},void 0,r)}for(let d=0;d<e.length;++d)l(d);return a}}class EB extends hi{constructor(e){super(e)}load(e,t,i,r){const a=this,s=new ys,o=new br(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(a.withCredentials),o.load(e,function(l){let d;try{d=a.parse(l)}catch(h){if(r!==void 0)r(h);else{console.error(h);return}}d.image!==void 0?s.image=d.image:d.data!==void 0&&(s.image.width=d.width,s.image.height=d.height,s.image.data=d.data),s.wrapS=d.wrapS!==void 0?d.wrapS:On,s.wrapT=d.wrapT!==void 0?d.wrapT:On,s.magFilter=d.magFilter!==void 0?d.magFilter:N1,s.minFilter=d.minFilter!==void 0?d.minFilter:N1,s.anisotropy=d.anisotropy!==void 0?d.anisotropy:1,d.colorSpace!==void 0?s.colorSpace=d.colorSpace:d.encoding!==void 0&&(s.encoding=d.encoding),d.flipY!==void 0&&(s.flipY=d.flipY),d.format!==void 0&&(s.format=d.format),d.type!==void 0&&(s.type=d.type),d.mipmaps!==void 0&&(s.mipmaps=d.mipmaps,s.minFilter=L2),d.mipmapCount===1&&(s.minFilter=N1),d.generateMipmaps!==void 0&&(s.generateMipmaps=d.generateMipmaps),s.needsUpdate=!0,t&&t(s,d)},i,r),s}}class DS extends hi{constructor(e){super(e)}load(e,t,i,r){const a=new B1,s=new C4(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){a.image=o,a.needsUpdate=!0,t!==void 0&&t(a)},i,r),a}}class Sa extends c1{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new gt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class OS extends Sa{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(c1.DEFAULT_UP),this.updateMatrix(),this.groundColor=new gt(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const a8=new Ht,Fv=new j,zv=new j;class af{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Le(512,512),this.map=null,this.mapPass=null,this.matrix=new Ht,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new W4,this._frameExtents=new Le(1,1),this._viewportCount=1,this._viewports=[new h1(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Fv.setFromMatrixPosition(e.matrixWorld),t.position.copy(Fv),zv.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(zv),t.updateMatrixWorld(),a8.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a8),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(a8)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class PB extends af{constructor(){super(new Y1(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=h3*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,a=e.distance||t.far;(i!==t.fov||r!==t.aspect||a!==t.far)&&(t.fov=i,t.aspect=r,t.far=a,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class BS extends Sa{constructor(e,t,i=0,r=Math.PI/3,a=0,s=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(c1.DEFAULT_UP),this.updateMatrix(),this.target=new c1,this.distance=i,this.angle=r,this.penumbra=a,this.decay=s,this.map=null,this.shadow=new PB}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const jv=new Ht,fl=new j,s8=new j;class TB extends af{constructor(){super(new Y1(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Le(4,2),this._viewportCount=6,this._viewports=[new h1(2,1,1,1),new h1(0,1,1,1),new h1(3,1,1,1),new h1(1,1,1,1),new h1(3,0,1,1),new h1(1,0,1,1)],this._cubeDirections=[new j(1,0,0),new j(-1,0,0),new j(0,0,1),new j(0,0,-1),new j(0,1,0),new j(0,-1,0)],this._cubeUps=[new j(0,1,0),new j(0,1,0),new j(0,1,0),new j(0,1,0),new j(0,0,1),new j(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,r=this.matrix,a=e.distance||i.far;a!==i.far&&(i.far=a,i.updateProjectionMatrix()),fl.setFromMatrixPosition(e.matrixWorld),i.position.copy(fl),s8.copy(i.position),s8.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(s8),i.updateMatrixWorld(),r.makeTranslation(-fl.x,-fl.y,-fl.z),jv.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jv)}}class US extends Sa{constructor(e,t,i=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new TB}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class LB extends af{constructor(){super(new dr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class FS extends Sa{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(c1.DEFAULT_UP),this.updateMatrix(),this.target=new c1,this.shadow=new LB}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class zS extends Sa{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class jS extends Sa{constructor(e,t,i=10,r=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class HS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new j)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,r=e.y,a=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*r),t.addScaledVector(s[2],.488603*a),t.addScaledVector(s[3],.488603*i),t.addScaledVector(s[4],1.092548*(i*r)),t.addScaledVector(s[5],1.092548*(r*a)),t.addScaledVector(s[6],.315392*(3*a*a-1)),t.addScaledVector(s[7],1.092548*(i*a)),t.addScaledVector(s[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){const i=e.x,r=e.y,a=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],2*.511664*r),t.addScaledVector(s[2],2*.511664*a),t.addScaledVector(s[3],2*.511664*i),t.addScaledVector(s[4],2*.429043*i*r),t.addScaledVector(s[5],2*.429043*r*a),t.addScaledVector(s[6],.743125*a*a-.247708),t.addScaledVector(s[7],2*.429043*i*a),t.addScaledVector(s[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const i=e.x,r=e.y,a=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*a,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*a,t[6]=.315392*(3*a*a-1),t[7]=1.092548*i*a,t[8]=.546274*(i*i-r*r)}}class VS extends Sa{constructor(e=new HS,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class $u extends hi{constructor(e){super(e),this.textures={}}load(e,t,i,r){const a=this,s=new br(a.manager);s.setPath(a.path),s.setRequestHeader(a.requestHeader),s.setWithCredentials(a.withCredentials),s.load(e,function(o){try{t(a.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),a.manager.itemError(e)}},i,r)}parse(e){const t=this.textures;function i(a){return t[a]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",a),t[a]}const r=$u.createMaterialFromType(e.type);if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new gt().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(r.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(r.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(r.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(r.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(r.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(r.depthFunc=e.depthFunc),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(r.blendSrc=e.blendSrc),e.blendDst!==void 0&&(r.blendDst=e.blendDst),e.blendEquation!==void 0&&(r.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(r.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(r.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(r.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&r.blendColor!==void 0&&r.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(r.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==void 0&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(r.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const a in e.uniforms){const s=e.uniforms[a];switch(r.uniforms[a]={},s.type){case"t":r.uniforms[a].value=i(s.value);break;case"c":r.uniforms[a].value=new gt().setHex(s.value);break;case"v2":r.uniforms[a].value=new Le().fromArray(s.value);break;case"v3":r.uniforms[a].value=new j().fromArray(s.value);break;case"v4":r.uniforms[a].value=new h1().fromArray(s.value);break;case"m3":r.uniforms[a].value=new Qt().fromArray(s.value);break;case"m4":r.uniforms[a].value=new Ht().fromArray(s.value);break;default:r.uniforms[a].value=s.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(r.glslVersion=e.glslVersion),e.extensions!==void 0)for(const a in e.extensions)r.extensions[a]=e.extensions[a];if(e.lights!==void 0&&(r.lights=e.lights),e.clipping!==void 0&&(r.clipping=e.clipping),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=i(e.map)),e.matcap!==void 0&&(r.matcap=i(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let a=e.normalScale;Array.isArray(a)===!1&&(a=[a,a]),r.normalScale=new Le().fromArray(a)}return e.displacementMap!==void 0&&(r.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=i(e.envMap)),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new Le().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(r.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(r.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(r.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(r.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=i(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:xS,SpriteMaterial:ku,RawShaderMaterial:wS,ShaderMaterial:f2,PointsMaterial:X9,MeshPhysicalMaterial:bS,MeshStandardMaterial:Q9,MeshPhongMaterial:SS,MeshToonMaterial:MS,MeshNormalMaterial:ES,MeshLambertMaterial:PS,MeshDepthMaterial:j9,MeshDistanceMaterial:H9,MeshBasicMaterial:wa,MeshMatcapMaterial:TS,LineDashedMaterial:LS,LineBasicMaterial:ei,Material:En};return new t[e]}}class a7{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,r=e.length;i<r;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class GS extends Zt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class WS extends hi{constructor(e){super(e)}load(e,t,i,r){const a=this,s=new br(a.manager);s.setPath(a.path),s.setRequestHeader(a.requestHeader),s.setWithCredentials(a.withCredentials),s.load(e,function(o){try{t(a.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),a.manager.itemError(e)}},i,r)}parse(e){const t={},i={};function r(m,y){if(t[y]!==void 0)return t[y];const _=m.interleavedBuffers[y],g=a(m,_.buffer),x=Ho(_.type,g),S=new Ru(x,_.stride);return S.uuid=_.uuid,t[y]=S,S}function a(m,y){if(i[y]!==void 0)return i[y];const _=m.arrayBuffers[y],g=new Uint32Array(_).buffer;return i[y]=g,g}const s=e.isInstancedBufferGeometry?new GS:new Zt,o=e.data.index;if(o!==void 0){const m=Ho(o.type,o.array);s.setIndex(new p1(m,1))}const l=e.data.attributes;for(const m in l){const y=l[m];let b;if(y.isInterleavedBufferAttribute){const _=r(e.data,y.data);b=new Ls(_,y.itemSize,y.offset,y.normalized)}else{const _=Ho(y.type,y.array),g=y.isInstancedBufferAttribute?p3:p1;b=new g(_,y.itemSize,y.normalized)}y.name!==void 0&&(b.name=y.name),y.usage!==void 0&&b.setUsage(y.usage),s.setAttribute(m,b)}const d=e.data.morphAttributes;if(d)for(const m in d){const y=d[m],b=[];for(let _=0,g=y.length;_<g;_++){const x=y[_];let S;if(x.isInterleavedBufferAttribute){const E=r(e.data,x.data);S=new Ls(E,x.itemSize,x.offset,x.normalized)}else{const E=Ho(x.type,x.array);S=new p1(E,x.itemSize,x.normalized)}x.name!==void 0&&(S.name=x.name),b.push(S)}s.morphAttributes[m]=b}e.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const f=e.data.groups||e.data.drawcalls||e.data.offsets;if(f!==void 0)for(let m=0,y=f.length;m!==y;++m){const b=f[m];s.addGroup(b.start,b.count,b.materialIndex)}const p=e.data.boundingSphere;if(p!==void 0){const m=new j;p.center!==void 0&&m.fromArray(p.center),s.boundingSphere=new Un(m,p.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}}class CB extends hi{constructor(e){super(e)}load(e,t,i,r){const a=this,s=this.path===""?a7.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;const o=new br(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let d=null;try{d=JSON.parse(l)}catch(f){r!==void 0&&r(f),console.error("THREE:ObjectLoader: Can't parse "+e+".",f.message);return}const h=d.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){r!==void 0&&r(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}a.parse(d,t)},i,r)}async loadAsync(e,t){const i=this,r=this.path===""?a7.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const a=new br(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials);const s=await a.loadAsync(e,t),o=JSON.parse(s),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(o)}parse(e,t){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),a=this.parseGeometries(e.geometries,r),s=this.parseImages(e.images,function(){t!==void 0&&t(d)}),o=this.parseTextures(e.textures,s),l=this.parseMaterials(e.materials,o),d=this.parseObject(e.object,a,l,o,i),h=this.parseSkeletons(e.skeletons,d);if(this.bindSkeletons(d,h),t!==void 0){let f=!1;for(const p in s)if(s[p].data instanceof HTMLImageElement){f=!0;break}f===!1&&t(d)}return d}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=await this.parseImagesAsync(e.images),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,r,o,s,t),d=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,d),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const a=new D2().fromJSON(e[i]);t[a.uuid]=a}return t}parseSkeletons(e,t){const i={},r={};if(t.traverse(function(a){a.isBone&&(r[a.uuid]=a)}),e!==void 0)for(let a=0,s=e.length;a<s;a++){const o=new Iu().fromJSON(e[a],r);i[o.uuid]=o}return i}parseGeometries(e,t){const i={};if(e!==void 0){const r=new WS;for(let a=0,s=e.length;a<s;a++){let o;const l=e[a];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(l);break;default:l.type in Uv?o=Uv[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),l.userData!==void 0&&(o.userData=l.userData),i[l.uuid]=o}}return i}parseMaterials(e,t){const i={},r={};if(e!==void 0){const a=new $u;a.setTextures(t);for(let s=0,o=e.length;s<o;s++){const l=e[s];i[l.uuid]===void 0&&(i[l.uuid]=a.parse(l)),r[l.uuid]=i[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],a=L4.parse(r);t[a.uuid]=a}return t}parseImages(e,t){const i=this,r={};let a;function s(l){return i.manager.itemStart(l),a.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const d=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:i.resourcePath+d;return s(h)}else return l.data?{data:Ho(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new rf(t);a=new C4(l),a.setCrossOrigin(this.crossOrigin);for(let d=0,h=e.length;d<h;d++){const f=e[d],p=f.url;if(Array.isArray(p)){const m=[];for(let y=0,b=p.length;y<b;y++){const _=p[y],g=o(_);g!==null&&(g instanceof HTMLImageElement?m.push(g):m.push(new ys(g.data,g.width,g.height)))}r[f.uuid]=new cs(m)}else{const m=o(f.url);r[f.uuid]=new cs(m)}}}return r}async parseImagesAsync(e){const t=this,i={};let r;async function a(s){if(typeof s=="string"){const o=s,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await r.loadAsync(l)}else return s.data?{data:Ho(s.type,s.data),width:s.width,height:s.height}:null}if(e!==void 0&&e.length>0){r=new C4(this.manager),r.setCrossOrigin(this.crossOrigin);for(let s=0,o=e.length;s<o;s++){const l=e[s],d=l.url;if(Array.isArray(d)){const h=[];for(let f=0,p=d.length;f<p;f++){const m=d[f],y=await a(m);y!==null&&(y instanceof HTMLImageElement?h.push(y):h.push(new ys(y.data,y.width,y.height)))}i[l.uuid]=new cs(h)}else{const h=await a(l.url);i[l.uuid]=new cs(h)}}}return i}parseTextures(e,t){function i(a,s){return typeof a=="number"?a:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a),s[a])}const r={};if(e!==void 0)for(let a=0,s=e.length;a<s;a++){const o=e[a];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=t[o.image],d=l.data;let h;Array.isArray(d)?(h=new G4,d.length===6&&(h.needsUpdate=!0)):(d&&d.data?h=new ys:h=new B1,d&&(h.needsUpdate=!0)),h.source=l,h.uuid=o.uuid,o.name!==void 0&&(h.name=o.name),o.mapping!==void 0&&(h.mapping=i(o.mapping,AB)),o.channel!==void 0&&(h.channel=o.channel),o.offset!==void 0&&h.offset.fromArray(o.offset),o.repeat!==void 0&&h.repeat.fromArray(o.repeat),o.center!==void 0&&h.center.fromArray(o.center),o.rotation!==void 0&&(h.rotation=o.rotation),o.wrap!==void 0&&(h.wrapS=i(o.wrap[0],Hv),h.wrapT=i(o.wrap[1],Hv)),o.format!==void 0&&(h.format=o.format),o.internalFormat!==void 0&&(h.internalFormat=o.internalFormat),o.type!==void 0&&(h.type=o.type),o.colorSpace!==void 0&&(h.colorSpace=o.colorSpace),o.encoding!==void 0&&(h.encoding=o.encoding),o.minFilter!==void 0&&(h.minFilter=i(o.minFilter,Vv)),o.magFilter!==void 0&&(h.magFilter=i(o.magFilter,Vv)),o.anisotropy!==void 0&&(h.anisotropy=o.anisotropy),o.flipY!==void 0&&(h.flipY=o.flipY),o.generateMipmaps!==void 0&&(h.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(h.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(h.compareFunction=o.compareFunction),o.userData!==void 0&&(h.userData=o.userData),r[o.uuid]=h}return r}parseObject(e,t,i,r,a){let s;function o(p){return t[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",p),t[p]}function l(p){if(p!==void 0){if(Array.isArray(p)){const m=[];for(let y=0,b=p.length;y<b;y++){const _=p[y];i[_]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",_),m.push(i[_])}return m}return i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),i[p]}}function d(p){return r[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",p),r[p]}let h,f;switch(e.type){case"Scene":s=new q5,e.background!==void 0&&(Number.isInteger(e.background)?s.background=new gt(e.background):s.background=d(e.background)),e.environment!==void 0&&(s.environment=d(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?s.fog=new Au(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(s.fog=new Cu(e.fog.color,e.fog.density)),e.fog.name!==""&&(s.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(s.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(s.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":s=new Y1(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(s.focus=e.focus),e.zoom!==void 0&&(s.zoom=e.zoom),e.filmGauge!==void 0&&(s.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(s.filmOffset=e.filmOffset),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new dr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(s.zoom=e.zoom),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new zS(e.color,e.intensity);break;case"DirectionalLight":s=new FS(e.color,e.intensity);break;case"PointLight":s=new US(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new jS(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new BS(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new OS(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=new VS().fromJSON(e);break;case"SkinnedMesh":h=o(e.geometry),f=l(e.material),s=new aS(h,f),e.bindMode!==void 0&&(s.bindMode=e.bindMode),e.bindMatrix!==void 0&&s.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(s.skeleton=e.skeleton);break;case"Mesh":h=o(e.geometry),f=l(e.material),s=new an(h,f);break;case"InstancedMesh":h=o(e.geometry),f=l(e.material);const p=e.count,m=e.instanceMatrix,y=e.instanceColor;s=new sS(h,f,p),s.instanceMatrix=new p3(new Float32Array(m.array),16),y!==void 0&&(s.instanceColor=new p3(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":h=o(e.geometry),f=l(e.material),s=new oS(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,f),s.geometry=h,s.perObjectFrustumCulled=e.perObjectFrustumCulled,s.sortObjects=e.sortObjects,s._drawRanges=e.drawRanges,s._reservedRanges=e.reservedRanges,s._visibility=e.visibility,s._active=e.active,s._bounds=e.bounds.map(b=>{const _=new Zn;_.min.fromArray(b.boxMin),_.max.fromArray(b.boxMax);const g=new Un;return g.radius=b.sphereRadius,g.center.fromArray(b.sphereCenter),{boxInitialized:b.boxInitialized,box:_,sphereInitialized:b.sphereInitialized,sphere:g}}),s._maxGeometryCount=e.maxGeometryCount,s._maxVertexCount=e.maxVertexCount,s._maxIndexCount=e.maxIndexCount,s._geometryInitialized=e.geometryInitialized,s._geometryCount=e.geometryCount,s._matricesTexture=d(e.matricesTexture.uuid);break;case"LOD":s=new rS;break;case"Line":s=new pa(o(e.geometry),l(e.material));break;case"LineLoop":s=new lS(o(e.geometry),l(e.material));break;case"LineSegments":s=new j2(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":s=new cS(o(e.geometry),l(e.material));break;case"Sprite":s=new G9(l(e.material));break;case"Group":s=new Wo;break;case"Bone":s=new W9;break;default:s=new c1}if(s.uuid=e.uuid,e.name!==void 0&&(s.name=e.name),e.matrix!==void 0?(s.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(e.position!==void 0&&s.position.fromArray(e.position),e.rotation!==void 0&&s.rotation.fromArray(e.rotation),e.quaternion!==void 0&&s.quaternion.fromArray(e.quaternion),e.scale!==void 0&&s.scale.fromArray(e.scale)),e.up!==void 0&&s.up.fromArray(e.up),e.castShadow!==void 0&&(s.castShadow=e.castShadow),e.receiveShadow!==void 0&&(s.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(s.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(s.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(s.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&s.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(s.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(s.visible=e.visible),e.frustumCulled!==void 0&&(s.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(s.renderOrder=e.renderOrder),e.userData!==void 0&&(s.userData=e.userData),e.layers!==void 0&&(s.layers.mask=e.layers),e.children!==void 0){const p=e.children;for(let m=0;m<p.length;m++)s.add(this.parseObject(p[m],t,i,r,a))}if(e.animations!==void 0){const p=e.animations;for(let m=0;m<p.length;m++){const y=p[m];s.animations.push(a[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(s.autoUpdate=e.autoUpdate);const p=e.levels;for(let m=0;m<p.length;m++){const y=p[m],b=s.getObjectByProperty("uuid",y.object);b!==void 0&&s.addLevel(b,y.distance,y.hysteresis)}}return s}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=t[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}}const AB={UVMapping:Su,CubeReflectionMapping:wr,CubeRefractionMapping:fa,EquirectangularReflectionMapping:c4,EquirectangularRefractionMapping:u4,CubeUVReflectionMapping:w3},Hv={RepeatWrapping:d4,ClampToEdgeWrapping:On,MirroredRepeatWrapping:h4},Vv={NearestFilter:J1,NearestMipmapNearestFilter:W5,NearestMipmapLinearFilter:es,LinearFilter:N1,LinearMipmapNearestFilter:Bl,LinearMipmapLinearFilter:L2};class RB extends hi{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,s=hr.get(e);if(s!==void 0){if(a.manager.itemStart(e),s.then){s.then(d=>{t&&t(d),a.manager.itemEnd(e)}).catch(d=>{r&&r(d)});return}return setTimeout(function(){t&&t(s),a.manager.itemEnd(e)},0),s}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader;const l=fetch(e,o).then(function(d){return d.blob()}).then(function(d){return createImageBitmap(d,Object.assign(a.options,{colorSpaceConversion:"none"}))}).then(function(d){return hr.add(e,d),t&&t(d),a.manager.itemEnd(e),d}).catch(function(d){r&&r(d),hr.remove(e),a.manager.itemError(e),a.manager.itemEnd(e)});hr.add(e,l),a.manager.itemStart(e)}}let jc;class sf{static getContext(){return jc===void 0&&(jc=new(window.AudioContext||window.webkitAudioContext)),jc}static setContext(e){jc=e}}class kB extends hi{constructor(e){super(e)}load(e,t,i,r){const a=this,s=new br(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(l){try{const d=l.slice(0);sf.getContext().decodeAudioData(d,function(f){t(f)}).catch(o)}catch(d){o(d)}},i,r);function o(l){r?r(l):console.error(l),a.manager.itemError(e)}}}const Gv=new Ht,Wv=new Ht,Va=new Ht;class IB{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Y1,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Y1,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Va.copy(e.projectionMatrix);const r=t.eyeSep/2,a=r*t.near/t.focus,s=t.near*Math.tan(ms*t.fov*.5)/t.zoom;let o,l;Wv.elements[12]=-r,Gv.elements[12]=r,o=-s*t.aspect+a,l=s*t.aspect+a,Va.elements[0]=2*t.near/(l-o),Va.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(Va),o=-s*t.aspect-a,l=s*t.aspect-a,Va.elements[0]=2*t.near/(l-o),Va.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(Va)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Wv),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Gv)}}class of{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Xv(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Xv();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Xv(){return(typeof performance>"u"?Date:performance).now()}const Ga=new j,Yv=new Bn,NB=new j,Wa=new j;class DB extends c1{constructor(){super(),this.type="AudioListener",this.context=sf.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new of}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ga,Yv,NB),Wa.set(0,0,-1).applyQuaternion(Yv),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ga.x,r),t.positionY.linearRampToValueAtTime(Ga.y,r),t.positionZ.linearRampToValueAtTime(Ga.z,r),t.forwardX.linearRampToValueAtTime(Wa.x,r),t.forwardY.linearRampToValueAtTime(Wa.y,r),t.forwardZ.linearRampToValueAtTime(Wa.z,r),t.upX.linearRampToValueAtTime(i.x,r),t.upY.linearRampToValueAtTime(i.y,r),t.upZ.linearRampToValueAtTime(i.z,r)}else t.setPosition(Ga.x,Ga.y,Ga.z),t.setOrientation(Wa.x,Wa.y,Wa.z,i.x,i.y,i.z)}}class XS extends c1{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Xa=new j,qv=new Bn,OB=new j,Ya=new j;class BB extends XS{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Xa,qv,OB),Ya.set(0,0,1).applyQuaternion(qv);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Xa.x,i),t.positionY.linearRampToValueAtTime(Xa.y,i),t.positionZ.linearRampToValueAtTime(Xa.z,i),t.orientationX.linearRampToValueAtTime(Ya.x,i),t.orientationY.linearRampToValueAtTime(Ya.y,i),t.orientationZ.linearRampToValueAtTime(Ya.z,i)}else t.setPosition(Xa.x,Xa.y,Xa.z),t.setOrientation(Ya.x,Ya.y,Ya.z)}}class UB{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class YS{constructor(e,t,i){this.binding=e,this.valueSize=i;let r,a,s;switch(t){case"quaternion":r=this._slerp,a=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":r=this._select,a=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:r=this._lerp,a=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=a,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,r=this.valueSize,a=e*r+r;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==r;++o)i[a+o]=i[o];s=t}else{s+=t;const o=t/s;this._mixBufferRegion(i,a,0,o,r)}this.cumulativeWeight=s}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,r=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,r=e*t+t,a=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const l=t*this._origIndex;this._mixBufferRegion(i,r,l,1-a,t)}s>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*t,1,t);for(let l=t,d=t+t;l!==d;++l)if(i[l]!==i[l+t]){o.setValue(i,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(t,r);for(let a=i,s=r;a!==s;++a)t[a]=t[r+a%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,r,a){if(r>=.5)for(let s=0;s!==a;++s)e[t+s]=e[i+s]}_slerp(e,t,i,r){Bn.slerpFlat(e,t,e,t,e,i,r)}_slerpAdditive(e,t,i,r,a){const s=this._workIndex*a;Bn.multiplyQuaternionsFlat(e,s,e,t,e,i),Bn.slerpFlat(e,t,e,t,e,s,r)}_lerp(e,t,i,r,a){const s=1-r;for(let o=0;o!==a;++o){const l=t+o;e[l]=e[l]*s+e[i+o]*r}}_lerpAdditive(e,t,i,r,a){for(let s=0;s!==a;++s){const o=t+s;e[o]=e[o]+e[i+s]*r}}}const lf="\\[\\]\\.:\\/",FB=new RegExp("["+lf+"]","g"),cf="[^"+lf+"]",zB="[^"+lf.replace("\\.","")+"]",jB=/((?:WC+[\/:])*)/.source.replace("WC",cf),HB=/(WCOD+)?/.source.replace("WCOD",zB),VB=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",cf),GB=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",cf),WB=new RegExp("^"+jB+HB+VB+GB+"$"),XB=["material","materials","bones","map"];class YB{constructor(e,t,i){const r=i||r1.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,a=i.length;r!==a;++r)i[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class r1{constructor(e,t,i){this.path=t,this.parsedPath=i||r1.parseTrackName(t),this.node=r1.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new r1.Composite(e,t,i):new r1(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(FB,"")}static parseTrackName(e){const t=WB.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const a=i.nodeName.substring(r+1);XB.indexOf(a)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=a)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(a){for(let s=0;s<a.length;s++){const o=a[s];if(o.name===t||o.uuid===t)return o;const l=i(o.children);if(l)return l}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)e[t++]=i[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)i[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,r=t.propertyName;let a=t.propertyIndex;if(e||(e=r1.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let d=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===d){d=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(d!==void 0){if(e[d]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[d]}}const s=e[r];if(s===void 0){const d=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+d+"."+r+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(a!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[a]!==void 0&&(a=e.morphTargetDictionary[a])}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else s.fromArray!==void 0&&s.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}r1.Composite=YB;r1.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};r1.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};r1.prototype.GetterByBindingType=[r1.prototype._getValue_direct,r1.prototype._getValue_array,r1.prototype._getValue_arrayElement,r1.prototype._getValue_toArray];r1.prototype.SetterByBindingTypeAndVersioning=[[r1.prototype._setValue_direct,r1.prototype._setValue_direct_setNeedsUpdate,r1.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[r1.prototype._setValue_array,r1.prototype._setValue_array_setNeedsUpdate,r1.prototype._setValue_array_setMatrixWorldNeedsUpdate],[r1.prototype._setValue_arrayElement,r1.prototype._setValue_arrayElement_setNeedsUpdate,r1.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[r1.prototype._setValue_fromArray,r1.prototype._setValue_fromArray_setNeedsUpdate,r1.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class qB{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Mi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,r=arguments.length;i!==r;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,r=this._parsedPaths,a=this._bindings,s=a.length;let o,l=e.length,d=this.nCachedObjects_;for(let h=0,f=arguments.length;h!==f;++h){const p=arguments[h],m=p.uuid;let y=t[m];if(y===void 0){y=l++,t[m]=y,e.push(p);for(let b=0,_=s;b!==_;++b)a[b].push(new r1(p,i[b],r[b]))}else if(y<d){o=e[y];const b=--d,_=e[b];t[_.uuid]=y,e[y]=_,t[m]=b,e[b]=p;for(let g=0,x=s;g!==x;++g){const S=a[g],E=S[b];let A=S[y];S[y]=E,A===void 0&&(A=new r1(p,i[g],r[g])),S[b]=A}}else e[y]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=d}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let a=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const l=arguments[s],d=l.uuid,h=t[d];if(h!==void 0&&h>=a){const f=a++,p=e[f];t[p.uuid]=h,e[h]=p,t[d]=f,e[f]=l;for(let m=0,y=r;m!==y;++m){const b=i[m],_=b[f],g=b[h];b[h]=_,b[f]=g}}}this.nCachedObjects_=a}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length;let a=this.nCachedObjects_,s=e.length;for(let o=0,l=arguments.length;o!==l;++o){const d=arguments[o],h=d.uuid,f=t[h];if(f!==void 0)if(delete t[h],f<a){const p=--a,m=e[p],y=--s,b=e[y];t[m.uuid]=f,e[f]=m,t[b.uuid]=p,e[p]=b,e.pop();for(let _=0,g=r;_!==g;++_){const x=i[_],S=x[p],E=x[y];x[f]=S,x[p]=E,x.pop()}}else{const p=--s,m=e[p];p>0&&(t[m.uuid]=f),e[f]=m,e.pop();for(let y=0,b=r;y!==b;++y){const _=i[y];_[f]=_[p],_.pop()}}}this.nCachedObjects_=a}subscribe_(e,t){const i=this._bindingsIndicesByPath;let r=i[e];const a=this._bindings;if(r!==void 0)return a[r];const s=this._paths,o=this._parsedPaths,l=this._objects,d=l.length,h=this.nCachedObjects_,f=new Array(d);r=a.length,i[e]=r,s.push(e),o.push(t),a.push(f);for(let p=h,m=l.length;p!==m;++p){const y=l[p];f[p]=new r1(y,e,t)}return f}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const r=this._paths,a=this._parsedPaths,s=this._bindings,o=s.length-1,l=s[o],d=e[o];t[d]=i,s[i]=l,s.pop(),a[i]=a[o],a.pop(),r[i]=r[o],r.pop()}}}class qS{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;const a=t.tracks,s=a.length,o=new Array(s),l={endingStart:os,endingEnd:os};for(let d=0;d!==s;++d){const h=a[d].createInterpolant(null);o[d]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Lb,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const r=this._clip.duration,a=e._clip.duration,s=a/r,o=r/a;e.warp(1,s,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const r=this._mixer,a=r.time,s=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,d=o.sampleValues;return l[0]=a,l[1]=a+i,d[0]=e/s,d[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}const a=this._startTime;if(a!==null){const l=(e-a)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const s=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,d=this._propertyBindings;switch(this.blendMode){case R9:for(let h=0,f=l.length;h!==f;++h)l[h].evaluate(s),d[h].accumulateAdditive(o);break;case Eu:default:for(let h=0,f=l.length;h!==f;++h)l[h].evaluate(s),d[h].accumulate(r,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let r=this.time+e,a=this._loopCount;const s=i===Cb;if(e===0)return a===-1?r:s&&(a&1)===1?t-r:r;if(i===Tb){a===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(a===-1&&(e>=0?(a=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),r>=t||r<0){const o=Math.floor(r/t);r-=t*o,a+=Math.abs(o);const l=this.repetitions-a;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const d=e<0;this._setEndings(d,!d,s)}else this._setEndings(!1,!1,s);this._loopCount=a,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(s&&(a&1)===1)return t-r}return r}_setEndings(e,t,i){const r=this._interpolantSettings;i?(r.endingStart=ls,r.endingEnd=ls):(e?r.endingStart=this.zeroSlopeAtStart?ls:os:r.endingStart=m4,t?r.endingEnd=this.zeroSlopeAtEnd?ls:os:r.endingEnd=m4)}_scheduleFading(e,t,i){const r=this._mixer,a=r.time;let s=this._weightInterpolant;s===null&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=a,l[0]=t,o[1]=a+e,l[1]=i,this}}const $B=new Float32Array(1);class KB extends z2{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,r=e._clip.tracks,a=r.length,s=e._propertyBindings,o=e._interpolants,l=i.uuid,d=this._bindingsByRootAndName;let h=d[l];h===void 0&&(h={},d[l]=h);for(let f=0;f!==a;++f){const p=r[f],m=p.name;let y=h[m];if(y!==void 0)++y.referenceCount,s[f]=y;else{if(y=s[f],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,l,m));continue}const b=t&&t._propertyBindings[f].binding.parsedPath;y=new YS(r1.create(i,m,b),p.ValueTypeName,p.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,l,m),s[f]=y}o[f].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,r=e._clip.uuid,a=this._actionsByClip[r];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,r,i)}const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const a=t[i];a.useCount++===0&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const a=t[i];--a.useCount===0&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const r=this._actions,a=this._actionsByClip;let s=a[t];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[t]=s;else{const o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),s.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],r=e._cacheIndex;i._cacheIndex=r,t[r]=i,t.pop(),e._cacheIndex=null;const a=e._clip.uuid,s=this._actionsByClip,o=s[a],l=o.knownActions,d=l[l.length-1],h=e._byClipCacheIndex;d._byClipCacheIndex=h,l[h]=d,l.pop(),e._byClipCacheIndex=null;const f=o.actionByRoot,p=(e._localRoot||this._root).uuid;delete f[p],l.length===0&&delete s[a],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){const a=t[i];--a.referenceCount===0&&this._removeInactiveBinding(a)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,r=this._nActiveActions++,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=i,t[i]=a}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,r=--this._nActiveActions,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=i,t[i]=a}_addInactiveBinding(e,t,i){const r=this._bindingsByRootAndName,a=this._bindings;let s=r[t];s===void 0&&(s={},r[t]=s),s[i]=e,e._cacheIndex=a.length,a.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,r=i.rootNode.uuid,a=i.path,s=this._bindingsByRootAndName,o=s[r],l=t[t.length-1],d=e._cacheIndex;l._cacheIndex=d,t[d]=l,t.pop(),delete o[a],Object.keys(o).length===0&&delete s[r]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=i,t[i]=a}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,a=t[r];e._cacheIndex=r,t[r]=e,a._cacheIndex=i,t[i]=a}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new tf(new Float32Array(2),new Float32Array(2),1,$B),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,a=t[r];e.__cacheIndex=r,t[r]=e,a.__cacheIndex=i,t[i]=a}clipAction(e,t,i){const r=t||this._root,a=r.uuid;let s=typeof e=="string"?L4.findByName(r,e):e;const o=s!==null?s.uuid:e,l=this._actionsByClip[o];let d=null;if(i===void 0&&(s!==null?i=s.blendMode:i=Eu),l!==void 0){const f=l.actionByRoot[a];if(f!==void 0&&f.blendMode===i)return f;d=l.knownActions[0],s===null&&(s=d._clip)}if(s===null)return null;const h=new qS(this,s,t,i);return this._bindAction(h,d),this._addInactiveAction(h,o,a),h}existingAction(e,t){const i=t||this._root,r=i.uuid,a=typeof e=="string"?L4.findByName(i,e):e,s=a?a.uuid:e,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,r=this.time+=e,a=Math.sign(e),s=this._accuIndex^=1;for(let d=0;d!==i;++d)t[d]._update(r,e,a,s);const o=this._bindings,l=this._nActiveBindings;for(let d=0;d!==l;++d)o[d].apply(s);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,r=this._actionsByClip,a=r[i];if(a!==void 0){const s=a.knownActions;for(let o=0,l=s.length;o!==l;++o){const d=s[o];this._deactivateAction(d);const h=d._cacheIndex,f=t[t.length-1];d._cacheIndex=null,d._byClipCacheIndex=null,f._cacheIndex=h,t[h]=f,t.pop(),this._removeInactiveBindingsForAction(d)}delete r[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const s in i){const o=i[s].actionByRoot,l=o[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,a=r[t];if(a!==void 0)for(const s in a){const o=a[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class uf{constructor(e){this.value=e}clone(){return new uf(this.value.clone===void 0?this.value:this.value.clone())}}let ZB=0;class JB extends z2{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:ZB++}),this.name="",this.usage=_4,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,r=t.length;i<r;i++){const a=Array.isArray(t[i])?t[i]:[t[i]];for(let s=0;s<a.length;s++)this.uniforms.push(a[s].clone())}return this}clone(){return new this.constructor().copy(this)}}class QB extends Ru{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class eU{constructor(e,t,i,r,a){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=r,this.count=a,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class $S{constructor(e,t,i=0,r=1/0){this.ray=new Ns(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new vs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return s7(e,this,i,t),i.sort($v),i}intersectObjects(e,t=!0,i=[]){for(let r=0,a=e.length;r<a;r++)s7(e[r],this,i,t);return i.sort($v),i}}function $v(n,e){return n.distance-e.distance}function s7(n,e,t,i){if(n.layers.test(e.layers)&&n.raycast(e,t),i===!0){const r=n.children;for(let a=0,s=r.length;a<s;a++)s7(r[a],e,t,!0)}}class o7{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(X1(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class tU{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Kv=new Le;class nU{constructor(e=new Le(1/0,1/0),t=new Le(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Kv.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Kv).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Zv=new j,Hc=new j;class iU{constructor(e=new j,t=new j){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Zv.subVectors(e,this.start),Hc.subVectors(this.end,this.start);const i=Hc.dot(Hc);let a=Hc.dot(Zv)/i;return t&&(a=X1(a,0,1)),a}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Jv=new j;class rU extends c1{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new Zt,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let s=0,o=1,l=32;s<l;s++,o++){const d=s/l*Math.PI*2,h=o/l*Math.PI*2;r.push(Math.cos(d),Math.sin(d),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new Et(r,3));const a=new ei({fog:!1,toneMapped:!1});this.cone=new j2(i,a),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Jv.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Jv),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Hr=new j,Vc=new Ht,o8=new Ht;class aU extends j2{constructor(e){const t=KS(e),i=new Zt,r=[],a=[],s=new gt(0,0,1),o=new gt(0,1,0);for(let d=0;d<t.length;d++){const h=t[d];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),a.push(s.r,s.g,s.b),a.push(o.r,o.g,o.b))}i.setAttribute("position",new Et(r,3)),i.setAttribute("color",new Et(a,3));const l=new ei({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,r=i.getAttribute("position");o8.copy(this.root.matrixWorld).invert();for(let a=0,s=0;a<t.length;a++){const o=t[a];o.parent&&o.parent.isBone&&(Vc.multiplyMatrices(o8,o.matrixWorld),Hr.setFromMatrixPosition(Vc),r.setXYZ(s,Hr.x,Hr.y,Hr.z),Vc.multiplyMatrices(o8,o.parent.matrixWorld),Hr.setFromMatrixPosition(Vc),r.setXYZ(s+1,Hr.x,Hr.y,Hr.z),s+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function KS(n){const e=[];n.isBone===!0&&e.push(n);for(let t=0;t<n.children.length;t++)e.push.apply(e,KS(n.children[t]));return e}class sU extends an{constructor(e,t,i){const r=new q4(t,4,2),a=new wa({wireframe:!0,fog:!1,toneMapped:!1});super(r,a),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const oU=new j,Qv=new gt,ey=new gt;class lU extends c1{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const r=new Y4(t);r.rotateY(Math.PI*.5),this.material=new wa({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const a=r.getAttribute("position"),s=new Float32Array(a.count*3);r.setAttribute("color",new p1(s,3)),this.add(new an(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Qv.copy(this.light.color),ey.copy(this.light.groundColor);for(let i=0,r=t.count;i<r;i++){const a=i<r/2?Qv:ey;t.setXYZ(i,a.r,a.g,a.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(oU.setFromMatrixPosition(this.light.matrixWorld).negate())}}class cU extends j2{constructor(e=10,t=10,i=4473924,r=8947848){i=new gt(i),r=new gt(r);const a=t/2,s=e/t,o=e/2,l=[],d=[];for(let p=0,m=0,y=-o;p<=t;p++,y+=s){l.push(-o,0,y,o,0,y),l.push(y,0,-o,y,0,o);const b=p===a?i:r;b.toArray(d,m),m+=3,b.toArray(d,m),m+=3,b.toArray(d,m),m+=3,b.toArray(d,m),m+=3}const h=new Zt;h.setAttribute("position",new Et(l,3)),h.setAttribute("color",new Et(d,3));const f=new ei({vertexColors:!0,toneMapped:!1});super(h,f),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class uU extends j2{constructor(e=10,t=16,i=8,r=64,a=4473924,s=8947848){a=new gt(a),s=new gt(s);const o=[],l=[];if(t>1)for(let f=0;f<t;f++){const p=f/t*(Math.PI*2),m=Math.sin(p)*e,y=Math.cos(p)*e;o.push(0,0,0),o.push(m,0,y);const b=f&1?a:s;l.push(b.r,b.g,b.b),l.push(b.r,b.g,b.b)}for(let f=0;f<i;f++){const p=f&1?a:s,m=e-e/i*f;for(let y=0;y<r;y++){let b=y/r*(Math.PI*2),_=Math.sin(b)*m,g=Math.cos(b)*m;o.push(_,0,g),l.push(p.r,p.g,p.b),b=(y+1)/r*(Math.PI*2),_=Math.sin(b)*m,g=Math.cos(b)*m,o.push(_,0,g),l.push(p.r,p.g,p.b)}}const d=new Zt;d.setAttribute("position",new Et(o,3)),d.setAttribute("color",new Et(l,3));const h=new ei({vertexColors:!0,toneMapped:!1});super(d,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const ty=new j,Gc=new j,ny=new j;class dU extends c1{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let r=new Zt;r.setAttribute("position",new Et([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const a=new ei({fog:!1,toneMapped:!1});this.lightPlane=new pa(r,a),this.add(this.lightPlane),r=new Zt,r.setAttribute("position",new Et([0,0,0,0,0,1],3)),this.targetLine=new pa(r,a),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),ty.setFromMatrixPosition(this.light.matrixWorld),Gc.setFromMatrixPosition(this.light.target.matrixWorld),ny.subVectors(Gc,ty),this.lightPlane.lookAt(Gc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Gc),this.targetLine.scale.z=ny.length()}}const Wc=new j,H1=new V4;class hU extends j2{constructor(e){const t=new Zt,i=new ei({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],a=[],s={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(y,b){l(y),l(b)}function l(y){r.push(0,0,0),a.push(0,0,0),s[y]===void 0&&(s[y]=[]),s[y].push(r.length/3-1)}t.setAttribute("position",new Et(r,3)),t.setAttribute("color",new Et(a,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const d=new gt(16755200),h=new gt(16711680),f=new gt(43775),p=new gt(16777215),m=new gt(3355443);this.setColors(d,h,f,p,m)}setColors(e,t,i,r,a){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,i.r,i.g,i.b),o.setXYZ(33,i.r,i.g,i.b),o.setXYZ(34,i.r,i.g,i.b),o.setXYZ(35,i.r,i.g,i.b),o.setXYZ(36,i.r,i.g,i.b),o.setXYZ(37,i.r,i.g,i.b),o.setXYZ(38,r.r,r.g,r.b),o.setXYZ(39,r.r,r.g,r.b),o.setXYZ(40,a.r,a.g,a.b),o.setXYZ(41,a.r,a.g,a.b),o.setXYZ(42,a.r,a.g,a.b),o.setXYZ(43,a.r,a.g,a.b),o.setXYZ(44,a.r,a.g,a.b),o.setXYZ(45,a.r,a.g,a.b),o.setXYZ(46,a.r,a.g,a.b),o.setXYZ(47,a.r,a.g,a.b),o.setXYZ(48,a.r,a.g,a.b),o.setXYZ(49,a.r,a.g,a.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,r=1;H1.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),K1("c",t,e,H1,0,0,-1),K1("t",t,e,H1,0,0,1),K1("n1",t,e,H1,-i,-r,-1),K1("n2",t,e,H1,i,-r,-1),K1("n3",t,e,H1,-i,r,-1),K1("n4",t,e,H1,i,r,-1),K1("f1",t,e,H1,-i,-r,1),K1("f2",t,e,H1,i,-r,1),K1("f3",t,e,H1,-i,r,1),K1("f4",t,e,H1,i,r,1),K1("u1",t,e,H1,i*.7,r*1.1,-1),K1("u2",t,e,H1,-i*.7,r*1.1,-1),K1("u3",t,e,H1,0,r*2,-1),K1("cf1",t,e,H1,-i,0,1),K1("cf2",t,e,H1,i,0,1),K1("cf3",t,e,H1,0,-r,1),K1("cf4",t,e,H1,0,r,1),K1("cn1",t,e,H1,-i,0,-1),K1("cn2",t,e,H1,i,0,-1),K1("cn3",t,e,H1,0,-r,-1),K1("cn4",t,e,H1,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function K1(n,e,t,i,r,a,s){Wc.set(r,a,s).unproject(i);const o=e[n];if(o!==void 0){const l=t.getAttribute("position");for(let d=0,h=o.length;d<h;d++)l.setXYZ(o[d],Wc.x,Wc.y,Wc.z)}}const Xc=new Zn;class fU extends j2{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),a=new Zt;a.setIndex(new p1(i,1)),a.setAttribute("position",new p1(r,3)),super(a,new ei({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Xc.setFromObject(this.object),Xc.isEmpty())return;const t=Xc.min,i=Xc.max,r=this.geometry.attributes.position,a=r.array;a[0]=i.x,a[1]=i.y,a[2]=i.z,a[3]=t.x,a[4]=i.y,a[5]=i.z,a[6]=t.x,a[7]=t.y,a[8]=i.z,a[9]=i.x,a[10]=t.y,a[11]=i.z,a[12]=i.x,a[13]=i.y,a[14]=t.z,a[15]=t.x,a[16]=i.y,a[17]=t.z,a[18]=t.x,a[19]=t.y,a[20]=t.z,a[21]=i.x,a[22]=t.y,a[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class pU extends j2{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],a=new Zt;a.setIndex(new p1(i,1)),a.setAttribute("position",new Et(r,3)),super(a,new ei({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class mU extends pa{constructor(e,t=1,i=16776960){const r=i,a=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],s=new Zt;s.setAttribute("position",new Et(a,3)),s.computeBoundingSphere(),super(s,new ei({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Zt;l.setAttribute("position",new Et(o,3)),l.computeBoundingSphere(),this.add(new an(l,new wa({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const iy=new j;let Yc,l8;class gU extends c1{constructor(e=new j(0,0,1),t=new j(0,0,0),i=1,r=16776960,a=i*.2,s=a*.2){super(),this.type="ArrowHelper",Yc===void 0&&(Yc=new Zt,Yc.setAttribute("position",new Et([0,0,0,0,1,0],3)),l8=new M3(0,.5,1,5,1),l8.translate(0,-.5,0)),this.position.copy(t),this.line=new pa(Yc,new ei({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new an(l8,new wa({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,a,s)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{iy.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(iy,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class vU extends j2{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Zt;r.setAttribute("position",new Et(t,3)),r.setAttribute("color",new Et(i,3));const a=new ei({vertexColors:!0,toneMapped:!1});super(r,a),this.type="AxesHelper"}setColors(e,t,i){const r=new gt,a=this.geometry.attributes.color.array;return r.set(e),r.toArray(a,0),r.toArray(a,3),r.set(t),r.toArray(a,6),r.toArray(a,9),r.set(i),r.toArray(a,12),r.toArray(a,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class yU{constructor(){this.type="ShapePath",this.color=new gt,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new b4,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,r){return this.currentPath.quadraticCurveTo(e,t,i,r),this}bezierCurveTo(e,t,i,r,a,s){return this.currentPath.bezierCurveTo(e,t,i,r,a,s),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const x=[];for(let S=0,E=g.length;S<E;S++){const A=g[S],P=new D2;P.curves=A.curves,x.push(P)}return x}function i(g,x){const S=x.length;let E=!1;for(let A=S-1,P=0;P<S;A=P++){let C=x[A],N=x[P],Y=N.x-C.x,T=N.y-C.y;if(Math.abs(T)>Number.EPSILON){if(T<0&&(C=x[P],Y=-Y,N=x[A],T=-T),g.y<C.y||g.y>N.y)continue;if(g.y===C.y){if(g.x===C.x)return!0}else{const R=T*(g.x-C.x)-Y*(g.y-C.y);if(R===0)return!0;if(R<0)continue;E=!E}}else{if(g.y!==C.y)continue;if(N.x<=g.x&&g.x<=C.x||C.x<=g.x&&g.x<=N.x)return!0}}return E}const r=O2.isClockWise,a=this.subPaths;if(a.length===0)return[];let s,o,l;const d=[];if(a.length===1)return o=a[0],l=new D2,l.curves=o.curves,d.push(l),d;let h=!r(a[0].getPoints());h=e?!h:h;const f=[],p=[];let m=[],y=0,b;p[y]=void 0,m[y]=[];for(let g=0,x=a.length;g<x;g++)o=a[g],b=o.getPoints(),s=r(b),s=e?!s:s,s?(!h&&p[y]&&y++,p[y]={s:new D2,p:b},p[y].s.curves=o.curves,h&&y++,m[y]=[]):m[y].push({h:o,p:b[0]});if(!p[0])return t(a);if(p.length>1){let g=!1,x=0;for(let S=0,E=p.length;S<E;S++)f[S]=[];for(let S=0,E=p.length;S<E;S++){const A=m[S];for(let P=0;P<A.length;P++){const C=A[P];let N=!0;for(let Y=0;Y<p.length;Y++)i(C.p,p[Y].p)&&(S!==Y&&x++,N?(N=!1,f[Y].push(C)):g=!0);N&&f[S].push(C)}}x>0&&g===!1&&(m=f)}let _;for(let g=0,x=p.length;g<x;g++){l=p[g].s,d.push(l),_=m[g];for(let S=0,E=_.length;S<E;S++)l.holes.push(_[S].h)}return d}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:wu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=wu);const _U=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:S9,AddEquation:Kr,AddOperation:hb,AdditiveAnimationBlendMode:R9,AdditiveBlending:_h,AgXToneMapping:vb,AlphaFormat:wb,AlwaysCompare:Fb,AlwaysDepth:ab,AlwaysStencilFunc:Kh,AmbientLight:zS,AnimationAction:qS,AnimationClip:L4,AnimationLoader:bB,AnimationMixer:KB,AnimationObjectGroup:qB,AnimationUtils:yB,ArcCurve:uS,ArrayCamera:tS,ArrowHelper:gU,AttachedBindMode:Mh,Audio:XS,AudioAnalyser:UB,AudioContext:sf,AudioListener:DB,AudioLoader:kB,AxesHelper:vU,BackSide:Kn,BasicDepthPacking:Ab,BasicShadowMap:jw,BatchedMesh:oS,Bone:W9,BooleanKeyframeTrack:Os,Box2:nU,Box3:Zn,Box3Helper:pU,BoxGeometry:Ds,BoxHelper:fU,BufferAttribute:p1,BufferGeometry:Zt,BufferGeometryLoader:WS,ByteType:_b,Cache:hr,Camera:V4,CameraHelper:hU,CanvasTexture:HO,CapsuleGeometry:Ou,CatmullRomCurve3:dS,CineonToneMapping:mb,CircleGeometry:Bu,ClampToEdgeWrapping:On,Clock:of,Color:gt,ColorKeyframeTrack:nf,ColorManagement:d1,CompressedArrayTexture:zO,CompressedCubeTexture:jO,CompressedTexture:Nu,CompressedTextureLoader:SB,ConeGeometry:Uu,ConstantAlphaFactor:nb,ConstantColorFactor:eb,CubeCamera:Xb,CubeReflectionMapping:wr,CubeRefractionMapping:fa,CubeTexture:G4,CubeTextureLoader:MB,CubeUVReflectionMapping:w3,CubicBezierCurve:q9,CubicBezierCurve3:hS,CubicInterpolant:RS,CullFaceBack:yh,CullFaceFront:zw,CullFaceFrontBack:TA,CullFaceNone:Fw,Curve:p2,CurvePath:pS,CustomBlending:Hw,CustomToneMapping:gb,CylinderGeometry:M3,Cylindrical:tU,Data3DTexture:O9,DataArrayTexture:Tu,DataTexture:ys,DataTextureLoader:EB,DataUtils:OR,DecrementStencilOp:UA,DecrementWrapStencilOp:zA,DefaultLoadingManager:NS,DepthFormat:la,DepthStencilFormat:Ts,DepthTexture:z9,DetachedBindMode:yb,DirectionalLight:FS,DirectionalLightHelper:dU,DiscreteInterpolant:kS,DisplayP3ColorSpace:Pu,DodecahedronGeometry:Fu,DoubleSide:Hi,DstAlphaFactor:$w,DstColorFactor:Zw,DynamicCopyUsage:tR,DynamicDrawUsage:$A,DynamicReadUsage:JA,EdgesGeometry:mS,EllipseCurve:Du,EqualCompare:Db,EqualDepth:ob,EqualStencilFunc:GA,EquirectangularReflectionMapping:c4,EquirectangularRefractionMapping:u4,Euler:H4,EventDispatcher:z2,ExtrudeGeometry:ju,FileLoader:br,Float16BufferAttribute:HR,Float32BufferAttribute:Et,Float64BufferAttribute:VR,FloatType:Vi,Fog:Au,FogExp2:Cu,FramebufferTexture:FO,FrontSide:xr,Frustum:W4,GLBufferAttribute:eU,GLSL1:iR,GLSL3:Zh,GreaterCompare:Ob,GreaterDepth:cb,GreaterEqualCompare:Ub,GreaterEqualDepth:lb,GreaterEqualStencilFunc:qA,GreaterStencilFunc:XA,GridHelper:cU,Group:Wo,HalfFloatType:d3,HemisphereLight:OS,HemisphereLightHelper:lU,IcosahedronGeometry:Hu,ImageBitmapLoader:RB,ImageLoader:C4,ImageUtils:D9,IncrementStencilOp:BA,IncrementWrapStencilOp:FA,InstancedBufferAttribute:p3,InstancedBufferGeometry:GS,InstancedInterleavedBuffer:QB,InstancedMesh:sS,Int16BufferAttribute:zR,Int32BufferAttribute:jR,Int8BufferAttribute:BR,IntType:M9,InterleavedBuffer:Ru,InterleavedBufferAttribute:Ls,Interpolant:$4,InterpolateDiscrete:f4,InterpolateLinear:p4,InterpolateSmooth:m5,InvertStencilOp:jA,KeepStencilOp:Ja,KeyframeTrack:m2,LOD:rS,LatheGeometry:X4,Layers:vs,LessCompare:Nb,LessDepth:sb,LessEqualCompare:I9,LessEqualDepth:l4,LessEqualStencilFunc:WA,LessStencilFunc:VA,Light:Sa,LightProbe:VS,Line:pa,Line3:iU,LineBasicMaterial:ei,LineCurve:$9,LineCurve3:fS,LineDashedMaterial:LS,LineLoop:lS,LineSegments:j2,LinearDisplayP3ColorSpace:j4,LinearEncoding:k9,LinearFilter:N1,LinearInterpolant:tf,LinearMipMapLinearFilter:RA,LinearMipMapNearestFilter:AA,LinearMipmapLinearFilter:L2,LinearMipmapNearestFilter:Bl,LinearSRGBColorSpace:B2,LinearToneMapping:fb,LinearTransfer:g4,Loader:hi,LoaderUtils:a7,LoadingManager:rf,LoopOnce:Tb,LoopPingPong:Cb,LoopRepeat:Lb,LuminanceAlphaFormat:Sb,LuminanceFormat:bb,MOUSE:Yr,Material:En,MaterialLoader:$u,MathUtils:yR,Matrix3:Qt,Matrix4:Ht,MaxEquation:Sh,Mesh:an,MeshBasicMaterial:wa,MeshDepthMaterial:j9,MeshDistanceMaterial:H9,MeshLambertMaterial:PS,MeshMatcapMaterial:TS,MeshNormalMaterial:ES,MeshPhongMaterial:SS,MeshPhysicalMaterial:bS,MeshStandardMaterial:Q9,MeshToonMaterial:MS,MinEquation:bh,MirroredRepeatWrapping:h4,MixOperation:db,MultiplyBlending:wh,MultiplyOperation:z4,NearestFilter:J1,NearestMipMapLinearFilter:CA,NearestMipMapNearestFilter:LA,NearestMipmapLinearFilter:es,NearestMipmapNearestFilter:W5,NeverCompare:Ib,NeverDepth:rb,NeverStencilFunc:HA,NoBlending:mr,NoColorSpace:xi,NoToneMapping:I2,NormalAnimationBlendMode:Eu,NormalBlending:ps,NotEqualCompare:Bb,NotEqualDepth:ub,NotEqualStencilFunc:YA,NumberKeyframeTrack:P4,Object3D:c1,ObjectLoader:CB,ObjectSpaceNormalMap:kb,OctahedronGeometry:Y4,OneFactor:Xw,OneMinusConstantAlphaFactor:ib,OneMinusConstantColorFactor:tb,OneMinusDstAlphaFactor:Kw,OneMinusDstColorFactor:Jw,OneMinusSrcAlphaFactor:G5,OneMinusSrcColorFactor:qw,OrthographicCamera:dr,P3Primaries:y4,PCFShadowMap:bu,PCFSoftShadowMap:Ol,PMREMGenerator:Qh,Path:b4,PerspectiveCamera:Y1,Plane:ar,PlaneGeometry:b3,PlaneHelper:mU,PointLight:US,PointLightHelper:sU,Points:cS,PointsMaterial:X9,PolarGridHelper:uU,PolyhedronGeometry:ba,PositionalAudio:BB,PropertyBinding:r1,PropertyMixer:YS,QuadraticBezierCurve:K9,QuadraticBezierCurve3:Z9,Quaternion:Bn,QuaternionKeyframeTrack:E3,QuaternionLinearInterpolant:IS,RED_GREEN_RGTC2_Format:qh,RED_RGTC1_Format:Pb,REVISION:wu,RGBADepthPacking:Rb,RGBAFormat:Yn,RGBAIntegerFormat:C9,RGBA_ASTC_10x10_Format:Hh,RGBA_ASTC_10x5_Format:Fh,RGBA_ASTC_10x6_Format:zh,RGBA_ASTC_10x8_Format:jh,RGBA_ASTC_12x10_Format:Vh,RGBA_ASTC_12x12_Format:Gh,RGBA_ASTC_4x4_Format:Rh,RGBA_ASTC_5x4_Format:kh,RGBA_ASTC_5x5_Format:Ih,RGBA_ASTC_6x5_Format:Nh,RGBA_ASTC_6x6_Format:Dh,RGBA_ASTC_8x5_Format:Oh,RGBA_ASTC_8x6_Format:Bh,RGBA_ASTC_8x8_Format:Uh,RGBA_BPTC_Format:p5,RGBA_ETC2_EAC_Format:Ah,RGBA_PVRTC_2BPPV1_Format:Lh,RGBA_PVRTC_4BPPV1_Format:Th,RGBA_S3TC_DXT1_Format:d5,RGBA_S3TC_DXT3_Format:h5,RGBA_S3TC_DXT5_Format:f5,RGB_BPTC_SIGNED_Format:Wh,RGB_BPTC_UNSIGNED_Format:Xh,RGB_ETC1_Format:A9,RGB_ETC2_Format:Ch,RGB_PVRTC_2BPPV1_Format:Ph,RGB_PVRTC_4BPPV1_Format:Eh,RGB_S3TC_DXT1_Format:u5,RGFormat:Eb,RGIntegerFormat:L9,RawShaderMaterial:wS,Ray:Ns,Raycaster:$S,Rec709Primaries:v4,RectAreaLight:jS,RedFormat:Mb,RedIntegerFormat:T9,ReinhardToneMapping:pb,RenderTarget:Hb,RepeatWrapping:d4,ReplaceStencilOp:OA,ReverseSubtractEquation:Gw,RingGeometry:Vu,SIGNED_RED_GREEN_RGTC2_Format:$h,SIGNED_RED_RGTC1_Format:Yh,SRGBColorSpace:un,SRGBTransfer:M1,Scene:q5,ShaderChunk:Kt,ShaderLib:l2,ShaderMaterial:f2,ShadowMaterial:xS,Shape:D2,ShapeGeometry:Gu,ShapePath:yU,ShapeUtils:O2,ShortType:xb,Skeleton:Iu,SkeletonHelper:aU,SkinnedMesh:aS,Source:cs,Sphere:Un,SphereGeometry:q4,Spherical:o7,SphericalHarmonics3:HS,SplineCurve:J9,SpotLight:BS,SpotLightHelper:rU,Sprite:G9,SpriteMaterial:ku,SrcAlphaFactor:V5,SrcAlphaSaturateFactor:Qw,SrcColorFactor:Yw,StaticCopyUsage:eR,StaticDrawUsage:_4,StaticReadUsage:ZA,StereoCamera:IB,StreamCopyUsage:nR,StreamDrawUsage:KA,StreamReadUsage:QA,StringKeyframeTrack:Bs,SubtractEquation:Vw,SubtractiveBlending:xh,TOUCH:rr,TangentSpaceNormalMap:xa,TetrahedronGeometry:Wu,Texture:B1,TextureLoader:DS,TorusGeometry:Xu,TorusKnotGeometry:Yu,Triangle:wi,TriangleFanDrawMode:NA,TriangleStripDrawMode:IA,TrianglesDrawMode:kA,TubeGeometry:qu,UVMapping:Su,Uint16BufferAttribute:B9,Uint32BufferAttribute:U9,Uint8BufferAttribute:UR,Uint8ClampedBufferAttribute:FR,Uniform:uf,UniformsGroup:JB,UniformsLib:Qe,UniformsUtils:Wb,UnsignedByteType:N2,UnsignedInt248Type:oa,UnsignedIntType:ur,UnsignedShort4444Type:E9,UnsignedShort5551Type:P9,UnsignedShortType:Mu,VSMShadowMap:r2,Vector2:Le,Vector3:j,Vector4:h1,VectorKeyframeTrack:T4,VideoTexture:UO,WebGL1Renderer:nS,WebGL3DRenderTarget:MR,WebGLArrayRenderTarget:SR,WebGLCoordinateSystem:C2,WebGLCubeRenderTarget:Yb,WebGLMultipleRenderTargets:ER,WebGLRenderTarget:h2,WebGLRenderer:V9,WebGLUtils:eS,WebGPUCoordinateSystem:x4,WireframeGeometry:_S,WrapAroundEnding:m4,ZeroCurvatureEnding:os,ZeroFactor:Ww,ZeroSlopeEnding:ls,ZeroStencilOp:DA,_SRGBAFormat:X5,createCanvasElement:jb,sRGBEncoding:ca},Symbol.toStringTag,{value:"Module"}));function xU(n){return n}function wU(n){if(n==null)return xU;var e,t,i=n.scale[0],r=n.scale[1],a=n.translate[0],s=n.translate[1];return function(o,l){l||(e=t=0);var d=2,h=o.length,f=new Array(h);for(f[0]=(e+=o[0])*i+a,f[1]=(t+=o[1])*r+s;d<h;)f[d]=o[d],++d;return f}}function bU(n,e){for(var t,i=n.length,r=i-e;r<--i;)t=n[r],n[r++]=n[i],n[i]=t}function SU(n,e){return typeof e=="string"&&(e=n.objects[e]),e.type==="GeometryCollection"?{type:"FeatureCollection",features:e.geometries.map(function(t){return ry(n,t)})}:ry(n,e)}function ry(n,e){var t=e.id,i=e.bbox,r=e.properties==null?{}:e.properties,a=MU(n,e);return t==null&&i==null?{type:"Feature",properties:r,geometry:a}:i==null?{type:"Feature",id:t,properties:r,geometry:a}:{type:"Feature",id:t,bbox:i,properties:r,geometry:a}}function MU(n,e){var t=wU(n.transform),i=n.arcs;function r(h,f){f.length&&f.pop();for(var p=i[h<0?~h:h],m=0,y=p.length;m<y;++m)f.push(t(p[m],m));h<0&&bU(f,y)}function a(h){return t(h)}function s(h){for(var f=[],p=0,m=h.length;p<m;++p)r(h[p],f);return f.length<2&&f.push(f[0]),f}function o(h){for(var f=s(h);f.length<4;)f.push(f[0]);return f}function l(h){return h.map(o)}function d(h){var f=h.type,p;switch(f){case"GeometryCollection":return{type:f,geometries:h.geometries.map(d)};case"Point":p=a(h.coordinates);break;case"MultiPoint":p=h.coordinates.map(a);break;case"LineString":p=s(h.arcs);break;case"MultiLineString":p=h.arcs.map(s);break;case"Polygon":p=l(h.arcs);break;case"MultiPolygon":p=h.arcs.map(l);break;default:return null}return{type:f,coordinates:p}}return d(e)}function EU(n){return SU(n,n.objects.countries)}function PU(n){const e=n==null?void 0:n[0],t=e==null?void 0:e[0],i=e==null?void 0:e[1];return!t||!i?{firstX:null,firstY:null}:{firstX:t,firstY:i}}function l7(n,e){const{firstX:t,firstY:i}=PU(e);!t||!i||n.moveTo(t,i)}function c7(n,e){if(!e||!(e instanceof Array))return;const t=new Le(e[0],e[1]);n.lineTo(t.x,t.y)}function TU({keyId:n,geoCoords:e,shapeColor:t}){var r,a;const i=new D2;return l7(i,(r=e.coordinates)==null?void 0:r[0]),(a=e.coordinates)==null||a.forEach(s=>{s&&s.forEach(o=>c7(i,o))}),xe.jsxs("mesh",{children:[xe.jsx("meshBasicMaterial",{attach:"material",color:t,side:Hi,opacity:1}),xe.jsx("shapeGeometry",{attach:"geometry",args:[i]})]},n)}function LU({geoCoords:n,shapeColor:e}){var i;const t=[];return(i=n.coordinates)==null||i.forEach(r=>{var a;if(r)if(r.length===1){const s=new D2;l7(s,r[0]),(a=r[0])==null||a.forEach(o=>c7(s,o)),t.push(s)}else r.forEach(s=>{const o=new D2;l7(o,s),s==null||s.forEach(l=>c7(o,l)),t.push(o)})}),xe.jsxs("mesh",{children:[xe.jsx("shapeGeometry",{attach:"geometry",args:[t]}),xe.jsx("meshBasicMaterial",{attach:"material",color:e,side:Hi})]})}function ay({language:n,className:e=""}){return n.includes("it")?xe.jsx(aw,{className:e}):n.includes("en")?xe.jsx(iw,{className:e}):n.includes("de")?xe.jsx(rw,{className:e}):n.includes("es")?xe.jsx(sw,{className:e}):n.includes("hu")?xe.jsx(ow,{className:e}):n.includes("ja")?xe.jsx(cw,{className:e}):n.includes("pt")?xe.jsx(lw,{className:e}):xe.jsx(xe.Fragment,{})}var ua=Object.freeze({Linear:Object.freeze({None:function(n){return n},In:function(n){return this.None(n)},Out:function(n){return this.None(n)},InOut:function(n){return this.None(n)}}),Quadratic:Object.freeze({In:function(n){return n*n},Out:function(n){return n*(2-n)},InOut:function(n){return(n*=2)<1?.5*n*n:-.5*(--n*(n-2)-1)}}),Cubic:Object.freeze({In:function(n){return n*n*n},Out:function(n){return--n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n:.5*((n-=2)*n*n+2)}}),Quartic:Object.freeze({In:function(n){return n*n*n*n},Out:function(n){return 1- --n*n*n*n},InOut:function(n){return(n*=2)<1?.5*n*n*n*n:-.5*((n-=2)*n*n*n-2)}}),Quintic:Object.freeze({In:function(n){return n*n*n*n*n},Out:function(n){return--n*n*n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n*n*n:.5*((n-=2)*n*n*n*n+2)}}),Sinusoidal:Object.freeze({In:function(n){return 1-Math.sin((1-n)*Math.PI/2)},Out:function(n){return Math.sin(n*Math.PI/2)},InOut:function(n){return .5*(1-Math.sin(Math.PI*(.5-n)))}}),Exponential:Object.freeze({In:function(n){return n===0?0:Math.pow(1024,n-1)},Out:function(n){return n===1?1:1-Math.pow(2,-10*n)},InOut:function(n){return n===0?0:n===1?1:(n*=2)<1?.5*Math.pow(1024,n-1):.5*(-Math.pow(2,-10*(n-1))+2)}}),Circular:Object.freeze({In:function(n){return 1-Math.sqrt(1-n*n)},Out:function(n){return Math.sqrt(1- --n*n)},InOut:function(n){return(n*=2)<1?-.5*(Math.sqrt(1-n*n)-1):.5*(Math.sqrt(1-(n-=2)*n)+1)}}),Elastic:Object.freeze({In:function(n){return n===0?0:n===1?1:-Math.pow(2,10*(n-1))*Math.sin((n-1.1)*5*Math.PI)},Out:function(n){return n===0?0:n===1?1:Math.pow(2,-10*n)*Math.sin((n-.1)*5*Math.PI)+1},InOut:function(n){return n===0?0:n===1?1:(n*=2,n<1?-.5*Math.pow(2,10*(n-1))*Math.sin((n-1.1)*5*Math.PI):.5*Math.pow(2,-10*(n-1))*Math.sin((n-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(n){var e=1.70158;return n===1?1:n*n*((e+1)*n-e)},Out:function(n){var e=1.70158;return n===0?0:--n*n*((e+1)*n+e)+1},InOut:function(n){var e=2.5949095;return(n*=2)<1?.5*(n*n*((e+1)*n-e)):.5*((n-=2)*n*((e+1)*n+e)+2)}}),Bounce:Object.freeze({In:function(n){return 1-ua.Bounce.Out(1-n)},Out:function(n){return n<1/2.75?7.5625*n*n:n<2/2.75?7.5625*(n-=1.5/2.75)*n+.75:n<2.5/2.75?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375},InOut:function(n){return n<.5?ua.Bounce.In(n*2)*.5:ua.Bounce.Out(n*2-1)*.5+.5}}),generatePow:function(n){return n===void 0&&(n=4),n=n<Number.EPSILON?Number.EPSILON:n,n=n>1e4?1e4:n,{In:function(e){return Math.pow(e,n)},Out:function(e){return 1-Math.pow(1-e,n)},InOut:function(e){return e<.5?Math.pow(e*2,n)/2:(1-Math.pow(2-e*2,n))/2+.5}}}}),Yo=function(){return performance.now()},ZS=function(){function n(){this._tweens={},this._tweensAddedDuringUpdate={}}return n.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},n.prototype.removeAll=function(){this._tweens={}},n.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},n.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},n.prototype.update=function(e,t){e===void 0&&(e=Yo()),t===void 0&&(t=!1);var i=Object.keys(this._tweens);if(i.length===0)return!1;for(;i.length>0;){this._tweensAddedDuringUpdate={};for(var r=0;r<i.length;r++){var a=this._tweens[i[r]],s=!t;a&&a.update(e,s)===!1&&!t&&delete this._tweens[i[r]]}i=Object.keys(this._tweensAddedDuringUpdate)}return!0},n}(),ds={Linear:function(n,e){var t=n.length-1,i=t*e,r=Math.floor(i),a=ds.Utils.Linear;return e<0?a(n[0],n[1],i):e>1?a(n[t],n[t-1],t-i):a(n[r],n[r+1>t?t:r+1],i-r)},Bezier:function(n,e){for(var t=0,i=n.length-1,r=Math.pow,a=ds.Utils.Bernstein,s=0;s<=i;s++)t+=r(1-e,i-s)*r(e,s)*n[s]*a(i,s);return t},CatmullRom:function(n,e){var t=n.length-1,i=t*e,r=Math.floor(i),a=ds.Utils.CatmullRom;return n[0]===n[t]?(e<0&&(r=Math.floor(i=t*(1+e))),a(n[(r-1+t)%t],n[r],n[(r+1)%t],n[(r+2)%t],i-r)):e<0?n[0]-(a(n[0],n[0],n[1],n[1],-i)-n[0]):e>1?n[t]-(a(n[t],n[t],n[t-1],n[t-1],i-t)-n[t]):a(n[r?r-1:0],n[r],n[t<r+1?t:r+1],n[t<r+2?t:r+2],i-r)},Utils:{Linear:function(n,e,t){return(e-n)*t+n},Bernstein:function(n,e){var t=ds.Utils.Factorial;return t(n)/t(e)/t(n-e)},Factorial:function(){var n=[1];return function(e){var t=1;if(n[e])return n[e];for(var i=e;i>1;i--)t*=i;return n[e]=t,t}}(),CatmullRom:function(n,e,t,i,r){var a=(t-n)*.5,s=(i-e)*.5,o=r*r,l=r*o;return(2*e-2*t+a+s)*l+(-3*e+3*t-2*a-s)*o+a*r+e}}},df=function(){function n(){}return n.nextId=function(){return n._nextId++},n._nextId=0,n}(),u7=new ZS,d7=function(){function n(e,t){t===void 0&&(t=u7),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=ua.Linear.None,this._interpolationFunction=ds.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=df.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1}return n.prototype.getId=function(){return this._id},n.prototype.isPlaying=function(){return this._isPlaying},n.prototype.isPaused=function(){return this._isPaused},n.prototype.getDuration=function(){return this._duration},n.prototype.to=function(e,t){if(t===void 0&&(t=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t<0?0:t,this},n.prototype.duration=function(e){return e===void 0&&(e=1e3),this._duration=e<0?0:e,this},n.prototype.dynamic=function(e){return e===void 0&&(e=!1),this._isDynamic=e,this},n.prototype.start=function(e,t){if(e===void 0&&(e=Yo()),t===void 0&&(t=!1),this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var i in this._valuesStartRepeat)this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var r={};for(var a in this._valuesEnd)r[a]=this._valuesEnd[a];this._valuesEnd=r}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},n.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},n.prototype._setupProperties=function(e,t,i,r,a){for(var s in i){var o=e[s],l=Array.isArray(o),d=l?"array":typeof o,h=!l&&Array.isArray(i[s]);if(!(d==="undefined"||d==="function")){if(h){var f=i[s];if(f.length===0)continue;for(var p=[o],m=0,y=f.length;m<y;m+=1){var b=this._handleRelativeValue(o,f[m]);if(isNaN(b)){h=!1,console.warn("Found invalid interpolation list. Skipping.");break}p.push(b)}h&&(i[s]=p)}if((d==="object"||l)&&o&&!h){t[s]=l?[]:{};var _=o;for(var g in _)t[s][g]=_[g];r[s]=l?[]:{};var f=i[s];if(!this._isDynamic){var x={};for(var g in f)x[g]=f[g];i[s]=f=x}this._setupProperties(_,t[s],f,r[s],a)}else(typeof t[s]>"u"||a)&&(t[s]=o),l||(t[s]*=1),h?r[s]=i[s].slice().reverse():r[s]=t[s]||0}}},n.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},n.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},n.prototype.pause=function(e){return e===void 0&&(e=Yo()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this._group&&this._group.remove(this),this)},n.prototype.resume=function(e){return e===void 0&&(e=Yo()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this)},n.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},n.prototype.group=function(e){return e===void 0&&(e=u7),this._group=e,this},n.prototype.delay=function(e){return e===void 0&&(e=0),this._delayTime=e,this},n.prototype.repeat=function(e){return e===void 0&&(e=0),this._initialRepeat=e,this._repeat=e,this},n.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},n.prototype.yoyo=function(e){return e===void 0&&(e=!1),this._yoyo=e,this},n.prototype.easing=function(e){return e===void 0&&(e=ua.Linear.None),this._easingFunction=e,this},n.prototype.interpolation=function(e){return e===void 0&&(e=ds.Linear),this._interpolationFunction=e,this},n.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},n.prototype.onStart=function(e){return this._onStartCallback=e,this},n.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},n.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},n.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},n.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},n.prototype.onStop=function(e){return this._onStopCallback=e,this},n.prototype.update=function(e,t){var i=this,r;if(e===void 0&&(e=Yo()),t===void 0&&(t=!0),this._isPaused)return!0;var a,s=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>s)return!1;t&&this.start(e,!0)}if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var o=e-this._startTime,l=this._duration+((r=this._repeatDelayTime)!==null&&r!==void 0?r:this._delayTime),d=this._duration+this._repeat*l,h=function(){if(i._duration===0||o>d)return 1;var _=Math.trunc(o/l),g=o-_*l,x=Math.min(g/i._duration,1);return x===0&&o===i._duration?1:x},f=h(),p=this._easingFunction(f);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,p),this._onUpdateCallback&&this._onUpdateCallback(this._object,f),this._duration===0||o>=this._duration)if(this._repeat>0){var m=Math.min(Math.trunc((o-this._duration)/l)+1,this._repeat);isFinite(this._repeat)&&(this._repeat-=m);for(a in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[a]=="string"&&(this._valuesStartRepeat[a]=this._valuesStartRepeat[a]+parseFloat(this._valuesEnd[a])),this._yoyo&&this._swapEndStartRepeatValues(a),this._valuesStart[a]=this._valuesStartRepeat[a];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=l*m,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var y=0,b=this._chainedTweens.length;y<b;y++)this._chainedTweens[y].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},n.prototype._updateProperties=function(e,t,i,r){for(var a in i)if(t[a]!==void 0){var s=t[a]||0,o=i[a],l=Array.isArray(e[a]),d=Array.isArray(o),h=!l&&d;h?e[a]=this._interpolationFunction(o,r):typeof o=="object"&&o?this._updateProperties(e[a],s,o,r):(o=this._handleRelativeValue(s,o),typeof o=="number"&&(e[a]=s+(o-s)*r))}},n.prototype._handleRelativeValue=function(e,t){return typeof t!="string"?t:t.charAt(0)==="+"||t.charAt(0)==="-"?e+parseFloat(t):parseFloat(t)},n.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],i=this._valuesEnd[e];typeof i=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(i):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},n}(),CU="23.1.1",AU=df.nextId,U2=u7,RU=U2.getAll.bind(U2),kU=U2.removeAll.bind(U2),IU=U2.add.bind(U2),NU=U2.remove.bind(U2),DU=U2.update.bind(U2),hf={Easing:ua,Group:ZS,Interpolation:ds,now:Yo,Sequence:df,nextId:AU,Tween:d7,VERSION:CU,getAll:RU,removeAll:kU,add:IU,remove:NU,update:DU};function sy({city:n,isFuture:e,transitionDuration:t=150,setCurrHoveredCity:i}){const r=new DS().load(e?"FutureMarker.svg":"Marker.svg"),a=new ku({map:r,color:16777215,sizeAttenuation:!1}),s=new G9(a);s.position.set(n.coordinates[0],n.coordinates[1],0),s.center.set(.5,.5);const o={x:.027,y:.08},l={x:.033,y:.1};s.scale.set(o.x,o.y,1);const d=()=>{new d7(s.scale).to(l,t).easing(ua.Quadratic.Out).start(),i(n)},h=()=>{new d7(s.scale).to(o,t).easing(ua.Quadratic.Out).start(),i(null)};return xe.jsx("primitive",{object:s,className:"marker",onPointerEnter:d,onPointerLeave:h,onPointerDown:()=>i(n)},n.name)}var JS={exports:{}},Us={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Us.ConcurrentRoot=1;Us.ContinuousEventPriority=4;Us.DefaultEventPriority=16;Us.DiscreteEventPriority=1;Us.IdleEventPriority=536870912;Us.LegacyRoot=0;JS.exports=Us;var qo=JS.exports;function OU(n){let e;const t=new Set,i=(d,h)=>{const f=typeof d=="function"?d(e):d;if(f!==e){const p=e;e=h?f:Object.assign({},e,f),t.forEach(m=>m(e,p))}},r=()=>e,a=(d,h=r,f=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let p=h(e);function m(){const y=h(e);if(!f(p,y)){const b=p;d(p=y,b)}}return t.add(m),()=>t.delete(m)},l={setState:i,getState:r,subscribe:(d,h,f)=>h||f?a(d,h,f):(t.add(d),()=>t.delete(d)),destroy:()=>t.clear()};return e=n(i,r,l),l}const BU=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),oy=BU?I.useEffect:I.useLayoutEffect;function UU(n){const e=typeof n=="function"?OU(n):n,t=(i=e.getState,r=Object.is)=>{const[,a]=I.useReducer(_=>_+1,0),s=e.getState(),o=I.useRef(s),l=I.useRef(i),d=I.useRef(r),h=I.useRef(!1),f=I.useRef();f.current===void 0&&(f.current=i(s));let p,m=!1;(o.current!==s||l.current!==i||d.current!==r||h.current)&&(p=i(s),m=!r(f.current,p)),oy(()=>{m&&(f.current=p),o.current=s,l.current=i,d.current=r,h.current=!1});const y=I.useRef(s);oy(()=>{const _=()=>{try{const x=e.getState(),S=l.current(x);d.current(f.current,S)||(o.current=x,f.current=S,a())}catch{h.current=!0,a()}},g=e.subscribe(_);return e.getState()!==y.current&&_(),g},[]);const b=m?p:f.current;return I.useDebugValue(b),b};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const i=[t,e];return{next(){const r=i.length<=0;return{value:i.shift(),done:r}}}},t}var QS={exports:{}},eM={exports:{}},tM={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(n){function e(z,K){var Z=z.length;z.push(K);e:for(;0<Z;){var re=Z-1>>>1,_e=z[re];if(0<r(_e,K))z[re]=K,z[Z]=_e,Z=re;else break e}}function t(z){return z.length===0?null:z[0]}function i(z){if(z.length===0)return null;var K=z[0],Z=z.pop();if(Z!==K){z[0]=Z;e:for(var re=0,_e=z.length,je=_e>>>1;re<je;){var ce=2*(re+1)-1,Ee=z[ce],ze=ce+1,Je=z[ze];if(0>r(Ee,Z))ze<_e&&0>r(Je,Ee)?(z[re]=Je,z[ze]=Z,re=ze):(z[re]=Ee,z[ce]=Z,re=ce);else if(ze<_e&&0>r(Je,Z))z[re]=Je,z[ze]=Z,re=ze;else break e}}return K}function r(z,K){var Z=z.sortIndex-K.sortIndex;return Z!==0?Z:z.id-K.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;n.unstable_now=function(){return a.now()}}else{var s=Date,o=s.now();n.unstable_now=function(){return s.now()-o}}var l=[],d=[],h=1,f=null,p=3,m=!1,y=!1,b=!1,_=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function S(z){for(var K=t(d);K!==null;){if(K.callback===null)i(d);else if(K.startTime<=z)i(d),K.sortIndex=K.expirationTime,e(l,K);else break;K=t(d)}}function E(z){if(b=!1,S(z),!y)if(t(l)!==null)y=!0,se(A);else{var K=t(d);K!==null&&ve(E,K.startTime-z)}}function A(z,K){y=!1,b&&(b=!1,g(N),N=-1),m=!0;var Z=p;try{for(S(K),f=t(l);f!==null&&(!(f.expirationTime>K)||z&&!R());){var re=f.callback;if(typeof re=="function"){f.callback=null,p=f.priorityLevel;var _e=re(f.expirationTime<=K);K=n.unstable_now(),typeof _e=="function"?f.callback=_e:f===t(l)&&i(l),S(K)}else i(l);f=t(l)}if(f!==null)var je=!0;else{var ce=t(d);ce!==null&&ve(E,ce.startTime-K),je=!1}return je}finally{f=null,p=Z,m=!1}}var P=!1,C=null,N=-1,Y=5,T=-1;function R(){return!(n.unstable_now()-T<Y)}function ee(){if(C!==null){var z=n.unstable_now();T=z;var K=!0;try{K=C(!0,z)}finally{K?he():(P=!1,C=null)}}else P=!1}var he;if(typeof x=="function")he=function(){x(ee)};else if(typeof MessageChannel<"u"){var q=new MessageChannel,ue=q.port2;q.port1.onmessage=ee,he=function(){ue.postMessage(null)}}else he=function(){_(ee,0)};function se(z){C=z,P||(P=!0,he())}function ve(z,K){N=_(function(){z(n.unstable_now())},K)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(z){z.callback=null},n.unstable_continueExecution=function(){y||m||(y=!0,se(A))},n.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):Y=0<z?Math.floor(1e3/z):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(z){switch(p){case 1:case 2:case 3:var K=3;break;default:K=p}var Z=p;p=K;try{return z()}finally{p=Z}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(z,K){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var Z=p;p=z;try{return K()}finally{p=Z}},n.unstable_scheduleCallback=function(z,K,Z){var re=n.unstable_now();switch(typeof Z=="object"&&Z!==null?(Z=Z.delay,Z=typeof Z=="number"&&0<Z?re+Z:re):Z=re,z){case 1:var _e=-1;break;case 2:_e=250;break;case 5:_e=1073741823;break;case 4:_e=1e4;break;default:_e=5e3}return _e=Z+_e,z={id:h++,callback:K,priorityLevel:z,startTime:Z,expirationTime:_e,sortIndex:-1},Z>re?(z.sortIndex=Z,e(d,z),t(l)===null&&z===t(d)&&(b?(g(N),N=-1):b=!0,ve(E,Z-re))):(z.sortIndex=_e,e(l,z),y||m||(y=!0,se(A))),z},n.unstable_shouldYield=R,n.unstable_wrapCallback=function(z){var K=p;return function(){var Z=p;p=K;try{return z.apply(this,arguments)}finally{p=Z}}}})(tM);eM.exports=tM;var h7=eM.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var FU=function(e){var t={},i=I,r=h7,a=Object.assign;function s(c){for(var u="https://reactjs.org/docs/error-decoder.html?invariant="+c,v=1;v<arguments.length;v++)u+="&args[]="+encodeURIComponent(arguments[v]);return"Minified React error #"+c+"; visit "+u+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,l=Symbol.for("react.element"),d=Symbol.for("react.portal"),h=Symbol.for("react.fragment"),f=Symbol.for("react.strict_mode"),p=Symbol.for("react.profiler"),m=Symbol.for("react.provider"),y=Symbol.for("react.context"),b=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),g=Symbol.for("react.suspense_list"),x=Symbol.for("react.memo"),S=Symbol.for("react.lazy"),E=Symbol.for("react.offscreen"),A=Symbol.iterator;function P(c){return c===null||typeof c!="object"?null:(c=A&&c[A]||c["@@iterator"],typeof c=="function"?c:null)}function C(c){if(c==null)return null;if(typeof c=="function")return c.displayName||c.name||null;if(typeof c=="string")return c;switch(c){case h:return"Fragment";case d:return"Portal";case p:return"Profiler";case f:return"StrictMode";case _:return"Suspense";case g:return"SuspenseList"}if(typeof c=="object")switch(c.$$typeof){case y:return(c.displayName||"Context")+".Consumer";case m:return(c._context.displayName||"Context")+".Provider";case b:var u=c.render;return c=c.displayName,c||(c=u.displayName||u.name||"",c=c!==""?"ForwardRef("+c+")":"ForwardRef"),c;case x:return u=c.displayName||null,u!==null?u:C(c.type)||"Memo";case S:u=c._payload,c=c._init;try{return C(c(u))}catch{}}return null}function N(c){var u=c.type;switch(c.tag){case 24:return"Cache";case 9:return(u.displayName||"Context")+".Consumer";case 10:return(u._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return c=u.render,c=c.displayName||c.name||"",u.displayName||(c!==""?"ForwardRef("+c+")":"ForwardRef");case 7:return"Fragment";case 5:return u;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return C(u);case 8:return u===f?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof u=="function")return u.displayName||u.name||null;if(typeof u=="string")return u}return null}function Y(c){var u=c,v=c;if(c.alternate)for(;u.return;)u=u.return;else{c=u;do u=c,u.flags&4098&&(v=u.return),c=u.return;while(c)}return u.tag===3?v:null}function T(c){if(Y(c)!==c)throw Error(s(188))}function R(c){var u=c.alternate;if(!u){if(u=Y(c),u===null)throw Error(s(188));return u!==c?null:c}for(var v=c,w=u;;){var M=v.return;if(M===null)break;var L=M.alternate;if(L===null){if(w=M.return,w!==null){v=w;continue}break}if(M.child===L.child){for(L=M.child;L;){if(L===v)return T(M),c;if(L===w)return T(M),u;L=L.sibling}throw Error(s(188))}if(v.return!==w.return)v=M,w=L;else{for(var V=!1,te=M.child;te;){if(te===v){V=!0,v=M,w=L;break}if(te===w){V=!0,w=M,v=L;break}te=te.sibling}if(!V){for(te=L.child;te;){if(te===v){V=!0,v=L,w=M;break}if(te===w){V=!0,w=L,v=M;break}te=te.sibling}if(!V)throw Error(s(189))}}if(v.alternate!==w)throw Error(s(190))}if(v.tag!==3)throw Error(s(188));return v.stateNode.current===v?c:u}function ee(c){return c=R(c),c!==null?he(c):null}function he(c){if(c.tag===5||c.tag===6)return c;for(c=c.child;c!==null;){var u=he(c);if(u!==null)return u;c=c.sibling}return null}function q(c){if(c.tag===5||c.tag===6)return c;for(c=c.child;c!==null;){if(c.tag!==4){var u=q(c);if(u!==null)return u}c=c.sibling}return null}var ue=Array.isArray,se=e.getPublicInstance,ve=e.getRootHostContext,z=e.getChildHostContext,K=e.prepareForCommit,Z=e.resetAfterCommit,re=e.createInstance,_e=e.appendInitialChild,je=e.finalizeInitialChildren,ce=e.prepareUpdate,Ee=e.shouldSetTextContent,ze=e.createTextInstance,Je=e.scheduleTimeout,St=e.cancelTimeout,pt=e.noTimeout,Tt=e.isPrimaryRenderer,$e=e.supportsMutation,X=e.supportsPersistence,Ne=e.supportsHydration,Te=e.getInstanceFromNode,De=e.preparePortalMount,Pe=e.getCurrentEventPriority,xt=e.detachDeletedInstance,et=e.supportsMicrotasks,D=e.scheduleMicrotask,k=e.supportsTestSelectors,oe=e.findFiberRoot,ke=e.getBoundingRect,Ae=e.getTextContent,Se=e.isHiddenSubtree,nt=e.matchAccessibilityRole,We=e.setFocusIfFocusable,Ke=e.setupIntersectionObserver,Mt=e.appendChild,Lt=e.appendChildToContainer,Ie=e.commitTextUpdate,Xt=e.commitMount,Vt=e.commitUpdate,de=e.insertBefore,yt=e.insertInContainerBefore,st=e.removeChild,Q=e.removeChildFromContainer,Ce=e.resetTextContent,tt=e.hideInstance,it=e.hideTextInstance,kt=e.unhideInstance,G=e.unhideTextInstance,Ue=e.clearContainer,W=e.cloneInstance,J=e.createContainerChildSet,ne=e.appendChildToContainerChildSet,Me=e.finalizeContainerChildren,Be=e.replaceContainerChildren,mt=e.cloneHiddenInstance,ut=e.cloneHiddenTextInstance,qe=e.canHydrateInstance,ot=e.canHydrateTextInstance,Bt=e.canHydrateSuspenseInstance,m1=e.isSuspenseInstancePending,Ft=e.isSuspenseInstanceFallback,t1=e.registerSuspenseInstanceRetry,g1=e.getNextHydratableSibling,w1=e.getFirstHydratableChild,y1=e.getFirstHydratableChildWithinContainer,ti=e.getFirstHydratableChildWithinSuspenseInstance,g2=e.hydrateInstance,Li=e.hydrateTextInstance,ni=e.hydrateSuspenseInstance,O=e.getNextHydratableInstanceAfterSuspenseInstance,le=e.commitHydratedContainer,fe=e.commitHydratedSuspenseInstance,ye=e.clearSuspenseBoundary,pe=e.clearSuspenseBoundaryFromContainer,rt=e.shouldDeleteUnhydratedTailInstances,Ve=e.didNotMatchHydratedContainerTextInstance,Ze=e.didNotMatchHydratedTextInstance,Ye;function At(c){if(Ye===void 0)try{throw Error()}catch(v){var u=v.stack.trim().match(/\n( *(at )?)/);Ye=u&&u[1]||""}return`
`+Ye+c}var Dt=!1;function zt(c,u){if(!c||Dt)return"";Dt=!0;var v=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(u)if(u=function(){throw Error()},Object.defineProperty(u.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(u,[])}catch(Xe){var w=Xe}Reflect.construct(c,[],u)}else{try{u.call()}catch(Xe){w=Xe}c.call(u.prototype)}else{try{throw Error()}catch(Xe){w=Xe}c()}}catch(Xe){if(Xe&&w&&typeof Xe.stack=="string"){for(var M=Xe.stack.split(`
`),L=w.stack.split(`
`),V=M.length-1,te=L.length-1;1<=V&&0<=te&&M[V]!==L[te];)te--;for(;1<=V&&0<=te;V--,te--)if(M[V]!==L[te]){if(V!==1||te!==1)do if(V--,te--,0>te||M[V]!==L[te]){var be=`
`+M[V].replace(" at new "," at ");return c.displayName&&be.includes("<anonymous>")&&(be=be.replace("<anonymous>",c.displayName)),be}while(1<=V&&0<=te);break}}}finally{Dt=!1,Error.prepareStackTrace=v}return(c=c?c.displayName||c.name:"")?At(c):""}var b1=Object.prototype.hasOwnProperty,sn=[],v1=-1;function z1(c){return{current:c}}function Ot(c){0>v1||(c.current=sn[v1],sn[v1]=null,v1--)}function B(c,u){v1++,sn[v1]=c.current,c.current=u}var U={},$=z1(U),ie=z1(!1),Fe=U;function ht(c,u){var v=c.type.contextTypes;if(!v)return U;var w=c.stateNode;if(w&&w.__reactInternalMemoizedUnmaskedChildContext===u)return w.__reactInternalMemoizedMaskedChildContext;var M={},L;for(L in v)M[L]=u[L];return w&&(c=c.stateNode,c.__reactInternalMemoizedUnmaskedChildContext=u,c.__reactInternalMemoizedMaskedChildContext=M),M}function Rt(c){return c=c.childContextTypes,c!=null}function F(){Ot(ie),Ot($)}function H(c,u,v){if($.current!==U)throw Error(s(168));B($,u),B(ie,v)}function ge(c,u,v){var w=c.stateNode;if(u=u.childContextTypes,typeof w.getChildContext!="function")return v;w=w.getChildContext();for(var M in w)if(!(M in u))throw Error(s(108,N(c)||"Unknown",M));return a({},v,w)}function Re(c){return c=(c=c.stateNode)&&c.__reactInternalMemoizedMergedChildContext||U,Fe=$.current,B($,c),B(ie,ie.current),!0}function He(c,u,v){var w=c.stateNode;if(!w)throw Error(s(169));v?(c=ge(c,u,Fe),w.__reactInternalMemoizedMergedChildContext=c,Ot(ie),Ot($),B($,c)):Ot(ie),B(ie,v)}var Oe=Math.clz32?Math.clz32:Yt,It=Math.log,Ut=Math.LN2;function Yt(c){return c>>>=0,c===0?32:31-(It(c)/Ut|0)|0}var at=64,lt=4194304;function ft(c){switch(c&-c){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return c&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return c}}function bt(c,u){var v=c.pendingLanes;if(v===0)return 0;var w=0,M=c.suspendedLanes,L=c.pingedLanes,V=v&268435455;if(V!==0){var te=V&~M;te!==0?w=ft(te):(L&=V,L!==0&&(w=ft(L)))}else V=v&~M,V!==0?w=ft(V):L!==0&&(w=ft(L));if(w===0)return 0;if(u!==0&&u!==w&&!(u&M)&&(M=w&-w,L=u&-u,M>=L||M===16&&(L&4194240)!==0))return u;if(w&4&&(w|=v&16),u=c.entangledLanes,u!==0)for(c=c.entanglements,u&=w;0<u;)v=31-Oe(u),M=1<<v,w|=c[v],u&=~M;return w}function qt(c,u){switch(c){case 1:case 2:case 4:return u+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return u+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function s1(c,u){for(var v=c.suspendedLanes,w=c.pingedLanes,M=c.expirationTimes,L=c.pendingLanes;0<L;){var V=31-Oe(L),te=1<<V,be=M[V];be===-1?(!(te&v)||te&w)&&(M[V]=qt(te,u)):be<=u&&(c.expiredLanes|=te),L&=~te}}function S1(c){return c=c.pendingLanes&-1073741825,c!==0?c:c&1073741824?1073741824:0}function pn(c){for(var u=[],v=0;31>v;v++)u.push(c);return u}function q1(c,u,v){c.pendingLanes|=u,u!==536870912&&(c.suspendedLanes=0,c.pingedLanes=0),c=c.eventTimes,u=31-Oe(u),c[u]=v}function on(c,u){var v=c.pendingLanes&~u;c.pendingLanes=u,c.suspendedLanes=0,c.pingedLanes=0,c.expiredLanes&=u,c.mutableReadLanes&=u,c.entangledLanes&=u,u=c.entanglements;var w=c.eventTimes;for(c=c.expirationTimes;0<v;){var M=31-Oe(v),L=1<<M;u[M]=0,w[M]=-1,c[M]=-1,v&=~L}}function _1(c,u){var v=c.entangledLanes|=u;for(c=c.entanglements;v;){var w=31-Oe(v),M=1<<w;M&u|c[w]&u&&(c[w]|=u),v&=~M}}var wt=0;function $i(c){return c&=-c,1<c?4<c?c&268435455?16:536870912:4:1}var H2=r.unstable_scheduleCallback,Er=r.unstable_cancelCallback,Ki=r.unstable_shouldYield,V2=r.unstable_requestPaint,u1=r.unstable_now,v2=r.unstable_ImmediatePriority,Ta=r.unstable_UserBlockingPriority,y2=r.unstable_NormalPriority,La=r.unstable_IdlePriority,mn=null,Ci=null;function DM(c){if(Ci&&typeof Ci.onCommitFiberRoot=="function")try{Ci.onCommitFiberRoot(mn,c,void 0,(c.current.flags&128)===128)}catch{}}function OM(c,u){return c===u&&(c!==0||1/c===1/u)||c!==c&&u!==u}var _2=typeof Object.is=="function"?Object.is:OM,G2=null,Z4=!1,Ju=!1;function yf(c){G2===null?G2=[c]:G2.push(c)}function BM(c){Z4=!0,yf(c)}function x2(){if(!Ju&&G2!==null){Ju=!0;var c=0,u=wt;try{var v=G2;for(wt=1;c<v.length;c++){var w=v[c];do w=w(!0);while(w!==null)}G2=null,Z4=!1}catch(M){throw G2!==null&&(G2=G2.slice(c+1)),H2(v2,x2),M}finally{wt=u,Ju=!1}}return null}var UM=o.ReactCurrentBatchConfig;function J4(c,u){if(_2(c,u))return!0;if(typeof c!="object"||c===null||typeof u!="object"||u===null)return!1;var v=Object.keys(c),w=Object.keys(u);if(v.length!==w.length)return!1;for(w=0;w<v.length;w++){var M=v[w];if(!b1.call(u,M)||!_2(c[M],u[M]))return!1}return!0}function FM(c){switch(c.tag){case 5:return At(c.type);case 16:return At("Lazy");case 13:return At("Suspense");case 19:return At("SuspenseList");case 0:case 2:case 15:return c=zt(c.type,!1),c;case 11:return c=zt(c.type.render,!1),c;case 1:return c=zt(c.type,!0),c;default:return""}}function Zi(c,u){if(c&&c.defaultProps){u=a({},u),c=c.defaultProps;for(var v in c)u[v]===void 0&&(u[v]=c[v]);return u}return u}var Q4=z1(null),e0=null,Fs=null,Qu=null;function e6(){Qu=Fs=e0=null}function _f(c,u,v){Tt?(B(Q4,u._currentValue),u._currentValue=v):(B(Q4,u._currentValue2),u._currentValue2=v)}function t6(c){var u=Q4.current;Ot(Q4),Tt?c._currentValue=u:c._currentValue2=u}function n6(c,u,v){for(;c!==null;){var w=c.alternate;if((c.childLanes&u)!==u?(c.childLanes|=u,w!==null&&(w.childLanes|=u)):w!==null&&(w.childLanes&u)!==u&&(w.childLanes|=u),c===v)break;c=c.return}}function zs(c,u){e0=c,Qu=Fs=null,c=c.dependencies,c!==null&&c.firstContext!==null&&(c.lanes&u&&(mi=!0),c.firstContext=null)}function Ai(c){var u=Tt?c._currentValue:c._currentValue2;if(Qu!==c)if(c={context:c,memoizedValue:u,next:null},Fs===null){if(e0===null)throw Error(s(308));Fs=c,e0.dependencies={lanes:0,firstContext:c}}else Fs=Fs.next=c;return u}var w2=null,Pr=!1;function i6(c){c.updateQueue={baseState:c.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function xf(c,u){c=c.updateQueue,u.updateQueue===c&&(u.updateQueue={baseState:c.baseState,firstBaseUpdate:c.firstBaseUpdate,lastBaseUpdate:c.lastBaseUpdate,shared:c.shared,effects:c.effects})}function W2(c,u){return{eventTime:c,lane:u,tag:0,payload:null,callback:null,next:null}}function Tr(c,u){var v=c.updateQueue;v!==null&&(v=v.shared,en!==null&&c.mode&1&&!(e1&2)?(c=v.interleaved,c===null?(u.next=u,w2===null?w2=[v]:w2.push(v)):(u.next=c.next,c.next=u),v.interleaved=u):(c=v.pending,c===null?u.next=u:(u.next=c.next,c.next=u),v.pending=u))}function t0(c,u,v){if(u=u.updateQueue,u!==null&&(u=u.shared,(v&4194240)!==0)){var w=u.lanes;w&=c.pendingLanes,v|=w,u.lanes=v,_1(c,v)}}function wf(c,u){var v=c.updateQueue,w=c.alternate;if(w!==null&&(w=w.updateQueue,v===w)){var M=null,L=null;if(v=v.firstBaseUpdate,v!==null){do{var V={eventTime:v.eventTime,lane:v.lane,tag:v.tag,payload:v.payload,callback:v.callback,next:null};L===null?M=L=V:L=L.next=V,v=v.next}while(v!==null);L===null?M=L=u:L=L.next=u}else M=L=u;v={baseState:w.baseState,firstBaseUpdate:M,lastBaseUpdate:L,shared:w.shared,effects:w.effects},c.updateQueue=v;return}c=v.lastBaseUpdate,c===null?v.firstBaseUpdate=u:c.next=u,v.lastBaseUpdate=u}function n0(c,u,v,w){var M=c.updateQueue;Pr=!1;var L=M.firstBaseUpdate,V=M.lastBaseUpdate,te=M.shared.pending;if(te!==null){M.shared.pending=null;var be=te,Xe=be.next;be.next=null,V===null?L=Xe:V.next=Xe,V=be;var _t=c.alternate;_t!==null&&(_t=_t.updateQueue,te=_t.lastBaseUpdate,te!==V&&(te===null?_t.firstBaseUpdate=Xe:te.next=Xe,_t.lastBaseUpdate=be))}if(L!==null){var Gt=M.baseState;V=0,_t=Xe=be=null,te=L;do{var Nt=te.lane,x1=te.eventTime;if((w&Nt)===Nt){_t!==null&&(_t=_t.next={eventTime:x1,lane:0,tag:te.tag,payload:te.payload,callback:te.callback,next:null});e:{var Ct=c,Cn=te;switch(Nt=u,x1=v,Cn.tag){case 1:if(Ct=Cn.payload,typeof Ct=="function"){Gt=Ct.call(x1,Gt,Nt);break e}Gt=Ct;break e;case 3:Ct.flags=Ct.flags&-65537|128;case 0:if(Ct=Cn.payload,Nt=typeof Ct=="function"?Ct.call(x1,Gt,Nt):Ct,Nt==null)break e;Gt=a({},Gt,Nt);break e;case 2:Pr=!0}}te.callback!==null&&te.lane!==0&&(c.flags|=64,Nt=M.effects,Nt===null?M.effects=[te]:Nt.push(te))}else x1={eventTime:x1,lane:Nt,tag:te.tag,payload:te.payload,callback:te.callback,next:null},_t===null?(Xe=_t=x1,be=Gt):_t=_t.next=x1,V|=Nt;if(te=te.next,te===null){if(te=M.shared.pending,te===null)break;Nt=te,te=Nt.next,Nt.next=null,M.lastBaseUpdate=Nt,M.shared.pending=null}}while(!0);if(_t===null&&(be=Gt),M.baseState=be,M.firstBaseUpdate=Xe,M.lastBaseUpdate=_t,u=M.shared.interleaved,u!==null){M=u;do V|=M.lane,M=M.next;while(M!==u)}else L===null&&(M.shared.lanes=0);$s|=V,c.lanes=V,c.memoizedState=Gt}}function bf(c,u,v){if(c=u.effects,u.effects=null,c!==null)for(u=0;u<c.length;u++){var w=c[u],M=w.callback;if(M!==null){if(w.callback=null,w=v,typeof M!="function")throw Error(s(191,M));M.call(w)}}}var Sf=new i.Component().refs;function r6(c,u,v,w){u=c.memoizedState,v=v(w,u),v=v==null?u:a({},u,v),c.memoizedState=v,c.lanes===0&&(c.updateQueue.baseState=v)}var i0={isMounted:function(c){return(c=c._reactInternals)?Y(c)===c:!1},enqueueSetState:function(c,u,v){c=c._reactInternals;var w=Hn(),M=Ar(c),L=W2(w,M);L.payload=u,v!=null&&(L.callback=v),Tr(c,L),u=Di(c,M,w),u!==null&&t0(u,c,M)},enqueueReplaceState:function(c,u,v){c=c._reactInternals;var w=Hn(),M=Ar(c),L=W2(w,M);L.tag=1,L.payload=u,v!=null&&(L.callback=v),Tr(c,L),u=Di(c,M,w),u!==null&&t0(u,c,M)},enqueueForceUpdate:function(c,u){c=c._reactInternals;var v=Hn(),w=Ar(c),M=W2(v,w);M.tag=2,u!=null&&(M.callback=u),Tr(c,M),u=Di(c,w,v),u!==null&&t0(u,c,w)}};function Mf(c,u,v,w,M,L,V){return c=c.stateNode,typeof c.shouldComponentUpdate=="function"?c.shouldComponentUpdate(w,L,V):u.prototype&&u.prototype.isPureReactComponent?!J4(v,w)||!J4(M,L):!0}function Ef(c,u,v){var w=!1,M=U,L=u.contextType;return typeof L=="object"&&L!==null?L=Ai(L):(M=Rt(u)?Fe:$.current,w=u.contextTypes,L=(w=w!=null)?ht(c,M):U),u=new u(v,L),c.memoizedState=u.state!==null&&u.state!==void 0?u.state:null,u.updater=i0,c.stateNode=u,u._reactInternals=c,w&&(c=c.stateNode,c.__reactInternalMemoizedUnmaskedChildContext=M,c.__reactInternalMemoizedMaskedChildContext=L),u}function Pf(c,u,v,w){c=u.state,typeof u.componentWillReceiveProps=="function"&&u.componentWillReceiveProps(v,w),typeof u.UNSAFE_componentWillReceiveProps=="function"&&u.UNSAFE_componentWillReceiveProps(v,w),u.state!==c&&i0.enqueueReplaceState(u,u.state,null)}function a6(c,u,v,w){var M=c.stateNode;M.props=v,M.state=c.memoizedState,M.refs=Sf,i6(c);var L=u.contextType;typeof L=="object"&&L!==null?M.context=Ai(L):(L=Rt(u)?Fe:$.current,M.context=ht(c,L)),M.state=c.memoizedState,L=u.getDerivedStateFromProps,typeof L=="function"&&(r6(c,u,L,v),M.state=c.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(u=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),u!==M.state&&i0.enqueueReplaceState(M,M.state,null),n0(c,v,M,w),M.state=c.memoizedState),typeof M.componentDidMount=="function"&&(c.flags|=4194308)}var js=[],Hs=0,r0=null,a0=0,Ri=[],ki=0,Ca=null,X2=1,Y2="";function Aa(c,u){js[Hs++]=a0,js[Hs++]=r0,r0=c,a0=u}function Tf(c,u,v){Ri[ki++]=X2,Ri[ki++]=Y2,Ri[ki++]=Ca,Ca=c;var w=X2;c=Y2;var M=32-Oe(w)-1;w&=~(1<<M),v+=1;var L=32-Oe(u)+M;if(30<L){var V=M-M%5;L=(w&(1<<V)-1).toString(32),w>>=V,M-=V,X2=1<<32-Oe(u)+M|v<<M|w,Y2=L+c}else X2=1<<L|v<<M|w,Y2=c}function s6(c){c.return!==null&&(Aa(c,1),Tf(c,1,0))}function o6(c){for(;c===r0;)r0=js[--Hs],js[Hs]=null,a0=js[--Hs],js[Hs]=null;for(;c===Ca;)Ca=Ri[--ki],Ri[ki]=null,Y2=Ri[--ki],Ri[ki]=null,X2=Ri[--ki],Ri[ki]=null}var fi=null,pi=null,C1=!1,P3=!1,Ji=null;function Lf(c,u){var v=Oi(5,null,null,0);v.elementType="DELETED",v.stateNode=u,v.return=c,u=c.deletions,u===null?(c.deletions=[v],c.flags|=16):u.push(v)}function Cf(c,u){switch(c.tag){case 5:return u=qe(u,c.type,c.pendingProps),u!==null?(c.stateNode=u,fi=c,pi=w1(u),!0):!1;case 6:return u=ot(u,c.pendingProps),u!==null?(c.stateNode=u,fi=c,pi=null,!0):!1;case 13:if(u=Bt(u),u!==null){var v=Ca!==null?{id:X2,overflow:Y2}:null;return c.memoizedState={dehydrated:u,treeContext:v,retryLane:1073741824},v=Oi(18,null,null,0),v.stateNode=u,v.return=c,c.child=v,fi=c,pi=null,!0}return!1;default:return!1}}function l6(c){return(c.mode&1)!==0&&(c.flags&128)===0}function c6(c){if(C1){var u=pi;if(u){var v=u;if(!Cf(c,u)){if(l6(c))throw Error(s(418));u=g1(v);var w=fi;u&&Cf(c,u)?Lf(w,v):(c.flags=c.flags&-4097|2,C1=!1,fi=c)}}else{if(l6(c))throw Error(s(418));c.flags=c.flags&-4097|2,C1=!1,fi=c}}}function Af(c){for(c=c.return;c!==null&&c.tag!==5&&c.tag!==3&&c.tag!==13;)c=c.return;fi=c}function T3(c){if(!Ne||c!==fi)return!1;if(!C1)return Af(c),C1=!0,!1;if(c.tag!==3&&(c.tag!==5||rt(c.type)&&!Ee(c.type,c.memoizedProps))){var u=pi;if(u){if(l6(c)){for(c=pi;c;)c=g1(c);throw Error(s(418))}for(;u;)Lf(c,u),u=g1(u)}}if(Af(c),c.tag===13){if(!Ne)throw Error(s(316));if(c=c.memoizedState,c=c!==null?c.dehydrated:null,!c)throw Error(s(317));pi=O(c)}else pi=fi?g1(c.stateNode):null;return!0}function Vs(){Ne&&(pi=fi=null,P3=C1=!1)}function u6(c){Ji===null?Ji=[c]:Ji.push(c)}function L3(c,u,v){if(c=v.ref,c!==null&&typeof c!="function"&&typeof c!="object"){if(v._owner){if(v=v._owner,v){if(v.tag!==1)throw Error(s(309));var w=v.stateNode}if(!w)throw Error(s(147,c));var M=w,L=""+c;return u!==null&&u.ref!==null&&typeof u.ref=="function"&&u.ref._stringRef===L?u.ref:(u=function(V){var te=M.refs;te===Sf&&(te=M.refs={}),V===null?delete te[L]:te[L]=V},u._stringRef=L,u)}if(typeof c!="string")throw Error(s(284));if(!v._owner)throw Error(s(290,c))}return c}function s0(c,u){throw c=Object.prototype.toString.call(u),Error(s(31,c==="[object Object]"?"object with keys {"+Object.keys(u).join(", ")+"}":c))}function Rf(c){var u=c._init;return u(c._payload)}function kf(c){function u(me,ae){if(c){var we=me.deletions;we===null?(me.deletions=[ae],me.flags|=16):we.push(ae)}}function v(me,ae){if(!c)return null;for(;ae!==null;)u(me,ae),ae=ae.sibling;return null}function w(me,ae){for(me=new Map;ae!==null;)ae.key!==null?me.set(ae.key,ae):me.set(ae.index,ae),ae=ae.sibling;return me}function M(me,ae){return me=kr(me,ae),me.index=0,me.sibling=null,me}function L(me,ae,we){return me.index=we,c?(we=me.alternate,we!==null?(we=we.index,we<ae?(me.flags|=2,ae):we):(me.flags|=2,ae)):(me.flags|=1048576,ae)}function V(me){return c&&me.alternate===null&&(me.flags|=2),me}function te(me,ae,we,dt){return ae===null||ae.tag!==6?(ae=Y6(we,me.mode,dt),ae.return=me,ae):(ae=M(ae,we),ae.return=me,ae)}function be(me,ae,we,dt){var Pt=we.type;return Pt===h?_t(me,ae,we.props.children,dt,we.key):ae!==null&&(ae.elementType===Pt||typeof Pt=="object"&&Pt!==null&&Pt.$$typeof===S&&Rf(Pt)===ae.type)?(dt=M(ae,we.props),dt.ref=L3(me,ae,we),dt.return=me,dt):(dt=B0(we.type,we.key,we.props,null,me.mode,dt),dt.ref=L3(me,ae,we),dt.return=me,dt)}function Xe(me,ae,we,dt){return ae===null||ae.tag!==4||ae.stateNode.containerInfo!==we.containerInfo||ae.stateNode.implementation!==we.implementation?(ae=q6(we,me.mode,dt),ae.return=me,ae):(ae=M(ae,we.children||[]),ae.return=me,ae)}function _t(me,ae,we,dt,Pt){return ae===null||ae.tag!==7?(ae=Ba(we,me.mode,dt,Pt),ae.return=me,ae):(ae=M(ae,we),ae.return=me,ae)}function Gt(me,ae,we){if(typeof ae=="string"&&ae!==""||typeof ae=="number")return ae=Y6(""+ae,me.mode,we),ae.return=me,ae;if(typeof ae=="object"&&ae!==null){switch(ae.$$typeof){case l:return we=B0(ae.type,ae.key,ae.props,null,me.mode,we),we.ref=L3(me,null,ae),we.return=me,we;case d:return ae=q6(ae,me.mode,we),ae.return=me,ae;case S:var dt=ae._init;return Gt(me,dt(ae._payload),we)}if(ue(ae)||P(ae))return ae=Ba(ae,me.mode,we,null),ae.return=me,ae;s0(me,ae)}return null}function Nt(me,ae,we,dt){var Pt=ae!==null?ae.key:null;if(typeof we=="string"&&we!==""||typeof we=="number")return Pt!==null?null:te(me,ae,""+we,dt);if(typeof we=="object"&&we!==null){switch(we.$$typeof){case l:return we.key===Pt?be(me,ae,we,dt):null;case d:return we.key===Pt?Xe(me,ae,we,dt):null;case S:return Pt=we._init,Nt(me,ae,Pt(we._payload),dt)}if(ue(we)||P(we))return Pt!==null?null:_t(me,ae,we,dt,null);s0(me,we)}return null}function x1(me,ae,we,dt,Pt){if(typeof dt=="string"&&dt!==""||typeof dt=="number")return me=me.get(we)||null,te(ae,me,""+dt,Pt);if(typeof dt=="object"&&dt!==null){switch(dt.$$typeof){case l:return me=me.get(dt.key===null?we:dt.key)||null,be(ae,me,dt,Pt);case d:return me=me.get(dt.key===null?we:dt.key)||null,Xe(ae,me,dt,Pt);case S:var Jt=dt._init;return x1(me,ae,we,Jt(dt._payload),Pt)}if(ue(dt)||P(dt))return me=me.get(we)||null,_t(ae,me,dt,Pt,null);s0(ae,dt)}return null}function Ct(me,ae,we,dt){for(var Pt=null,Jt=null,Wt=ae,o1=ae=0,vn=null;Wt!==null&&o1<we.length;o1++){Wt.index>o1?(vn=Wt,Wt=null):vn=Wt.sibling;var l1=Nt(me,Wt,we[o1],dt);if(l1===null){Wt===null&&(Wt=vn);break}c&&Wt&&l1.alternate===null&&u(me,Wt),ae=L(l1,ae,o1),Jt===null?Pt=l1:Jt.sibling=l1,Jt=l1,Wt=vn}if(o1===we.length)return v(me,Wt),C1&&Aa(me,o1),Pt;if(Wt===null){for(;o1<we.length;o1++)Wt=Gt(me,we[o1],dt),Wt!==null&&(ae=L(Wt,ae,o1),Jt===null?Pt=Wt:Jt.sibling=Wt,Jt=Wt);return C1&&Aa(me,o1),Pt}for(Wt=w(me,Wt);o1<we.length;o1++)vn=x1(Wt,me,o1,we[o1],dt),vn!==null&&(c&&vn.alternate!==null&&Wt.delete(vn.key===null?o1:vn.key),ae=L(vn,ae,o1),Jt===null?Pt=vn:Jt.sibling=vn,Jt=vn);return c&&Wt.forEach(function(Ir){return u(me,Ir)}),C1&&Aa(me,o1),Pt}function Cn(me,ae,we,dt){var Pt=P(we);if(typeof Pt!="function")throw Error(s(150));if(we=Pt.call(we),we==null)throw Error(s(151));for(var Jt=Pt=null,Wt=ae,o1=ae=0,vn=null,l1=we.next();Wt!==null&&!l1.done;o1++,l1=we.next()){Wt.index>o1?(vn=Wt,Wt=null):vn=Wt.sibling;var Ir=Nt(me,Wt,l1.value,dt);if(Ir===null){Wt===null&&(Wt=vn);break}c&&Wt&&Ir.alternate===null&&u(me,Wt),ae=L(Ir,ae,o1),Jt===null?Pt=Ir:Jt.sibling=Ir,Jt=Ir,Wt=vn}if(l1.done)return v(me,Wt),C1&&Aa(me,o1),Pt;if(Wt===null){for(;!l1.done;o1++,l1=we.next())l1=Gt(me,l1.value,dt),l1!==null&&(ae=L(l1,ae,o1),Jt===null?Pt=l1:Jt.sibling=l1,Jt=l1);return C1&&Aa(me,o1),Pt}for(Wt=w(me,Wt);!l1.done;o1++,l1=we.next())l1=x1(Wt,me,o1,l1.value,dt),l1!==null&&(c&&l1.alternate!==null&&Wt.delete(l1.key===null?o1:l1.key),ae=L(l1,ae,o1),Jt===null?Pt=l1:Jt.sibling=l1,Jt=l1);return c&&Wt.forEach(function(mE){return u(me,mE)}),C1&&Aa(me,o1),Pt}function Bi(me,ae,we,dt){if(typeof we=="object"&&we!==null&&we.type===h&&we.key===null&&(we=we.props.children),typeof we=="object"&&we!==null){switch(we.$$typeof){case l:e:{for(var Pt=we.key,Jt=ae;Jt!==null;){if(Jt.key===Pt){if(Pt=we.type,Pt===h){if(Jt.tag===7){v(me,Jt.sibling),ae=M(Jt,we.props.children),ae.return=me,me=ae;break e}}else if(Jt.elementType===Pt||typeof Pt=="object"&&Pt!==null&&Pt.$$typeof===S&&Rf(Pt)===Jt.type){v(me,Jt.sibling),ae=M(Jt,we.props),ae.ref=L3(me,Jt,we),ae.return=me,me=ae;break e}v(me,Jt);break}else u(me,Jt);Jt=Jt.sibling}we.type===h?(ae=Ba(we.props.children,me.mode,dt,we.key),ae.return=me,me=ae):(dt=B0(we.type,we.key,we.props,null,me.mode,dt),dt.ref=L3(me,ae,we),dt.return=me,me=dt)}return V(me);case d:e:{for(Jt=we.key;ae!==null;){if(ae.key===Jt)if(ae.tag===4&&ae.stateNode.containerInfo===we.containerInfo&&ae.stateNode.implementation===we.implementation){v(me,ae.sibling),ae=M(ae,we.children||[]),ae.return=me,me=ae;break e}else{v(me,ae);break}else u(me,ae);ae=ae.sibling}ae=q6(we,me.mode,dt),ae.return=me,me=ae}return V(me);case S:return Jt=we._init,Bi(me,ae,Jt(we._payload),dt)}if(ue(we))return Ct(me,ae,we,dt);if(P(we))return Cn(me,ae,we,dt);s0(me,we)}return typeof we=="string"&&we!==""||typeof we=="number"?(we=""+we,ae!==null&&ae.tag===6?(v(me,ae.sibling),ae=M(ae,we),ae.return=me,me=ae):(v(me,ae),ae=Y6(we,me.mode,dt),ae.return=me,me=ae),V(me)):v(me,ae)}return Bi}var Gs=kf(!0),If=kf(!1),C3={},Ii=z1(C3),A3=z1(C3),Ws=z1(C3);function b2(c){if(c===C3)throw Error(s(174));return c}function d6(c,u){B(Ws,u),B(A3,c),B(Ii,C3),c=ve(u),Ot(Ii),B(Ii,c)}function Xs(){Ot(Ii),Ot(A3),Ot(Ws)}function Nf(c){var u=b2(Ws.current),v=b2(Ii.current);u=z(v,c.type,u),v!==u&&(B(A3,c),B(Ii,u))}function h6(c){A3.current===c&&(Ot(Ii),Ot(A3))}var k1=z1(0);function o0(c){for(var u=c;u!==null;){if(u.tag===13){var v=u.memoizedState;if(v!==null&&(v=v.dehydrated,v===null||m1(v)||Ft(v)))return u}else if(u.tag===19&&u.memoizedProps.revealOrder!==void 0){if(u.flags&128)return u}else if(u.child!==null){u.child.return=u,u=u.child;continue}if(u===c)break;for(;u.sibling===null;){if(u.return===null||u.return===c)return null;u=u.return}u.sibling.return=u.return,u=u.sibling}return null}var f6=[];function p6(){for(var c=0;c<f6.length;c++){var u=f6[c];Tt?u._workInProgressVersionPrimary=null:u._workInProgressVersionSecondary=null}f6.length=0}var l0=o.ReactCurrentDispatcher,Ni=o.ReactCurrentBatchConfig,Ys=0,j1=null,Pn=null,gn=null,c0=!1,R3=!1,k3=0,zM=0;function Tn(){throw Error(s(321))}function m6(c,u){if(u===null)return!1;for(var v=0;v<u.length&&v<c.length;v++)if(!_2(c[v],u[v]))return!1;return!0}function g6(c,u,v,w,M,L){if(Ys=L,j1=u,u.memoizedState=null,u.updateQueue=null,u.lanes=0,l0.current=c===null||c.memoizedState===null?GM:WM,c=v(w,M),R3){L=0;do{if(R3=!1,k3=0,25<=L)throw Error(s(301));L+=1,gn=Pn=null,u.updateQueue=null,l0.current=XM,c=v(w,M)}while(R3)}if(l0.current=p0,u=Pn!==null&&Pn.next!==null,Ys=0,gn=Pn=j1=null,c0=!1,u)throw Error(s(300));return c}function v6(){var c=k3!==0;return k3=0,c}function q2(){var c={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return gn===null?j1.memoizedState=gn=c:gn=gn.next=c,gn}function S2(){if(Pn===null){var c=j1.alternate;c=c!==null?c.memoizedState:null}else c=Pn.next;var u=gn===null?j1.memoizedState:gn.next;if(u!==null)gn=u,Pn=c;else{if(c===null)throw Error(s(310));Pn=c,c={memoizedState:Pn.memoizedState,baseState:Pn.baseState,baseQueue:Pn.baseQueue,queue:Pn.queue,next:null},gn===null?j1.memoizedState=gn=c:gn=gn.next=c}return gn}function Ra(c,u){return typeof u=="function"?u(c):u}function u0(c){var u=S2(),v=u.queue;if(v===null)throw Error(s(311));v.lastRenderedReducer=c;var w=Pn,M=w.baseQueue,L=v.pending;if(L!==null){if(M!==null){var V=M.next;M.next=L.next,L.next=V}w.baseQueue=M=L,v.pending=null}if(M!==null){L=M.next,w=w.baseState;var te=V=null,be=null,Xe=L;do{var _t=Xe.lane;if((Ys&_t)===_t)be!==null&&(be=be.next={lane:0,action:Xe.action,hasEagerState:Xe.hasEagerState,eagerState:Xe.eagerState,next:null}),w=Xe.hasEagerState?Xe.eagerState:c(w,Xe.action);else{var Gt={lane:_t,action:Xe.action,hasEagerState:Xe.hasEagerState,eagerState:Xe.eagerState,next:null};be===null?(te=be=Gt,V=w):be=be.next=Gt,j1.lanes|=_t,$s|=_t}Xe=Xe.next}while(Xe!==null&&Xe!==L);be===null?V=w:be.next=te,_2(w,u.memoizedState)||(mi=!0),u.memoizedState=w,u.baseState=V,u.baseQueue=be,v.lastRenderedState=w}if(c=v.interleaved,c!==null){M=c;do L=M.lane,j1.lanes|=L,$s|=L,M=M.next;while(M!==c)}else M===null&&(v.lanes=0);return[u.memoizedState,v.dispatch]}function d0(c){var u=S2(),v=u.queue;if(v===null)throw Error(s(311));v.lastRenderedReducer=c;var w=v.dispatch,M=v.pending,L=u.memoizedState;if(M!==null){v.pending=null;var V=M=M.next;do L=c(L,V.action),V=V.next;while(V!==M);_2(L,u.memoizedState)||(mi=!0),u.memoizedState=L,u.baseQueue===null&&(u.baseState=L),v.lastRenderedState=L}return[L,w]}function Df(){}function Of(c,u){var v=j1,w=S2(),M=u(),L=!_2(w.memoizedState,M);if(L&&(w.memoizedState=M,mi=!0),w=w.queue,N3(Ff.bind(null,v,w,c),[c]),w.getSnapshot!==u||L||gn!==null&&gn.memoizedState.tag&1){if(v.flags|=2048,I3(9,Uf.bind(null,v,w,M,u),void 0,null),en===null)throw Error(s(349));Ys&30||Bf(v,u,M)}return M}function Bf(c,u,v){c.flags|=16384,c={getSnapshot:u,value:v},u=j1.updateQueue,u===null?(u={lastEffect:null,stores:null},j1.updateQueue=u,u.stores=[c]):(v=u.stores,v===null?u.stores=[c]:v.push(c))}function Uf(c,u,v,w){u.value=v,u.getSnapshot=w,zf(u)&&Di(c,1,-1)}function Ff(c,u,v){return v(function(){zf(u)&&Di(c,1,-1)})}function zf(c){var u=c.getSnapshot;c=c.value;try{var v=u();return!_2(c,v)}catch{return!0}}function y6(c){var u=q2();return typeof c=="function"&&(c=c()),u.memoizedState=u.baseState=c,c={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ra,lastRenderedState:c},u.queue=c,c=c.dispatch=VM.bind(null,j1,c),[u.memoizedState,c]}function I3(c,u,v,w){return c={tag:c,create:u,destroy:v,deps:w,next:null},u=j1.updateQueue,u===null?(u={lastEffect:null,stores:null},j1.updateQueue=u,u.lastEffect=c.next=c):(v=u.lastEffect,v===null?u.lastEffect=c.next=c:(w=v.next,v.next=c,c.next=w,u.lastEffect=c)),c}function jf(){return S2().memoizedState}function h0(c,u,v,w){var M=q2();j1.flags|=c,M.memoizedState=I3(1|u,v,void 0,w===void 0?null:w)}function f0(c,u,v,w){var M=S2();w=w===void 0?null:w;var L=void 0;if(Pn!==null){var V=Pn.memoizedState;if(L=V.destroy,w!==null&&m6(w,V.deps)){M.memoizedState=I3(u,v,L,w);return}}j1.flags|=c,M.memoizedState=I3(1|u,v,L,w)}function _6(c,u){return h0(8390656,8,c,u)}function N3(c,u){return f0(2048,8,c,u)}function Hf(c,u){return f0(4,2,c,u)}function Vf(c,u){return f0(4,4,c,u)}function Gf(c,u){if(typeof u=="function")return c=c(),u(c),function(){u(null)};if(u!=null)return c=c(),u.current=c,function(){u.current=null}}function Wf(c,u,v){return v=v!=null?v.concat([c]):null,f0(4,4,Gf.bind(null,u,c),v)}function x6(){}function Xf(c,u){var v=S2();u=u===void 0?null:u;var w=v.memoizedState;return w!==null&&u!==null&&m6(u,w[1])?w[0]:(v.memoizedState=[c,u],c)}function Yf(c,u){var v=S2();u=u===void 0?null:u;var w=v.memoizedState;return w!==null&&u!==null&&m6(u,w[1])?w[0]:(c=c(),v.memoizedState=[c,u],c)}function jM(c,u){var v=wt;wt=v!==0&&4>v?v:4,c(!0);var w=Ni.transition;Ni.transition={};try{c(!1),u()}finally{wt=v,Ni.transition=w}}function qf(){return S2().memoizedState}function HM(c,u,v){var w=Ar(c);v={lane:w,action:v,hasEagerState:!1,eagerState:null,next:null},$f(c)?Kf(u,v):(Zf(c,u,v),v=Hn(),c=Di(c,w,v),c!==null&&Jf(c,u,w))}function VM(c,u,v){var w=Ar(c),M={lane:w,action:v,hasEagerState:!1,eagerState:null,next:null};if($f(c))Kf(u,M);else{Zf(c,u,M);var L=c.alternate;if(c.lanes===0&&(L===null||L.lanes===0)&&(L=u.lastRenderedReducer,L!==null))try{var V=u.lastRenderedState,te=L(V,v);if(M.hasEagerState=!0,M.eagerState=te,_2(te,V))return}catch{}finally{}v=Hn(),c=Di(c,w,v),c!==null&&Jf(c,u,w)}}function $f(c){var u=c.alternate;return c===j1||u!==null&&u===j1}function Kf(c,u){R3=c0=!0;var v=c.pending;v===null?u.next=u:(u.next=v.next,v.next=u),c.pending=u}function Zf(c,u,v){en!==null&&c.mode&1&&!(e1&2)?(c=u.interleaved,c===null?(v.next=v,w2===null?w2=[u]:w2.push(u)):(v.next=c.next,c.next=v),u.interleaved=v):(c=u.pending,c===null?v.next=v:(v.next=c.next,c.next=v),u.pending=v)}function Jf(c,u,v){if(v&4194240){var w=u.lanes;w&=c.pendingLanes,v|=w,u.lanes=v,_1(c,v)}}var p0={readContext:Ai,useCallback:Tn,useContext:Tn,useEffect:Tn,useImperativeHandle:Tn,useInsertionEffect:Tn,useLayoutEffect:Tn,useMemo:Tn,useReducer:Tn,useRef:Tn,useState:Tn,useDebugValue:Tn,useDeferredValue:Tn,useTransition:Tn,useMutableSource:Tn,useSyncExternalStore:Tn,useId:Tn,unstable_isNewReconciler:!1},GM={readContext:Ai,useCallback:function(c,u){return q2().memoizedState=[c,u===void 0?null:u],c},useContext:Ai,useEffect:_6,useImperativeHandle:function(c,u,v){return v=v!=null?v.concat([c]):null,h0(4194308,4,Gf.bind(null,u,c),v)},useLayoutEffect:function(c,u){return h0(4194308,4,c,u)},useInsertionEffect:function(c,u){return h0(4,2,c,u)},useMemo:function(c,u){var v=q2();return u=u===void 0?null:u,c=c(),v.memoizedState=[c,u],c},useReducer:function(c,u,v){var w=q2();return u=v!==void 0?v(u):u,w.memoizedState=w.baseState=u,c={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:c,lastRenderedState:u},w.queue=c,c=c.dispatch=HM.bind(null,j1,c),[w.memoizedState,c]},useRef:function(c){var u=q2();return c={current:c},u.memoizedState=c},useState:y6,useDebugValue:x6,useDeferredValue:function(c){var u=y6(c),v=u[0],w=u[1];return _6(function(){var M=Ni.transition;Ni.transition={};try{w(c)}finally{Ni.transition=M}},[c]),v},useTransition:function(){var c=y6(!1),u=c[0];return c=jM.bind(null,c[1]),q2().memoizedState=c,[u,c]},useMutableSource:function(){},useSyncExternalStore:function(c,u,v){var w=j1,M=q2();if(C1){if(v===void 0)throw Error(s(407));v=v()}else{if(v=u(),en===null)throw Error(s(349));Ys&30||Bf(w,u,v)}M.memoizedState=v;var L={value:v,getSnapshot:u};return M.queue=L,_6(Ff.bind(null,w,L,c),[c]),w.flags|=2048,I3(9,Uf.bind(null,w,L,v,u),void 0,null),v},useId:function(){var c=q2(),u=en.identifierPrefix;if(C1){var v=Y2,w=X2;v=(w&~(1<<32-Oe(w)-1)).toString(32)+v,u=":"+u+"R"+v,v=k3++,0<v&&(u+="H"+v.toString(32)),u+=":"}else v=zM++,u=":"+u+"r"+v.toString(32)+":";return c.memoizedState=u},unstable_isNewReconciler:!1},WM={readContext:Ai,useCallback:Xf,useContext:Ai,useEffect:N3,useImperativeHandle:Wf,useInsertionEffect:Hf,useLayoutEffect:Vf,useMemo:Yf,useReducer:u0,useRef:jf,useState:function(){return u0(Ra)},useDebugValue:x6,useDeferredValue:function(c){var u=u0(Ra),v=u[0],w=u[1];return N3(function(){var M=Ni.transition;Ni.transition={};try{w(c)}finally{Ni.transition=M}},[c]),v},useTransition:function(){var c=u0(Ra)[0],u=S2().memoizedState;return[c,u]},useMutableSource:Df,useSyncExternalStore:Of,useId:qf,unstable_isNewReconciler:!1},XM={readContext:Ai,useCallback:Xf,useContext:Ai,useEffect:N3,useImperativeHandle:Wf,useInsertionEffect:Hf,useLayoutEffect:Vf,useMemo:Yf,useReducer:d0,useRef:jf,useState:function(){return d0(Ra)},useDebugValue:x6,useDeferredValue:function(c){var u=d0(Ra),v=u[0],w=u[1];return N3(function(){var M=Ni.transition;Ni.transition={};try{w(c)}finally{Ni.transition=M}},[c]),v},useTransition:function(){var c=d0(Ra)[0],u=S2().memoizedState;return[c,u]},useMutableSource:Df,useSyncExternalStore:Of,useId:qf,unstable_isNewReconciler:!1};function w6(c,u){try{var v="",w=u;do v+=FM(w),w=w.return;while(w);var M=v}catch(L){M=`
Error generating stack: `+L.message+`
`+L.stack}return{value:c,source:u,stack:M}}function b6(c,u){try{console.error(u.value)}catch(v){setTimeout(function(){throw v})}}var YM=typeof WeakMap=="function"?WeakMap:Map;function Qf(c,u,v){v=W2(-1,v),v.tag=3,v.payload={element:null};var w=u.value;return v.callback=function(){A0||(A0=!0,z6=w),b6(c,u)},v}function ep(c,u,v){v=W2(-1,v),v.tag=3;var w=c.type.getDerivedStateFromError;if(typeof w=="function"){var M=u.value;v.payload=function(){return w(M)},v.callback=function(){b6(c,u)}}var L=c.stateNode;return L!==null&&typeof L.componentDidCatch=="function"&&(v.callback=function(){b6(c,u),typeof w!="function"&&(Lr===null?Lr=new Set([this]):Lr.add(this));var V=u.stack;this.componentDidCatch(u.value,{componentStack:V!==null?V:""})}),v}function tp(c,u,v){var w=c.pingCache;if(w===null){w=c.pingCache=new YM;var M=new Set;w.set(u,M)}else M=w.get(u),M===void 0&&(M=new Set,w.set(u,M));M.has(v)||(M.add(v),c=oE.bind(null,c,u,v),u.then(c,c))}function np(c){do{var u;if((u=c.tag===13)&&(u=c.memoizedState,u=u!==null?u.dehydrated!==null:!0),u)return c;c=c.return}while(c!==null);return null}function ip(c,u,v,w,M){return c.mode&1?(c.flags|=65536,c.lanes=M,c):(c===u?c.flags|=65536:(c.flags|=128,v.flags|=131072,v.flags&=-52805,v.tag===1&&(v.alternate===null?v.tag=17:(u=W2(-1,1),u.tag=2,Tr(v,u))),v.lanes|=1),c)}function M2(c){c.flags|=4}function rp(c,u){if(c!==null&&c.child===u.child)return!0;if(u.flags&16)return!1;for(c=u.child;c!==null;){if(c.flags&12854||c.subtreeFlags&12854)return!1;c=c.sibling}return!0}var D3,O3,m0,g0;if($e)D3=function(c,u){for(var v=u.child;v!==null;){if(v.tag===5||v.tag===6)_e(c,v.stateNode);else if(v.tag!==4&&v.child!==null){v.child.return=v,v=v.child;continue}if(v===u)break;for(;v.sibling===null;){if(v.return===null||v.return===u)return;v=v.return}v.sibling.return=v.return,v=v.sibling}},O3=function(){},m0=function(c,u,v,w,M){if(c=c.memoizedProps,c!==w){var L=u.stateNode,V=b2(Ii.current);v=ce(L,v,c,w,M,V),(u.updateQueue=v)&&M2(u)}},g0=function(c,u,v,w){v!==w&&M2(u)};else if(X){D3=function(c,u,v,w){for(var M=u.child;M!==null;){if(M.tag===5){var L=M.stateNode;v&&w&&(L=mt(L,M.type,M.memoizedProps,M)),_e(c,L)}else if(M.tag===6)L=M.stateNode,v&&w&&(L=ut(L,M.memoizedProps,M)),_e(c,L);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)L=M.child,L!==null&&(L.return=M),D3(c,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===u)break;for(;M.sibling===null;){if(M.return===null||M.return===u)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};var ap=function(c,u,v,w){for(var M=u.child;M!==null;){if(M.tag===5){var L=M.stateNode;v&&w&&(L=mt(L,M.type,M.memoizedProps,M)),ne(c,L)}else if(M.tag===6)L=M.stateNode,v&&w&&(L=ut(L,M.memoizedProps,M)),ne(c,L);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)L=M.child,L!==null&&(L.return=M),ap(c,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===u)break;for(;M.sibling===null;){if(M.return===null||M.return===u)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};O3=function(c,u){var v=u.stateNode;if(!rp(c,u)){c=v.containerInfo;var w=J(c);ap(w,u,!1,!1),v.pendingChildren=w,M2(u),Me(c,w)}},m0=function(c,u,v,w,M){var L=c.stateNode,V=c.memoizedProps;if((c=rp(c,u))&&V===w)u.stateNode=L;else{var te=u.stateNode,be=b2(Ii.current),Xe=null;V!==w&&(Xe=ce(te,v,V,w,M,be)),c&&Xe===null?u.stateNode=L:(L=W(L,Xe,v,V,w,u,c,te),je(L,v,w,M,be)&&M2(u),u.stateNode=L,c?M2(u):D3(L,u,!1,!1))}},g0=function(c,u,v,w){v!==w?(c=b2(Ws.current),v=b2(Ii.current),u.stateNode=ze(w,c,v,u),M2(u)):u.stateNode=c.stateNode}}else O3=function(){},m0=function(){},g0=function(){};function B3(c,u){if(!C1)switch(c.tailMode){case"hidden":u=c.tail;for(var v=null;u!==null;)u.alternate!==null&&(v=u),u=u.sibling;v===null?c.tail=null:v.sibling=null;break;case"collapsed":v=c.tail;for(var w=null;v!==null;)v.alternate!==null&&(w=v),v=v.sibling;w===null?u||c.tail===null?c.tail=null:c.tail.sibling=null:w.sibling=null}}function Ln(c){var u=c.alternate!==null&&c.alternate.child===c.child,v=0,w=0;if(u)for(var M=c.child;M!==null;)v|=M.lanes|M.childLanes,w|=M.subtreeFlags&14680064,w|=M.flags&14680064,M.return=c,M=M.sibling;else for(M=c.child;M!==null;)v|=M.lanes|M.childLanes,w|=M.subtreeFlags,w|=M.flags,M.return=c,M=M.sibling;return c.subtreeFlags|=w,c.childLanes=v,u}function qM(c,u,v){var w=u.pendingProps;switch(o6(u),u.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ln(u),null;case 1:return Rt(u.type)&&F(),Ln(u),null;case 3:return w=u.stateNode,Xs(),Ot(ie),Ot($),p6(),w.pendingContext&&(w.context=w.pendingContext,w.pendingContext=null),(c===null||c.child===null)&&(T3(u)?M2(u):c===null||c.memoizedState.isDehydrated&&!(u.flags&256)||(u.flags|=1024,Ji!==null&&(V6(Ji),Ji=null))),O3(c,u),Ln(u),null;case 5:h6(u),v=b2(Ws.current);var M=u.type;if(c!==null&&u.stateNode!=null)m0(c,u,M,w,v),c.ref!==u.ref&&(u.flags|=512,u.flags|=2097152);else{if(!w){if(u.stateNode===null)throw Error(s(166));return Ln(u),null}if(c=b2(Ii.current),T3(u)){if(!Ne)throw Error(s(175));c=g2(u.stateNode,u.type,u.memoizedProps,v,c,u,!P3),u.updateQueue=c,c!==null&&M2(u)}else{var L=re(M,w,v,c,u);D3(L,u,!1,!1),u.stateNode=L,je(L,M,w,v,c)&&M2(u)}u.ref!==null&&(u.flags|=512,u.flags|=2097152)}return Ln(u),null;case 6:if(c&&u.stateNode!=null)g0(c,u,c.memoizedProps,w);else{if(typeof w!="string"&&u.stateNode===null)throw Error(s(166));if(c=b2(Ws.current),v=b2(Ii.current),T3(u)){if(!Ne)throw Error(s(176));if(c=u.stateNode,w=u.memoizedProps,(v=Li(c,w,u,!P3))&&(M=fi,M!==null))switch(L=(M.mode&1)!==0,M.tag){case 3:Ve(M.stateNode.containerInfo,c,w,L);break;case 5:Ze(M.type,M.memoizedProps,M.stateNode,c,w,L)}v&&M2(u)}else u.stateNode=ze(w,c,v,u)}return Ln(u),null;case 13:if(Ot(k1),w=u.memoizedState,C1&&pi!==null&&u.mode&1&&!(u.flags&128)){for(c=pi;c;)c=g1(c);return Vs(),u.flags|=98560,u}if(w!==null&&w.dehydrated!==null){if(w=T3(u),c===null){if(!w)throw Error(s(318));if(!Ne)throw Error(s(344));if(c=u.memoizedState,c=c!==null?c.dehydrated:null,!c)throw Error(s(317));ni(c,u)}else Vs(),!(u.flags&128)&&(u.memoizedState=null),u.flags|=4;return Ln(u),null}return Ji!==null&&(V6(Ji),Ji=null),u.flags&128?(u.lanes=v,u):(w=w!==null,v=!1,c===null?T3(u):v=c.memoizedState!==null,w&&!v&&(u.child.flags|=8192,u.mode&1&&(c===null||k1.current&1?ln===0&&(ln=3):W6())),u.updateQueue!==null&&(u.flags|=4),Ln(u),null);case 4:return Xs(),O3(c,u),c===null&&De(u.stateNode.containerInfo),Ln(u),null;case 10:return t6(u.type._context),Ln(u),null;case 17:return Rt(u.type)&&F(),Ln(u),null;case 19:if(Ot(k1),M=u.memoizedState,M===null)return Ln(u),null;if(w=(u.flags&128)!==0,L=M.rendering,L===null)if(w)B3(M,!1);else{if(ln!==0||c!==null&&c.flags&128)for(c=u.child;c!==null;){if(L=o0(c),L!==null){for(u.flags|=128,B3(M,!1),c=L.updateQueue,c!==null&&(u.updateQueue=c,u.flags|=4),u.subtreeFlags=0,c=v,w=u.child;w!==null;)v=w,M=c,v.flags&=14680066,L=v.alternate,L===null?(v.childLanes=0,v.lanes=M,v.child=null,v.subtreeFlags=0,v.memoizedProps=null,v.memoizedState=null,v.updateQueue=null,v.dependencies=null,v.stateNode=null):(v.childLanes=L.childLanes,v.lanes=L.lanes,v.child=L.child,v.subtreeFlags=0,v.deletions=null,v.memoizedProps=L.memoizedProps,v.memoizedState=L.memoizedState,v.updateQueue=L.updateQueue,v.type=L.type,M=L.dependencies,v.dependencies=M===null?null:{lanes:M.lanes,firstContext:M.firstContext}),w=w.sibling;return B(k1,k1.current&1|2),u.child}c=c.sibling}M.tail!==null&&u1()>F6&&(u.flags|=128,w=!0,B3(M,!1),u.lanes=4194304)}else{if(!w)if(c=o0(L),c!==null){if(u.flags|=128,w=!0,c=c.updateQueue,c!==null&&(u.updateQueue=c,u.flags|=4),B3(M,!0),M.tail===null&&M.tailMode==="hidden"&&!L.alternate&&!C1)return Ln(u),null}else 2*u1()-M.renderingStartTime>F6&&v!==1073741824&&(u.flags|=128,w=!0,B3(M,!1),u.lanes=4194304);M.isBackwards?(L.sibling=u.child,u.child=L):(c=M.last,c!==null?c.sibling=L:u.child=L,M.last=L)}return M.tail!==null?(u=M.tail,M.rendering=u,M.tail=u.sibling,M.renderingStartTime=u1(),u.sibling=null,c=k1.current,B(k1,w?c&1|2:c&1),u):(Ln(u),null);case 22:case 23:return G6(),w=u.memoizedState!==null,c!==null&&c.memoizedState!==null!==w&&(u.flags|=8192),w&&u.mode&1?gi&1073741824&&(Ln(u),$e&&u.subtreeFlags&6&&(u.flags|=8192)):Ln(u),null;case 24:return null;case 25:return null}throw Error(s(156,u.tag))}var $M=o.ReactCurrentOwner,mi=!1;function jn(c,u,v,w){u.child=c===null?If(u,null,v,w):Gs(u,c.child,v,w)}function sp(c,u,v,w,M){v=v.render;var L=u.ref;return zs(u,M),w=g6(c,u,v,w,L,M),v=v6(),c!==null&&!mi?(u.updateQueue=c.updateQueue,u.flags&=-2053,c.lanes&=~M,$2(c,u,M)):(C1&&v&&s6(u),u.flags|=1,jn(c,u,w,M),u.child)}function op(c,u,v,w,M){if(c===null){var L=v.type;return typeof L=="function"&&!X6(L)&&L.defaultProps===void 0&&v.compare===null&&v.defaultProps===void 0?(u.tag=15,u.type=L,lp(c,u,L,w,M)):(c=B0(v.type,null,w,u,u.mode,M),c.ref=u.ref,c.return=u,u.child=c)}if(L=c.child,!(c.lanes&M)){var V=L.memoizedProps;if(v=v.compare,v=v!==null?v:J4,v(V,w)&&c.ref===u.ref)return $2(c,u,M)}return u.flags|=1,c=kr(L,w),c.ref=u.ref,c.return=u,u.child=c}function lp(c,u,v,w,M){if(c!==null&&J4(c.memoizedProps,w)&&c.ref===u.ref)if(mi=!1,(c.lanes&M)!==0)c.flags&131072&&(mi=!0);else return u.lanes=c.lanes,$2(c,u,M);return S6(c,u,v,w,M)}function cp(c,u,v){var w=u.pendingProps,M=w.children,L=c!==null?c.memoizedState:null;if(w.mode==="hidden")if(!(u.mode&1))u.memoizedState={baseLanes:0,cachePool:null},B(qs,gi),gi|=v;else if(v&1073741824)u.memoizedState={baseLanes:0,cachePool:null},w=L!==null?L.baseLanes:v,B(qs,gi),gi|=w;else return c=L!==null?L.baseLanes|v:v,u.lanes=u.childLanes=1073741824,u.memoizedState={baseLanes:c,cachePool:null},u.updateQueue=null,B(qs,gi),gi|=c,null;else L!==null?(w=L.baseLanes|v,u.memoizedState=null):w=v,B(qs,gi),gi|=w;return jn(c,u,M,v),u.child}function up(c,u){var v=u.ref;(c===null&&v!==null||c!==null&&c.ref!==v)&&(u.flags|=512,u.flags|=2097152)}function S6(c,u,v,w,M){var L=Rt(v)?Fe:$.current;return L=ht(u,L),zs(u,M),v=g6(c,u,v,w,L,M),w=v6(),c!==null&&!mi?(u.updateQueue=c.updateQueue,u.flags&=-2053,c.lanes&=~M,$2(c,u,M)):(C1&&w&&s6(u),u.flags|=1,jn(c,u,v,M),u.child)}function dp(c,u,v,w,M){if(Rt(v)){var L=!0;Re(u)}else L=!1;if(zs(u,M),u.stateNode===null)c!==null&&(c.alternate=null,u.alternate=null,u.flags|=2),Ef(u,v,w),a6(u,v,w,M),w=!0;else if(c===null){var V=u.stateNode,te=u.memoizedProps;V.props=te;var be=V.context,Xe=v.contextType;typeof Xe=="object"&&Xe!==null?Xe=Ai(Xe):(Xe=Rt(v)?Fe:$.current,Xe=ht(u,Xe));var _t=v.getDerivedStateFromProps,Gt=typeof _t=="function"||typeof V.getSnapshotBeforeUpdate=="function";Gt||typeof V.UNSAFE_componentWillReceiveProps!="function"&&typeof V.componentWillReceiveProps!="function"||(te!==w||be!==Xe)&&Pf(u,V,w,Xe),Pr=!1;var Nt=u.memoizedState;V.state=Nt,n0(u,w,V,M),be=u.memoizedState,te!==w||Nt!==be||ie.current||Pr?(typeof _t=="function"&&(r6(u,v,_t,w),be=u.memoizedState),(te=Pr||Mf(u,v,te,w,Nt,be,Xe))?(Gt||typeof V.UNSAFE_componentWillMount!="function"&&typeof V.componentWillMount!="function"||(typeof V.componentWillMount=="function"&&V.componentWillMount(),typeof V.UNSAFE_componentWillMount=="function"&&V.UNSAFE_componentWillMount()),typeof V.componentDidMount=="function"&&(u.flags|=4194308)):(typeof V.componentDidMount=="function"&&(u.flags|=4194308),u.memoizedProps=w,u.memoizedState=be),V.props=w,V.state=be,V.context=Xe,w=te):(typeof V.componentDidMount=="function"&&(u.flags|=4194308),w=!1)}else{V=u.stateNode,xf(c,u),te=u.memoizedProps,Xe=u.type===u.elementType?te:Zi(u.type,te),V.props=Xe,Gt=u.pendingProps,Nt=V.context,be=v.contextType,typeof be=="object"&&be!==null?be=Ai(be):(be=Rt(v)?Fe:$.current,be=ht(u,be));var x1=v.getDerivedStateFromProps;(_t=typeof x1=="function"||typeof V.getSnapshotBeforeUpdate=="function")||typeof V.UNSAFE_componentWillReceiveProps!="function"&&typeof V.componentWillReceiveProps!="function"||(te!==Gt||Nt!==be)&&Pf(u,V,w,be),Pr=!1,Nt=u.memoizedState,V.state=Nt,n0(u,w,V,M);var Ct=u.memoizedState;te!==Gt||Nt!==Ct||ie.current||Pr?(typeof x1=="function"&&(r6(u,v,x1,w),Ct=u.memoizedState),(Xe=Pr||Mf(u,v,Xe,w,Nt,Ct,be)||!1)?(_t||typeof V.UNSAFE_componentWillUpdate!="function"&&typeof V.componentWillUpdate!="function"||(typeof V.componentWillUpdate=="function"&&V.componentWillUpdate(w,Ct,be),typeof V.UNSAFE_componentWillUpdate=="function"&&V.UNSAFE_componentWillUpdate(w,Ct,be)),typeof V.componentDidUpdate=="function"&&(u.flags|=4),typeof V.getSnapshotBeforeUpdate=="function"&&(u.flags|=1024)):(typeof V.componentDidUpdate!="function"||te===c.memoizedProps&&Nt===c.memoizedState||(u.flags|=4),typeof V.getSnapshotBeforeUpdate!="function"||te===c.memoizedProps&&Nt===c.memoizedState||(u.flags|=1024),u.memoizedProps=w,u.memoizedState=Ct),V.props=w,V.state=Ct,V.context=be,w=Xe):(typeof V.componentDidUpdate!="function"||te===c.memoizedProps&&Nt===c.memoizedState||(u.flags|=4),typeof V.getSnapshotBeforeUpdate!="function"||te===c.memoizedProps&&Nt===c.memoizedState||(u.flags|=1024),w=!1)}return M6(c,u,v,w,L,M)}function M6(c,u,v,w,M,L){up(c,u);var V=(u.flags&128)!==0;if(!w&&!V)return M&&He(u,v,!1),$2(c,u,L);w=u.stateNode,$M.current=u;var te=V&&typeof v.getDerivedStateFromError!="function"?null:w.render();return u.flags|=1,c!==null&&V?(u.child=Gs(u,c.child,null,L),u.child=Gs(u,null,te,L)):jn(c,u,te,L),u.memoizedState=w.state,M&&He(u,v,!0),u.child}function hp(c){var u=c.stateNode;u.pendingContext?H(c,u.pendingContext,u.pendingContext!==u.context):u.context&&H(c,u.context,!1),d6(c,u.containerInfo)}function fp(c,u,v,w,M){return Vs(),u6(M),u.flags|=256,jn(c,u,v,w),u.child}var v0={dehydrated:null,treeContext:null,retryLane:0};function y0(c){return{baseLanes:c,cachePool:null}}function pp(c,u,v){var w=u.pendingProps,M=k1.current,L=!1,V=(u.flags&128)!==0,te;if((te=V)||(te=c!==null&&c.memoizedState===null?!1:(M&2)!==0),te?(L=!0,u.flags&=-129):(c===null||c.memoizedState!==null)&&(M|=1),B(k1,M&1),c===null)return c6(u),c=u.memoizedState,c!==null&&(c=c.dehydrated,c!==null)?(u.mode&1?Ft(c)?u.lanes=8:u.lanes=1073741824:u.lanes=1,null):(M=w.children,c=w.fallback,L?(w=u.mode,L=u.child,M={mode:"hidden",children:M},!(w&1)&&L!==null?(L.childLanes=0,L.pendingProps=M):L=U0(M,w,0,null),c=Ba(c,w,v,null),L.return=u,c.return=u,L.sibling=c,u.child=L,u.child.memoizedState=y0(v),u.memoizedState=v0,c):E6(u,M));if(M=c.memoizedState,M!==null){if(te=M.dehydrated,te!==null){if(V)return u.flags&256?(u.flags&=-257,_0(c,u,v,Error(s(422)))):u.memoizedState!==null?(u.child=c.child,u.flags|=128,null):(L=w.fallback,M=u.mode,w=U0({mode:"visible",children:w.children},M,0,null),L=Ba(L,M,v,null),L.flags|=2,w.return=u,L.return=u,w.sibling=L,u.child=w,u.mode&1&&Gs(u,c.child,null,v),u.child.memoizedState=y0(v),u.memoizedState=v0,L);if(!(u.mode&1))u=_0(c,u,v,null);else if(Ft(te))u=_0(c,u,v,Error(s(419)));else if(w=(v&c.childLanes)!==0,mi||w){if(w=en,w!==null){switch(v&-v){case 4:L=2;break;case 16:L=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:L=32;break;case 536870912:L=268435456;break;default:L=0}w=L&(w.suspendedLanes|v)?0:L,w!==0&&w!==M.retryLane&&(M.retryLane=w,Di(c,w,-1))}W6(),u=_0(c,u,v,Error(s(421)))}else m1(te)?(u.flags|=128,u.child=c.child,u=lE.bind(null,c),t1(te,u),u=null):(v=M.treeContext,Ne&&(pi=ti(te),fi=u,C1=!0,Ji=null,P3=!1,v!==null&&(Ri[ki++]=X2,Ri[ki++]=Y2,Ri[ki++]=Ca,X2=v.id,Y2=v.overflow,Ca=u)),u=E6(u,u.pendingProps.children),u.flags|=4096);return u}return L?(w=gp(c,u,w.children,w.fallback,v),L=u.child,M=c.child.memoizedState,L.memoizedState=M===null?y0(v):{baseLanes:M.baseLanes|v,cachePool:null},L.childLanes=c.childLanes&~v,u.memoizedState=v0,w):(v=mp(c,u,w.children,v),u.memoizedState=null,v)}return L?(w=gp(c,u,w.children,w.fallback,v),L=u.child,M=c.child.memoizedState,L.memoizedState=M===null?y0(v):{baseLanes:M.baseLanes|v,cachePool:null},L.childLanes=c.childLanes&~v,u.memoizedState=v0,w):(v=mp(c,u,w.children,v),u.memoizedState=null,v)}function E6(c,u){return u=U0({mode:"visible",children:u},c.mode,0,null),u.return=c,c.child=u}function mp(c,u,v,w){var M=c.child;return c=M.sibling,v=kr(M,{mode:"visible",children:v}),!(u.mode&1)&&(v.lanes=w),v.return=u,v.sibling=null,c!==null&&(w=u.deletions,w===null?(u.deletions=[c],u.flags|=16):w.push(c)),u.child=v}function gp(c,u,v,w,M){var L=u.mode;c=c.child;var V=c.sibling,te={mode:"hidden",children:v};return!(L&1)&&u.child!==c?(v=u.child,v.childLanes=0,v.pendingProps=te,u.deletions=null):(v=kr(c,te),v.subtreeFlags=c.subtreeFlags&14680064),V!==null?w=kr(V,w):(w=Ba(w,L,M,null),w.flags|=2),w.return=u,v.return=u,v.sibling=w,u.child=v,w}function _0(c,u,v,w){return w!==null&&u6(w),Gs(u,c.child,null,v),c=E6(u,u.pendingProps.children),c.flags|=2,u.memoizedState=null,c}function vp(c,u,v){c.lanes|=u;var w=c.alternate;w!==null&&(w.lanes|=u),n6(c.return,u,v)}function P6(c,u,v,w,M){var L=c.memoizedState;L===null?c.memoizedState={isBackwards:u,rendering:null,renderingStartTime:0,last:w,tail:v,tailMode:M}:(L.isBackwards=u,L.rendering=null,L.renderingStartTime=0,L.last=w,L.tail=v,L.tailMode=M)}function yp(c,u,v){var w=u.pendingProps,M=w.revealOrder,L=w.tail;if(jn(c,u,w.children,v),w=k1.current,w&2)w=w&1|2,u.flags|=128;else{if(c!==null&&c.flags&128)e:for(c=u.child;c!==null;){if(c.tag===13)c.memoizedState!==null&&vp(c,v,u);else if(c.tag===19)vp(c,v,u);else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===u)break e;for(;c.sibling===null;){if(c.return===null||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}w&=1}if(B(k1,w),!(u.mode&1))u.memoizedState=null;else switch(M){case"forwards":for(v=u.child,M=null;v!==null;)c=v.alternate,c!==null&&o0(c)===null&&(M=v),v=v.sibling;v=M,v===null?(M=u.child,u.child=null):(M=v.sibling,v.sibling=null),P6(u,!1,M,v,L);break;case"backwards":for(v=null,M=u.child,u.child=null;M!==null;){if(c=M.alternate,c!==null&&o0(c)===null){u.child=M;break}c=M.sibling,M.sibling=v,v=M,M=c}P6(u,!0,v,null,L);break;case"together":P6(u,!1,null,null,void 0);break;default:u.memoizedState=null}return u.child}function $2(c,u,v){if(c!==null&&(u.dependencies=c.dependencies),$s|=u.lanes,!(v&u.childLanes))return null;if(c!==null&&u.child!==c.child)throw Error(s(153));if(u.child!==null){for(c=u.child,v=kr(c,c.pendingProps),u.child=v,v.return=u;c.sibling!==null;)c=c.sibling,v=v.sibling=kr(c,c.pendingProps),v.return=u;v.sibling=null}return u.child}function KM(c,u,v){switch(u.tag){case 3:hp(u),Vs();break;case 5:Nf(u);break;case 1:Rt(u.type)&&Re(u);break;case 4:d6(u,u.stateNode.containerInfo);break;case 10:_f(u,u.type._context,u.memoizedProps.value);break;case 13:var w=u.memoizedState;if(w!==null)return w.dehydrated!==null?(B(k1,k1.current&1),u.flags|=128,null):v&u.child.childLanes?pp(c,u,v):(B(k1,k1.current&1),c=$2(c,u,v),c!==null?c.sibling:null);B(k1,k1.current&1);break;case 19:if(w=(v&u.childLanes)!==0,c.flags&128){if(w)return yp(c,u,v);u.flags|=128}var M=u.memoizedState;if(M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),B(k1,k1.current),w)break;return null;case 22:case 23:return u.lanes=0,cp(c,u,v)}return $2(c,u,v)}function ZM(c,u){switch(o6(u),u.tag){case 1:return Rt(u.type)&&F(),c=u.flags,c&65536?(u.flags=c&-65537|128,u):null;case 3:return Xs(),Ot(ie),Ot($),p6(),c=u.flags,c&65536&&!(c&128)?(u.flags=c&-65537|128,u):null;case 5:return h6(u),null;case 13:if(Ot(k1),c=u.memoizedState,c!==null&&c.dehydrated!==null){if(u.alternate===null)throw Error(s(340));Vs()}return c=u.flags,c&65536?(u.flags=c&-65537|128,u):null;case 19:return Ot(k1),null;case 4:return Xs(),null;case 10:return t6(u.type._context),null;case 22:case 23:return G6(),null;case 24:return null;default:return null}}var x0=!1,ka=!1,JM=typeof WeakSet=="function"?WeakSet:Set,ct=null;function w0(c,u){var v=c.ref;if(v!==null)if(typeof v=="function")try{v(null)}catch(w){ai(c,u,w)}else v.current=null}function T6(c,u,v){try{v()}catch(w){ai(c,u,w)}}var _p=!1;function QM(c,u){for(K(c.containerInfo),ct=u;ct!==null;)if(c=ct,u=c.child,(c.subtreeFlags&1028)!==0&&u!==null)u.return=c,ct=u;else for(;ct!==null;){c=ct;try{var v=c.alternate;if(c.flags&1024)switch(c.tag){case 0:case 11:case 15:break;case 1:if(v!==null){var w=v.memoizedProps,M=v.memoizedState,L=c.stateNode,V=L.getSnapshotBeforeUpdate(c.elementType===c.type?w:Zi(c.type,w),M);L.__reactInternalSnapshotBeforeUpdate=V}break;case 3:$e&&Ue(c.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(s(163))}}catch(te){ai(c,c.return,te)}if(u=c.sibling,u!==null){u.return=c.return,ct=u;break}ct=c.return}return v=_p,_p=!1,v}function Ia(c,u,v){var w=u.updateQueue;if(w=w!==null?w.lastEffect:null,w!==null){var M=w=w.next;do{if((M.tag&c)===c){var L=M.destroy;M.destroy=void 0,L!==void 0&&T6(u,v,L)}M=M.next}while(M!==w)}}function U3(c,u){if(u=u.updateQueue,u=u!==null?u.lastEffect:null,u!==null){var v=u=u.next;do{if((v.tag&c)===c){var w=v.create;v.destroy=w()}v=v.next}while(v!==u)}}function L6(c){var u=c.ref;if(u!==null){var v=c.stateNode;switch(c.tag){case 5:c=se(v);break;default:c=v}typeof u=="function"?u(c):u.current=c}}function xp(c,u,v){if(Ci&&typeof Ci.onCommitFiberUnmount=="function")try{Ci.onCommitFiberUnmount(mn,u)}catch{}switch(u.tag){case 0:case 11:case 14:case 15:if(c=u.updateQueue,c!==null&&(c=c.lastEffect,c!==null)){var w=c=c.next;do{var M=w,L=M.destroy;M=M.tag,L!==void 0&&(M&2||M&4)&&T6(u,v,L),w=w.next}while(w!==c)}break;case 1:if(w0(u,v),c=u.stateNode,typeof c.componentWillUnmount=="function")try{c.props=u.memoizedProps,c.state=u.memoizedState,c.componentWillUnmount()}catch(V){ai(u,v,V)}break;case 5:w0(u,v);break;case 4:$e?Pp(c,u,v):X&&X&&(u=u.stateNode.containerInfo,v=J(u),Be(u,v))}}function wp(c,u,v){for(var w=u;;)if(xp(c,w,v),w.child===null||$e&&w.tag===4){if(w===u)break;for(;w.sibling===null;){if(w.return===null||w.return===u)return;w=w.return}w.sibling.return=w.return,w=w.sibling}else w.child.return=w,w=w.child}function bp(c){var u=c.alternate;u!==null&&(c.alternate=null,bp(u)),c.child=null,c.deletions=null,c.sibling=null,c.tag===5&&(u=c.stateNode,u!==null&&xt(u)),c.stateNode=null,c.return=null,c.dependencies=null,c.memoizedProps=null,c.memoizedState=null,c.pendingProps=null,c.stateNode=null,c.updateQueue=null}function Sp(c){return c.tag===5||c.tag===3||c.tag===4}function Mp(c){e:for(;;){for(;c.sibling===null;){if(c.return===null||Sp(c.return))return null;c=c.return}for(c.sibling.return=c.return,c=c.sibling;c.tag!==5&&c.tag!==6&&c.tag!==18;){if(c.flags&2||c.child===null||c.tag===4)continue e;c.child.return=c,c=c.child}if(!(c.flags&2))return c.stateNode}}function Ep(c){if($e){e:{for(var u=c.return;u!==null;){if(Sp(u))break e;u=u.return}throw Error(s(160))}var v=u;switch(v.tag){case 5:u=v.stateNode,v.flags&32&&(Ce(u),v.flags&=-33),v=Mp(c),A6(c,v,u);break;case 3:case 4:u=v.stateNode.containerInfo,v=Mp(c),C6(c,v,u);break;default:throw Error(s(161))}}}function C6(c,u,v){var w=c.tag;if(w===5||w===6)c=c.stateNode,u?yt(v,c,u):Lt(v,c);else if(w!==4&&(c=c.child,c!==null))for(C6(c,u,v),c=c.sibling;c!==null;)C6(c,u,v),c=c.sibling}function A6(c,u,v){var w=c.tag;if(w===5||w===6)c=c.stateNode,u?de(v,c,u):Mt(v,c);else if(w!==4&&(c=c.child,c!==null))for(A6(c,u,v),c=c.sibling;c!==null;)A6(c,u,v),c=c.sibling}function Pp(c,u,v){for(var w=u,M=!1,L,V;;){if(!M){M=w.return;e:for(;;){if(M===null)throw Error(s(160));switch(L=M.stateNode,M.tag){case 5:V=!1;break e;case 3:L=L.containerInfo,V=!0;break e;case 4:L=L.containerInfo,V=!0;break e}M=M.return}M=!0}if(w.tag===5||w.tag===6)wp(c,w,v),V?Q(L,w.stateNode):st(L,w.stateNode);else if(w.tag===18)V?pe(L,w.stateNode):ye(L,w.stateNode);else if(w.tag===4){if(w.child!==null){L=w.stateNode.containerInfo,V=!0,w.child.return=w,w=w.child;continue}}else if(xp(c,w,v),w.child!==null){w.child.return=w,w=w.child;continue}if(w===u)break;for(;w.sibling===null;){if(w.return===null||w.return===u)return;w=w.return,w.tag===4&&(M=!1)}w.sibling.return=w.return,w=w.sibling}}function R6(c,u){if($e){switch(u.tag){case 0:case 11:case 14:case 15:Ia(3,u,u.return),U3(3,u),Ia(5,u,u.return);return;case 1:return;case 5:var v=u.stateNode;if(v!=null){var w=u.memoizedProps;c=c!==null?c.memoizedProps:w;var M=u.type,L=u.updateQueue;u.updateQueue=null,L!==null&&Vt(v,L,M,c,w,u)}return;case 6:if(u.stateNode===null)throw Error(s(162));v=u.memoizedProps,Ie(u.stateNode,c!==null?c.memoizedProps:v,v);return;case 3:Ne&&c!==null&&c.memoizedState.isDehydrated&&le(u.stateNode.containerInfo);return;case 12:return;case 13:b0(u);return;case 19:b0(u);return;case 17:return}throw Error(s(163))}switch(u.tag){case 0:case 11:case 14:case 15:Ia(3,u,u.return),U3(3,u),Ia(5,u,u.return);return;case 12:return;case 13:b0(u);return;case 19:b0(u);return;case 3:Ne&&c!==null&&c.memoizedState.isDehydrated&&le(u.stateNode.containerInfo);break;case 22:case 23:return}e:if(X){switch(u.tag){case 1:case 5:case 6:break e;case 3:case 4:u=u.stateNode,Be(u.containerInfo,u.pendingChildren);break e}throw Error(s(163))}}function b0(c){var u=c.updateQueue;if(u!==null){c.updateQueue=null;var v=c.stateNode;v===null&&(v=c.stateNode=new JM),u.forEach(function(w){var M=cE.bind(null,c,w);v.has(w)||(v.add(w),w.then(M,M))})}}function eE(c,u){for(ct=u;ct!==null;){u=ct;var v=u.deletions;if(v!==null)for(var w=0;w<v.length;w++){var M=v[w];try{var L=c;$e?Pp(L,M,u):wp(L,M,u);var V=M.alternate;V!==null&&(V.return=null),M.return=null}catch(Pt){ai(M,u,Pt)}}if(v=u.child,u.subtreeFlags&12854&&v!==null)v.return=u,ct=v;else for(;ct!==null;){u=ct;try{var te=u.flags;if(te&32&&$e&&Ce(u.stateNode),te&512){var be=u.alternate;if(be!==null){var Xe=be.ref;Xe!==null&&(typeof Xe=="function"?Xe(null):Xe.current=null)}}if(te&8192)switch(u.tag){case 13:if(u.memoizedState!==null){var _t=u.alternate;(_t===null||_t.memoizedState===null)&&(U6=u1())}break;case 22:var Gt=u.memoizedState!==null,Nt=u.alternate,x1=Nt!==null&&Nt.memoizedState!==null;if(v=u,$e){e:if(w=v,M=Gt,L=null,$e)for(var Ct=w;;){if(Ct.tag===5){if(L===null){L=Ct;var Cn=Ct.stateNode;M?tt(Cn):kt(Ct.stateNode,Ct.memoizedProps)}}else if(Ct.tag===6){if(L===null){var Bi=Ct.stateNode;M?it(Bi):G(Bi,Ct.memoizedProps)}}else if((Ct.tag!==22&&Ct.tag!==23||Ct.memoizedState===null||Ct===w)&&Ct.child!==null){Ct.child.return=Ct,Ct=Ct.child;continue}if(Ct===w)break;for(;Ct.sibling===null;){if(Ct.return===null||Ct.return===w)break e;L===Ct&&(L=null),Ct=Ct.return}L===Ct&&(L=null),Ct.sibling.return=Ct.return,Ct=Ct.sibling}}if(Gt&&!x1&&v.mode&1){ct=v;for(var me=v.child;me!==null;){for(v=ct=me;ct!==null;){w=ct;var ae=w.child;switch(w.tag){case 0:case 11:case 14:case 15:Ia(4,w,w.return);break;case 1:w0(w,w.return);var we=w.stateNode;if(typeof we.componentWillUnmount=="function"){var dt=w.return;try{we.props=w.memoizedProps,we.state=w.memoizedState,we.componentWillUnmount()}catch(Pt){ai(w,dt,Pt)}}break;case 5:w0(w,w.return);break;case 22:if(w.memoizedState!==null){Cp(v);continue}}ae!==null?(ae.return=w,ct=ae):Cp(v)}me=me.sibling}}}switch(te&4102){case 2:Ep(u),u.flags&=-3;break;case 6:Ep(u),u.flags&=-3,R6(u.alternate,u);break;case 4096:u.flags&=-4097;break;case 4100:u.flags&=-4097,R6(u.alternate,u);break;case 4:R6(u.alternate,u)}}catch(Pt){ai(u,u.return,Pt)}if(v=u.sibling,v!==null){v.return=u.return,ct=v;break}ct=u.return}}}function tE(c,u,v){ct=c,Tp(c)}function Tp(c,u,v){for(var w=(c.mode&1)!==0;ct!==null;){var M=ct,L=M.child;if(M.tag===22&&w){var V=M.memoizedState!==null||x0;if(!V){var te=M.alternate,be=te!==null&&te.memoizedState!==null||ka;te=x0;var Xe=ka;if(x0=V,(ka=be)&&!Xe)for(ct=M;ct!==null;)V=ct,be=V.child,V.tag===22&&V.memoizedState!==null?Ap(M):be!==null?(be.return=V,ct=be):Ap(M);for(;L!==null;)ct=L,Tp(L),L=L.sibling;ct=M,x0=te,ka=Xe}Lp(c)}else M.subtreeFlags&8772&&L!==null?(L.return=M,ct=L):Lp(c)}}function Lp(c){for(;ct!==null;){var u=ct;if(u.flags&8772){var v=u.alternate;try{if(u.flags&8772)switch(u.tag){case 0:case 11:case 15:ka||U3(5,u);break;case 1:var w=u.stateNode;if(u.flags&4&&!ka)if(v===null)w.componentDidMount();else{var M=u.elementType===u.type?v.memoizedProps:Zi(u.type,v.memoizedProps);w.componentDidUpdate(M,v.memoizedState,w.__reactInternalSnapshotBeforeUpdate)}var L=u.updateQueue;L!==null&&bf(u,L,w);break;case 3:var V=u.updateQueue;if(V!==null){if(v=null,u.child!==null)switch(u.child.tag){case 5:v=se(u.child.stateNode);break;case 1:v=u.child.stateNode}bf(u,V,v)}break;case 5:var te=u.stateNode;v===null&&u.flags&4&&Xt(te,u.type,u.memoizedProps,u);break;case 6:break;case 4:break;case 12:break;case 13:if(Ne&&u.memoizedState===null){var be=u.alternate;if(be!==null){var Xe=be.memoizedState;if(Xe!==null){var _t=Xe.dehydrated;_t!==null&&fe(_t)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(s(163))}ka||u.flags&512&&L6(u)}catch(Gt){ai(u,u.return,Gt)}}if(u===c){ct=null;break}if(v=u.sibling,v!==null){v.return=u.return,ct=v;break}ct=u.return}}function Cp(c){for(;ct!==null;){var u=ct;if(u===c){ct=null;break}var v=u.sibling;if(v!==null){v.return=u.return,ct=v;break}ct=u.return}}function Ap(c){for(;ct!==null;){var u=ct;try{switch(u.tag){case 0:case 11:case 15:var v=u.return;try{U3(4,u)}catch(be){ai(u,v,be)}break;case 1:var w=u.stateNode;if(typeof w.componentDidMount=="function"){var M=u.return;try{w.componentDidMount()}catch(be){ai(u,M,be)}}var L=u.return;try{L6(u)}catch(be){ai(u,L,be)}break;case 5:var V=u.return;try{L6(u)}catch(be){ai(u,V,be)}}}catch(be){ai(u,u.return,be)}if(u===c){ct=null;break}var te=u.sibling;if(te!==null){te.return=u.return,ct=te;break}ct=u.return}}var S0=0,M0=1,E0=2,P0=3,T0=4;if(typeof Symbol=="function"&&Symbol.for){var F3=Symbol.for;S0=F3("selector.component"),M0=F3("selector.has_pseudo_class"),E0=F3("selector.role"),P0=F3("selector.test_id"),T0=F3("selector.text")}function k6(c){var u=Te(c);if(u!=null){if(typeof u.memoizedProps["data-testname"]!="string")throw Error(s(364));return u}if(c=oe(c),c===null)throw Error(s(362));return c.stateNode.current}function I6(c,u){switch(u.$$typeof){case S0:if(c.type===u.value)return!0;break;case M0:e:{u=u.value,c=[c,0];for(var v=0;v<c.length;){var w=c[v++],M=c[v++],L=u[M];if(w.tag!==5||!Se(w)){for(;L!=null&&I6(w,L);)M++,L=u[M];if(M===u.length){u=!0;break e}else for(w=w.child;w!==null;)c.push(w,M),w=w.sibling}}u=!1}return u;case E0:if(c.tag===5&&nt(c.stateNode,u.value))return!0;break;case T0:if((c.tag===5||c.tag===6)&&(c=Ae(c),c!==null&&0<=c.indexOf(u.value)))return!0;break;case P0:if(c.tag===5&&(c=c.memoizedProps["data-testname"],typeof c=="string"&&c.toLowerCase()===u.value.toLowerCase()))return!0;break;default:throw Error(s(365))}return!1}function N6(c){switch(c.$$typeof){case S0:return"<"+(C(c.value)||"Unknown")+">";case M0:return":has("+(N6(c)||"")+")";case E0:return'[role="'+c.value+'"]';case T0:return'"'+c.value+'"';case P0:return'[data-testname="'+c.value+'"]';default:throw Error(s(365))}}function Rp(c,u){var v=[];c=[c,0];for(var w=0;w<c.length;){var M=c[w++],L=c[w++],V=u[L];if(M.tag!==5||!Se(M)){for(;V!=null&&I6(M,V);)L++,V=u[L];if(L===u.length)v.push(M);else for(M=M.child;M!==null;)c.push(M,L),M=M.sibling}}return v}function D6(c,u){if(!k)throw Error(s(363));c=k6(c),c=Rp(c,u),u=[],c=Array.from(c);for(var v=0;v<c.length;){var w=c[v++];if(w.tag===5)Se(w)||u.push(w.stateNode);else for(w=w.child;w!==null;)c.push(w),w=w.sibling}return u}var nE=Math.ceil,L0=o.ReactCurrentDispatcher,O6=o.ReactCurrentOwner,$1=o.ReactCurrentBatchConfig,e1=0,en=null,tn=null,wn=0,gi=0,qs=z1(0),ln=0,z3=null,$s=0,C0=0,B6=0,j3=null,ii=null,U6=0,F6=1/0;function Ks(){F6=u1()+500}var A0=!1,z6=null,Lr=null,R0=!1,Cr=null,k0=0,H3=0,j6=null,I0=-1,N0=0;function Hn(){return e1&6?u1():I0!==-1?I0:I0=u1()}function Ar(c){return c.mode&1?e1&2&&wn!==0?wn&-wn:UM.transition!==null?(N0===0&&(c=at,at<<=1,!(at&4194240)&&(at=64),N0=c),N0):(c=wt,c!==0?c:Pe()):1}function Di(c,u,v){if(50<H3)throw H3=0,j6=null,Error(s(185));var w=D0(c,u);return w===null?null:(q1(w,u,v),(!(e1&2)||w!==en)&&(w===en&&(!(e1&2)&&(C0|=u),ln===4&&Rr(w,wn)),ri(w,v),u===1&&e1===0&&!(c.mode&1)&&(Ks(),Z4&&x2())),w)}function D0(c,u){c.lanes|=u;var v=c.alternate;for(v!==null&&(v.lanes|=u),v=c,c=c.return;c!==null;)c.childLanes|=u,v=c.alternate,v!==null&&(v.childLanes|=u),v=c,c=c.return;return v.tag===3?v.stateNode:null}function ri(c,u){var v=c.callbackNode;s1(c,u);var w=bt(c,c===en?wn:0);if(w===0)v!==null&&Er(v),c.callbackNode=null,c.callbackPriority=0;else if(u=w&-w,c.callbackPriority!==u){if(v!=null&&Er(v),u===1)c.tag===0?BM(Ip.bind(null,c)):yf(Ip.bind(null,c)),et?D(function(){e1===0&&x2()}):H2(v2,x2),v=null;else{switch($i(w)){case 1:v=v2;break;case 4:v=Ta;break;case 16:v=y2;break;case 536870912:v=La;break;default:v=y2}v=Hp(v,kp.bind(null,c))}c.callbackPriority=u,c.callbackNode=v}}function kp(c,u){if(I0=-1,N0=0,e1&6)throw Error(s(327));var v=c.callbackNode;if(Oa()&&c.callbackNode!==v)return null;var w=bt(c,c===en?wn:0);if(w===0)return null;if(w&30||w&c.expiredLanes||u)u=O0(c,w);else{u=w;var M=e1;e1|=2;var L=Op();(en!==c||wn!==u)&&(Ks(),Na(c,u));do try{aE();break}catch(te){Dp(c,te)}while(!0);e6(),L0.current=L,e1=M,tn!==null?u=0:(en=null,wn=0,u=ln)}if(u!==0){if(u===2&&(M=S1(c),M!==0&&(w=M,u=H6(c,M))),u===1)throw v=z3,Na(c,0),Rr(c,w),ri(c,u1()),v;if(u===6)Rr(c,w);else{if(M=c.current.alternate,!(w&30)&&!iE(M)&&(u=O0(c,w),u===2&&(L=S1(c),L!==0&&(w=L,u=H6(c,L))),u===1))throw v=z3,Na(c,0),Rr(c,w),ri(c,u1()),v;switch(c.finishedWork=M,c.finishedLanes=w,u){case 0:case 1:throw Error(s(345));case 2:Da(c,ii);break;case 3:if(Rr(c,w),(w&130023424)===w&&(u=U6+500-u1(),10<u)){if(bt(c,0)!==0)break;if(M=c.suspendedLanes,(M&w)!==w){Hn(),c.pingedLanes|=c.suspendedLanes&M;break}c.timeoutHandle=Je(Da.bind(null,c,ii),u);break}Da(c,ii);break;case 4:if(Rr(c,w),(w&4194240)===w)break;for(u=c.eventTimes,M=-1;0<w;){var V=31-Oe(w);L=1<<V,V=u[V],V>M&&(M=V),w&=~L}if(w=M,w=u1()-w,w=(120>w?120:480>w?480:1080>w?1080:1920>w?1920:3e3>w?3e3:4320>w?4320:1960*nE(w/1960))-w,10<w){c.timeoutHandle=Je(Da.bind(null,c,ii),w);break}Da(c,ii);break;case 5:Da(c,ii);break;default:throw Error(s(329))}}}return ri(c,u1()),c.callbackNode===v?kp.bind(null,c):null}function H6(c,u){var v=j3;return c.current.memoizedState.isDehydrated&&(Na(c,u).flags|=256),c=O0(c,u),c!==2&&(u=ii,ii=v,u!==null&&V6(u)),c}function V6(c){ii===null?ii=c:ii.push.apply(ii,c)}function iE(c){for(var u=c;;){if(u.flags&16384){var v=u.updateQueue;if(v!==null&&(v=v.stores,v!==null))for(var w=0;w<v.length;w++){var M=v[w],L=M.getSnapshot;M=M.value;try{if(!_2(L(),M))return!1}catch{return!1}}}if(v=u.child,u.subtreeFlags&16384&&v!==null)v.return=u,u=v;else{if(u===c)break;for(;u.sibling===null;){if(u.return===null||u.return===c)return!0;u=u.return}u.sibling.return=u.return,u=u.sibling}}return!0}function Rr(c,u){for(u&=~B6,u&=~C0,c.suspendedLanes|=u,c.pingedLanes&=~u,c=c.expirationTimes;0<u;){var v=31-Oe(u),w=1<<v;c[v]=-1,u&=~w}}function Ip(c){if(e1&6)throw Error(s(327));Oa();var u=bt(c,0);if(!(u&1))return ri(c,u1()),null;var v=O0(c,u);if(c.tag!==0&&v===2){var w=S1(c);w!==0&&(u=w,v=H6(c,w))}if(v===1)throw v=z3,Na(c,0),Rr(c,u),ri(c,u1()),v;if(v===6)throw Error(s(345));return c.finishedWork=c.current.alternate,c.finishedLanes=u,Da(c,ii),ri(c,u1()),null}function Np(c){Cr!==null&&Cr.tag===0&&!(e1&6)&&Oa();var u=e1;e1|=1;var v=$1.transition,w=wt;try{if($1.transition=null,wt=1,c)return c()}finally{wt=w,$1.transition=v,e1=u,!(e1&6)&&x2()}}function G6(){gi=qs.current,Ot(qs)}function Na(c,u){c.finishedWork=null,c.finishedLanes=0;var v=c.timeoutHandle;if(v!==pt&&(c.timeoutHandle=pt,St(v)),tn!==null)for(v=tn.return;v!==null;){var w=v;switch(o6(w),w.tag){case 1:w=w.type.childContextTypes,w!=null&&F();break;case 3:Xs(),Ot(ie),Ot($),p6();break;case 5:h6(w);break;case 4:Xs();break;case 13:Ot(k1);break;case 19:Ot(k1);break;case 10:t6(w.type._context);break;case 22:case 23:G6()}v=v.return}if(en=c,tn=c=kr(c.current,null),wn=gi=u,ln=0,z3=null,B6=C0=$s=0,ii=j3=null,w2!==null){for(u=0;u<w2.length;u++)if(v=w2[u],w=v.interleaved,w!==null){v.interleaved=null;var M=w.next,L=v.pending;if(L!==null){var V=L.next;L.next=M,w.next=V}v.pending=w}w2=null}return c}function Dp(c,u){do{var v=tn;try{if(e6(),l0.current=p0,c0){for(var w=j1.memoizedState;w!==null;){var M=w.queue;M!==null&&(M.pending=null),w=w.next}c0=!1}if(Ys=0,gn=Pn=j1=null,R3=!1,k3=0,O6.current=null,v===null||v.return===null){ln=1,z3=u,tn=null;break}e:{var L=c,V=v.return,te=v,be=u;if(u=wn,te.flags|=32768,be!==null&&typeof be=="object"&&typeof be.then=="function"){var Xe=be,_t=te,Gt=_t.tag;if(!(_t.mode&1)&&(Gt===0||Gt===11||Gt===15)){var Nt=_t.alternate;Nt?(_t.updateQueue=Nt.updateQueue,_t.memoizedState=Nt.memoizedState,_t.lanes=Nt.lanes):(_t.updateQueue=null,_t.memoizedState=null)}var x1=np(V);if(x1!==null){x1.flags&=-257,ip(x1,V,te,L,u),x1.mode&1&&tp(L,Xe,u),u=x1,be=Xe;var Ct=u.updateQueue;if(Ct===null){var Cn=new Set;Cn.add(be),u.updateQueue=Cn}else Ct.add(be);break e}else{if(!(u&1)){tp(L,Xe,u),W6();break e}be=Error(s(426))}}else if(C1&&te.mode&1){var Bi=np(V);if(Bi!==null){!(Bi.flags&65536)&&(Bi.flags|=256),ip(Bi,V,te,L,u),u6(be);break e}}L=be,ln!==4&&(ln=2),j3===null?j3=[L]:j3.push(L),be=w6(be,te),te=V;do{switch(te.tag){case 3:te.flags|=65536,u&=-u,te.lanes|=u;var me=Qf(te,be,u);wf(te,me);break e;case 1:L=be;var ae=te.type,we=te.stateNode;if(!(te.flags&128)&&(typeof ae.getDerivedStateFromError=="function"||we!==null&&typeof we.componentDidCatch=="function"&&(Lr===null||!Lr.has(we)))){te.flags|=65536,u&=-u,te.lanes|=u;var dt=ep(te,L,u);wf(te,dt);break e}}te=te.return}while(te!==null)}Up(v)}catch(Pt){u=Pt,tn===v&&v!==null&&(tn=v=v.return);continue}break}while(!0)}function Op(){var c=L0.current;return L0.current=p0,c===null?p0:c}function W6(){(ln===0||ln===3||ln===2)&&(ln=4),en===null||!($s&268435455)&&!(C0&268435455)||Rr(en,wn)}function O0(c,u){var v=e1;e1|=2;var w=Op();en===c&&wn===u||Na(c,u);do try{rE();break}catch(M){Dp(c,M)}while(!0);if(e6(),e1=v,L0.current=w,tn!==null)throw Error(s(261));return en=null,wn=0,ln}function rE(){for(;tn!==null;)Bp(tn)}function aE(){for(;tn!==null&&!Ki();)Bp(tn)}function Bp(c){var u=jp(c.alternate,c,gi);c.memoizedProps=c.pendingProps,u===null?Up(c):tn=u,O6.current=null}function Up(c){var u=c;do{var v=u.alternate;if(c=u.return,u.flags&32768){if(v=ZM(v,u),v!==null){v.flags&=32767,tn=v;return}if(c!==null)c.flags|=32768,c.subtreeFlags=0,c.deletions=null;else{ln=6,tn=null;return}}else if(v=qM(v,u,gi),v!==null){tn=v;return}if(u=u.sibling,u!==null){tn=u;return}tn=u=c}while(u!==null);ln===0&&(ln=5)}function Da(c,u){var v=wt,w=$1.transition;try{$1.transition=null,wt=1,sE(c,u,v)}finally{$1.transition=w,wt=v}return null}function sE(c,u,v){do Oa();while(Cr!==null);if(e1&6)throw Error(s(327));var w=c.finishedWork,M=c.finishedLanes;if(w===null)return null;if(c.finishedWork=null,c.finishedLanes=0,w===c.current)throw Error(s(177));c.callbackNode=null,c.callbackPriority=0;var L=w.lanes|w.childLanes;if(on(c,L),c===en&&(tn=en=null,wn=0),!(w.subtreeFlags&2064)&&!(w.flags&2064)||R0||(R0=!0,Hp(y2,function(){return Oa(),null})),L=(w.flags&15990)!==0,w.subtreeFlags&15990||L){L=$1.transition,$1.transition=null;var V=wt;wt=1;var te=e1;e1|=4,O6.current=null,QM(c,w),eE(c,w),Z(c.containerInfo),c.current=w,tE(w),V2(),e1=te,wt=V,$1.transition=L}else c.current=w;if(R0&&(R0=!1,Cr=c,k0=M),L=c.pendingLanes,L===0&&(Lr=null),DM(w.stateNode),ri(c,u1()),u!==null)for(v=c.onRecoverableError,w=0;w<u.length;w++)v(u[w]);if(A0)throw A0=!1,c=z6,z6=null,c;return k0&1&&c.tag!==0&&Oa(),L=c.pendingLanes,L&1?c===j6?H3++:(H3=0,j6=c):H3=0,x2(),null}function Oa(){if(Cr!==null){var c=$i(k0),u=$1.transition,v=wt;try{if($1.transition=null,wt=16>c?16:c,Cr===null)var w=!1;else{if(c=Cr,Cr=null,k0=0,e1&6)throw Error(s(331));var M=e1;for(e1|=4,ct=c.current;ct!==null;){var L=ct,V=L.child;if(ct.flags&16){var te=L.deletions;if(te!==null){for(var be=0;be<te.length;be++){var Xe=te[be];for(ct=Xe;ct!==null;){var _t=ct;switch(_t.tag){case 0:case 11:case 15:Ia(8,_t,L)}var Gt=_t.child;if(Gt!==null)Gt.return=_t,ct=Gt;else for(;ct!==null;){_t=ct;var Nt=_t.sibling,x1=_t.return;if(bp(_t),_t===Xe){ct=null;break}if(Nt!==null){Nt.return=x1,ct=Nt;break}ct=x1}}}var Ct=L.alternate;if(Ct!==null){var Cn=Ct.child;if(Cn!==null){Ct.child=null;do{var Bi=Cn.sibling;Cn.sibling=null,Cn=Bi}while(Cn!==null)}}ct=L}}if(L.subtreeFlags&2064&&V!==null)V.return=L,ct=V;else e:for(;ct!==null;){if(L=ct,L.flags&2048)switch(L.tag){case 0:case 11:case 15:Ia(9,L,L.return)}var me=L.sibling;if(me!==null){me.return=L.return,ct=me;break e}ct=L.return}}var ae=c.current;for(ct=ae;ct!==null;){V=ct;var we=V.child;if(V.subtreeFlags&2064&&we!==null)we.return=V,ct=we;else e:for(V=ae;ct!==null;){if(te=ct,te.flags&2048)try{switch(te.tag){case 0:case 11:case 15:U3(9,te)}}catch(Pt){ai(te,te.return,Pt)}if(te===V){ct=null;break e}var dt=te.sibling;if(dt!==null){dt.return=te.return,ct=dt;break e}ct=te.return}}if(e1=M,x2(),Ci&&typeof Ci.onPostCommitFiberRoot=="function")try{Ci.onPostCommitFiberRoot(mn,c)}catch{}w=!0}return w}finally{wt=v,$1.transition=u}}return!1}function Fp(c,u,v){u=w6(v,u),u=Qf(c,u,1),Tr(c,u),u=Hn(),c=D0(c,1),c!==null&&(q1(c,1,u),ri(c,u))}function ai(c,u,v){if(c.tag===3)Fp(c,c,v);else for(;u!==null;){if(u.tag===3){Fp(u,c,v);break}else if(u.tag===1){var w=u.stateNode;if(typeof u.type.getDerivedStateFromError=="function"||typeof w.componentDidCatch=="function"&&(Lr===null||!Lr.has(w))){c=w6(v,c),c=ep(u,c,1),Tr(u,c),c=Hn(),u=D0(u,1),u!==null&&(q1(u,1,c),ri(u,c));break}}u=u.return}}function oE(c,u,v){var w=c.pingCache;w!==null&&w.delete(u),u=Hn(),c.pingedLanes|=c.suspendedLanes&v,en===c&&(wn&v)===v&&(ln===4||ln===3&&(wn&130023424)===wn&&500>u1()-U6?Na(c,0):B6|=v),ri(c,u)}function zp(c,u){u===0&&(c.mode&1?(u=lt,lt<<=1,!(lt&130023424)&&(lt=4194304)):u=1);var v=Hn();c=D0(c,u),c!==null&&(q1(c,u,v),ri(c,v))}function lE(c){var u=c.memoizedState,v=0;u!==null&&(v=u.retryLane),zp(c,v)}function cE(c,u){var v=0;switch(c.tag){case 13:var w=c.stateNode,M=c.memoizedState;M!==null&&(v=M.retryLane);break;case 19:w=c.stateNode;break;default:throw Error(s(314))}w!==null&&w.delete(u),zp(c,v)}var jp;jp=function(c,u,v){if(c!==null)if(c.memoizedProps!==u.pendingProps||ie.current)mi=!0;else{if(!(c.lanes&v)&&!(u.flags&128))return mi=!1,KM(c,u,v);mi=!!(c.flags&131072)}else mi=!1,C1&&u.flags&1048576&&Tf(u,a0,u.index);switch(u.lanes=0,u.tag){case 2:var w=u.type;c!==null&&(c.alternate=null,u.alternate=null,u.flags|=2),c=u.pendingProps;var M=ht(u,$.current);zs(u,v),M=g6(null,u,w,c,M,v);var L=v6();return u.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(u.tag=1,u.memoizedState=null,u.updateQueue=null,Rt(w)?(L=!0,Re(u)):L=!1,u.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,i6(u),M.updater=i0,u.stateNode=M,M._reactInternals=u,a6(u,w,c,v),u=M6(null,u,w,!0,L,v)):(u.tag=0,C1&&L&&s6(u),jn(null,u,M,v),u=u.child),u;case 16:w=u.elementType;e:{switch(c!==null&&(c.alternate=null,u.alternate=null,u.flags|=2),c=u.pendingProps,M=w._init,w=M(w._payload),u.type=w,M=u.tag=dE(w),c=Zi(w,c),M){case 0:u=S6(null,u,w,c,v);break e;case 1:u=dp(null,u,w,c,v);break e;case 11:u=sp(null,u,w,c,v);break e;case 14:u=op(null,u,w,Zi(w.type,c),v);break e}throw Error(s(306,w,""))}return u;case 0:return w=u.type,M=u.pendingProps,M=u.elementType===w?M:Zi(w,M),S6(c,u,w,M,v);case 1:return w=u.type,M=u.pendingProps,M=u.elementType===w?M:Zi(w,M),dp(c,u,w,M,v);case 3:e:{if(hp(u),c===null)throw Error(s(387));w=u.pendingProps,L=u.memoizedState,M=L.element,xf(c,u),n0(u,w,null,v);var V=u.memoizedState;if(w=V.element,Ne&&L.isDehydrated)if(L={element:w,isDehydrated:!1,cache:V.cache,transitions:V.transitions},u.updateQueue.baseState=L,u.memoizedState=L,u.flags&256){M=Error(s(423)),u=fp(c,u,w,v,M);break e}else if(w!==M){M=Error(s(424)),u=fp(c,u,w,v,M);break e}else for(Ne&&(pi=y1(u.stateNode.containerInfo),fi=u,C1=!0,Ji=null,P3=!1),v=If(u,null,w,v),u.child=v;v;)v.flags=v.flags&-3|4096,v=v.sibling;else{if(Vs(),w===M){u=$2(c,u,v);break e}jn(c,u,w,v)}u=u.child}return u;case 5:return Nf(u),c===null&&c6(u),w=u.type,M=u.pendingProps,L=c!==null?c.memoizedProps:null,V=M.children,Ee(w,M)?V=null:L!==null&&Ee(w,L)&&(u.flags|=32),up(c,u),jn(c,u,V,v),u.child;case 6:return c===null&&c6(u),null;case 13:return pp(c,u,v);case 4:return d6(u,u.stateNode.containerInfo),w=u.pendingProps,c===null?u.child=Gs(u,null,w,v):jn(c,u,w,v),u.child;case 11:return w=u.type,M=u.pendingProps,M=u.elementType===w?M:Zi(w,M),sp(c,u,w,M,v);case 7:return jn(c,u,u.pendingProps,v),u.child;case 8:return jn(c,u,u.pendingProps.children,v),u.child;case 12:return jn(c,u,u.pendingProps.children,v),u.child;case 10:e:{if(w=u.type._context,M=u.pendingProps,L=u.memoizedProps,V=M.value,_f(u,w,V),L!==null)if(_2(L.value,V)){if(L.children===M.children&&!ie.current){u=$2(c,u,v);break e}}else for(L=u.child,L!==null&&(L.return=u);L!==null;){var te=L.dependencies;if(te!==null){V=L.child;for(var be=te.firstContext;be!==null;){if(be.context===w){if(L.tag===1){be=W2(-1,v&-v),be.tag=2;var Xe=L.updateQueue;if(Xe!==null){Xe=Xe.shared;var _t=Xe.pending;_t===null?be.next=be:(be.next=_t.next,_t.next=be),Xe.pending=be}}L.lanes|=v,be=L.alternate,be!==null&&(be.lanes|=v),n6(L.return,v,u),te.lanes|=v;break}be=be.next}}else if(L.tag===10)V=L.type===u.type?null:L.child;else if(L.tag===18){if(V=L.return,V===null)throw Error(s(341));V.lanes|=v,te=V.alternate,te!==null&&(te.lanes|=v),n6(V,v,u),V=L.sibling}else V=L.child;if(V!==null)V.return=L;else for(V=L;V!==null;){if(V===u){V=null;break}if(L=V.sibling,L!==null){L.return=V.return,V=L;break}V=V.return}L=V}jn(c,u,M.children,v),u=u.child}return u;case 9:return M=u.type,w=u.pendingProps.children,zs(u,v),M=Ai(M),w=w(M),u.flags|=1,jn(c,u,w,v),u.child;case 14:return w=u.type,M=Zi(w,u.pendingProps),M=Zi(w.type,M),op(c,u,w,M,v);case 15:return lp(c,u,u.type,u.pendingProps,v);case 17:return w=u.type,M=u.pendingProps,M=u.elementType===w?M:Zi(w,M),c!==null&&(c.alternate=null,u.alternate=null,u.flags|=2),u.tag=1,Rt(w)?(c=!0,Re(u)):c=!1,zs(u,v),Ef(u,w,M),a6(u,w,M,v),M6(null,u,w,!0,c,v);case 19:return yp(c,u,v);case 22:return cp(c,u,v)}throw Error(s(156,u.tag))};function Hp(c,u){return H2(c,u)}function uE(c,u,v,w){this.tag=c,this.key=v,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=u,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=w,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Oi(c,u,v,w){return new uE(c,u,v,w)}function X6(c){return c=c.prototype,!(!c||!c.isReactComponent)}function dE(c){if(typeof c=="function")return X6(c)?1:0;if(c!=null){if(c=c.$$typeof,c===b)return 11;if(c===x)return 14}return 2}function kr(c,u){var v=c.alternate;return v===null?(v=Oi(c.tag,u,c.key,c.mode),v.elementType=c.elementType,v.type=c.type,v.stateNode=c.stateNode,v.alternate=c,c.alternate=v):(v.pendingProps=u,v.type=c.type,v.flags=0,v.subtreeFlags=0,v.deletions=null),v.flags=c.flags&14680064,v.childLanes=c.childLanes,v.lanes=c.lanes,v.child=c.child,v.memoizedProps=c.memoizedProps,v.memoizedState=c.memoizedState,v.updateQueue=c.updateQueue,u=c.dependencies,v.dependencies=u===null?null:{lanes:u.lanes,firstContext:u.firstContext},v.sibling=c.sibling,v.index=c.index,v.ref=c.ref,v}function B0(c,u,v,w,M,L){var V=2;if(w=c,typeof c=="function")X6(c)&&(V=1);else if(typeof c=="string")V=5;else e:switch(c){case h:return Ba(v.children,M,L,u);case f:V=8,M|=8;break;case p:return c=Oi(12,v,u,M|2),c.elementType=p,c.lanes=L,c;case _:return c=Oi(13,v,u,M),c.elementType=_,c.lanes=L,c;case g:return c=Oi(19,v,u,M),c.elementType=g,c.lanes=L,c;case E:return U0(v,M,L,u);default:if(typeof c=="object"&&c!==null)switch(c.$$typeof){case m:V=10;break e;case y:V=9;break e;case b:V=11;break e;case x:V=14;break e;case S:V=16,w=null;break e}throw Error(s(130,c==null?c:typeof c,""))}return u=Oi(V,v,u,M),u.elementType=c,u.type=w,u.lanes=L,u}function Ba(c,u,v,w){return c=Oi(7,c,w,u),c.lanes=v,c}function U0(c,u,v,w){return c=Oi(22,c,w,u),c.elementType=E,c.lanes=v,c.stateNode={},c}function Y6(c,u,v){return c=Oi(6,c,null,u),c.lanes=v,c}function q6(c,u,v){return u=Oi(4,c.children!==null?c.children:[],c.key,u),u.lanes=v,u.stateNode={containerInfo:c.containerInfo,pendingChildren:null,implementation:c.implementation},u}function hE(c,u,v,w,M){this.tag=u,this.containerInfo=c,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=pt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=pn(0),this.expirationTimes=pn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=pn(0),this.identifierPrefix=w,this.onRecoverableError=M,Ne&&(this.mutableSourceEagerHydrationData=null)}function Vp(c,u,v,w,M,L,V,te,be){return c=new hE(c,u,v,te,be),u===1?(u=1,L===!0&&(u|=8)):u=0,L=Oi(3,null,null,u),c.current=L,L.stateNode=c,L.memoizedState={element:w,isDehydrated:v,cache:null,transitions:null},i6(L),c}function Gp(c){if(!c)return U;c=c._reactInternals;e:{if(Y(c)!==c||c.tag!==1)throw Error(s(170));var u=c;do{switch(u.tag){case 3:u=u.stateNode.context;break e;case 1:if(Rt(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}}u=u.return}while(u!==null);throw Error(s(171))}if(c.tag===1){var v=c.type;if(Rt(v))return ge(c,v,u)}return u}function Wp(c){var u=c._reactInternals;if(u===void 0)throw typeof c.render=="function"?Error(s(188)):(c=Object.keys(c).join(","),Error(s(268,c)));return c=ee(u),c===null?null:c.stateNode}function Xp(c,u){if(c=c.memoizedState,c!==null&&c.dehydrated!==null){var v=c.retryLane;c.retryLane=v!==0&&v<u?v:u}}function $6(c,u){Xp(c,u),(c=c.alternate)&&Xp(c,u)}function fE(c){return c=ee(c),c===null?null:c.stateNode}function pE(){return null}return t.attemptContinuousHydration=function(c){if(c.tag===13){var u=Hn();Di(c,134217728,u),$6(c,134217728)}},t.attemptHydrationAtCurrentPriority=function(c){if(c.tag===13){var u=Hn(),v=Ar(c);Di(c,v,u),$6(c,v)}},t.attemptSynchronousHydration=function(c){switch(c.tag){case 3:var u=c.stateNode;if(u.current.memoizedState.isDehydrated){var v=ft(u.pendingLanes);v!==0&&(_1(u,v|1),ri(u,u1()),!(e1&6)&&(Ks(),x2()))}break;case 13:var w=Hn();Np(function(){return Di(c,1,w)}),$6(c,1)}},t.batchedUpdates=function(c,u){var v=e1;e1|=1;try{return c(u)}finally{e1=v,e1===0&&(Ks(),Z4&&x2())}},t.createComponentSelector=function(c){return{$$typeof:S0,value:c}},t.createContainer=function(c,u,v,w,M,L,V){return Vp(c,u,!1,null,v,w,M,L,V)},t.createHasPseudoClassSelector=function(c){return{$$typeof:M0,value:c}},t.createHydrationContainer=function(c,u,v,w,M,L,V,te,be){return c=Vp(v,w,!0,c,M,L,V,te,be),c.context=Gp(null),v=c.current,w=Hn(),M=Ar(v),L=W2(w,M),L.callback=u??null,Tr(v,L),c.current.lanes=M,q1(c,M,w),ri(c,w),c},t.createPortal=function(c,u,v){var w=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:d,key:w==null?null:""+w,children:c,containerInfo:u,implementation:v}},t.createRoleSelector=function(c){return{$$typeof:E0,value:c}},t.createTestNameSelector=function(c){return{$$typeof:P0,value:c}},t.createTextSelector=function(c){return{$$typeof:T0,value:c}},t.deferredUpdates=function(c){var u=wt,v=$1.transition;try{return $1.transition=null,wt=16,c()}finally{wt=u,$1.transition=v}},t.discreteUpdates=function(c,u,v,w,M){var L=wt,V=$1.transition;try{return $1.transition=null,wt=1,c(u,v,w,M)}finally{wt=L,$1.transition=V,e1===0&&Ks()}},t.findAllNodes=D6,t.findBoundingRects=function(c,u){if(!k)throw Error(s(363));u=D6(c,u),c=[];for(var v=0;v<u.length;v++)c.push(ke(u[v]));for(u=c.length-1;0<u;u--){v=c[u];for(var w=v.x,M=w+v.width,L=v.y,V=L+v.height,te=u-1;0<=te;te--)if(u!==te){var be=c[te],Xe=be.x,_t=Xe+be.width,Gt=be.y,Nt=Gt+be.height;if(w>=Xe&&L>=Gt&&M<=_t&&V<=Nt){c.splice(u,1);break}else if(w!==Xe||v.width!==be.width||Nt<L||Gt>V){if(!(L!==Gt||v.height!==be.height||_t<w||Xe>M)){Xe>w&&(be.width+=Xe-w,be.x=w),_t<M&&(be.width=M-Xe),c.splice(u,1);break}}else{Gt>L&&(be.height+=Gt-L,be.y=L),Nt<V&&(be.height=V-Gt),c.splice(u,1);break}}}return c},t.findHostInstance=Wp,t.findHostInstanceWithNoPortals=function(c){return c=R(c),c=c!==null?q(c):null,c===null?null:c.stateNode},t.findHostInstanceWithWarning=function(c){return Wp(c)},t.flushControlled=function(c){var u=e1;e1|=1;var v=$1.transition,w=wt;try{$1.transition=null,wt=1,c()}finally{wt=w,$1.transition=v,e1=u,e1===0&&(Ks(),x2())}},t.flushPassiveEffects=Oa,t.flushSync=Np,t.focusWithin=function(c,u){if(!k)throw Error(s(363));for(c=k6(c),u=Rp(c,u),u=Array.from(u),c=0;c<u.length;){var v=u[c++];if(!Se(v)){if(v.tag===5&&We(v.stateNode))return!0;for(v=v.child;v!==null;)u.push(v),v=v.sibling}}return!1},t.getCurrentUpdatePriority=function(){return wt},t.getFindAllNodesFailureDescription=function(c,u){if(!k)throw Error(s(363));var v=0,w=[];c=[k6(c),0];for(var M=0;M<c.length;){var L=c[M++],V=c[M++],te=u[V];if((L.tag!==5||!Se(L))&&(I6(L,te)&&(w.push(N6(te)),V++,V>v&&(v=V)),V<u.length))for(L=L.child;L!==null;)c.push(L,V),L=L.sibling}if(v<u.length){for(c=[];v<u.length;v++)c.push(N6(u[v]));return`findAllNodes was able to match part of the selector:
  `+(w.join(" > ")+`

No matching component was found for:
  `)+c.join(" > ")}return null},t.getPublicRootInstance=function(c){if(c=c.current,!c.child)return null;switch(c.child.tag){case 5:return se(c.child.stateNode);default:return c.child.stateNode}},t.injectIntoDevTools=function(c){if(c={bundleType:c.bundleType,version:c.version,rendererPackageName:c.rendererPackageName,rendererConfig:c.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:o.ReactCurrentDispatcher,findHostInstanceByFiber:fE,findFiberByHostInstance:c.findFiberByHostInstance||pE,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")c=!1;else{var u=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(u.isDisabled||!u.supportsFiber)c=!0;else{try{mn=u.inject(c),Ci=u}catch{}c=!!u.checkDCE}}return c},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(c,u,v,w){if(!k)throw Error(s(363));c=D6(c,u);var M=Ke(c,v,w).disconnect;return{disconnect:function(){M()}}},t.registerMutableSourceForHydration=function(c,u){var v=u._getVersion;v=v(u._source),c.mutableSourceEagerHydrationData==null?c.mutableSourceEagerHydrationData=[u,v]:c.mutableSourceEagerHydrationData.push(u,v)},t.runWithPriority=function(c,u){var v=wt;try{return wt=c,u()}finally{wt=v}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(c,u,v,w){var M=u.current,L=Hn(),V=Ar(M);return v=Gp(v),u.context===null?u.context=v:u.pendingContext=v,u=W2(L,V),u.payload={element:c},w=w===void 0?null:w,w!==null&&(u.callback=w),Tr(M,u),c=Di(M,V,L),c!==null&&t0(c,M,V),V},t};QS.exports=FU;var zU=QS.exports;const jU=I4(zU),ff={},HU=n=>void Object.assign(ff,n);function VU(n,e){function t(h,{args:f=[],attach:p,...m},y){let b=`${h[0].toUpperCase()}${h.slice(1)}`,_;if(h==="primitive"){if(m.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const g=m.object;_=Po(g,{type:h,root:y,attach:p,primitive:!0})}else{const g=ff[b];if(!g)throw new Error(`R3F: ${b} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(f))throw new Error("R3F: The args prop must be an array!");_=Po(new g(...f),{type:h,root:y,attach:p,memoizedProps:{args:f}})}return _.__r3f.attach===void 0&&(_ instanceof Zt?_.__r3f.attach="geometry":_ instanceof En&&(_.__r3f.attach="material")),b!=="inject"&&d8(_,m),_}function i(h,f){let p=!1;if(f){var m,y;(m=f.__r3f)!=null&&m.attach?u8(h,f,f.__r3f.attach):f.isObject3D&&h.isObject3D&&(h.add(f),p=!0),p||(y=h.__r3f)==null||y.objects.push(f),f.__r3f||Po(f,{}),f.__r3f.parent=h,p7(f),To(f)}}function r(h,f,p){let m=!1;if(f){var y,b;if((y=f.__r3f)!=null&&y.attach)u8(h,f,f.__r3f.attach);else if(f.isObject3D&&h.isObject3D){f.parent=h,f.dispatchEvent({type:"added"}),h.dispatchEvent({type:"childadded",child:f});const _=h.children.filter(x=>x!==f),g=_.indexOf(p);h.children=[..._.slice(0,g),f,..._.slice(g)],m=!0}m||(b=h.__r3f)==null||b.objects.push(f),f.__r3f||Po(f,{}),f.__r3f.parent=h,p7(f),To(f)}}function a(h,f,p=!1){h&&[...h].forEach(m=>s(f,m,p))}function s(h,f,p){if(f){var m,y,b;if(f.__r3f&&(f.__r3f.parent=null),(m=h.__r3f)!=null&&m.objects&&(h.__r3f.objects=h.__r3f.objects.filter(E=>E!==f)),(y=f.__r3f)!=null&&y.attach)hy(h,f,f.__r3f.attach);else if(f.isObject3D&&h.isObject3D){var _;h.remove(f),(_=f.__r3f)!=null&&_.root&&ZU(v5(f),f)}const x=(b=f.__r3f)==null?void 0:b.primitive,S=!x&&(p===void 0?f.dispose!==null:p);if(!x){var g;a((g=f.__r3f)==null?void 0:g.objects,f,S),a(f.children,f,S)}if(delete f.__r3f,S&&f.dispose&&f.type!=="Scene"){const E=()=>{try{f.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?h7.unstable_scheduleCallback(h7.unstable_IdlePriority,E):E()}To(h)}}function o(h,f,p,m){var y;const b=(y=h.__r3f)==null?void 0:y.parent;if(!b)return;const _=t(f,p,h.__r3f.root);if(h.children){for(const g of h.children)g.__r3f&&i(_,g);h.children=h.children.filter(g=>!g.__r3f)}h.__r3f.objects.forEach(g=>i(_,g)),h.__r3f.objects=[],h.__r3f.autoRemovedBeforeAppend||s(b,h),_.parent&&(_.__r3f.autoRemovedBeforeAppend=!0),i(b,_),_.raycast&&_.__r3f.eventCount&&v5(_).getState().internal.interaction.push(_),[m,m.alternate].forEach(g=>{g!==null&&(g.stateNode=_,g.ref&&(typeof g.ref=="function"?g.ref(_):g.ref.current=_))})}const l=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:jU({createInstance:t,removeChild:s,appendChild:i,appendInitialChild:i,insertBefore:r,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(h,f)=>{if(!f)return;const p=h.getState().scene;p.__r3f&&(p.__r3f.root=h,i(p,f))},removeChildFromContainer:(h,f)=>{f&&s(h.getState().scene,f)},insertInContainerBefore:(h,f,p)=>{if(!f||!p)return;const m=h.getState().scene;m.__r3f&&r(m,f,p)},getRootHostContext:()=>null,getChildHostContext:h=>h,finalizeInitialChildren(h){var f;return!!((f=h==null?void 0:h.__r3f)!=null?f:{}).handlers},prepareUpdate(h,f,p,m){var y;if(((y=h==null?void 0:h.__r3f)!=null?y:{}).primitive&&m.object&&m.object!==h)return[!0];{const{args:_=[],children:g,...x}=m,{args:S=[],children:E,...A}=p;if(!Array.isArray(_))throw new Error("R3F: the args prop must be an array!");if(_.some((C,N)=>C!==S[N]))return[!0];const P=lM(h,x,A,!0);return P.changes.length?[!1,P]:null}},commitUpdate(h,[f,p],m,y,b,_){f?o(h,m,b,_):d8(h,p)},commitMount(h,f,p,m){var y;const b=(y=h.__r3f)!=null?y:{};h.raycast&&b.handlers&&b.eventCount&&v5(h).getState().internal.interaction.push(h)},getPublicInstance:h=>h,prepareForCommit:()=>null,preparePortalMount:h=>Po(h.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(h){var f;const{attach:p,parent:m}=(f=h.__r3f)!=null?f:{};p&&m&&hy(m,h,p),h.isObject3D&&(h.visible=!1),To(h)},unhideInstance(h,f){var p;const{attach:m,parent:y}=(p=h.__r3f)!=null?p:{};m&&y&&u8(y,h,m),(h.isObject3D&&f.visible==null||f.visible)&&(h.visible=!0),To(h)},createTextInstance:l,hideTextInstance:l,unhideTextInstance:l,getCurrentEventPriority:()=>e?e():qo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&A1.fun(performance.now)?performance.now:A1.fun(Date.now)?Date.now:()=>0,scheduleTimeout:A1.fun(setTimeout)?setTimeout:void 0,cancelTimeout:A1.fun(clearTimeout)?clearTimeout:void 0}),applyProps:d8}}var ly,cy;const c8=n=>"colorSpace"in n||"outputColorSpace"in n,nM=()=>{var n;return(n=ff.ColorManagement)!=null?n:null},iM=n=>n&&n.isOrthographicCamera,GU=n=>n&&n.hasOwnProperty("current"),K4=typeof window<"u"&&((ly=window.document)!=null&&ly.createElement||((cy=window.navigator)==null?void 0:cy.product)==="ReactNative")?I.useLayoutEffect:I.useEffect;function rM(n){const e=I.useRef(n);return K4(()=>void(e.current=n),[n]),e}function WU({set:n}){return K4(()=>(n(new Promise(()=>null)),()=>n(!1)),[n]),null}class aM extends I.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}aM.getDerivedStateFromError=()=>({error:!0});const sM="__default",uy=new Map,XU=n=>n&&!!n.memoized&&!!n.changes;function oM(n){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(n)?Math.min(Math.max(n[0],t),n[1]):n}const pl=n=>{var e;return(e=n.__r3f)==null?void 0:e.root.getState()};function v5(n){let e=n.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const A1={obj:n=>n===Object(n)&&!A1.arr(n)&&typeof n!="function",fun:n=>typeof n=="function",str:n=>typeof n=="string",num:n=>typeof n=="number",boo:n=>typeof n=="boolean",und:n=>n===void 0,arr:n=>Array.isArray(n),equ(n,e,{arrays:t="shallow",objects:i="reference",strict:r=!0}={}){if(typeof n!=typeof e||!!n!=!!e)return!1;if(A1.str(n)||A1.num(n))return n===e;const a=A1.obj(n);if(a&&i==="reference")return n===e;const s=A1.arr(n);if(s&&t==="reference")return n===e;if((s||a)&&n===e)return!0;let o;for(o in n)if(!(o in e))return!1;if(a&&t==="shallow"&&i==="shallow"){for(o in r?e:n)if(!A1.equ(n[o],e[o],{strict:r,objects:"reference"}))return!1}else for(o in r?e:n)if(n[o]!==e[o])return!1;if(A1.und(o)){if(s&&n.length===0&&e.length===0||a&&Object.keys(n).length===0&&Object.keys(e).length===0)return!0;if(n!==e)return!1}return!0}};function YU(n){n.dispose&&n.type!=="Scene"&&n.dispose();for(const e in n)e.dispose==null||e.dispose(),delete n[e]}function Po(n,e){const t=n;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},n}function f7(n,e){let t=n;if(e.includes("-")){const i=e.split("-"),r=i.pop();return t=i.reduce((a,s)=>a[s],n),{target:t,key:r}}else return{target:t,key:e}}const dy=/-\d+$/;function u8(n,e,t){if(A1.str(t)){if(dy.test(t)){const a=t.replace(dy,""),{target:s,key:o}=f7(n,a);Array.isArray(s[o])||(s[o]=[])}const{target:i,key:r}=f7(n,t);e.__r3f.previousAttach=i[r],i[r]=e}else e.__r3f.previousAttach=t(n,e)}function hy(n,e,t){var i,r;if(A1.str(t)){const{target:a,key:s}=f7(n,t),o=e.__r3f.previousAttach;o===void 0?delete a[s]:a[s]=o}else(i=e.__r3f)==null||i.previousAttach==null||i.previousAttach(n,e);(r=e.__r3f)==null||delete r.previousAttach}function lM(n,{children:e,key:t,ref:i,...r},{children:a,key:s,ref:o,...l}={},d=!1){var h;const f=(h=n==null?void 0:n.__r3f)!=null?h:{},p=Object.entries(r),m=[];if(d){const b=Object.keys(l);for(let _=0;_<b.length;_++)r.hasOwnProperty(b[_])||p.unshift([b[_],sM+"remove"])}p.forEach(([b,_])=>{var g;if((g=n.__r3f)!=null&&g.primitive&&b==="object"||A1.equ(_,l[b]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(b))return m.push([b,_,!0,[]]);let x=[];b.includes("-")&&(x=b.split("-")),m.push([b,_,!1,x]);for(const S in r){const E=r[S];S.startsWith(`${b}-`)&&m.push([S,E,!1,S.split("-")])}});const y={...r};return f.memoizedProps&&f.memoizedProps.args&&(y.args=f.memoizedProps.args),f.memoizedProps&&f.memoizedProps.attach&&(y.attach=f.memoizedProps.attach),{memoized:y,changes:m}}const qU=typeof process<"u"&&!1;function d8(n,e){var t,i,r;const a=(t=n.__r3f)!=null?t:{},s=a.root,o=(i=s==null||s.getState==null?void 0:s.getState())!=null?i:{},{memoized:l,changes:d}=XU(e)?e:lM(n,e),h=a.eventCount;n.__r3f&&(n.__r3f.memoizedProps=l);for(let p=0;p<d.length;p++){let[m,y,b,_]=d[p];if(c8(n)){const E="srgb",A="srgb-linear";m==="encoding"?(m="colorSpace",y=y===3001?E:A):m==="outputEncoding"&&(m="outputColorSpace",y=y===3001?E:A)}let g=n,x=g[m];if(_.length&&(x=_.reduce((S,E)=>S[E],n),!(x&&x.set))){const[S,...E]=_.reverse();g=E.reverse().reduce((A,P)=>A[P],n),m=S}if(y===sM+"remove")if(g.constructor){let S=uy.get(g.constructor);S||(S=new g.constructor,uy.set(g.constructor,S)),y=S[m]}else y=0;if(b)y?a.handlers[m]=y:delete a.handlers[m],a.eventCount=Object.keys(a.handlers).length;else if(x&&x.set&&(x.copy||x instanceof vs)){if(Array.isArray(y))x.fromArray?x.fromArray(y):x.set(...y);else if(x.copy&&y&&y.constructor&&(qU?x.constructor.name===y.constructor.name:x.constructor===y.constructor))x.copy(y);else if(y!==void 0){const S=x instanceof gt;!S&&x.setScalar?x.setScalar(y):x instanceof vs&&y instanceof vs?x.mask=y.mask:x.set(y),!nM()&&!o.linear&&S&&x.convertSRGBToLinear()}}else if(g[m]=y,g[m]instanceof B1&&g[m].format===Yn&&g[m].type===N2){const S=g[m];c8(S)&&c8(o.gl)?S.colorSpace=o.gl.outputColorSpace:S.encoding=o.gl.outputEncoding}To(n)}if(a.parent&&n.raycast&&h!==a.eventCount){const p=v5(n).getState().internal,m=p.interaction.indexOf(n);m>-1&&p.interaction.splice(m,1),a.eventCount&&p.interaction.push(n)}return!(d.length===1&&d[0][0]==="onUpdate")&&d.length&&(r=n.__r3f)!=null&&r.parent&&p7(n),n}function To(n){var e,t;const i=(e=n.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();i&&i.internal.frames===0&&i.invalidate()}function p7(n){n.onUpdate==null||n.onUpdate(n)}function $U(n,e){n.manual||(iM(n)?(n.left=e.width/-2,n.right=e.width/2,n.top=e.height/2,n.bottom=e.height/-2):n.aspect=e.width/e.height,n.updateProjectionMatrix(),n.updateMatrixWorld())}function qc(n){return(n.eventObject||n.object).uuid+"/"+n.index+n.instanceId}function KU(){var n;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return qo.DefaultEventPriority;switch((n=e.event)==null?void 0:n.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return qo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return qo.ContinuousEventPriority;default:return qo.DefaultEventPriority}}function cM(n,e,t,i){const r=t.get(e);r&&(t.delete(e),t.size===0&&(n.delete(i),r.target.releasePointerCapture(i)))}function ZU(n,e){const{internal:t}=n.getState();t.interaction=t.interaction.filter(i=>i!==e),t.initialHits=t.initialHits.filter(i=>i!==e),t.hovered.forEach((i,r)=>{(i.eventObject===e||i.object===e)&&t.hovered.delete(r)}),t.capturedMap.forEach((i,r)=>{cM(t.capturedMap,e,i,r)})}function JU(n){function e(l){const{internal:d}=n.getState(),h=l.offsetX-d.initialClick[0],f=l.offsetY-d.initialClick[1];return Math.round(Math.sqrt(h*h+f*f))}function t(l){return l.filter(d=>["Move","Over","Enter","Out","Leave"].some(h=>{var f;return(f=d.__r3f)==null?void 0:f.handlers["onPointer"+h]}))}function i(l,d){const h=n.getState(),f=new Set,p=[],m=d?d(h.internal.interaction):h.internal.interaction;for(let g=0;g<m.length;g++){const x=pl(m[g]);x&&(x.raycaster.camera=void 0)}h.previousRoot||h.events.compute==null||h.events.compute(l,h);function y(g){const x=pl(g);if(!x||!x.events.enabled||x.raycaster.camera===null)return[];if(x.raycaster.camera===void 0){var S;x.events.compute==null||x.events.compute(l,x,(S=x.previousRoot)==null?void 0:S.getState()),x.raycaster.camera===void 0&&(x.raycaster.camera=null)}return x.raycaster.camera?x.raycaster.intersectObject(g,!0):[]}let b=m.flatMap(y).sort((g,x)=>{const S=pl(g.object),E=pl(x.object);return!S||!E?g.distance-x.distance:E.events.priority-S.events.priority||g.distance-x.distance}).filter(g=>{const x=qc(g);return f.has(x)?!1:(f.add(x),!0)});h.events.filter&&(b=h.events.filter(b,h));for(const g of b){let x=g.object;for(;x;){var _;(_=x.__r3f)!=null&&_.eventCount&&p.push({...g,eventObject:x}),x=x.parent}}if("pointerId"in l&&h.internal.capturedMap.has(l.pointerId))for(let g of h.internal.capturedMap.get(l.pointerId).values())f.has(qc(g.intersection))||p.push(g.intersection);return p}function r(l,d,h,f){const p=n.getState();if(l.length){const m={stopped:!1};for(const y of l){const b=pl(y.object)||p,{raycaster:_,pointer:g,camera:x,internal:S}=b,E=new j(g.x,g.y,0).unproject(x),A=T=>{var R,ee;return(R=(ee=S.capturedMap.get(T))==null?void 0:ee.has(y.eventObject))!=null?R:!1},P=T=>{const R={intersection:y,target:d.target};S.capturedMap.has(T)?S.capturedMap.get(T).set(y.eventObject,R):S.capturedMap.set(T,new Map([[y.eventObject,R]])),d.target.setPointerCapture(T)},C=T=>{const R=S.capturedMap.get(T);R&&cM(S.capturedMap,y.eventObject,R,T)};let N={};for(let T in d){let R=d[T];typeof R!="function"&&(N[T]=R)}let Y={...y,...N,pointer:g,intersections:l,stopped:m.stopped,delta:h,unprojectedPoint:E,ray:_.ray,camera:x,stopPropagation(){const T="pointerId"in d&&S.capturedMap.get(d.pointerId);if((!T||T.has(y.eventObject))&&(Y.stopped=m.stopped=!0,S.hovered.size&&Array.from(S.hovered.values()).find(R=>R.eventObject===y.eventObject))){const R=l.slice(0,l.indexOf(y));a([...R,y])}},target:{hasPointerCapture:A,setPointerCapture:P,releasePointerCapture:C},currentTarget:{hasPointerCapture:A,setPointerCapture:P,releasePointerCapture:C},nativeEvent:d};if(f(Y),m.stopped===!0)break}}return l}function a(l){const{internal:d}=n.getState();for(const h of d.hovered.values())if(!l.length||!l.find(f=>f.object===h.object&&f.index===h.index&&f.instanceId===h.instanceId)){const p=h.eventObject.__r3f,m=p==null?void 0:p.handlers;if(d.hovered.delete(qc(h)),p!=null&&p.eventCount){const y={...h,intersections:l};m.onPointerOut==null||m.onPointerOut(y),m.onPointerLeave==null||m.onPointerLeave(y)}}}function s(l,d){for(let h=0;h<d.length;h++){const f=d[h].__r3f;f==null||f.handlers.onPointerMissed==null||f.handlers.onPointerMissed(l)}}function o(l){switch(l){case"onPointerLeave":case"onPointerCancel":return()=>a([]);case"onLostPointerCapture":return d=>{const{internal:h}=n.getState();"pointerId"in d&&h.capturedMap.has(d.pointerId)&&requestAnimationFrame(()=>{h.capturedMap.has(d.pointerId)&&(h.capturedMap.delete(d.pointerId),a([]))})}}return function(h){const{onPointerMissed:f,internal:p}=n.getState();p.lastEvent.current=h;const m=l==="onPointerMove",y=l==="onClick"||l==="onContextMenu"||l==="onDoubleClick",_=i(h,m?t:void 0),g=y?e(h):0;l==="onPointerDown"&&(p.initialClick=[h.offsetX,h.offsetY],p.initialHits=_.map(S=>S.eventObject)),y&&!_.length&&g<=2&&(s(h,p.interaction),f&&f(h)),m&&a(_);function x(S){const E=S.eventObject,A=E.__r3f,P=A==null?void 0:A.handlers;if(A!=null&&A.eventCount)if(m){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const C=qc(S),N=p.hovered.get(C);N?N.stopped&&S.stopPropagation():(p.hovered.set(C,S),P.onPointerOver==null||P.onPointerOver(S),P.onPointerEnter==null||P.onPointerEnter(S))}P.onPointerMove==null||P.onPointerMove(S)}else{const C=P[l];C?(!y||p.initialHits.includes(E))&&(s(h,p.interaction.filter(N=>!p.initialHits.includes(N))),C(S)):y&&p.initialHits.includes(E)&&s(h,p.interaction.filter(N=>!p.initialHits.includes(N)))}}r(_,h,g,x)}}return{handlePointer:o}}const uM=n=>!!(n!=null&&n.render),dM=I.createContext(null),QU=(n,e)=>{const t=UU((o,l)=>{const d=new j,h=new j,f=new j;function p(g=l().camera,x=h,S=l().size){const{width:E,height:A,top:P,left:C}=S,N=E/A;x instanceof j?f.copy(x):f.set(...x);const Y=g.getWorldPosition(d).distanceTo(f);if(iM(g))return{width:E/g.zoom,height:A/g.zoom,top:P,left:C,factor:1,distance:Y,aspect:N};{const T=g.fov*Math.PI/180,R=2*Math.tan(T/2)*Y,ee=R*(E/A);return{width:ee,height:R,top:P,left:C,factor:E/ee,distance:Y,aspect:N}}}let m;const y=g=>o(x=>({performance:{...x.performance,current:g}})),b=new Le;return{set:o,get:l,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(g=1)=>n(l(),g),advance:(g,x)=>e(g,x,l()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new of,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const g=l();m&&clearTimeout(m),g.performance.current!==g.performance.min&&y(g.performance.min),m=setTimeout(()=>y(l().performance.max),g.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:p},setEvents:g=>o(x=>({...x,events:{...x.events,...g}})),setSize:(g,x,S,E,A)=>{const P=l().camera,C={width:g,height:x,top:E||0,left:A||0,updateStyle:S};o(N=>({size:C,viewport:{...N.viewport,...p(P,h,C)}}))},setDpr:g=>o(x=>{const S=oM(g);return{viewport:{...x.viewport,dpr:S,initialDpr:x.viewport.initialDpr||S}}}),setFrameloop:(g="always")=>{const x=l().clock;x.stop(),x.elapsedTime=0,g!=="never"&&(x.start(),x.elapsedTime=0),o(()=>({frameloop:g}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:I.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(g,x,S)=>{const E=l().internal;return E.priority=E.priority+(x>0?1:0),E.subscribers.push({ref:g,priority:x,store:S}),E.subscribers=E.subscribers.sort((A,P)=>A.priority-P.priority),()=>{const A=l().internal;A!=null&&A.subscribers&&(A.priority=A.priority-(x>0?1:0),A.subscribers=A.subscribers.filter(P=>P.ref!==g))}}}}}),i=t.getState();let r=i.size,a=i.viewport.dpr,s=i.camera;return t.subscribe(()=>{const{camera:o,size:l,viewport:d,gl:h,set:f}=t.getState();if(l.width!==r.width||l.height!==r.height||d.dpr!==a){var p;r=l,a=d.dpr,$U(o,l),h.setPixelRatio(d.dpr);const m=(p=l.updateStyle)!=null?p:typeof HTMLCanvasElement<"u"&&h.domElement instanceof HTMLCanvasElement;h.setSize(l.width,l.height,m)}o!==s&&(s=o,f(m=>({viewport:{...m.viewport,...m.viewport.getCurrentViewport(o)}})))}),t.subscribe(o=>n(o)),t};let $c,eF=new Set,tF=new Set,nF=new Set;function h8(n,e){if(n.size)for(const{callback:t}of n.values())t(e)}function ml(n,e){switch(n){case"before":return h8(eF,e);case"after":return h8(tF,e);case"tail":return h8(nF,e)}}let f8,p8;function m8(n,e,t){let i=e.clock.getDelta();for(e.frameloop==="never"&&typeof n=="number"&&(i=n-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=n),f8=e.internal.subscribers,$c=0;$c<f8.length;$c++)p8=f8[$c],p8.ref.current(p8.store.getState(),i,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function iF(n){let e=!1,t=!1,i,r,a;function s(d){r=requestAnimationFrame(s),e=!0,i=0,ml("before",d),t=!0;for(const f of n.values()){var h;a=f.store.getState(),a.internal.active&&(a.frameloop==="always"||a.internal.frames>0)&&!((h=a.gl.xr)!=null&&h.isPresenting)&&(i+=m8(d,a))}if(t=!1,ml("after",d),i===0)return ml("tail",d),e=!1,cancelAnimationFrame(r)}function o(d,h=1){var f;if(!d)return n.forEach(p=>o(p.store.getState(),h));(f=d.gl.xr)!=null&&f.isPresenting||!d.internal.active||d.frameloop==="never"||(h>1?d.internal.frames=Math.min(60,d.internal.frames+h):t?d.internal.frames=2:d.internal.frames=1,e||(e=!0,requestAnimationFrame(s)))}function l(d,h=!0,f,p){if(h&&ml("before",d),f)m8(d,f,p);else for(const m of n.values())m8(d,m.store.getState());h&&ml("after",d)}return{loop:s,invalidate:o,advance:l}}function hM(){const n=I.useContext(dM);if(!n)throw new Error("R3F: Hooks can only be used within the Canvas component!");return n}function Vr(n=t=>t,e){return hM()(n,e)}function fM(n,e=0){const t=hM(),i=t.getState().internal.subscribe,r=rM(n);return K4(()=>i(r,e,t),[e,i,t]),null}const m3=new Map,{invalidate:fy,advance:py}=iF(m3),{reconciler:K5,applyProps:wo}=VU(m3,KU),bo={objects:"shallow",strict:!1},rF=(n,e)=>{const t=typeof n=="function"?n(e):n;return uM(t)?t:new V9({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...n})};function aF(n,e){const t=typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement;if(e){const{width:i,height:r,top:a,left:s,updateStyle:o=t}=e;return{width:i,height:r,top:a,left:s,updateStyle:o}}else if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement&&n.parentElement){const{width:i,height:r,top:a,left:s}=n.parentElement.getBoundingClientRect();return{width:i,height:r,top:a,left:s,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas)return{width:n.width,height:n.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function sF(n){const e=m3.get(n),t=e==null?void 0:e.fiber,i=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const r=typeof reportError=="function"?reportError:console.error,a=i||QU(fy,py),s=t||K5.createContainer(a,qo.ConcurrentRoot,null,!1,null,"",r,null);e||m3.set(n,{fiber:s,store:a});let o,l=!1,d;return{configure(h={}){let{gl:f,size:p,scene:m,events:y,onCreated:b,shadows:_=!1,linear:g=!1,flat:x=!1,legacy:S=!1,orthographic:E=!1,frameloop:A="always",dpr:P=[1,2],performance:C,raycaster:N,camera:Y,onPointerMissed:T}=h,R=a.getState(),ee=R.gl;R.gl||R.set({gl:ee=rF(f,n)});let he=R.raycaster;he||R.set({raycaster:he=new $S});const{params:q,...ue}=N||{};if(A1.equ(ue,he,bo)||wo(he,{...ue}),A1.equ(q,he.params,bo)||wo(he,{params:{...he.params,...q}}),!R.camera||R.camera===d&&!A1.equ(d,Y,bo)){d=Y;const Z=Y instanceof V4,re=Z?Y:E?new dr(0,0,0,0,.1,1e3):new Y1(75,0,.1,1e3);Z||(re.position.z=5,Y&&wo(re,Y),!R.camera&&!(Y!=null&&Y.rotation)&&re.lookAt(0,0,0)),R.set({camera:re}),he.camera=re}if(!R.scene){let Z;m instanceof q5?Z=m:(Z=new q5,m&&wo(Z,m)),R.set({scene:Po(Z)})}if(!R.xr){var se;const Z=(je,ce)=>{const Ee=a.getState();Ee.frameloop!=="never"&&py(je,!0,Ee,ce)},re=()=>{const je=a.getState();je.gl.xr.enabled=je.gl.xr.isPresenting,je.gl.xr.setAnimationLoop(je.gl.xr.isPresenting?Z:null),je.gl.xr.isPresenting||fy(je)},_e={connect(){const je=a.getState().gl;je.xr.addEventListener("sessionstart",re),je.xr.addEventListener("sessionend",re)},disconnect(){const je=a.getState().gl;je.xr.removeEventListener("sessionstart",re),je.xr.removeEventListener("sessionend",re)}};typeof((se=ee.xr)==null?void 0:se.addEventListener)=="function"&&_e.connect(),R.set({xr:_e})}if(ee.shadowMap){const Z=ee.shadowMap.enabled,re=ee.shadowMap.type;if(ee.shadowMap.enabled=!!_,A1.boo(_))ee.shadowMap.type=Ol;else if(A1.str(_)){var ve;const _e={basic:jw,percentage:bu,soft:Ol,variance:r2};ee.shadowMap.type=(ve=_e[_])!=null?ve:Ol}else A1.obj(_)&&Object.assign(ee.shadowMap,_);(Z!==ee.shadowMap.enabled||re!==ee.shadowMap.type)&&(ee.shadowMap.needsUpdate=!0)}const z=nM();z&&("enabled"in z?z.enabled=!S:"legacyMode"in z&&(z.legacyMode=S)),l||wo(ee,{outputEncoding:g?3e3:3001,toneMapping:x?I2:S9}),R.legacy!==S&&R.set(()=>({legacy:S})),R.linear!==g&&R.set(()=>({linear:g})),R.flat!==x&&R.set(()=>({flat:x})),f&&!A1.fun(f)&&!uM(f)&&!A1.equ(f,ee,bo)&&wo(ee,f),y&&!R.events.handlers&&R.set({events:y(a)});const K=aF(n,p);return A1.equ(K,R.size,bo)||R.setSize(K.width,K.height,K.updateStyle,K.top,K.left),P&&R.viewport.dpr!==oM(P)&&R.setDpr(P),R.frameloop!==A&&R.setFrameloop(A),R.onPointerMissed||R.set({onPointerMissed:T}),C&&!A1.equ(C,R.performance,bo)&&R.set(Z=>({performance:{...Z.performance,...C}})),o=b,l=!0,this},render(h){return l||this.configure(),K5.updateContainer(I.createElement(oF,{store:a,children:h,onCreated:o,rootElement:n}),s,null,()=>{}),a},unmount(){pM(n)}}}function oF({store:n,children:e,onCreated:t,rootElement:i}){return K4(()=>{const r=n.getState();r.set(a=>({internal:{...a.internal,active:!0}})),t&&t(r),n.getState().events.connected||r.events.connect==null||r.events.connect(i)},[]),I.createElement(dM.Provider,{value:n},e)}function pM(n,e){const t=m3.get(n),i=t==null?void 0:t.fiber;if(i){const r=t==null?void 0:t.store.getState();r&&(r.internal.active=!1),K5.updateContainer(null,i,null,()=>{r&&setTimeout(()=>{try{var a,s,o,l;r.events.disconnect==null||r.events.disconnect(),(a=r.gl)==null||(s=a.renderLists)==null||s.dispose==null||s.dispose(),(o=r.gl)==null||o.forceContextLoss==null||o.forceContextLoss(),(l=r.gl)!=null&&l.xr&&r.xr.disconnect(),YU(r),m3.delete(n),e&&e(n)}catch{}},500)})}}K5.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:I.version});function m7(n,e,t){var i,r,a,s,o;e==null&&(e=100);function l(){var h=Date.now()-s;h<e&&h>=0?i=setTimeout(l,e-h):(i=null,t||(o=n.apply(a,r),a=r=null))}var d=function(){a=this,r=arguments,s=Date.now();var h=t&&!i;return i||(i=setTimeout(l,e)),h&&(o=n.apply(a,r),a=r=null),o};return d.clear=function(){i&&(clearTimeout(i),i=null)},d.flush=function(){i&&(o=n.apply(a,r),a=r=null,clearTimeout(i),i=null)},d}m7.debounce=m7;var lF=m7;const my=I4(lF);function cF(n){let{debounce:e,scroll:t,polyfill:i,offsetSize:r}=n===void 0?{debounce:0,scroll:!1,offsetSize:!1}:n;const a=i||(typeof window>"u"?class{}:window.ResizeObserver);if(!a)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,o]=I.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),l=I.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s}),d=e?typeof e=="number"?e:e.scroll:null,h=e?typeof e=="number"?e:e.resize:null,f=I.useRef(!1);I.useEffect(()=>(f.current=!0,()=>void(f.current=!1)));const[p,m,y]=I.useMemo(()=>{const x=()=>{if(!l.current.element)return;const{left:S,top:E,width:A,height:P,bottom:C,right:N,x:Y,y:T}=l.current.element.getBoundingClientRect(),R={left:S,top:E,width:A,height:P,bottom:C,right:N,x:Y,y:T};l.current.element instanceof HTMLElement&&r&&(R.height=l.current.element.offsetHeight,R.width=l.current.element.offsetWidth),Object.freeze(R),f.current&&!fF(l.current.lastBounds,R)&&o(l.current.lastBounds=R)};return[x,h?my(x,h):x,d?my(x,d):x]},[o,r,d,h]);function b(){l.current.scrollContainers&&(l.current.scrollContainers.forEach(x=>x.removeEventListener("scroll",y,!0)),l.current.scrollContainers=null),l.current.resizeObserver&&(l.current.resizeObserver.disconnect(),l.current.resizeObserver=null)}function _(){l.current.element&&(l.current.resizeObserver=new a(y),l.current.resizeObserver.observe(l.current.element),t&&l.current.scrollContainers&&l.current.scrollContainers.forEach(x=>x.addEventListener("scroll",y,{capture:!0,passive:!0})))}const g=x=>{!x||x===l.current.element||(b(),l.current.element=x,l.current.scrollContainers=mM(x),_())};return dF(y,!!t),uF(m),I.useEffect(()=>{b(),_()},[t,y,m]),I.useEffect(()=>b,[]),[g,s,p]}function uF(n){I.useEffect(()=>{const e=n;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[n])}function dF(n,e){I.useEffect(()=>{if(e){const t=n;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[n,e])}function mM(n){const e=[];if(!n||n===document.body)return e;const{overflow:t,overflowX:i,overflowY:r}=window.getComputedStyle(n);return[t,i,r].some(a=>a==="auto"||a==="scroll")&&e.push(n),[...e,...mM(n.parentElement)]}const hF=["x","y","top","bottom","left","right","width","height"],fF=(n,e)=>hF.every(t=>n[t]===e[t]);var pF=Object.defineProperty,mF=Object.defineProperties,gF=Object.getOwnPropertyDescriptors,gy=Object.getOwnPropertySymbols,vF=Object.prototype.hasOwnProperty,yF=Object.prototype.propertyIsEnumerable,vy=(n,e,t)=>e in n?pF(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,yy=(n,e)=>{for(var t in e||(e={}))vF.call(e,t)&&vy(n,t,e[t]);if(gy)for(var t of gy(e))yF.call(e,t)&&vy(n,t,e[t]);return n},_F=(n,e)=>mF(n,gF(e));function gM(n,e,t){if(!n)return;if(t(n)===!0)return n;let i=e?n.return:n.child;for(;i;){const r=gM(i,e,t);if(r)return r;i=e?null:i.sibling}}function vM(n){try{return Object.defineProperties(n,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return n}}const pf=vM(I.createContext(null));class yM extends I.Component{render(){return I.createElement(pf.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:_y,ReactCurrentDispatcher:xy}=I.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function xF(){const n=I.useContext(pf);if(n===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=I.useId();return I.useMemo(()=>{for(const i of[_y==null?void 0:_y.current,n,n==null?void 0:n.alternate]){if(!i)continue;const r=gM(i,!1,a=>{let s=a.memoizedState;for(;s;){if(s.memoizedState===e)return!0;s=s.next}});if(r)return r}},[n,e])}function wF(){var n;const e=xF(),[t]=I.useState(()=>new Map);t.clear();let i=e;for(;i;){if(i.type&&typeof i.type=="object"){const a=i.type._context===void 0&&i.type.Provider===i.type?i.type:i.type._context;a&&a!==pf&&!t.has(a)&&t.set(a,(n=xy==null?void 0:xy.current)==null?void 0:n.readContext(vM(a)))}i=i.return}return t}function bF(){const n=wF();return I.useMemo(()=>Array.from(n.keys()).reduce((e,t)=>i=>I.createElement(e,null,I.createElement(t.Provider,_F(yy({},i),{value:n.get(t)}))),e=>I.createElement(yM,yy({},e))),[n])}const g8={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function SF(n){const{handlePointer:e}=JU(n);return{priority:1,enabled:!0,compute(t,i,r){i.pointer.set(t.offsetX/i.size.width*2-1,-(t.offsetY/i.size.height)*2+1),i.raycaster.setFromCamera(i.pointer,i.camera)},connected:void 0,handlers:Object.keys(g8).reduce((t,i)=>({...t,[i]:e(i)}),{}),update:()=>{var t;const{events:i,internal:r}=n.getState();(t=r.lastEvent)!=null&&t.current&&i.handlers&&i.handlers.onPointerMove(r.lastEvent.current)},connect:t=>{var i;const{set:r,events:a}=n.getState();a.disconnect==null||a.disconnect(),r(s=>({events:{...s.events,connected:t}})),Object.entries((i=a.handlers)!=null?i:[]).forEach(([s,o])=>{const[l,d]=g8[s];t.addEventListener(l,o,{passive:d})})},disconnect:()=>{const{set:t,events:i}=n.getState();if(i.connected){var r;Object.entries((r=i.handlers)!=null?r:[]).forEach(([a,s])=>{if(i&&i.connected instanceof HTMLElement){const[o]=g8[a];i.connected.removeEventListener(o,s)}}),t(a=>({events:{...a.events,connected:void 0}}))}}}}const MF=I.forwardRef(function({children:e,fallback:t,resize:i,style:r,gl:a,events:s=SF,eventSource:o,eventPrefix:l,shadows:d,linear:h,flat:f,legacy:p,orthographic:m,frameloop:y,dpr:b,performance:_,raycaster:g,camera:x,scene:S,onPointerMissed:E,onCreated:A,...P},C){I.useMemo(()=>HU(_U),[]);const N=bF(),[Y,T]=cF({scroll:!0,debounce:{scroll:50,resize:0},...i}),R=I.useRef(null),ee=I.useRef(null);I.useImperativeHandle(C,()=>R.current);const he=rM(E),[q,ue]=I.useState(!1),[se,ve]=I.useState(!1);if(q)throw q;if(se)throw se;const z=I.useRef(null);K4(()=>{const Z=R.current;T.width>0&&T.height>0&&Z&&(z.current||(z.current=sF(Z)),z.current.configure({gl:a,events:s,shadows:d,linear:h,flat:f,legacy:p,orthographic:m,frameloop:y,dpr:b,performance:_,raycaster:g,camera:x,scene:S,size:T,onPointerMissed:(...re)=>he.current==null?void 0:he.current(...re),onCreated:re=>{re.events.connect==null||re.events.connect(o?GU(o)?o.current:o:ee.current),l&&re.setEvents({compute:(_e,je)=>{const ce=_e[l+"X"],Ee=_e[l+"Y"];je.pointer.set(ce/je.size.width*2-1,-(Ee/je.size.height)*2+1),je.raycaster.setFromCamera(je.pointer,je.camera)}}),A==null||A(re)}}),z.current.render(I.createElement(N,null,I.createElement(aM,{set:ve},I.createElement(I.Suspense,{fallback:I.createElement(WU,{set:ue})},e)))))}),I.useEffect(()=>{const Z=R.current;if(Z)return()=>pM(Z)},[]);const K=o?"none":"auto";return I.createElement("div",u3({ref:ee,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:K,...r}},P),I.createElement("div",{ref:Y,style:{width:"100%",height:"100%"}},I.createElement("canvas",{ref:R,style:{display:"block"}},t)))}),EF=I.forwardRef(function(e,t){return I.createElement(yM,null,I.createElement(MF,u3({},e,{ref:t})))});function PF(){return fM(()=>hf.update()),null}function TF(n){return xe.jsx("div",{className:`box ${n.className||""}`,children:n.children})}function LF(){if(console&&console.warn){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];typeof e[0]=="string"&&(e[0]=`react-i18next:: ${e[0]}`),console.warn(...e)}}const wy={};function g7(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];typeof e[0]=="string"&&wy[e[0]]||(typeof e[0]=="string"&&(wy[e[0]]=new Date),LF(...e))}const _M=(n,e)=>()=>{if(n.isInitialized)e();else{const t=()=>{setTimeout(()=>{n.off("initialized",t)},0),e()};n.on("initialized",t)}};function by(n,e,t){n.loadNamespaces(e,_M(n,t))}function Sy(n,e,t,i){typeof t=="string"&&(t=[t]),t.forEach(r=>{n.options.ns.indexOf(r)<0&&n.options.ns.push(r)}),n.loadLanguages(e,_M(n,i))}function CF(n,e){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};const i=e.languages[0],r=e.options?e.options.fallbackLng:!1,a=e.languages[e.languages.length-1];if(i.toLowerCase()==="cimode")return!0;const s=(o,l)=>{const d=e.services.backendConnector.state[`${o}|${l}`];return d===-1||d===2};return t.bindI18n&&t.bindI18n.indexOf("languageChanging")>-1&&e.services.backendConnector.backend&&e.isLanguageChangingTo&&!s(e.isLanguageChangingTo,n)?!1:!!(e.hasResourceBundle(i,n)||!e.services.backendConnector.backend||e.options.resources&&!e.options.partialBundledLanguages||s(i,n)&&(!r||s(a,n)))}function AF(n,e){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};return!e.languages||!e.languages.length?(g7("i18n.languages were undefined or empty",e.languages),!0):e.options.ignoreJSONStructure!==void 0?e.hasLoadedNamespace(n,{lng:t.lng,precheck:(r,a)=>{if(t.bindI18n&&t.bindI18n.indexOf("languageChanging")>-1&&r.services.backendConnector.backend&&r.isLanguageChangingTo&&!a(r.isLanguageChangingTo,n))return!1}}):CF(n,e,t)}const RF=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,kF={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"',"&nbsp;":" ","&#160;":" ","&copy;":"©","&#169;":"©","&reg;":"®","&#174;":"®","&hellip;":"…","&#8230;":"…","&#x2F;":"/","&#47;":"/"},IF=n=>kF[n],NF=n=>n.replace(RF,IF);let v7={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0,unescape:NF};function DF(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};v7={...v7,...n}}function OF(){return v7}let xM;function BF(n){xM=n}function UF(){return xM}const FF={type:"3rdParty",init(n){DF(n.options.react),BF(n)}},zF=I.createContext();class jF{constructor(){this.usedNamespaces={}}addUsedNamespaces(e){e.forEach(t=>{this.usedNamespaces[t]||(this.usedNamespaces[t]=!0)})}getUsedNamespaces(){return Object.keys(this.usedNamespaces)}}const HF=(n,e)=>{const t=I.useRef();return I.useEffect(()=>{t.current=e?t.current:n},[n,e]),t.current};function wM(n,e,t,i){return n.getFixedT(e,t,i)}function VF(n,e,t,i){return I.useCallback(wM(n,e,t,i),[n,e,t,i])}function GF(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{i18n:t}=e,{i18n:i,defaultNS:r}=I.useContext(zF)||{},a=t||i||UF();if(a&&!a.reportNamespaces&&(a.reportNamespaces=new jF),!a){g7("You will need to pass in an i18next instance by using initReactI18next");const E=(P,C)=>typeof C=="string"?C:C&&typeof C=="object"&&typeof C.defaultValue=="string"?C.defaultValue:Array.isArray(P)?P[P.length-1]:P,A=[E,{},!1];return A.t=E,A.i18n={},A.ready=!1,A}a.options.react&&a.options.react.wait!==void 0&&g7("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");const s={...OF(),...a.options.react,...e},{useSuspense:o,keyPrefix:l}=s;let d=n||r||a.options&&a.options.defaultNS;d=typeof d=="string"?[d]:d||["translation"],a.reportNamespaces.addUsedNamespaces&&a.reportNamespaces.addUsedNamespaces(d);const h=(a.isInitialized||a.initializedStoreOnce)&&d.every(E=>AF(E,a,s)),f=VF(a,e.lng||null,s.nsMode==="fallback"?d:d[0],l),p=()=>f,m=()=>wM(a,e.lng||null,s.nsMode==="fallback"?d:d[0],l),[y,b]=I.useState(p);let _=d.join();e.lng&&(_=`${e.lng}${_}`);const g=HF(_),x=I.useRef(!0);I.useEffect(()=>{const{bindI18n:E,bindI18nStore:A}=s;x.current=!0,!h&&!o&&(e.lng?Sy(a,e.lng,d,()=>{x.current&&b(m)}):by(a,d,()=>{x.current&&b(m)})),h&&g&&g!==_&&x.current&&b(m);function P(){x.current&&b(m)}return E&&a&&a.on(E,P),A&&a&&a.store.on(A,P),()=>{x.current=!1,E&&a&&E.split(" ").forEach(C=>a.off(C,P)),A&&a&&A.split(" ").forEach(C=>a.store.off(C,P))}},[a,_]),I.useEffect(()=>{x.current&&h&&b(p)},[a,l,h]);const S=[y,a,h];if(S.t=y,S.i18n=a,S.ready=h,h||!h&&!o)return S;throw new Promise(E=>{e.lng?Sy(a,e.lng,d,()=>E()):by(a,d,()=>E())})}function As(n){const{i18n:e,t}=GF(n),i=e.language;return{t,currentLanguage:i,changeLanguage:a=>{e.changeLanguage(a)}}}function Z5(n,e){return!e.includes("en")&&!e.includes("it")?"Unsupported language":n?new Intl.DateTimeFormat(e,{weekday:"short",day:"numeric",month:"short",year:"numeric"}).format(n):"No date"}function bM({className:n="",city:e,travel:t,idx:i,isClickable:r=!1}){const a=As([]).currentLanguage,s=_a(),{t:o}=As(["home"]);return xe.jsxs("div",{className:`city-card ${r?"city-card--clickable":"city-card--not-clickable"}`,onClick:()=>r&&s(`/gallery/${e.name}/${i}`),children:[xe.jsxs("div",{className:`city-card__top ${n} ${e.name} ${e.name}-${i}`,children:[xe.jsx("h3",{children:e.getName(o)}),xe.jsx(Uw,{countryName:e.country.id})]}),xe.jsxs("div",{className:"city-card__content",children:[xe.jsxs("div",{className:"travel-card__info",children:[xe.jsx(nw,{className:"travel-card__icon"}),xe.jsx("p",{children:Z5(t.sDate,a)})]}),xe.jsxs("div",{className:"travel-card__info",children:[xe.jsx(tw,{className:"travel-card__icon"}),xe.jsx("p",{children:Z5(t.eDate,a)})]})]})]})}function WF({country:{geometry:n,properties:e},isDarkTheme:t=!1,visitedCountries:i={}}){const r=n.type==="MultiPolygon",a=Object.keys(i).includes(e.name.replace(" ",""))?i[e.name.replace(" ","")].fillColor:t?"#2c2c2c":"#ffffff",s={key:e.name,keyId:e.name,geoCoords:n,shapeColor:a};return xe.jsx(xe.Fragment,{children:r?xe.jsx(LU,{...s}):xe.jsx(TU,{...s})})}function XF({className:n="",children:e,isVisible:t}){return xe.jsx("div",{className:`gallery-container ${n} ${t?"gallery-container--visible":""}`,children:xe.jsx(TF,{children:e})})}function YF({travels:n,selectedTravelIdx:e,cityName:t}){const{currentLanguage:i}=As([]),r=_a(),a=n[e],s=n.filter(o=>!o.isFuture);return xe.jsxs("div",{className:"travel-selector",children:[xe.jsx(ng,{className:`travel-selector__chevron-icon travel-selector__chevron-icon--left
        ${e>0?"":"travel-selector__chevron-icon--disabled"}`,onClick:()=>e>0&&r(`/gallery/${t}/${e-1}`)}),xe.jsxs("div",{className:"travel-selector__info",children:[xe.jsxs("div",{className:"travel-selector__dates",children:[xe.jsx(nw,{className:"travel-selector__travel-icon"}),xe.jsx("p",{children:Z5(a.sDate,i)})]}),xe.jsx("p",{className:"travel-selector__bar",children:"-"}),xe.jsxs("div",{className:"travel-selector__dates",children:[xe.jsx(tw,{className:"travel-selector__travel-icon"}),xe.jsx("p",{children:Z5(a.eDate,i)})]})]}),xe.jsx(ng,{className:`travel-selector__chevron-icon
        ${e<s.length-1?"":"travel-selector__chevron-icon--disabled"}`,onClick:()=>e<s.length-1&&r(`/gallery/${t}/${e+1}`)})]})}const qF=I.memo(function(){const e=_a(),{city:t,travelIdx:i}=Pw(),r=I.useMemo(()=>t.travels[i].photos.map(a=>({src:a.thumbnail,width:a.width,height:a.height})),[t,i]);return xe.jsxs("div",{className:"gallery",children:[xe.jsxs("div",{className:"gallery__header",children:[xe.jsx("h2",{children:t.name}),xe.jsx(Uw,{countryName:t.country.id,className:"gallery__header__flag"}),xe.jsx(YF,{cityName:t.name,travels:t.travels,selectedTravelIdx:i}),xe.jsx(PA,{onClick:()=>e("/?to=visited")})]}),xe.jsxs("div",{className:"gallery__content",children:[xe.jsx("div",{className:"gallery__content__photo-album",id:"info-tab",children:xe.jsx(yA,{photos:r,layout:"rows",onClick:({index:a})=>e(`./${a}`)})}),xe.jsx(Tw,{})]})]})});function mf(){const n=x3(),e=n.pathname.includes("visited"),t=n.pathname.includes("future"),i=n.pathname.includes("gallery");return{isVisited:e,isFuture:t,isInfoTabOpen:e||t,isGallery:i}}const $F=I.memo(function({className:e="",children:t}){const{isInfoTabOpen:i}=mf();return xe.jsx("div",{className:`info-tab ${e} ${i?"info-tab--open":""}`,children:t})});function SM(n,e="vertical"){if(n.current){if(e==="both")return n.current.scrollHeight>n.current.clientHeight||n.current.scrollWidth>n.current.clientWidth;if(e==="vertical")return n.current.scrollHeight>n.current.clientHeight;if(e==="horizontal")return n.current.scrollWidth>n.current.clientWidth}return!1}class L1{constructor(e){Vn(this,"name");Vn(this,"country");Vn(this,"coordinates");Vn(this,"travels");this.name=e.name,this.country=e.country,this.coordinates=e.coordinates,this.travels=e.travels??[]}getName(e){return e(`cities.${this.name}`)}addTravel(e){this.travels.push(e),this.travels.sort((t,i)=>t.sDate.getTime()-i.sDate.getTime())}}class My{constructor(e){Vn(this,"h");Vn(this,"s");Vn(this,"l");this.h=e.h,this.s=e.s,this.l=e.l}toHSL(){return`hsl(${this.h}, ${this.s}%, ${this.l}%)`}toHSLA(e){return`hsla(${this.h}, ${this.s}%, ${this.l}%, ${e})`}}class Ma{constructor(e,t){Vn(this,"id");Vn(this,"borderColor");Vn(this,"fillColor");this.id=e,this.borderColor=new My(t).toHSL(),this.fillColor=new My(t).toHSLA(.5)}getName(e){return e(`countries.${this.id}`)}}class F1{constructor({sDate:e,eDate:t,photos:i,isFuture:r}){Vn(this,"sDate");Vn(this,"eDate");Vn(this,"photos");Vn(this,"isFuture",!1);this.sDate=e,this.eDate=t,this.photos=i||[],this.isFuture=r||!1}}const Ku=new Ma("Belgium",{h:158,s:72,l:42}),MM=new Ma("Spain",{h:175,s:92,l:19}),Ea=new Ma("Italy",{h:5,s:80,l:67}),EM=new Ma("Hungary",{h:45,s:80,l:63}),PM=new Ma("Germany",{h:290,s:70,l:40}),TM=new Ma("United Kingdom",{h:201,s:80,l:47}),gf=new Ma("Portugal",{h:200,s:100,l:50}),Pa=new Ma("Japan",{h:0,s:100,l:50}),KF=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/001.jpg",alt:"Lotto Park vertical",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/001t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/002.jpg",alt:"Lotto Park wide",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/002t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/003.jpg",alt:"Lotto Park Grandstand",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/003t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/004.jpg",alt:"Lotto Park Grandstand full",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/004t.jpg",width:16,height:9},{original:"https://youtube.com/embed/SGhmA-uNfao",alt:"Team entrance to Lotto Park",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/005t.jpg",width:432,height:768,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/006.jpg",alt:"RCSA Objectif Coupe d'Europe",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/006t.jpg",width:4,height:3},{original:"https://youtube.com/embed/uQfe0AF6-Ow",alt:"Kasper Dolberg penalty",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/007t.jpg",width:432,height:768,youtube:!0},{original:"https://www.youtube.com/embed/v-WQhXP2hOg",alt:"Kasper Dolberg penalty celebration",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/008t.jpg",width:432,height:768,youtube:!0},{original:"https://www.youtube.com/embed/_CaBMaSUx_w?si=YfsFGg2kr9537FcK",alt:"Match highlights and goals",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/009t.jpg",width:16,height:9,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/010.jpg",alt:"RCSA Vertonghen shirt front",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/010t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/011.jpg",alt:"RCSA Vertonghen shirt back",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Anderlecht/011t.jpg",width:64,height:85}],ZF=new L1({name:"Anderlecht",country:Ku,coordinates:[4.3299,50.8383],travels:[new F1({sDate:new Date(2023,7,6),eDate:new Date(2023,7,6),photos:KF})]}),JF=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/001t.jpg",width:1599,height:899},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/002t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/003t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/004t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/005t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/006t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/007t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/008t.jpg",width:683,height:281},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/009t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/010t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/011.jpg",width:1366,height:451},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/012t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/013t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/014.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/014t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/015t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/016t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/017t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/018.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/018t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/019.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/019t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/020.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/020t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/021.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/021t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/022.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/022t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/023.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/023t.jpg",width:455,height:256},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/024.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/024t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/025.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/025t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/026.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/026t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/027.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/027t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/028.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/028.jpg",width:1366,height:333},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/029.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/029.jpg",width:1366,height:327},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/030.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/030.jpg",width:1366,height:317},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/031.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/031.jpg",width:1366,height:303},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/032.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/032.jpg",width:683,height:191},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/033.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/033t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/034.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/034t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/035.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/035t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/036.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/036t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/037.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/037t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/038.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/038t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/039.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/039.jpg",width:683,height:130},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/040.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/040t.jpg",width:686,height:915},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/041.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/041t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/042.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/042t.jpg",width:5,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/043.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/043t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/044.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/044t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/045.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/045t.jpg",width:733,height:977},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/046.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/046t.jpg",width:707,height:942},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/047.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/047t.jpg",width:726,height:967},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/048.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/048t.jpg",width:656,height:875},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/049.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/049t.jpg",width:362,height:483},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/050.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/050t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/051.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/051t.jpg",width:371,height:297},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/052.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/052t.jpg",width:1001,height:751},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/053.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/053t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/054.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/054t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/055.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/055t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/056.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Barcelona/056t.jpg",width:899,height:1123}],QF=new L1({name:"Barcelona",country:MM,coordinates:[2.1734035,41.3850639],travels:[new F1({sDate:new Date(2016,3,11),eDate:new Date(2016,3,15),photos:JF})]}),ez=[],tz=new L1({name:"Berlin",country:PM,coordinates:[13.404954,52.520008],travels:[new F1({sDate:new Date(2015,3,15),eDate:new Date(2015,3,19),photos:ez})]}),nz=new L1({name:"Braga",country:gf,coordinates:[-8.4167,41.5333],travels:[new F1({sDate:new Date(2024,3,21),eDate:new Date(2024,3,21),isFuture:!0})]}),iz=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/001t.jpg",width:1771,height:3148},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/002t.jpg",width:798,height:449},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/003t.jpg",width:3464,height:1949},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/004t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/005t.jpg",width:3437,height:1933},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/006t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/007t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/008t.jpg",width:1772,height:997},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/009t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/010t.jpg",width:2616,height:2093},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/011t.jpg",width:3682,height:2071},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/012t.jpg",width:3454,height:1943},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/013t.jpg",width:733,height:1303},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/014.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/014t.jpg",width:2933,height:2200},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/015t.jpg",width:935,height:526},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/016t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/017t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/018.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Bruges/018t.jpg",width:64,height:85}],rz=new L1({name:"Bruges",country:Ku,coordinates:[3.2247,51.2093],travels:[new F1({sDate:new Date(2023,7,9),eDate:new Date(2023,7,9),photos:iz})]}),az=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/001t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/002t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/003t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/004t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/005t.jpg",width:2891,height:1626},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/006t.jpg",width:1001,height:563},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/007t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/008t.jpg",width:1951,height:2439},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/009t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/010t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/011t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/012t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/013t.jpg",width:1819,height:2275},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/014.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/014t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/015t.jpg",width:2003,height:2503},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/016t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/017t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/018.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/018t.jpg",width:759,height:427},{original:"https://www.youtube.com/embed/HLAngSzvfy4",alt:"Atomium Entrance (07/08/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/42f38173cf18d3fb2ccbd6bbe6b736eed378738c/Brussels/073t.jpg",width:432,height:768,youtube:!0},{original:"https://youtube.com/embed/ZsbkXr6EI2w",alt:"Atomium Light Show 1 (07/08/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/019t.jpg",width:432,height:768,youtube:!0},{original:"https://youtube.com/embed/hTEev3aiGcU",alt:"Atomium Light Show 2 (07/08/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/020t.jpg",width:432,height:768,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/021.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/021t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/022.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/022t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/023.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/023t.jpg",width:2951,height:1660},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/024.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/024t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/025.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/025t.jpg",width:3130,height:1761},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/026.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/026t.jpg",width:3473,height:1954},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/027.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/027t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/028.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/028t.jpg",width:2737,height:2190},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/029.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/029t.jpg",width:759,height:427},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/030.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/030t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/031.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/031t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/032.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/032t.jpg",width:5,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/033.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/033t.jpg",width:2112,height:3755},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/034.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/034t.jpg",width:1134,height:1691},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/035.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/035t.jpg",width:3509,height:2268},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/036.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/036t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/037.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/037t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/038.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/038t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/039.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/039t.jpg",width:819,height:655},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/040.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/040t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/041.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/041t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/042.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/042t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/043.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/043t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/044.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/044t.jpg",width:487,height:274},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/045.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/045t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/046.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/046t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/047.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/047t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/048.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/048t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/049.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/049t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/050.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/050t.jpg",width:1429,height:953},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/051.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/051t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/052.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/052t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/053.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/053t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/054.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/054t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/055.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/055t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/056.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/056t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/057.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/057t.jpg",width:1493,height:995},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/058.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/058t.jpg",width:3,height:2},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/059.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/059t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/060.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/060t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/061.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/061t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/062.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/062t.jpg",width:4,height:5},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/063.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/063t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/064.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/064t.jpg",width:2,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/065.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/065t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/066.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/066t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/067.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/067t.jpg",width:3741,height:2104},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/068.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/068t.jpg",width:3958,height:2227},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/069.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/069t.jpg",width:3820,height:2149},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/070.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/070t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/071.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/071t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/072.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Brussels/072t.jpg",width:487,height:274}],sz=new L1({name:"Brussels",country:Ku,coordinates:[4.34878,50.85045],travels:[new F1({sDate:new Date(2023,7,5),eDate:new Date(2023,7,10),photos:az})]}),oz=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/001t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/002t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/003t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/004t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/005t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/006t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/007t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/008t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/009t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/010t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/011t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/012t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/013t.jpg",width:3,height:4},{original:"https://youtube.com/embed/7R_tGgueEqw",alt:"Serenade in Budapest (06/05/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/014t.jpg",width:432,height:768,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/015t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/016t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/017t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/018.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/018t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/019.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/019t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/020.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/020t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/021.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/021t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/022.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/022t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/023.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/023t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/024.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/024t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/025.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/025t.jpg",width:771,height:1024},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/026.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/026t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/027.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/027t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/028.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/028t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/029.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/029t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/030.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/030t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/031.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/031t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/032.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/032t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/033.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/033t.jpg",width:3,height:4},{original:"https://youtube.com/embed/mT0BMZPmiaA",alt:"The Magic Budapes Cauldron (06/05/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/034t.jpg",width:432,height:768,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/035.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/035t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/036.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/036t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/037.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/037t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/038.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/038t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/039.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/039t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/040.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/040t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/041.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/041t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/042.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/042t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/043.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/043t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/044.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/044t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/045.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/045t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/046.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/046t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/047.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/047t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/048.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/048t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/049.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/049t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/050.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/050t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/051.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/051t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/052.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/052t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/053.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/053t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/054.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/054t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/055.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/055t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/056.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/056t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/057.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/057t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/058.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/058t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/059.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/059t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/060.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/060t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/061.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/061t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/062.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/062t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/063.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/063t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/064.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/064t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/065.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/065t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/066.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/066t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/067.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/067t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/068.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/068t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/069.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/069t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/070.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/070t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/071.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/071t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/072.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/072t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/073.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/073t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/074.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/074t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/075.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/075t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/076.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/076t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/077.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/077t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/078.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/078t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/079.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/079t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/080.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/080t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/081.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/081t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/082.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/082t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/083.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/083t.jpg",width:16,height:9},{original:"https://youtube.com/embed/JrXVPbWkItI",alt:"Budapest's Citadel (07/05/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/084t.jpg",width:432,height:768,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/085.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/085t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/086.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/086t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/087.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/087t.jpg",width:1925,height:811},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/088.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/088t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/089.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/089t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/090.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/090t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/091.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/091t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/092.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/092t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/093.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/093t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/094.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/094t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/095.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/095t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/096.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/096t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/097.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/097t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/098.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/098t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/099.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/099t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/100.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/100t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/101.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/101t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/102.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/102t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/103.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/103t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/104.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/104t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/105.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/105t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/106.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/106t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/107.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/107t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/108.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/108t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/109.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/109t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/110.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/110t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/111.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/111t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/112.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/112t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/113.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/113t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/114.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/114t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/115.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/115t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/116.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/116t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/117.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/117t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/118.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/118t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/119.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/119t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/120.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/120t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/121.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/121t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/122.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/122t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/123.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/123t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/124.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/124t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/125.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/125t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/126.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/126t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/127.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/127t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/128.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/128t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/129.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/129t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/130.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/130t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/131.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/131t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/132.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/132t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/133.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/133t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/134.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/134t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/135.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/135t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/136.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/136t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/137.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/137t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/138.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/138t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/139.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/139t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/140.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/140t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/141.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/141t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/142.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/142t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/143.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/143t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/144.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/144t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/145.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/145t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/146.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/146t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/147.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/147t.jpg",width:1042,height:1389},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/148.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/148t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/149.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/149t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/150.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/150t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/151.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/151t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/152.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/152t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/153.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/153t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/154.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/154t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/155.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/155t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/156.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/156t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/157.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/157t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/158.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/158t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/159.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/159t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/160.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/160t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/161.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/161t.jpg",width:432,height:768},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/162.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/162t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/163.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/163t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/164.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/164t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/165.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/165t.jpg",width:1657,height:562},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/166.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/166t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/167.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/167t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/168.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/168t.jpg",width:1431,height:1988},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/169.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/c3c78a72d14e8092556836839ec1dcf0dcdd4098/Budapest/169t.jpg",width:4,height:3}],lz=new L1({name:"Budapest",country:EM,coordinates:[19.040235,47.497912],travels:[new F1({sDate:new Date(2023,4,6),eDate:new Date(2023,4,9),photos:oz})]}),cz=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/001t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/002t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/003t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/004t.jpg",width:1153,height:2048},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/005t.jpg",width:1153,height:2048},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/006t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/007t.jpg",width:1153,height:2048},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/008t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/009t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/010t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/011t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/012t.jpg",width:1221,height:1079},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/013t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/014.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/014t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/015t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/016t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/017t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/018.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/018t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/019.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/019t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/020.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/020t.jpg",width:899,height:1599},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/021.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/021t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/022.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/022t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/023.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/023t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/024.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/024t.jpg",width:899,height:1599},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/025.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/025t.jpg",width:2,height:1},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/026.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/026t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/027.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/027t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/028.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/028t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/029.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/029t.jpg",width:677,height:800},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/030.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/030t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/031.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/031t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/032.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/032t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/033.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/033t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/034.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/034t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/035.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/035t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/036.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/036t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/037.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/037t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/038.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/038t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/039.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/039t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/040.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/040t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/041.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/041t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/042.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/042t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/043.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/043t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/044.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/044t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/045.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/045t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/046.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/046t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/047.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/047t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/048.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/048t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/049.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/049t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/050.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/050t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/051.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/051t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/052.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/052t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/053.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/053t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/054.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/054t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/055.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/055t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/056.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/056t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/057.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/057t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/058.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/058t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/059.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/059t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/060.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/060t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/061.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/061t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/062.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/062t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/063.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/063t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/064.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/064t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/065.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/065t.jpg",width:383,height:512},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/066.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/066t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/067.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/067t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/068.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/068t.jpg",width:3,height:4},{original:"https://youtube.com/embed/jaoTv98YrDI",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/069t.jpg",width:9,height:16,youtube:!0},{original:"https://youtube.com/embed/whFBnOI6wPc",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/070t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/071.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/071t.jpg",width:2,height:1},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/072.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/072t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/073.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/073t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/074.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/074t.jpg",width:16,height:9},{original:"https://youtube.com/embed/1sMwnJ4AH0o",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/075t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/076.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/076t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/077.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/077t.jpg",width:4,height:3},{original:"https://youtube.com/embed/bW9be2UMBgA",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/078t.jpg",width:9,height:16,youtube:!0},{original:"https://youtube.com/embed/rVT69eLgoyY",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/079t.jpg",width:9,height:16,youtube:!0},{original:"https://youtube.com/embed/F0Ny_EOipts",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/080t.jpg",width:9,height:16,youtube:!0},{original:"https://youtube.com/embed/6Z9oUguN7TE",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6052efde5716ba624482331503ce7b8792e5297b/Cefal%C3%B9/081t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/082.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/082t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/083.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/083t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/084.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/3bbf28a73ed5f954dc25937572ab1551208ce294/Cefal%C3%B9/084t.jpg",width:16,height:9}],uz=new L1({name:"Cefalù",country:Ea,coordinates:[13.988,38.0342],travels:[new F1({sDate:new Date(2021,8,23),eDate:new Date(2021,8,26),photos:cz})]}),dz=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/001t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/002t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/003t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/004t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/005t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/006t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/007t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/008t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/009t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/010t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/011t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/012t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/013t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/014.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/014t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/015t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/016t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/12dd671033b6dd1be8fd74f9720fc4fafecc6876/Genoa/017t.jpg",width:16,height:9}],hz=new L1({name:"Genoa",country:Ea,coordinates:[8.946256,44.4056499],travels:[new F1({sDate:new Date(2023,10,14),eDate:new Date(2023,10,14),photos:dz})]}),fz=[],pz=new L1({name:"Imola",country:Ea,coordinates:[11.716667,44.35],travels:[new F1({sDate:new Date(2022,3,22),eDate:new Date(2022,3,24),photos:fz})]}),mz=new L1({name:"Kanazawa",country:Pa,coordinates:[136.65,36.5667],travels:[new F1({sDate:new Date(2024,7,19),eDate:new Date(2024,7,21),isFuture:!0})]}),gz=new L1({name:"Kyoto",country:Pa,coordinates:[135.7681,35.0116],travels:[new F1({sDate:new Date(2024,7,21),eDate:new Date(2024,7,27),isFuture:!0})]}),vz=[],yz=new L1({name:"London",country:TM,coordinates:[-.1276474,51.5073219],travels:[new F1({sDate:new Date(2011,4,9),eDate:new Date(2011,4,12),photos:vz})]}),_z=new L1({name:"Nara",country:Pa,coordinates:[135.8048,34.6851],travels:[new F1({sDate:new Date(2024,7,23),eDate:new Date(2024,7,23),isFuture:!0})]}),xz=new L1({name:"Osaka",country:Pa,coordinates:[135.5023,34.6937],travels:[new F1({sDate:new Date(2024,7,22),eDate:new Date(2024,7,22),isFuture:!0})]}),wz=new L1({name:"Porto",country:gf,coordinates:[-8.6291053,41.1579438],travels:[new F1({sDate:new Date(2024,3,19),eDate:new Date(2024,3,22),isFuture:!0})]}),bz=[],LM=new L1({name:"Rome",country:Ea,coordinates:[12.4963655,41.9027835],travels:[new F1({sDate:new Date(2021,6,27),eDate:new Date(2021,7,3),photos:bz}),new F1({sDate:new Date(2024,7,10),eDate:new Date(2024,7,12),isFuture:!0})]}),Sz=new L1({name:"Shirawakago",country:Pa,coordinates:[137.4167,36.25],travels:[new F1({sDate:new Date(2024,7,19),eDate:new Date(2024,7,19),isFuture:!0})]}),Mz=new L1({name:"Takayama",country:Pa,coordinates:[137.2513,36.1408],travels:[new F1({sDate:new Date(2024,7,18),eDate:new Date(2024,7,19),isFuture:!0})]}),Ez=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/001t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/002t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/003t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/004t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/005t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/006t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/007t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/008t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/009t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/010t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/011t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/012t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/013t.jpg",width:4,height:3},{original:"https://www.youtube.com/embed/OR2s7hk-po8",alt:"Marmore Waterfall Slowmotion (27/02/2022)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/027t.jpg",width:16,height:9,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/015t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/016t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/017t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/018.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/018t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/019.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/019t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/020.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/020t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/021.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/021t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/022.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/022t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/023.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/023t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/024.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/024t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/025.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/025t.jpg",width:3,height:4},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/026.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/026t.jpg",width:4,height:3},{original:"https://www.youtube.com/embed/yiY5MuFDcCU",alt:"Marmore Waterfall Slowmotion (27/02/2022)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/014t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/028.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/028t.jpg",width:4,height:3},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/029.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/6a1ca5958afea4dcc7903dec7f2981a381f0bc1c/Terni/029t.jpg",width:4,height:3}],Pz=new L1({name:"Terni",country:Ea,coordinates:[12.6411,42.5635],travels:[new F1({sDate:new Date(2022,1,27),eDate:new Date(2022,1,27),photos:Ez})]}),Tz=new L1({name:"Tokyo",country:Pa,coordinates:[139.6917,35.6895],travels:[new F1({sDate:new Date(2024,7,13),eDate:new Date(2024,7,18),isFuture:!0})]}),Lz=[{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/001.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/001t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/002.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/002t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/003.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/003t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/004.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/004t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/005.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/005t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/006.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/006t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/007.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/007t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/008.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/008t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/009.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/009t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/010.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/010t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/011.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/011t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/012.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/012t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/013.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/013t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/014.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/014t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/015.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/015t.jpg",width:64,height:85},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/016.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/016t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/017.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/017t.jpg",width:85,height:64},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/018.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/018t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/019.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/019t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/020.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/020t.jpg",width:16,height:9},{original:"https://www.youtube.com/embed/b61suarPEPs",alt:"ATP Finals - Intro (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/021t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/Rs8_7oBPJmg",alt:"ATP Finals - Intro Speaker (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/022t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/vobMpy_yxOM",alt:"ATP Finals - Gonzales Molteni Entrance (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/023t.jpg",width:16,height:9,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/024.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/024t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/025.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/025t.jpg",width:16,height:9},{original:"https://www.youtube.com/embed/W7V-phxLnko",alt:"ATP Finals - Dodig Krajicek - Set Point (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/026t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/U-zACMb9L-8",alt:"ATP Finals - Full intro (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/027t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/yRs7n6ezYn4",alt:"ATP Finals - Tsitsipas Entrance (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/028t.jpg",width:9,height:16,youtube:!0},{original:"https://www.youtube.com/embed/veB_SrTcbpI",alt:"ATP Finals - Sinner Entrance (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/029t.jpg",width:9,height:16,youtube:!0},{original:"https://www.youtube.com/embed/YQTEPr1ZPyg",alt:"ATP Finals - Sinner vs Tsitsipas - Match Point (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/030t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/ps70QL1jHUI",alt:"ATP Finals - Sinner Celebration (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/031t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/032.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/032t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/033.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/033t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/034.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/034t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/035.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/035t.jpg",width:16,height:9},{original:"https://www.youtube.com/embed/eD2Tdhpis4o",alt:"ATP Finals - Sinner Interview (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/036t.jpg",width:16,height:9,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/037.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/037t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/078.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/078t.jpg",width:12,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/079.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/079t.jpg",width:16,height:12},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/038.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/038t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/039.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/039t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/040.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/040t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/041.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/041t.jpg",width:16,height:9},{original:"https://www.youtube.com/embed/22ufi_1ro8g",alt:"ATP Finals - Djokovic Entrance (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/043t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/044.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/044t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/045.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/045t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/046.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/046t.jpg",width:9,height:16},{original:"https://www.youtube.com/embed/Xt--knPfJKk",alt:"ATP Finals - Djokovic vs Rune - Point (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/047t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/fqNOepUWnns",alt:"ATP Finals - Djokovic vs Rune - Game Point (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/048t.jpg",width:16,height:9,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/049.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/049t.jpg",width:16,height:9},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/050.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/050t.jpg",width:16,height:9},{original:"https://www.youtube.com/embed/vrkpXmoBkl8",alt:"ATP Finals - Djokovic vs Rune - Set Point (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/051t.jpg",width:16,height:9,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/052.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/052t.jpg",width:9,height:16},{original:"https://www.youtube.com/embed/ih6neHU474I",alt:"ATP Finals - Djokovic vs Rune - Match Point (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/053t.jpg",width:16,height:9,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/054.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/054t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/055.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/055t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/056.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/056t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/057.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/057t.jpg",width:9,height:16},{original:"https://www.youtube.com/embed/UYMihh734MQ",alt:"ATP Finals - Djokovic Interview (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/058t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/059.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/059t.jpg",width:9,height:16},{original:"https://www.youtube.com/embed/vbfOx8P1Tf4",alt:"ATP Finals - Zverev Training (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/060t.jpg",width:9,height:16,youtube:!0},{original:"https://www.youtube.com/embed/heNYvKJVPdU",alt:"ATP Finals - Zverev Training 2 (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/061t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/062.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/062t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/063.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/063t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/064.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/064t.jpg",width:9,height:16},{original:"https://www.youtube.com/embed/IjXWZ02_owQ",alt:"ATP Finals - Djokovic Number 1 Entrance (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/065t.jpg",width:9,height:16,youtube:!0},{original:"https://www.youtube.com/embed/Fek41PfVOXk",alt:"ATP Finals - Djokovic Number 1 Trophy (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/066t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/067.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/067t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/068.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/068t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/069.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/069t.jpg",width:9,height:16},{original:"https://www.youtube.com/embed/ukAuBI3ffgY",alt:"ATP Finals - Alcaraz Entrance (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/070t.jpg",width:9,height:16,youtube:!0},{original:"https://www.youtube.com/embed/AQ56jtQJmCE",alt:"ATP Finals - Alcaraz vs Zverev - Match Point (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/072t.jpg",width:9,height:16,youtube:!0},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/073.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/818446548014d16b4fd4595c629a6584beb65ed0/Turin/073t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/080.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/080t.jpg",width:12,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/081.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/081t.jpg",width:9,height:16},{original:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/082.jpg",alt:"",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/082t.jpg",width:9,height:16},{original:"https://youtube.com/embed/Aqzn_hEBzfQ",alt:"ATP Finals - Medvedev Entrance (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/074t.jpg",width:9,height:16,youtube:!0},{original:"https://www.youtube.com/embed/t3jwiqIkjkQ",alt:"ATP Finals - Medvedev vs Rublev - Set Point (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/075t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/idUud6OEJFY",alt:"ATP Finals - Medvedev vs Rublev - Set Point 2 (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/076t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/hkDEQm5yEiE",alt:"ATP Finals - Medvedev vs Rublev - Match Point (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33b6112dc8b487bed3637896aa24a44a989bf3dd/Turin/077t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/cbuY3CQ4rjs",alt:"ATP Finals - Day 1 Highlights (12/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33af33ae0747c97d519aa51c860c3f0035f45e51/Turin/083t.jpg",width:16,height:9,youtube:!0},{original:"https://www.youtube.com/embed/z_MsZGw---Q",alt:"ATP Finals - Day 2 Highlights (13/11/2023)",thumbnail:"https://cdn.statically.io/gh/iampivi/PhotoLake1/33af33ae0747c97d519aa51c860c3f0035f45e51/Turin/084t.jpg",width:16,height:9,youtube:!0}],Cz=new L1({name:"Turin",country:Ea,coordinates:[7.6868565,45.070312],travels:[new F1({sDate:new Date(2023,10,11),eDate:new Date(2023,10,14),photos:Lz})]}),CM={Italy:Ea,Belgium:Ku,UnitedKingdom:TM,Germany:PM,Hungary:EM,Spain:MM},A4=[sz,ZF,rz,LM,pz,Cz,hz,yz,tz,lz,QF,uz,Pz],Az={Portugal:gf,Italy:Ea,Japan:Pa},y7=[wz,nz,LM,Tz,Mz,Sz,mz,gz,xz,_z],Rz=I.memo(function({className:e=""}){const{t}=As(["home"]),i=I.useRef(null),r=o=>{const l=y7.filter(h=>h.country.id.replace(" ","")===o.replace(" ","")).filter(h=>h.travels.some(f=>f.isFuture)),d=[];return l.forEach(h=>{h.travels.forEach(f=>{f.isFuture&&d.push(new L1({...h,travels:[f]}))})}),d},a=Object.keys(Az).map(o=>r(o)).flat().sort((o,l)=>{const d=o.travels[0].sDate,h=l.travels[0].sDate;return d<h?-1:d>h?1:0}),s=(o,l)=>y7.filter(h=>h.name===o.name)[0].travels.indexOf(l);return xe.jsxs("div",{className:`info-tab-future ${e}`,children:[xe.jsx("div",{className:"info-tab-future__header",children:xe.jsx("h1",{children:t("future.title")})}),xe.jsx("div",{className:`info-tab-future__content ${SM(i)?"scroll":""}`,id:"info-tab",ref:i,children:a.map(o=>xe.jsx(bM,{city:o,travel:o.travels[0],idx:s(o,o.travels[0]),isClickable:!1},o.name))})]})}),kz=I.memo(function({className:e=""}){const{t}=As(["home"]),i=I.useRef(null),r=o=>{const l=A4.filter(h=>h.country.id.replace(" ","")===o.replace(" ","")).filter(h=>h.travels.some(f=>!f.isFuture)),d=[];return l.forEach(h=>{h.travels.forEach(f=>{f.isFuture||d.push(new L1({...h,travels:[f]}))})}),d},a=Object.keys(CM).map(o=>r(o)).flat().sort((o,l)=>{const d=o.travels[0].sDate,h=l.travels[0].sDate;return d<h?-1:d>h?1:0}),s=(o,l)=>A4.filter(h=>h.name===o.name)[0].travels.indexOf(l);return xe.jsxs("div",{className:`info-tab-visited ${e}`,children:[xe.jsx("div",{className:"info-tab-visited__header",children:xe.jsx("h1",{children:t("visited.title")})}),xe.jsx("div",{className:`info-tab-visited__content ${SM(i)?"scroll":""}`,id:"info-tab",ref:i,children:a.map(o=>xe.jsx(bM,{city:new L1(o),travel:o.travels[0],idx:s(o,o.travels[0]),isClickable:o.travels[0].photos.length>0},o.name))})]})});function _s({onClick:n,className:e="",children:t}){return xe.jsx("button",{className:`button ${e}`,onClick:n,children:t})}function Iz(){const[n,e]=I.useState(!1),{currentLanguage:t,changeLanguage:i}=As([]),r=["it","en"];return xe.jsxs("div",{className:"language-selector",children:[xe.jsxs(_s,{className:`language-selector__activator ${n?"language-selector__activator--open":""}`,onClick:()=>e(!n),children:[xe.jsx(KT,{className:"language-selector__language-icon"}),xe.jsx(ay,{language:t,className:"language-selector__language-flag-icon"})]}),r.map(a=>xe.jsx(_s,{className:`language-selector__button ${t.includes(a)?"language-selector__button--active":""} language-selector__button--${a}
            ${n?"language-selector__button--open":""}
          `,onClick:()=>{i(a),e(!1)},children:xe.jsx(ay,{language:a})},a))]})}const Nz=I.memo(function({className:e=""}){const t=_a(),{isVisited:i,isFuture:r,isGallery:a}=mf(),s=I.useContext(vf),{isDarkTheme:o,handleDarkModeSwitch:l}=s;return xe.jsx("div",{className:`left-bar ${e} ${a?"left-bar--close":""}`,children:xe.jsxs("div",{className:"left-bar__container",children:[xe.jsx("div",{className:"left-bar__buttons--top",children:xe.jsx(JT,{className:"logo-icon",onClick:()=>t("/")})}),xe.jsxs("div",{className:"left-bar__buttons",children:[xe.jsx(xg,{to:i?"/":r?"/?to=visited":"/visited",children:xe.jsx(_s,{className:`left-bar__button ${i?"left-bar__button--visited--active":""}`,children:xe.jsx(tL,{})})}),xe.jsx(xg,{to:r?"/":i?"/?to=future":"/future",children:xe.jsx(_s,{className:`left-bar__button ${r?"left-bar__button--future--active":""}`,children:xe.jsx($T,{})})})]}),xe.jsxs("div",{className:"left-bar__buttons--bottom",children:[xe.jsx(Iz,{}),xe.jsx(EA,{isDarkTheme:o,handleDarkModeSwitch:l})]})]})})});var AM={exports:{}};(function(n,e){(function(t,i){n.exports=i(I)})(V3,t=>(()=>{var i={703:(o,l,d)=>{var h=d(414);function f(){}function p(){}p.resetWarningCache=f,o.exports=function(){function m(_,g,x,S,E,A){if(A!==h){var P=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw P.name="Invariant Violation",P}}function y(){return m}m.isRequired=m;var b={array:m,bool:m,func:m,number:m,object:m,string:m,symbol:m,any:m,arrayOf:y,element:m,elementType:m,instanceOf:y,node:m,objectOf:y,oneOf:y,oneOfType:y,shape:y,exact:y,checkPropTypes:p,resetWarningCache:f};return b.PropTypes=b,b}},697:(o,l,d)=>{o.exports=d(703)()},414:o=>{o.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},590:o=>{var l=typeof Element<"u",d=typeof Map=="function",h=typeof Set=="function",f=typeof ArrayBuffer=="function"&&!!ArrayBuffer.isView;function p(m,y){if(m===y)return!0;if(m&&y&&typeof m=="object"&&typeof y=="object"){if(m.constructor!==y.constructor)return!1;var b,_,g,x;if(Array.isArray(m)){if((b=m.length)!=y.length)return!1;for(_=b;_--!=0;)if(!p(m[_],y[_]))return!1;return!0}if(d&&m instanceof Map&&y instanceof Map){if(m.size!==y.size)return!1;for(x=m.entries();!(_=x.next()).done;)if(!y.has(_.value[0]))return!1;for(x=m.entries();!(_=x.next()).done;)if(!p(_.value[1],y.get(_.value[0])))return!1;return!0}if(h&&m instanceof Set&&y instanceof Set){if(m.size!==y.size)return!1;for(x=m.entries();!(_=x.next()).done;)if(!y.has(_.value[0]))return!1;return!0}if(f&&ArrayBuffer.isView(m)&&ArrayBuffer.isView(y)){if((b=m.length)!=y.length)return!1;for(_=b;_--!=0;)if(m[_]!==y[_])return!1;return!0}if(m.constructor===RegExp)return m.source===y.source&&m.flags===y.flags;if(m.valueOf!==Object.prototype.valueOf)return m.valueOf()===y.valueOf();if(m.toString!==Object.prototype.toString)return m.toString()===y.toString();if((b=(g=Object.keys(m)).length)!==Object.keys(y).length)return!1;for(_=b;_--!=0;)if(!Object.prototype.hasOwnProperty.call(y,g[_]))return!1;if(l&&m instanceof Element)return!1;for(_=b;_--!=0;)if((g[_]!=="_owner"&&g[_]!=="__v"&&g[_]!=="__o"||!m.$$typeof)&&!p(m[g[_]],y[g[_]]))return!1;return!0}return m!=m&&y!=y}o.exports=function(m,y){try{return p(m,y)}catch(b){if((b.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw b}}},359:o=>{o.exports=t}},r={};function a(o){var l=r[o];if(l!==void 0)return l.exports;var d=r[o]={exports:{}};return i[o](d,d.exports,a),d.exports}a.n=o=>{var l=o&&o.__esModule?()=>o.default:()=>o;return a.d(l,{a:l}),l},a.d=(o,l)=>{for(var d in l)a.o(l,d)&&!a.o(o,d)&&Object.defineProperty(o,d,{enumerable:!0,get:l[d]})},a.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),a.o=(o,l)=>Object.prototype.hasOwnProperty.call(o,l),a.r=o=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})};var s={};return(()=>{function o(B){var U,$,ie="";if(typeof B=="string"||typeof B=="number")ie+=B;else if(typeof B=="object")if(Array.isArray(B))for(U=0;U<B.length;U++)B[U]&&($=o(B[U]))&&(ie&&(ie+=" "),ie+=$);else for(U in B)B[U]&&(ie&&(ie+=" "),ie+=U);return ie}function l(){for(var B,U,$=0,ie="";$<arguments.length;)(B=arguments[$++])&&(U=o(B))&&(ie&&(ie+=" "),ie+=U);return ie}a.r(s),a.d(s,{default:()=>Ot});var d=a(359),h=a.n(d);const f=function(B){var U=typeof B;return B!=null&&(U=="object"||U=="function")},p=typeof V3=="object"&&V3&&V3.Object===Object&&V3;var m=typeof self=="object"&&self&&self.Object===Object&&self;const y=p||m||Function("return this")(),b=function(){return y.Date.now()};var _=/\s/,g=/^\s+/;const x=function(B){return B&&B.slice(0,function(U){for(var $=U.length;$--&&_.test(U.charAt($)););return $}(B)+1).replace(g,"")},S=y.Symbol;var E=Object.prototype,A=E.hasOwnProperty,P=E.toString,C=S?S.toStringTag:void 0,N=Object.prototype.toString,Y=S?S.toStringTag:void 0;const T=function(B){return B==null?B===void 0?"[object Undefined]":"[object Null]":Y&&Y in Object(B)?function(U){var $=A.call(U,C),ie=U[C];try{U[C]=void 0;var Fe=!0}catch{}var ht=P.call(U);return Fe&&($?U[C]=ie:delete U[C]),ht}(B):function(U){return N.call(U)}(B)};var R=/^[-+]0x[0-9a-f]+$/i,ee=/^0b[01]+$/i,he=/^0o[0-7]+$/i,q=parseInt;const ue=function(B){if(typeof B=="number")return B;if(function(ie){return typeof ie=="symbol"||function(Fe){return Fe!=null&&typeof Fe=="object"}(ie)&&T(ie)=="[object Symbol]"}(B))return NaN;if(f(B)){var U=typeof B.valueOf=="function"?B.valueOf():B;B=f(U)?U+"":U}if(typeof B!="string")return B===0?B:+B;B=x(B);var $=ee.test(B);return $||he.test(B)?q(B.slice(2),$?2:8):R.test(B)?NaN:+B};var se=Math.max,ve=Math.min;const z=function(B,U,$){var ie,Fe,ht,Rt,F,H,ge=0,Re=!1,He=!1,Oe=!0;if(typeof B!="function")throw new TypeError("Expected a function");function It(bt){var qt=ie,s1=Fe;return ie=Fe=void 0,ge=bt,Rt=B.apply(s1,qt)}function Ut(bt){return ge=bt,F=setTimeout(at,U),Re?It(bt):Rt}function Yt(bt){var qt=bt-H;return H===void 0||qt>=U||qt<0||He&&bt-ge>=ht}function at(){var bt=b();if(Yt(bt))return lt(bt);F=setTimeout(at,function(qt){var s1=U-(qt-H);return He?ve(s1,ht-(qt-ge)):s1}(bt))}function lt(bt){return F=void 0,Oe&&ie?It(bt):(ie=Fe=void 0,Rt)}function ft(){var bt=b(),qt=Yt(bt);if(ie=arguments,Fe=this,H=bt,qt){if(F===void 0)return Ut(H);if(He)return clearTimeout(F),F=setTimeout(at,U),It(H)}return F===void 0&&(F=setTimeout(at,U)),Rt}return U=ue(U)||0,f($)&&(Re=!!$.leading,ht=(He="maxWait"in $)?se(ue($.maxWait)||0,U):ht,Oe="trailing"in $?!!$.trailing:Oe),ft.cancel=function(){F!==void 0&&clearTimeout(F),ge=0,ie=H=Fe=F=void 0},ft.flush=function(){return F===void 0?Rt:lt(b())},ft},K=function(B,U,$){var ie=!0,Fe=!0;if(typeof B!="function")throw new TypeError("Expected a function");return f($)&&(ie="leading"in $?!!$.leading:ie,Fe="trailing"in $?!!$.trailing:Fe),z(B,U,{leading:ie,maxWait:U,trailing:Fe})};var Z=a(590),re=a.n(Z),_e=function(){if(typeof Map<"u")return Map;function B(U,$){var ie=-1;return U.some(function(Fe,ht){return Fe[0]===$&&(ie=ht,!0)}),ie}return function(){function U(){this.__entries__=[]}return Object.defineProperty(U.prototype,"size",{get:function(){return this.__entries__.length},enumerable:!0,configurable:!0}),U.prototype.get=function($){var ie=B(this.__entries__,$),Fe=this.__entries__[ie];return Fe&&Fe[1]},U.prototype.set=function($,ie){var Fe=B(this.__entries__,$);~Fe?this.__entries__[Fe][1]=ie:this.__entries__.push([$,ie])},U.prototype.delete=function($){var ie=this.__entries__,Fe=B(ie,$);~Fe&&ie.splice(Fe,1)},U.prototype.has=function($){return!!~B(this.__entries__,$)},U.prototype.clear=function(){this.__entries__.splice(0)},U.prototype.forEach=function($,ie){ie===void 0&&(ie=null);for(var Fe=0,ht=this.__entries__;Fe<ht.length;Fe++){var Rt=ht[Fe];$.call(ie,Rt[1],Rt[0])}},U}()}(),je=typeof window<"u"&&typeof document<"u"&&window.document===document,ce=a.g!==void 0&&a.g.Math===Math?a.g:typeof self<"u"&&self.Math===Math?self:typeof window<"u"&&window.Math===Math?window:Function("return this")(),Ee=typeof requestAnimationFrame=="function"?requestAnimationFrame.bind(ce):function(B){return setTimeout(function(){return B(Date.now())},1e3/60)},ze=["top","right","bottom","left","width","height","size","weight"],Je=typeof MutationObserver<"u",St=function(){function B(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=function(U,$){var ie=!1,Fe=!1,ht=0;function Rt(){ie&&(ie=!1,U()),Fe&&H()}function F(){Ee(Rt)}function H(){var ge=Date.now();if(ie){if(ge-ht<2)return;Fe=!0}else ie=!0,Fe=!1,setTimeout(F,20);ht=ge}return H}(this.refresh.bind(this))}return B.prototype.addObserver=function(U){~this.observers_.indexOf(U)||this.observers_.push(U),this.connected_||this.connect_()},B.prototype.removeObserver=function(U){var $=this.observers_,ie=$.indexOf(U);~ie&&$.splice(ie,1),!$.length&&this.connected_&&this.disconnect_()},B.prototype.refresh=function(){this.updateObservers_()&&this.refresh()},B.prototype.updateObservers_=function(){var U=this.observers_.filter(function($){return $.gatherActive(),$.hasActive()});return U.forEach(function($){return $.broadcastActive()}),U.length>0},B.prototype.connect_=function(){je&&!this.connected_&&(document.addEventListener("transitionend",this.onTransitionEnd_),window.addEventListener("resize",this.refresh),Je?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener("DOMSubtreeModified",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},B.prototype.disconnect_=function(){je&&this.connected_&&(document.removeEventListener("transitionend",this.onTransitionEnd_),window.removeEventListener("resize",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener("DOMSubtreeModified",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},B.prototype.onTransitionEnd_=function(U){var $=U.propertyName,ie=$===void 0?"":$;ze.some(function(Fe){return!!~ie.indexOf(Fe)})&&this.refresh()},B.getInstance=function(){return this.instance_||(this.instance_=new B),this.instance_},B.instance_=null,B}(),pt=function(B,U){for(var $=0,ie=Object.keys(U);$<ie.length;$++){var Fe=ie[$];Object.defineProperty(B,Fe,{value:U[Fe],enumerable:!1,writable:!1,configurable:!0})}return B},Tt=function(B){return B&&B.ownerDocument&&B.ownerDocument.defaultView||ce},$e=Pe(0,0,0,0);function X(B){return parseFloat(B)||0}function Ne(B){for(var U=[],$=1;$<arguments.length;$++)U[$-1]=arguments[$];return U.reduce(function(ie,Fe){return ie+X(B["border-"+Fe+"-width"])},0)}var Te=typeof SVGGraphicsElement<"u"?function(B){return B instanceof Tt(B).SVGGraphicsElement}:function(B){return B instanceof Tt(B).SVGElement&&typeof B.getBBox=="function"};function De(B){return je?Te(B)?function(U){var $=U.getBBox();return Pe(0,0,$.width,$.height)}(B):function(U){var $=U.clientWidth,ie=U.clientHeight;if(!$&&!ie)return $e;var Fe=Tt(U).getComputedStyle(U),ht=function(Oe){for(var It={},Ut=0,Yt=["top","right","bottom","left"];Ut<Yt.length;Ut++){var at=Yt[Ut],lt=Oe["padding-"+at];It[at]=X(lt)}return It}(Fe),Rt=ht.left+ht.right,F=ht.top+ht.bottom,H=X(Fe.width),ge=X(Fe.height);if(Fe.boxSizing==="border-box"&&(Math.round(H+Rt)!==$&&(H-=Ne(Fe,"left","right")+Rt),Math.round(ge+F)!==ie&&(ge-=Ne(Fe,"top","bottom")+F)),!function(Oe){return Oe===Tt(Oe).document.documentElement}(U)){var Re=Math.round(H+Rt)-$,He=Math.round(ge+F)-ie;Math.abs(Re)!==1&&(H-=Re),Math.abs(He)!==1&&(ge-=He)}return Pe(ht.left,ht.top,H,ge)}(B):$e}function Pe(B,U,$,ie){return{x:B,y:U,width:$,height:ie}}var xt=function(){function B(U){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=Pe(0,0,0,0),this.target=U}return B.prototype.isActive=function(){var U=De(this.target);return this.contentRect_=U,U.width!==this.broadcastWidth||U.height!==this.broadcastHeight},B.prototype.broadcastRect=function(){var U=this.contentRect_;return this.broadcastWidth=U.width,this.broadcastHeight=U.height,U},B}(),et=function(B,U){var $,ie,Fe,ht,Rt,F,H,ge=(ie=($=U).x,Fe=$.y,ht=$.width,Rt=$.height,F=typeof DOMRectReadOnly<"u"?DOMRectReadOnly:Object,H=Object.create(F.prototype),pt(H,{x:ie,y:Fe,width:ht,height:Rt,top:Fe,right:ie+ht,bottom:Rt+Fe,left:ie}),H);pt(this,{target:B,contentRect:ge})},D=function(){function B(U,$,ie){if(this.activeObservations_=[],this.observations_=new _e,typeof U!="function")throw new TypeError("The callback provided as parameter 1 is not a function.");this.callback_=U,this.controller_=$,this.callbackCtx_=ie}return B.prototype.observe=function(U){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if(typeof Element<"u"&&Element instanceof Object){if(!(U instanceof Tt(U).Element))throw new TypeError('parameter 1 is not of type "Element".');var $=this.observations_;$.has(U)||($.set(U,new xt(U)),this.controller_.addObserver(this),this.controller_.refresh())}},B.prototype.unobserve=function(U){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if(typeof Element<"u"&&Element instanceof Object){if(!(U instanceof Tt(U).Element))throw new TypeError('parameter 1 is not of type "Element".');var $=this.observations_;$.has(U)&&($.delete(U),$.size||this.controller_.removeObserver(this))}},B.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},B.prototype.gatherActive=function(){var U=this;this.clearActive(),this.observations_.forEach(function($){$.isActive()&&U.activeObservations_.push($)})},B.prototype.broadcastActive=function(){if(this.hasActive()){var U=this.callbackCtx_,$=this.activeObservations_.map(function(ie){return new et(ie.target,ie.broadcastRect())});this.callback_.call(U,$,U),this.clearActive()}},B.prototype.clearActive=function(){this.activeObservations_.splice(0)},B.prototype.hasActive=function(){return this.activeObservations_.length>0},B}(),k=typeof WeakMap<"u"?new WeakMap:new _e,oe=function B(U){if(!(this instanceof B))throw new TypeError("Cannot call a class as a function.");if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");var $=St.getInstance(),ie=new D(U,$,this);k.set(this,ie)};["observe","unobserve","disconnect"].forEach(function(B){oe.prototype[B]=function(){var U;return(U=k.get(this))[B].apply(U,arguments)}});const ke=ce.ResizeObserver!==void 0?ce.ResizeObserver:oe,Ae="Left",Se="Right",nt="Up",We="Down",Ke={delta:10,preventScrollOnSwipe:!1,rotationAngle:0,trackMouse:!1,trackTouch:!0,swipeDuration:1/0,touchEventOptions:{passive:!0}},Mt={first:!0,initial:[0,0],start:0,swiping:!1,xy:[0,0]},Lt="mousemove",Ie="mouseup";function Xt(B,U){if(U===0)return B;const $=Math.PI/180*U;return[B[0]*Math.cos($)+B[1]*Math.sin($),B[1]*Math.cos($)-B[0]*Math.sin($)]}function Vt(B){const{trackMouse:U}=B,$=d.useRef(Object.assign({},Mt)),ie=d.useRef(Object.assign({},Ke)),Fe=d.useRef(Object.assign({},ie.current));let ht;for(ht in Fe.current=Object.assign({},ie.current),ie.current=Object.assign(Object.assign({},Ke),B),Ke)ie.current[ht]===void 0&&(ie.current[ht]=Ke[ht]);const[Rt,F]=d.useMemo(()=>function(H,ge){const Re=at=>{const lt="touches"in at;lt&&at.touches.length>1||H((ft,bt)=>{bt.trackMouse&&!lt&&(document.addEventListener(Lt,He),document.addEventListener(Ie,It));const{clientX:qt,clientY:s1}=lt?at.touches[0]:at,S1=Xt([qt,s1],bt.rotationAngle);return bt.onTouchStartOrOnMouseDown&&bt.onTouchStartOrOnMouseDown({event:at}),Object.assign(Object.assign(Object.assign({},ft),Mt),{initial:S1.slice(),xy:S1,start:at.timeStamp||0})})},He=at=>{H((lt,ft)=>{const bt="touches"in at;if(bt&&at.touches.length>1)return lt;if(at.timeStamp-lt.start>ft.swipeDuration)return lt.swiping?Object.assign(Object.assign({},lt),{swiping:!1}):lt;const{clientX:qt,clientY:s1}=bt?at.touches[0]:at,[S1,pn]=Xt([qt,s1],ft.rotationAngle),q1=S1-lt.xy[0],on=pn-lt.xy[1],_1=Math.abs(q1),wt=Math.abs(on),$i=(at.timeStamp||0)-lt.start,H2=Math.sqrt(_1*_1+wt*wt)/($i||1),Er=[q1/($i||1),on/($i||1)],Ki=function(Ta,y2,La,mn){return Ta>y2?La>0?Se:Ae:mn>0?We:nt}(_1,wt,q1,on),V2=typeof ft.delta=="number"?ft.delta:ft.delta[Ki.toLowerCase()]||Ke.delta;if(_1<V2&&wt<V2&&!lt.swiping)return lt;const u1={absX:_1,absY:wt,deltaX:q1,deltaY:on,dir:Ki,event:at,first:lt.first,initial:lt.initial,velocity:H2,vxvy:Er};u1.first&&ft.onSwipeStart&&ft.onSwipeStart(u1),ft.onSwiping&&ft.onSwiping(u1);let v2=!1;return(ft.onSwiping||ft.onSwiped||ft[`onSwiped${Ki}`])&&(v2=!0),v2&&ft.preventScrollOnSwipe&&ft.trackTouch&&at.cancelable&&at.preventDefault(),Object.assign(Object.assign({},lt),{first:!1,eventData:u1,swiping:!0})})},Oe=at=>{H((lt,ft)=>{let bt;if(lt.swiping&&lt.eventData){if(at.timeStamp-lt.start<ft.swipeDuration){bt=Object.assign(Object.assign({},lt.eventData),{event:at}),ft.onSwiped&&ft.onSwiped(bt);const qt=ft[`onSwiped${bt.dir}`];qt&&qt(bt)}}else ft.onTap&&ft.onTap({event:at});return ft.onTouchEndOrOnMouseUp&&ft.onTouchEndOrOnMouseUp({event:at}),Object.assign(Object.assign(Object.assign({},lt),Mt),{eventData:bt})})},It=at=>{document.removeEventListener(Lt,He),document.removeEventListener(Ie,It),Oe(at)},Ut=(at,lt)=>{let ft=()=>{};if(at&&at.addEventListener){const bt=Object.assign(Object.assign({},Ke.touchEventOptions),lt.touchEventOptions),qt=[["touchstart",Re,bt],["touchmove",He,Object.assign(Object.assign({},bt),lt.preventScrollOnSwipe?{passive:!1}:{})],["touchend",Oe,bt]];qt.forEach(([s1,S1,pn])=>at.addEventListener(s1,S1,pn)),ft=()=>qt.forEach(([s1,S1])=>at.removeEventListener(s1,S1))}return ft},Yt={ref:at=>{at!==null&&H((lt,ft)=>{if(lt.el===at)return lt;const bt={};return lt.el&&lt.el!==at&&lt.cleanUpTouch&&(lt.cleanUpTouch(),bt.cleanUpTouch=void 0),ft.trackTouch&&at&&(bt.cleanUpTouch=Ut(at,ft)),Object.assign(Object.assign(Object.assign({},lt),{el:at}),bt)})}};return ge.trackMouse&&(Yt.onMouseDown=Re),[Yt,Ut]}(H=>$.current=H($.current,ie.current),{trackMouse:U}),[U]);return $.current=function(H,ge,Re,He){return ge.trackTouch&&H.el?H.cleanUpTouch?ge.preventScrollOnSwipe!==Re.preventScrollOnSwipe||ge.touchEventOptions.passive!==Re.touchEventOptions.passive?(H.cleanUpTouch(),Object.assign(Object.assign({},H),{cleanUpTouch:He(H.el,ge)})):H:Object.assign(Object.assign({},H),{cleanUpTouch:He(H.el,ge)}):(H.cleanUpTouch&&H.cleanUpTouch(),Object.assign(Object.assign({},H),{cleanUpTouch:void 0}))}($.current,ie.current,Fe.current,F),Rt}var de=a(697);function yt(B){return yt=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(U){return typeof U}:function(U){return U&&typeof Symbol=="function"&&U.constructor===Symbol&&U!==Symbol.prototype?"symbol":typeof U},yt(B)}function st(B,U){var $=Object.keys(B);if(Object.getOwnPropertySymbols){var ie=Object.getOwnPropertySymbols(B);U&&(ie=ie.filter(function(Fe){return Object.getOwnPropertyDescriptor(B,Fe).enumerable})),$.push.apply($,ie)}return $}function Q(B){for(var U=1;U<arguments.length;U++){var $=arguments[U]!=null?arguments[U]:{};U%2?st(Object($),!0).forEach(function(ie){Ce(B,ie,$[ie])}):Object.getOwnPropertyDescriptors?Object.defineProperties(B,Object.getOwnPropertyDescriptors($)):st(Object($)).forEach(function(ie){Object.defineProperty(B,ie,Object.getOwnPropertyDescriptor($,ie))})}return B}function Ce(B,U,$){return(U=function(ie){var Fe=function(ht,Rt){if(yt(ht)!=="object"||ht===null)return ht;var F=ht[Symbol.toPrimitive];if(F!==void 0){var H=F.call(ht,Rt);if(yt(H)!=="object")return H;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(ht)}(ie,"string");return yt(Fe)==="symbol"?Fe:String(Fe)}(U))in B?Object.defineProperty(B,U,{value:$,enumerable:!0,configurable:!0,writable:!0}):B[U]=$,B}var tt={description:"",fullscreen:"",isFullscreen:!1,originalAlt:"",originalHeight:"",originalWidth:"",originalTitle:"",sizes:"",srcSet:"",loading:"eager"},it=h().memo(function(B){var U=Q(Q({},tt),B),$=U.description,ie=U.fullscreen,Fe=U.handleImageLoaded,ht=U.isFullscreen,Rt=U.onImageError,F=U.original,H=U.originalAlt,ge=U.originalHeight,Re=U.originalWidth,He=U.originalTitle,Oe=U.sizes,It=U.srcSet,Ut=U.loading,Yt=ht&&ie||F;return h().createElement(h().Fragment,null,h().createElement("img",{className:"image-gallery-image",src:Yt,alt:H,srcSet:It,height:ge,width:Re,sizes:Oe,title:He,onLoad:function(at){return Fe(at,F)},onError:Rt,loading:Ut}),$&&h().createElement("span",{className:"image-gallery-description"},$))});it.displayName="Item",it.propTypes={description:de.string,fullscreen:de.string,handleImageLoaded:de.func.isRequired,isFullscreen:de.bool,onImageError:de.func.isRequired,original:de.string.isRequired,originalAlt:de.string,originalHeight:de.string,originalWidth:de.string,originalTitle:de.string,sizes:de.string,srcSet:de.string,loading:de.string};const kt=it;function G(B){return G=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(U){return typeof U}:function(U){return U&&typeof Symbol=="function"&&U.constructor===Symbol&&U!==Symbol.prototype?"symbol":typeof U},G(B)}function Ue(B,U){var $=Object.keys(B);if(Object.getOwnPropertySymbols){var ie=Object.getOwnPropertySymbols(B);U&&(ie=ie.filter(function(Fe){return Object.getOwnPropertyDescriptor(B,Fe).enumerable})),$.push.apply($,ie)}return $}function W(B){for(var U=1;U<arguments.length;U++){var $=arguments[U]!=null?arguments[U]:{};U%2?Ue(Object($),!0).forEach(function(ie){J(B,ie,$[ie])}):Object.getOwnPropertyDescriptors?Object.defineProperties(B,Object.getOwnPropertyDescriptors($)):Ue(Object($)).forEach(function(ie){Object.defineProperty(B,ie,Object.getOwnPropertyDescriptor($,ie))})}return B}function J(B,U,$){return(U=function(ie){var Fe=function(ht,Rt){if(G(ht)!=="object"||ht===null)return ht;var F=ht[Symbol.toPrimitive];if(F!==void 0){var H=F.call(ht,Rt);if(G(H)!=="object")return H;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(ht)}(ie,"string");return G(Fe)==="symbol"?Fe:String(Fe)}(U))in B?Object.defineProperty(B,U,{value:$,enumerable:!0,configurable:!0,writable:!0}):B[U]=$,B}var ne={left:h().createElement("polyline",{points:"15 18 9 12 15 6"}),right:h().createElement("polyline",{points:"9 18 15 12 9 6"}),maximize:h().createElement("path",{d:"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"}),minimize:h().createElement("path",{d:"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"}),play:h().createElement("polygon",{points:"5 3 19 12 5 21 5 3"}),pause:h().createElement(h().Fragment,null,h().createElement("rect",{x:"6",y:"4",width:"4",height:"16"}),h().createElement("rect",{x:"14",y:"4",width:"4",height:"16"}))},Me={strokeWidth:1,viewBox:"0 0 24 24"},Be=function(B){var U=W(W({},Me),B),$=U.strokeWidth,ie=U.viewBox,Fe=U.icon;return h().createElement("svg",{className:"image-gallery-svg",xmlns:"http://www.w3.org/2000/svg",viewBox:ie,fill:"none",stroke:"currentColor",strokeWidth:$,strokeLinecap:"round",strokeLinejoin:"round"},ne[Fe])};Be.propTypes={strokeWidth:de.number,viewBox:de.string,icon:(0,de.oneOf)(["left","right","maximize","minimize","play","pause"]).isRequired};const mt=Be;var ut=h().memo(function(B){var U=B.isFullscreen,$=B.onClick;return h().createElement("button",{type:"button",className:"image-gallery-icon image-gallery-fullscreen-button",onClick:$,"aria-label":"Open Fullscreen"},h().createElement(mt,{strokeWidth:2,icon:U?"minimize":"maximize"}))});ut.displayName="Fullscreen",ut.propTypes={isFullscreen:de.bool.isRequired,onClick:de.func.isRequired};const qe=ut;var ot=h().memo(function(B){var U=B.disabled,$=B.onClick;return h().createElement("button",{type:"button",className:"image-gallery-icon image-gallery-left-nav",disabled:U,onClick:$,"aria-label":"Previous Slide"},h().createElement(mt,{icon:"left",viewBox:"6 0 12 24"}))});ot.displayName="LeftNav",ot.propTypes={disabled:de.bool.isRequired,onClick:de.func.isRequired};const Bt=ot;var m1=h().memo(function(B){var U=B.disabled,$=B.onClick;return h().createElement("button",{type:"button",className:"image-gallery-icon image-gallery-right-nav",disabled:U,onClick:$,"aria-label":"Next Slide"},h().createElement(mt,{icon:"right",viewBox:"6 0 12 24"}))});m1.displayName="RightNav",m1.propTypes={disabled:de.bool.isRequired,onClick:de.func.isRequired};const Ft=m1;var t1=h().memo(function(B){var U=B.isPlaying,$=B.onClick;return h().createElement("button",{type:"button",className:"image-gallery-icon image-gallery-play-button",onClick:$,"aria-label":"Play or Pause Slideshow"},h().createElement(mt,{strokeWidth:2,icon:U?"pause":"play"}))});t1.displayName="PlayPause",t1.propTypes={isPlaying:de.bool.isRequired,onClick:de.func.isRequired};const g1=t1;function w1(B){return w1=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(U){return typeof U}:function(U){return U&&typeof Symbol=="function"&&U.constructor===Symbol&&U!==Symbol.prototype?"symbol":typeof U},w1(B)}function y1(){return y1=Object.assign?Object.assign.bind():function(B){for(var U=1;U<arguments.length;U++){var $=arguments[U];for(var ie in $)Object.prototype.hasOwnProperty.call($,ie)&&(B[ie]=$[ie])}return B},y1.apply(this,arguments)}function ti(B,U){var $=Object.keys(B);if(Object.getOwnPropertySymbols){var ie=Object.getOwnPropertySymbols(B);U&&(ie=ie.filter(function(Fe){return Object.getOwnPropertyDescriptor(B,Fe).enumerable})),$.push.apply($,ie)}return $}function g2(B){for(var U=1;U<arguments.length;U++){var $=arguments[U]!=null?arguments[U]:{};U%2?ti(Object($),!0).forEach(function(ie){Li(B,ie,$[ie])}):Object.getOwnPropertyDescriptors?Object.defineProperties(B,Object.getOwnPropertyDescriptors($)):ti(Object($)).forEach(function(ie){Object.defineProperty(B,ie,Object.getOwnPropertyDescriptor($,ie))})}return B}function Li(B,U,$){return(U=function(ie){var Fe=function(ht,Rt){if(w1(ht)!=="object"||ht===null)return ht;var F=ht[Symbol.toPrimitive];if(F!==void 0){var H=F.call(ht,Rt);if(w1(H)!=="object")return H;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(ht)}(ie,"string");return w1(Fe)==="symbol"?Fe:String(Fe)}(U))in B?Object.defineProperty(B,U,{value:$,enumerable:!0,configurable:!0,writable:!0}):B[U]=$,B}var ni={className:"",delta:0,onSwiping:function(){},onSwiped:function(){}},O=function(B){var U=g2(g2({},ni),B),$=U.children,ie=U.className,Fe=Vt({delta:U.delta,onSwiping:U.onSwiping,onSwiped:U.onSwiped});return h().createElement("div",y1({},Fe,{className:ie}),$)};O.propTypes={children:de.node.isRequired,className:de.string,delta:de.number,onSwiped:de.func,onSwiping:de.func};const le=O;function fe(B){return fe=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(U){return typeof U}:function(U){return U&&typeof Symbol=="function"&&U.constructor===Symbol&&U!==Symbol.prototype?"symbol":typeof U},fe(B)}function ye(B,U){var $=Object.keys(B);if(Object.getOwnPropertySymbols){var ie=Object.getOwnPropertySymbols(B);U&&(ie=ie.filter(function(Fe){return Object.getOwnPropertyDescriptor(B,Fe).enumerable})),$.push.apply($,ie)}return $}function pe(B){for(var U=1;U<arguments.length;U++){var $=arguments[U]!=null?arguments[U]:{};U%2?ye(Object($),!0).forEach(function(ie){Dt(B,ie,$[ie])}):Object.getOwnPropertyDescriptors?Object.defineProperties(B,Object.getOwnPropertyDescriptors($)):ye(Object($)).forEach(function(ie){Object.defineProperty(B,ie,Object.getOwnPropertyDescriptor($,ie))})}return B}function rt(B,U){for(var $=0;$<U.length;$++){var ie=U[$];ie.enumerable=ie.enumerable||!1,ie.configurable=!0,"value"in ie&&(ie.writable=!0),Object.defineProperty(B,zt(ie.key),ie)}}function Ve(B,U){return Ve=Object.setPrototypeOf?Object.setPrototypeOf.bind():function($,ie){return $.__proto__=ie,$},Ve(B,U)}function Ze(B,U){if(U&&(fe(U)==="object"||typeof U=="function"))return U;if(U!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return Ye(B)}function Ye(B){if(B===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return B}function At(B){return At=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(U){return U.__proto__||Object.getPrototypeOf(U)},At(B)}function Dt(B,U,$){return(U=zt(U))in B?Object.defineProperty(B,U,{value:$,enumerable:!0,configurable:!0,writable:!0}):B[U]=$,B}function zt(B){var U=function($,ie){if(fe($)!=="object"||$===null)return $;var Fe=$[Symbol.toPrimitive];if(Fe!==void 0){var ht=Fe.call($,ie);if(fe(ht)!=="object")return ht;throw new TypeError("@@toPrimitive must return a primitive value.")}return String($)}(B,"string");return fe(U)==="symbol"?U:String(U)}var b1=["fullscreenchange","MSFullscreenChange","mozfullscreenchange","webkitfullscreenchange"],sn=(0,de.arrayOf)((0,de.shape)({srcSet:de.string,media:de.string}));function v1(B){var U=parseInt(B.keyCode||B.which||0,10);return U===66||U===62}var z1=function(B){(function(F,H){if(typeof H!="function"&&H!==null)throw new TypeError("Super expression must either be null or a function");F.prototype=Object.create(H&&H.prototype,{constructor:{value:F,writable:!0,configurable:!0}}),Object.defineProperty(F,"prototype",{writable:!1}),H&&Ve(F,H)})(Rt,B);var U,$,ie,Fe,ht=(ie=Rt,Fe=function(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}(),function(){var F,H=At(ie);if(Fe){var ge=At(this).constructor;F=Reflect.construct(H,arguments,ge)}else F=H.apply(this,arguments);return Ze(this,F)});function Rt(F){var H;return function(ge,Re){if(!(ge instanceof Re))throw new TypeError("Cannot call a class as a function")}(this,Rt),Dt(Ye(H=ht.call(this,F)),"onBulletClick",function(ge,Re){var He=H.props,Oe=He.onBulletClick,It=He.items,Ut=H.state.currentIndex;ge.target.blur(),Ut!==Re&&(It.length===2?H.slideToIndexWithStyleReset(Re,ge):H.slideToIndex(Re,ge)),Oe&&Oe(ge,Re)}),H.state={currentIndex:F.startIndex,thumbsTranslate:0,thumbsSwipedTranslate:0,currentSlideOffset:0,galleryWidth:0,thumbnailsWrapperWidth:0,thumbnailsWrapperHeight:0,thumbsStyle:{transition:"all ".concat(F.slideDuration,"ms ease-out")},isFullscreen:!1,isSwipingThumbnail:!1,isPlaying:!1},H.loadedImages={},H.imageGallery=h().createRef(),H.thumbnailsWrapper=h().createRef(),H.thumbnails=h().createRef(),H.imageGallerySlideWrapper=h().createRef(),H.handleImageLoaded=H.handleImageLoaded.bind(Ye(H)),H.handleKeyDown=H.handleKeyDown.bind(Ye(H)),H.handleMouseDown=H.handleMouseDown.bind(Ye(H)),H.handleResize=H.handleResize.bind(Ye(H)),H.handleTouchMove=H.handleTouchMove.bind(Ye(H)),H.handleOnSwiped=H.handleOnSwiped.bind(Ye(H)),H.handleScreenChange=H.handleScreenChange.bind(Ye(H)),H.handleSwiping=H.handleSwiping.bind(Ye(H)),H.handleThumbnailSwiping=H.handleThumbnailSwiping.bind(Ye(H)),H.handleOnThumbnailSwiped=H.handleOnThumbnailSwiped.bind(Ye(H)),H.onThumbnailMouseLeave=H.onThumbnailMouseLeave.bind(Ye(H)),H.handleImageError=H.handleImageError.bind(Ye(H)),H.pauseOrPlay=H.pauseOrPlay.bind(Ye(H)),H.renderThumbInner=H.renderThumbInner.bind(Ye(H)),H.renderItem=H.renderItem.bind(Ye(H)),H.slideLeft=H.slideLeft.bind(Ye(H)),H.slideRight=H.slideRight.bind(Ye(H)),H.toggleFullScreen=H.toggleFullScreen.bind(Ye(H)),H.togglePlay=H.togglePlay.bind(Ye(H)),H.unthrottledSlideToIndex=H.slideToIndex,H.slideToIndex=K(H.unthrottledSlideToIndex,F.slideDuration,{trailing:!1}),F.lazyLoad&&(H.lazyLoaded=[]),H}return U=Rt,$=[{key:"componentDidMount",value:function(){var F=this.props,H=F.autoPlay,ge=F.useWindowKeyDown;H&&this.play(),ge?window.addEventListener("keydown",this.handleKeyDown):this.imageGallery.current.addEventListener("keydown",this.handleKeyDown),window.addEventListener("mousedown",this.handleMouseDown),window.addEventListener("touchmove",this.handleTouchMove,{passive:!1}),this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper),this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper),this.addScreenChangeEvent()}},{key:"componentDidUpdate",value:function(F,H){var ge=this.props,Re=ge.items,He=ge.lazyLoad,Oe=ge.slideDuration,It=ge.slideInterval,Ut=ge.startIndex,Yt=ge.thumbnailPosition,at=ge.showThumbnails,lt=ge.useWindowKeyDown,ft=this.state,bt=ft.currentIndex,qt=ft.isPlaying,s1=F.items.length!==Re.length,S1=!re()(F.items,Re),pn=F.startIndex!==Ut,q1=F.thumbnailPosition!==Yt,on=F.showThumbnails!==at;It===F.slideInterval&&Oe===F.slideDuration||qt&&(this.pause(),this.play()),q1&&(this.removeResizeObserver(),this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper),this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper)),on&&at&&this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper),on&&!at&&this.removeThumbnailsResizeObserver(),(s1||on)&&this.handleResize(),H.currentIndex!==bt&&this.slideThumbnailBar(),F.slideDuration!==Oe&&(this.slideToIndex=K(this.unthrottledSlideToIndex,Oe,{trailing:!1})),!He||F.lazyLoad&&!S1||(this.lazyLoaded=[]),lt!==F.useWindowKeyDown&&(lt?(this.imageGallery.current.removeEventListener("keydown",this.handleKeyDown),window.addEventListener("keydown",this.handleKeyDown)):(window.removeEventListener("keydown",this.handleKeyDown),this.imageGallery.current.addEventListener("keydown",this.handleKeyDown))),(pn||S1)&&this.setState({currentIndex:Ut,slideStyle:{transition:"none"}})}},{key:"componentWillUnmount",value:function(){var F=this.props.useWindowKeyDown;window.removeEventListener("mousedown",this.handleMouseDown),window.removeEventListener("touchmove",this.handleTouchMove),this.removeScreenChangeEvent(),this.removeResizeObserver(),this.playPauseIntervalId&&(window.clearInterval(this.playPauseIntervalId),this.playPauseIntervalId=null),this.transitionTimer&&window.clearTimeout(this.transitionTimer),F?window.removeEventListener("keydown",this.handleKeyDown):this.imageGallery.current.removeEventListener("keydown",this.handleKeyDown)}},{key:"onSliding",value:function(){var F=this,H=this.state,ge=H.currentIndex,Re=H.isTransitioning,He=this.props,Oe=He.onSlide,It=He.slideDuration;this.transitionTimer=window.setTimeout(function(){Re&&(F.setState({isTransitioning:!Re,isSwipingThumbnail:!1}),Oe&&Oe(ge))},It+50)}},{key:"onThumbnailClick",value:function(F,H){var ge=this.props,Re=ge.onThumbnailClick,He=ge.items,Oe=this.state.currentIndex;F.target.parentNode.parentNode.blur(),Oe!==H&&(He.length===2?this.slideToIndexWithStyleReset(H,F):this.slideToIndex(H,F)),Re&&Re(F,H)}},{key:"onThumbnailMouseOver",value:function(F,H){var ge=this;this.thumbnailMouseOverTimer&&(window.clearTimeout(this.thumbnailMouseOverTimer),this.thumbnailMouseOverTimer=null),this.thumbnailMouseOverTimer=window.setTimeout(function(){ge.slideToIndex(H),ge.pause()},300)}},{key:"onThumbnailMouseLeave",value:function(){if(this.thumbnailMouseOverTimer){var F=this.props.autoPlay;window.clearTimeout(this.thumbnailMouseOverTimer),this.thumbnailMouseOverTimer=null,F&&this.play()}}},{key:"setThumbsTranslate",value:function(F){this.setState({thumbsTranslate:F})}},{key:"setModalFullscreen",value:function(F){var H=this.props.onScreenChange;this.setState({modalFullscreen:F}),H&&H(F)}},{key:"getThumbsTranslate",value:function(F){var H,ge=this.props,Re=ge.disableThumbnailScroll,He=ge.items,Oe=this.state,It=Oe.thumbnailsWrapperWidth,Ut=Oe.thumbnailsWrapperHeight,Yt=this.thumbnails&&this.thumbnails.current;if(Re)return 0;if(Yt){if(this.isThumbnailVertical()){if(Yt.scrollHeight<=Ut)return 0;H=Yt.scrollHeight-Ut}else{if(Yt.scrollWidth<=It||It<=0)return 0;H=Yt.scrollWidth-It}return F*(H/(He.length-1))}return 0}},{key:"getThumbnailPositionClassName",value:function(F){switch(F){case"left":F=" ".concat("image-gallery-thumbnails-left");break;case"right":F=" ".concat("image-gallery-thumbnails-right");break;case"bottom":F=" ".concat("image-gallery-thumbnails-bottom");break;case"top":F=" ".concat("image-gallery-thumbnails-top")}return F}},{key:"getAlignmentClassName",value:function(F){var H=this.state.currentIndex,ge=this.props,Re=ge.infinite,He=ge.items,Oe="",It="image-gallery-left",Ut="image-gallery-right";switch(F){case H-1:Oe=" ".concat(It);break;case H:Oe=" ".concat("image-gallery-center");break;case H+1:Oe=" ".concat(Ut)}return He.length>=3&&Re&&(F===0&&H===He.length-1?Oe=" ".concat(Ut):F===He.length-1&&H===0&&(Oe=" ".concat(It))),Oe}},{key:"getTranslateXForTwoSlide",value:function(F){var H=this.state,ge=H.currentIndex,Re=H.currentSlideOffset,He=H.previousIndex,Oe=ge!==He,It=F===0&&He===0,Ut=F===1&&He===1,Yt=F===0&&ge===1,at=F===1&&ge===0,lt=Re===0,ft=-100*ge+100*F+Re;return Re>0?this.direction="left":Re<0&&(this.direction="right"),at&&Re>0&&(ft=-100+Re),Yt&&Re<0&&(ft=100+Re),Oe?It&&lt&&this.direction==="left"?ft=100:Ut&&lt&&this.direction==="right"&&(ft=-100):(at&&lt&&this.direction==="left"&&(ft=-100),Yt&&lt&&this.direction==="right"&&(ft=100)),ft}},{key:"getThumbnailBarHeight",value:function(){return this.isThumbnailVertical()?{height:this.state.gallerySlideWrapperHeight}:{}}},{key:"getSlideStyle",value:function(F){var H=this.state,ge=H.currentIndex,Re=H.currentSlideOffset,He=H.slideStyle,Oe=this.props,It=Oe.infinite,Ut=Oe.items,Yt=Oe.useTranslate3D,at=Oe.isRTL,lt=-100*ge,ft=Ut.length-1,bt=(lt+100*F)*(at?-1:1)+Re;It&&Ut.length>2&&(ge===0&&F===ft?bt=-100*(at?-1:1)+Re:ge===ft&&F===0&&(bt=100*(at?-1:1)+Re)),It&&Ut.length===2&&(bt=this.getTranslateXForTwoSlide(F));var qt="translate(".concat(bt,"%, 0)");return Yt&&(qt="translate3d(".concat(bt,"%, 0, 0)")),pe({display:this.isSlideVisible(F)?"inherit":"none",WebkitTransform:qt,MozTransform:qt,msTransform:qt,OTransform:qt,transform:qt},He)}},{key:"getCurrentIndex",value:function(){return this.state.currentIndex}},{key:"getThumbnailStyle",value:function(){var F,H=this.props,ge=H.useTranslate3D,Re=H.isRTL,He=this.state,Oe=He.thumbsTranslate,It=He.thumbsStyle,Ut=Re?-1*Oe:Oe;return this.isThumbnailVertical()?(F="translate(0, ".concat(Oe,"px)"),ge&&(F="translate3d(0, ".concat(Oe,"px, 0)"))):(F="translate(".concat(Ut,"px, 0)"),ge&&(F="translate3d(".concat(Ut,"px, 0, 0)"))),pe({WebkitTransform:F,MozTransform:F,msTransform:F,OTransform:F,transform:F},It)}},{key:"getSlideItems",value:function(){var F=this,H=this.state.currentIndex,ge=this.props,Re=ge.items,He=ge.slideOnThumbnailOver,Oe=ge.onClick,It=ge.lazyLoad,Ut=ge.onTouchMove,Yt=ge.onTouchEnd,at=ge.onTouchStart,lt=ge.onMouseOver,ft=ge.onMouseLeave,bt=ge.renderItem,qt=ge.renderThumbInner,s1=ge.showThumbnails,S1=ge.showBullets,pn=[],q1=[],on=[];return Re.forEach(function(_1,wt){var $i=F.getAlignmentClassName(wt),H2=_1.originalClass?" ".concat(_1.originalClass):"",Er=_1.thumbnailClass?" ".concat(_1.thumbnailClass):"",Ki=_1.renderItem||bt||F.renderItem,V2=_1.renderThumbInner||qt||F.renderThumbInner,u1=!It||$i||F.lazyLoaded[wt];u1&&It&&!F.lazyLoaded[wt]&&(F.lazyLoaded[wt]=!0);var v2=F.getSlideStyle(wt),Ta=h().createElement("div",{"aria-label":"Go to Slide ".concat(wt+1),key:"slide-".concat(wt),tabIndex:"-1",className:"image-gallery-slide ".concat($i," ").concat(H2),style:v2,onClick:Oe,onKeyUp:F.handleSlideKeyUp,onTouchMove:Ut,onTouchEnd:Yt,onTouchStart:at,onMouseOver:lt,onFocus:lt,onMouseLeave:ft,role:"button"},u1?Ki(_1):h().createElement("div",{style:{height:"100%"}}));if(pn.push(Ta),s1&&_1.thumbnail){var y2=l("image-gallery-thumbnail",Er,{active:H===wt});q1.push(h().createElement("button",{key:"thumbnail-".concat(wt),type:"button",tabIndex:"0","aria-pressed":H===wt?"true":"false","aria-label":"Go to Slide ".concat(wt+1),className:y2,onMouseLeave:He?F.onThumbnailMouseLeave:null,onMouseOver:function(mn){return F.handleThumbnailMouseOver(mn,wt)},onFocus:function(mn){return F.handleThumbnailMouseOver(mn,wt)},onKeyUp:function(mn){return F.handleThumbnailKeyUp(mn,wt)},onClick:function(mn){return F.onThumbnailClick(mn,wt)}},V2(_1)))}if(S1){var La=l("image-gallery-bullet",_1.bulletClass,{active:H===wt});on.push(h().createElement("button",{type:"button",key:"bullet-".concat(wt),className:La,onClick:function(mn){return F.onBulletClick(mn,wt)},"aria-pressed":H===wt?"true":"false","aria-label":"Go to Slide ".concat(wt+1)}))}}),{slides:pn,thumbnails:q1,bullets:on}}},{key:"ignoreIsTransitioning",value:function(){var F=this.props.items,H=this.state,ge=H.previousIndex,Re=H.currentIndex,He=F.length-1;return Math.abs(ge-Re)>1&&!(ge===0&&Re===He)&&!(ge===He&&Re===0)}},{key:"isFirstOrLastSlide",value:function(F){return F===this.props.items.length-1||F===0}},{key:"slideIsTransitioning",value:function(F){var H=this.state,ge=H.isTransitioning,Re=H.previousIndex,He=H.currentIndex;return ge&&!(F===Re||F===He)}},{key:"isSlideVisible",value:function(F){return!this.slideIsTransitioning(F)||this.ignoreIsTransitioning()&&!this.isFirstOrLastSlide(F)}},{key:"slideThumbnailBar",value:function(){var F=this.state,H=F.currentIndex,ge=F.isSwipingThumbnail,Re=-this.getThumbsTranslate(H);ge||(H===0?this.setState({thumbsTranslate:0,thumbsSwipedTranslate:0}):this.setState({thumbsTranslate:Re,thumbsSwipedTranslate:Re}))}},{key:"canSlide",value:function(){return this.props.items.length>=2}},{key:"canSlideLeft",value:function(){return this.props.infinite||this.canSlidePrevious()}},{key:"canSlideRight",value:function(){return this.props.infinite||this.canSlideNext()}},{key:"canSlidePrevious",value:function(){return this.state.currentIndex>0}},{key:"canSlideNext",value:function(){return this.state.currentIndex<this.props.items.length-1}},{key:"handleSwiping",value:function(F){var H=F.event,ge=F.absX,Re=F.dir,He=this.props,Oe=He.disableSwipe,It=He.stopPropagation,Ut=this.state,Yt=Ut.galleryWidth,at=Ut.isTransitioning,lt=Ut.swipingUpDown,ft=Ut.swipingLeftRight;if(Re!==nt&&Re!==We&&!lt||ft){if(Re!==Ae&&Re!==Se||ft||this.setState({swipingLeftRight:!0}),!Oe){var bt=this.props.swipingTransitionDuration;if(It&&H.preventDefault(),at)this.setState({currentSlideOffset:0});else{var qt=Re===Se?1:-1,s1=ge/Yt*100;Math.abs(s1)>=100&&(s1=100);var S1={transition:"transform ".concat(bt,"ms ease-out")};this.setState({currentSlideOffset:qt*s1,slideStyle:S1})}}}else lt||this.setState({swipingUpDown:!0})}},{key:"handleThumbnailSwiping",value:function(F){var H=F.event,ge=F.absX,Re=F.absY,He=F.dir,Oe=this.props,It=Oe.stopPropagation,Ut=Oe.swipingThumbnailTransitionDuration,Yt=this.state,at=Yt.thumbsSwipedTranslate,lt=Yt.thumbnailsWrapperHeight,ft=Yt.thumbnailsWrapperWidth,bt=Yt.swipingUpDown,qt=Yt.swipingLeftRight;if(this.isThumbnailVertical()){if((He===Ae||He===Se||qt)&&!bt)return void(qt||this.setState({swipingLeftRight:!0}));He!==nt&&He!==We||bt||this.setState({swipingUpDown:!0})}else{if((He===nt||He===We||bt)&&!qt)return void(bt||this.setState({swipingUpDown:!0}));He!==Ae&&He!==Se||qt||this.setState({swipingLeftRight:!0})}var s1,S1,pn,q1,on,_1=this.thumbnails&&this.thumbnails.current;if(this.isThumbnailVertical()?(s1=at+(He===We?Re:-Re),S1=_1.scrollHeight-lt+20,pn=Math.abs(s1)>S1,q1=s1>20,on=_1.scrollHeight<=lt):(s1=at+(He===Se?ge:-ge),S1=_1.scrollWidth-ft+20,pn=Math.abs(s1)>S1,q1=s1>20,on=_1.scrollWidth<=ft),!on&&(He!==Ae&&He!==nt||!pn)&&(He!==Se&&He!==We||!q1)){It&&H.stopPropagation();var wt={transition:"transform ".concat(Ut,"ms ease-out")};this.setState({thumbsTranslate:s1,thumbsStyle:wt})}}},{key:"handleOnThumbnailSwiped",value:function(){var F=this.state.thumbsTranslate,H=this.props.slideDuration;this.resetSwipingDirection(),this.setState({isSwipingThumbnail:!0,thumbsSwipedTranslate:F,thumbsStyle:{transition:"all ".concat(H,"ms ease-out")}})}},{key:"sufficientSwipe",value:function(){var F=this.state.currentSlideOffset,H=this.props.swipeThreshold;return Math.abs(F)>H}},{key:"resetSwipingDirection",value:function(){var F=this.state,H=F.swipingUpDown,ge=F.swipingLeftRight;H&&this.setState({swipingUpDown:!1}),ge&&this.setState({swipingLeftRight:!1})}},{key:"handleOnSwiped",value:function(F){var H=F.event,ge=F.dir,Re=F.velocity,He=this.props,Oe=He.disableSwipe,It=He.stopPropagation,Ut=He.flickThreshold;if(!Oe){var Yt=this.props.isRTL;It&&H.stopPropagation(),this.resetSwipingDirection();var at=(ge===Ae?1:-1)*(Yt?-1:1),lt=Re>Ut&&!(ge===nt||ge===We);this.handleOnSwipedTo(at,lt)}}},{key:"handleOnSwipedTo",value:function(F,H){var ge=this.state,Re=ge.currentIndex,He=ge.isTransitioning,Oe=Re;!this.sufficientSwipe()&&!H||He||(Oe+=F),(F===-1&&!this.canSlideLeft()||F===1&&!this.canSlideRight())&&(Oe=Re),this.unthrottledSlideToIndex(Oe)}},{key:"handleTouchMove",value:function(F){this.state.swipingLeftRight&&F.preventDefault()}},{key:"handleMouseDown",value:function(){this.imageGallery.current.classList.add("image-gallery-using-mouse")}},{key:"handleKeyDown",value:function(F){var H=this.props,ge=H.disableKeyDown,Re=H.useBrowserFullscreen,He=this.state.isFullscreen;if(this.imageGallery.current.classList.remove("image-gallery-using-mouse"),!ge)switch(parseInt(F.keyCode||F.which||0,10)){case 37:this.canSlideLeft()&&!this.playPauseIntervalId&&this.slideLeft(F);break;case 39:this.canSlideRight()&&!this.playPauseIntervalId&&this.slideRight(F);break;case 27:He&&!Re&&this.exitFullScreen()}}},{key:"handleImageError",value:function(F){var H=this.props.onErrorImageURL;H&&F.target.src.indexOf(H)===-1&&(F.target.src=H)}},{key:"removeThumbnailsResizeObserver",value:function(){this.resizeThumbnailWrapperObserver&&this.thumbnailsWrapper&&this.thumbnailsWrapper.current&&(this.resizeThumbnailWrapperObserver.unobserve(this.thumbnailsWrapper.current),this.resizeThumbnailWrapperObserver=null)}},{key:"removeResizeObserver",value:function(){this.resizeSlideWrapperObserver&&this.imageGallerySlideWrapper&&this.imageGallerySlideWrapper.current&&(this.resizeSlideWrapperObserver.unobserve(this.imageGallerySlideWrapper.current),this.resizeSlideWrapperObserver=null),this.removeThumbnailsResizeObserver()}},{key:"handleResize",value:function(){var F=this.state.currentIndex;this.imageGallery&&(this.imageGallery&&this.imageGallery.current&&this.setState({galleryWidth:this.imageGallery.current.offsetWidth}),this.imageGallerySlideWrapper&&this.imageGallerySlideWrapper.current&&this.setState({gallerySlideWrapperHeight:this.imageGallerySlideWrapper.current.offsetHeight}),this.setThumbsTranslate(-this.getThumbsTranslate(F)))}},{key:"initSlideWrapperResizeObserver",value:function(F){var H=this;F&&!F.current||(this.resizeSlideWrapperObserver=new ke(z(function(ge){ge&&ge.forEach(function(Re){H.setState({thumbnailsWrapperWidth:Re.contentRect.width},H.handleResize)})},50)),this.resizeSlideWrapperObserver.observe(F.current))}},{key:"initThumbnailWrapperResizeObserver",value:function(F){var H=this;F&&!F.current||(this.resizeThumbnailWrapperObserver=new ke(z(function(ge){ge&&ge.forEach(function(Re){H.setState({thumbnailsWrapperHeight:Re.contentRect.height},H.handleResize)})},50)),this.resizeThumbnailWrapperObserver.observe(F.current))}},{key:"toggleFullScreen",value:function(){this.state.isFullscreen?this.exitFullScreen():this.fullScreen()}},{key:"togglePlay",value:function(){this.playPauseIntervalId?this.pause():this.play()}},{key:"handleScreenChange",value:function(){var F=this.props,H=F.onScreenChange,ge=F.useBrowserFullscreen,Re=document.fullscreenElement||document.msFullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement,He=this.imageGallery.current===Re;H&&H(He),ge&&this.setState({isFullscreen:He})}},{key:"slideToIndex",value:function(F,H){var ge=this.state,Re=ge.currentIndex,He=ge.isTransitioning,Oe=this.props,It=Oe.items,Ut=Oe.slideDuration,Yt=Oe.onBeforeSlide;if(!He){H&&this.playPauseIntervalId&&(this.pause(!1),this.play(!1));var at=It.length-1,lt=F;F<0?lt=at:F>at&&(lt=0),Yt&&lt!==Re&&Yt(lt),this.setState({previousIndex:Re,currentIndex:lt,isTransitioning:lt!==Re,currentSlideOffset:0,slideStyle:{transition:"all ".concat(Ut,"ms ease-out")}},this.onSliding)}}},{key:"slideLeft",value:function(F){var H=this.props.isRTL;this.slideTo(F,H?"right":"left")}},{key:"slideRight",value:function(F){var H=this.props.isRTL;this.slideTo(F,H?"left":"right")}},{key:"slideTo",value:function(F,H){var ge=this.state,Re=ge.currentIndex,He=ge.isTransitioning,Oe=this.props.items,It=Re+(H==="left"?-1:1);He||(Oe.length===2?this.slideToIndexWithStyleReset(It,F):this.slideToIndex(It,F))}},{key:"slideToIndexWithStyleReset",value:function(F,H){var ge=this,Re=this.state,He=Re.currentIndex,Oe=Re.currentSlideOffset;this.setState({currentSlideOffset:Oe+(He>F?.001:-.001),slideStyle:{transition:"none"}},function(){window.setTimeout(function(){return ge.slideToIndex(F,H)},25)})}},{key:"handleThumbnailMouseOver",value:function(F,H){this.props.slideOnThumbnailOver&&this.onThumbnailMouseOver(F,H)}},{key:"handleThumbnailKeyUp",value:function(F,H){v1(F)&&this.onThumbnailClick(F,H)}},{key:"handleSlideKeyUp",value:function(F){v1(F)&&(0,this.props.onClick)(F)}},{key:"isThumbnailVertical",value:function(){var F=this.props.thumbnailPosition;return F==="left"||F==="right"}},{key:"addScreenChangeEvent",value:function(){var F=this;b1.forEach(function(H){document.addEventListener(H,F.handleScreenChange)})}},{key:"removeScreenChangeEvent",value:function(){var F=this;b1.forEach(function(H){document.removeEventListener(H,F.handleScreenChange)})}},{key:"fullScreen",value:function(){var F=this.props.useBrowserFullscreen,H=this.imageGallery.current;F?H.requestFullscreen?H.requestFullscreen():H.msRequestFullscreen?H.msRequestFullscreen():H.mozRequestFullScreen?H.mozRequestFullScreen():H.webkitRequestFullscreen?H.webkitRequestFullscreen():this.setModalFullscreen(!0):this.setModalFullscreen(!0),this.setState({isFullscreen:!0})}},{key:"exitFullScreen",value:function(){var F=this.state.isFullscreen,H=this.props.useBrowserFullscreen;F&&(H?document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen?document.msExitFullscreen():this.setModalFullscreen(!1):this.setModalFullscreen(!1),this.setState({isFullscreen:!1}))}},{key:"pauseOrPlay",value:function(){var F=this.props.infinite,H=this.state.currentIndex;F||this.canSlideRight()?this.slideToIndex(H+1):this.pause()}},{key:"play",value:function(){var F=!(arguments.length>0&&arguments[0]!==void 0)||arguments[0],H=this.props,ge=H.onPlay,Re=H.slideInterval,He=H.slideDuration,Oe=this.state.currentIndex;this.playPauseIntervalId||(this.setState({isPlaying:!0}),this.playPauseIntervalId=window.setInterval(this.pauseOrPlay,Math.max(Re,He)),ge&&F&&ge(Oe))}},{key:"pause",value:function(){var F=!(arguments.length>0&&arguments[0]!==void 0)||arguments[0],H=this.props.onPause,ge=this.state.currentIndex;this.playPauseIntervalId&&(window.clearInterval(this.playPauseIntervalId),this.playPauseIntervalId=null,this.setState({isPlaying:!1}),H&&F&&H(ge))}},{key:"isImageLoaded",value:function(F){return!!this.loadedImages[F.original]||(this.loadedImages[F.original]=!0,!1)}},{key:"handleImageLoaded",value:function(F,H){var ge=this.props.onImageLoad;!this.loadedImages[H]&&ge&&(this.loadedImages[H]=!0,ge(F))}},{key:"renderItem",value:function(F){var H=this.state.isFullscreen,ge=this.props.onImageError||this.handleImageError;return h().createElement(kt,{description:F.description,fullscreen:F.fullscreen,handleImageLoaded:this.handleImageLoaded,isFullscreen:H,onImageError:ge,original:F.original,originalAlt:F.originalAlt,originalHeight:F.originalHeight,originalWidth:F.originalWidth,originalTitle:F.originalTitle,sizes:F.sizes,loading:F.loading,srcSet:F.srcSet})}},{key:"renderThumbInner",value:function(F){var H=this.props.onThumbnailError||this.handleImageError;return h().createElement("span",{className:"image-gallery-thumbnail-inner"},h().createElement("img",{className:"image-gallery-thumbnail-image",src:F.thumbnail,height:F.thumbnailHeight,width:F.thumbnailWidth,alt:F.thumbnailAlt,title:F.thumbnailTitle,loading:F.thumbnailLoading,onError:H}),F.thumbnailLabel&&h().createElement("div",{className:"image-gallery-thumbnail-label"},F.thumbnailLabel))}},{key:"render",value:function(){var F=this.state,H=F.currentIndex,ge=F.isFullscreen,Re=F.modalFullscreen,He=F.isPlaying,Oe=this.props,It=Oe.additionalClass,Ut=Oe.disableThumbnailSwipe,Yt=Oe.indexSeparator,at=Oe.isRTL,lt=Oe.items,ft=Oe.thumbnailPosition,bt=Oe.renderFullscreenButton,qt=Oe.renderCustomControls,s1=Oe.renderLeftNav,S1=Oe.renderRightNav,pn=Oe.showBullets,q1=Oe.showFullscreenButton,on=Oe.showIndex,_1=Oe.showThumbnails,wt=Oe.showNav,$i=Oe.showPlayButton,H2=Oe.renderPlayPauseButton,Er=this.getThumbnailStyle(),Ki=this.getSlideItems(),V2=Ki.slides,u1=Ki.thumbnails,v2=Ki.bullets,Ta=l("image-gallery-slide-wrapper",this.getThumbnailPositionClassName(ft),{"image-gallery-rtl":at}),y2=h().createElement("div",{ref:this.imageGallerySlideWrapper,className:Ta},qt&&qt(),this.canSlide()?h().createElement(h().Fragment,null,wt&&h().createElement(h().Fragment,null,s1(this.slideLeft,!this.canSlideLeft()),S1(this.slideRight,!this.canSlideRight())),h().createElement(le,{className:"image-gallery-swipe",delta:0,onSwiping:this.handleSwiping,onSwiped:this.handleOnSwiped},h().createElement("div",{className:"image-gallery-slides"},V2))):h().createElement("div",{className:"image-gallery-slides"},V2),$i&&H2(this.togglePlay,He),pn&&h().createElement("div",{className:"image-gallery-bullets"},h().createElement("div",{className:"image-gallery-bullets-container",role:"navigation","aria-label":"Bullet Navigation"},v2)),q1&&bt(this.toggleFullScreen,ge),on&&h().createElement("div",{className:"image-gallery-index"},h().createElement("span",{className:"image-gallery-index-current"},H+1),h().createElement("span",{className:"image-gallery-index-separator"},Yt),h().createElement("span",{className:"image-gallery-index-total"},lt.length))),La=l("image-gallery",It,{"fullscreen-modal":Re}),mn=l("image-gallery-content",this.getThumbnailPositionClassName(ft),{fullscreen:ge}),Ci=l("image-gallery-thumbnails-wrapper",this.getThumbnailPositionClassName(ft),{"thumbnails-wrapper-rtl":!this.isThumbnailVertical()&&at},{"thumbnails-swipe-horizontal":!this.isThumbnailVertical()&&!Ut},{"thumbnails-swipe-vertical":this.isThumbnailVertical()&&!Ut});return h().createElement("div",{ref:this.imageGallery,className:La,"aria-live":"polite"},h().createElement("div",{className:mn},(ft==="bottom"||ft==="right")&&y2,_1&&u1.length>0?h().createElement(le,{className:Ci,delta:0,onSwiping:!Ut&&this.handleThumbnailSwiping,onSwiped:!Ut&&this.handleOnThumbnailSwiped},h().createElement("div",{className:"image-gallery-thumbnails",ref:this.thumbnailsWrapper,style:this.getThumbnailBarHeight()},h().createElement("nav",{ref:this.thumbnails,className:"image-gallery-thumbnails-container",style:Er,"aria-label":"Thumbnail Navigation"},u1))):null,(ft==="top"||ft==="left")&&y2))}}],$&&rt(U.prototype,$),Object.defineProperty(U,"prototype",{writable:!1}),Rt}(h().Component);z1.propTypes={flickThreshold:de.number,items:(0,de.arrayOf)((0,de.shape)({bulletClass:de.string,bulletOnClick:de.func,description:de.string,original:de.string,originalHeight:de.number,originalWidth:de.number,loading:de.string,thumbnailHeight:de.number,thumbnailWidth:de.number,thumbnailLoading:de.string,fullscreen:de.string,originalAlt:de.string,originalTitle:de.string,thumbnail:de.string,thumbnailAlt:de.string,thumbnailLabel:de.string,thumbnailTitle:de.string,originalClass:de.string,thumbnailClass:de.string,renderItem:de.func,renderThumbInner:de.func,imageSet:sn,srcSet:de.string,sizes:de.string})).isRequired,showNav:de.bool,autoPlay:de.bool,lazyLoad:de.bool,infinite:de.bool,showIndex:de.bool,showBullets:de.bool,showThumbnails:de.bool,showPlayButton:de.bool,showFullscreenButton:de.bool,disableThumbnailScroll:de.bool,disableKeyDown:de.bool,disableSwipe:de.bool,disableThumbnailSwipe:de.bool,useBrowserFullscreen:de.bool,onErrorImageURL:de.string,indexSeparator:de.string,thumbnailPosition:(0,de.oneOf)(["top","bottom","left","right"]),startIndex:de.number,slideDuration:de.number,slideInterval:de.number,slideOnThumbnailOver:de.bool,swipeThreshold:de.number,swipingTransitionDuration:de.number,swipingThumbnailTransitionDuration:de.number,onSlide:de.func,onBeforeSlide:de.func,onScreenChange:de.func,onPause:de.func,onPlay:de.func,onClick:de.func,onImageLoad:de.func,onImageError:de.func,onTouchMove:de.func,onTouchEnd:de.func,onTouchStart:de.func,onMouseOver:de.func,onMouseLeave:de.func,onBulletClick:de.func,onThumbnailError:de.func,onThumbnailClick:de.func,renderCustomControls:de.func,renderLeftNav:de.func,renderRightNav:de.func,renderPlayPauseButton:de.func,renderFullscreenButton:de.func,renderItem:de.func,renderThumbInner:de.func,stopPropagation:de.bool,additionalClass:de.string,useTranslate3D:de.bool,isRTL:de.bool,useWindowKeyDown:de.bool},z1.defaultProps={onErrorImageURL:"",additionalClass:"",showNav:!0,autoPlay:!1,lazyLoad:!1,infinite:!0,showIndex:!1,showBullets:!1,showThumbnails:!0,showPlayButton:!0,showFullscreenButton:!0,disableThumbnailScroll:!1,disableKeyDown:!1,disableSwipe:!1,disableThumbnailSwipe:!1,useTranslate3D:!0,isRTL:!1,useBrowserFullscreen:!0,flickThreshold:.4,stopPropagation:!1,indexSeparator:" / ",thumbnailPosition:"bottom",startIndex:0,slideDuration:450,swipingTransitionDuration:0,swipingThumbnailTransitionDuration:0,onSlide:null,onBeforeSlide:null,onScreenChange:null,onPause:null,onPlay:null,onClick:null,onImageLoad:null,onImageError:null,onTouchMove:null,onTouchEnd:null,onTouchStart:null,onMouseOver:null,onMouseLeave:null,onBulletClick:null,onThumbnailError:null,onThumbnailClick:null,renderCustomControls:null,renderThumbInner:null,renderItem:null,slideInterval:3e3,slideOnThumbnailOver:!1,swipeThreshold:30,renderLeftNav:function(B,U){return h().createElement(Bt,{onClick:B,disabled:U})},renderRightNav:function(B,U){return h().createElement(Ft,{onClick:B,disabled:U})},renderPlayPauseButton:function(B,U){return h().createElement(g1,{onClick:B,isPlaying:U})},renderFullscreenButton:function(B,U){return h().createElement(qe,{onClick:B,isFullscreen:U})},useWindowKeyDown:!0};const Ot=z1})(),s})())})(AM);var Dz=AM.exports;const Oz=I4(Dz);function Bz(){const{t:n}=As(["home"]),e=_a(),{city:t,travelIdx:i,photoIdx:r}=Pw(),a=t.travels[i].photos,s=h=>h.youtube?xe.jsx("iframe",{className:"image-gallery-video",src:h.original,title:h.alt||"",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowFullScreen:!0}):xe.jsx("img",{className:"image-gallery-image",src:h.original,alt:""}),o=I.useCallback(h=>{if(r!==void 0){const f=document.querySelector(`[aria-label="Go to Slide ${r+1}"]`);if(f){const p=f.children[0];if(p&&(p.tagName==="VIDEO"&&p.pause(),p.tagName==="IFRAME")){const m=p.src;p.src=m}}e(`../${h}`)}},[r,e]),l=(h,f,p)=>xe.jsx(_s,{className:`image-gallery-icon image-gallery-${p}-nav ${f?"image-gallery-icon--disabled":""}`,onClick:h,"aria-label":p==="left"?"Previous Slide":"Next Slide",children:xe.jsx(WT,{className:"chevron"})}),d=h=>o(h);return xe.jsx("div",{className:"lightbox",children:xe.jsx(Oz,{lazyLoad:!0,infinite:!1,showIndex:!0,showPlayButton:!1,showThumbnails:!1,startIndex:r,items:a,renderItem:s,renderCustomControls:()=>xe.jsxs(_s,{className:"back-button-text",onClick:()=>e(".."),children:[xe.jsx(ZT,{}),xe.jsx("p",{children:n("gallery")})]}),renderLeftNav:(h,f)=>l(h,f,"left"),renderRightNav:(h,f)=>l(h,f,"right"),renderFullscreenButton:(h,f)=>xe.jsx(_s,{className:`image-gallery-icon image-gallery-fullscreen ${f?"image-gallery-fullscreen--active":""}`,onClick:h,"aria-label":n("fullscreen"),children:f?xe.jsx(qT,{}):xe.jsx(YT,{})}),onSlide:d})})}var Uz=Object.defineProperty,Fz=(n,e,t)=>e in n?Uz(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,jt=(n,e,t)=>(Fz(n,typeof e!="symbol"?e+"":e,t),t);const Kc=new Ns,Ey=new ar,zz=Math.cos(70*(Math.PI/180)),Py=(n,e)=>(n%e+e)%e;let jz=class extends z2{constructor(e,t){super(),jt(this,"object"),jt(this,"domElement"),jt(this,"enabled",!0),jt(this,"target",new j),jt(this,"minDistance",0),jt(this,"maxDistance",1/0),jt(this,"minZoom",0),jt(this,"maxZoom",1/0),jt(this,"minPolarAngle",0),jt(this,"maxPolarAngle",Math.PI),jt(this,"minAzimuthAngle",-1/0),jt(this,"maxAzimuthAngle",1/0),jt(this,"enableDamping",!1),jt(this,"dampingFactor",.05),jt(this,"enableZoom",!0),jt(this,"zoomSpeed",1),jt(this,"enableRotate",!0),jt(this,"rotateSpeed",1),jt(this,"enablePan",!0),jt(this,"panSpeed",1),jt(this,"screenSpacePanning",!0),jt(this,"keyPanSpeed",7),jt(this,"zoomToCursor",!1),jt(this,"autoRotate",!1),jt(this,"autoRotateSpeed",2),jt(this,"reverseOrbit",!1),jt(this,"reverseHorizontalOrbit",!1),jt(this,"reverseVerticalOrbit",!1),jt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),jt(this,"mouseButtons",{LEFT:Yr.ROTATE,MIDDLE:Yr.DOLLY,RIGHT:Yr.PAN}),jt(this,"touches",{ONE:rr.ROTATE,TWO:rr.DOLLY_PAN}),jt(this,"target0"),jt(this,"position0"),jt(this,"zoom0"),jt(this,"_domElementKeyEvents",null),jt(this,"getPolarAngle"),jt(this,"getAzimuthalAngle"),jt(this,"setPolarAngle"),jt(this,"setAzimuthalAngle"),jt(this,"getDistance"),jt(this,"listenToKeyEvents"),jt(this,"stopListenToKeyEvents"),jt(this,"saveState"),jt(this,"reset"),jt(this,"update"),jt(this,"connect"),jt(this,"dispose"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>h.phi,this.getAzimuthalAngle=()=>h.theta,this.setPolarAngle=Q=>{let Ce=Py(Q,2*Math.PI),tt=h.phi;tt<0&&(tt+=2*Math.PI),Ce<0&&(Ce+=2*Math.PI);let it=Math.abs(Ce-tt);2*Math.PI-it<it&&(Ce<tt?Ce+=2*Math.PI:tt+=2*Math.PI),f.phi=Ce-tt,i.update()},this.setAzimuthalAngle=Q=>{let Ce=Py(Q,2*Math.PI),tt=h.theta;tt<0&&(tt+=2*Math.PI),Ce<0&&(Ce+=2*Math.PI);let it=Math.abs(Ce-tt);2*Math.PI-it<it&&(Ce<tt?Ce+=2*Math.PI:tt+=2*Math.PI),f.theta=Ce-tt,i.update()},this.getDistance=()=>i.object.position.distanceTo(i.target),this.listenToKeyEvents=Q=>{Q.addEventListener("keydown",Mt),this._domElementKeyEvents=Q},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",Mt),this._domElementKeyEvents=null},this.saveState=()=>{i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=()=>{i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(r),i.update(),l=o.NONE},this.update=(()=>{const Q=new j,Ce=new j(0,1,0),tt=new Bn().setFromUnitVectors(e.up,Ce),it=tt.clone().invert(),kt=new j,G=new Bn,Ue=2*Math.PI;return function(){const J=i.object.position;tt.setFromUnitVectors(e.up,Ce),it.copy(tt).invert(),Q.copy(J).sub(i.target),Q.applyQuaternion(tt),h.setFromVector3(Q),i.autoRotate&&l===o.NONE&&q(ee()),i.enableDamping?(h.theta+=f.theta*i.dampingFactor,h.phi+=f.phi*i.dampingFactor):(h.theta+=f.theta,h.phi+=f.phi);let ne=i.minAzimuthAngle,Me=i.maxAzimuthAngle;isFinite(ne)&&isFinite(Me)&&(ne<-Math.PI?ne+=Ue:ne>Math.PI&&(ne-=Ue),Me<-Math.PI?Me+=Ue:Me>Math.PI&&(Me-=Ue),ne<=Me?h.theta=Math.max(ne,Math.min(Me,h.theta)):h.theta=h.theta>(ne+Me)/2?Math.max(ne,h.theta):Math.min(Me,h.theta)),h.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,h.phi)),h.makeSafe(),i.enableDamping===!0?i.target.addScaledVector(m,i.dampingFactor):i.target.add(m),i.zoomToCursor&&Y||i.object.isOrthographicCamera?h.radius=_e(h.radius):h.radius=_e(h.radius*p),Q.setFromSpherical(h),Q.applyQuaternion(it),J.copy(i.target).add(Q),i.object.matrixAutoUpdate||i.object.updateMatrix(),i.object.lookAt(i.target),i.enableDamping===!0?(f.theta*=1-i.dampingFactor,f.phi*=1-i.dampingFactor,m.multiplyScalar(1-i.dampingFactor)):(f.set(0,0,0),m.set(0,0,0));let Be=!1;if(i.zoomToCursor&&Y){let mt=null;if(i.object instanceof Y1&&i.object.isPerspectiveCamera){const ut=Q.length();mt=_e(ut*p);const qe=ut-mt;i.object.position.addScaledVector(C,qe),i.object.updateMatrixWorld()}else if(i.object.isOrthographicCamera){const ut=new j(N.x,N.y,0);ut.unproject(i.object),i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/p)),i.object.updateProjectionMatrix(),Be=!0;const qe=new j(N.x,N.y,0);qe.unproject(i.object),i.object.position.sub(qe).add(ut),i.object.updateMatrixWorld(),mt=Q.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),i.zoomToCursor=!1;mt!==null&&(i.screenSpacePanning?i.target.set(0,0,-1).transformDirection(i.object.matrix).multiplyScalar(mt).add(i.object.position):(Kc.origin.copy(i.object.position),Kc.direction.set(0,0,-1).transformDirection(i.object.matrix),Math.abs(i.object.up.dot(Kc.direction))<zz?e.lookAt(i.target):(Ey.setFromNormalAndCoplanarPoint(i.object.up,i.target),Kc.intersectPlane(Ey,i.target))))}else i.object instanceof dr&&i.object.isOrthographicCamera&&(Be=p!==1,Be&&(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/p)),i.object.updateProjectionMatrix()));return p=1,Y=!1,Be||kt.distanceToSquared(i.object.position)>d||8*(1-G.dot(i.object.quaternion))>d?(i.dispatchEvent(r),kt.copy(i.object.position),G.copy(i.object.quaternion),Be=!1,!0):!1}})(),this.connect=Q=>{Q===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),i.domElement=Q,i.domElement.style.touchAction="none",i.domElement.addEventListener("contextmenu",Xt),i.domElement.addEventListener("pointerdown",oe),i.domElement.addEventListener("pointercancel",Se),i.domElement.addEventListener("wheel",Ke)},this.dispose=()=>{var Q,Ce,tt,it,kt,G;(Q=i.domElement)==null||Q.removeEventListener("contextmenu",Xt),(Ce=i.domElement)==null||Ce.removeEventListener("pointerdown",oe),(tt=i.domElement)==null||tt.removeEventListener("pointercancel",Se),(it=i.domElement)==null||it.removeEventListener("wheel",Ke),(kt=i.domElement)==null||kt.ownerDocument.removeEventListener("pointermove",ke),(G=i.domElement)==null||G.ownerDocument.removeEventListener("pointerup",Ae),i._domElementKeyEvents!==null&&i._domElementKeyEvents.removeEventListener("keydown",Mt)};const i=this,r={type:"change"},a={type:"start"},s={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let l=o.NONE;const d=1e-6,h=new o7,f=new o7;let p=1;const m=new j,y=new Le,b=new Le,_=new Le,g=new Le,x=new Le,S=new Le,E=new Le,A=new Le,P=new Le,C=new j,N=new Le;let Y=!1;const T=[],R={};function ee(){return 2*Math.PI/60/60*i.autoRotateSpeed}function he(){return Math.pow(.95,i.zoomSpeed)}function q(Q){i.reverseOrbit||i.reverseHorizontalOrbit?f.theta+=Q:f.theta-=Q}function ue(Q){i.reverseOrbit||i.reverseVerticalOrbit?f.phi+=Q:f.phi-=Q}const se=(()=>{const Q=new j;return function(tt,it){Q.setFromMatrixColumn(it,0),Q.multiplyScalar(-tt),m.add(Q)}})(),ve=(()=>{const Q=new j;return function(tt,it){i.screenSpacePanning===!0?Q.setFromMatrixColumn(it,1):(Q.setFromMatrixColumn(it,0),Q.crossVectors(i.object.up,Q)),Q.multiplyScalar(tt),m.add(Q)}})(),z=(()=>{const Q=new j;return function(tt,it){const kt=i.domElement;if(kt&&i.object instanceof Y1&&i.object.isPerspectiveCamera){const G=i.object.position;Q.copy(G).sub(i.target);let Ue=Q.length();Ue*=Math.tan(i.object.fov/2*Math.PI/180),se(2*tt*Ue/kt.clientHeight,i.object.matrix),ve(2*it*Ue/kt.clientHeight,i.object.matrix)}else kt&&i.object instanceof dr&&i.object.isOrthographicCamera?(se(tt*(i.object.right-i.object.left)/i.object.zoom/kt.clientWidth,i.object.matrix),ve(it*(i.object.top-i.object.bottom)/i.object.zoom/kt.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}})();function K(Q){i.object instanceof Y1&&i.object.isPerspectiveCamera||i.object instanceof dr&&i.object.isOrthographicCamera?p/=Q:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function Z(Q){i.object instanceof Y1&&i.object.isPerspectiveCamera||i.object instanceof dr&&i.object.isOrthographicCamera?p*=Q:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function re(Q){if(!i.zoomToCursor||!i.domElement)return;Y=!0;const Ce=i.domElement.getBoundingClientRect(),tt=Q.clientX-Ce.left,it=Q.clientY-Ce.top,kt=Ce.width,G=Ce.height;N.x=tt/kt*2-1,N.y=-(it/G)*2+1,C.set(N.x,N.y,1).unproject(i.object).sub(i.object.position).normalize()}function _e(Q){return Math.max(i.minDistance,Math.min(i.maxDistance,Q))}function je(Q){y.set(Q.clientX,Q.clientY)}function ce(Q){re(Q),E.set(Q.clientX,Q.clientY)}function Ee(Q){g.set(Q.clientX,Q.clientY)}function ze(Q){b.set(Q.clientX,Q.clientY),_.subVectors(b,y).multiplyScalar(i.rotateSpeed);const Ce=i.domElement;Ce&&(q(2*Math.PI*_.x/Ce.clientHeight),ue(2*Math.PI*_.y/Ce.clientHeight)),y.copy(b),i.update()}function Je(Q){A.set(Q.clientX,Q.clientY),P.subVectors(A,E),P.y>0?K(he()):P.y<0&&Z(he()),E.copy(A),i.update()}function St(Q){x.set(Q.clientX,Q.clientY),S.subVectors(x,g).multiplyScalar(i.panSpeed),z(S.x,S.y),g.copy(x),i.update()}function pt(Q){re(Q),Q.deltaY<0?Z(he()):Q.deltaY>0&&K(he()),i.update()}function Tt(Q){let Ce=!1;switch(Q.code){case i.keys.UP:z(0,i.keyPanSpeed),Ce=!0;break;case i.keys.BOTTOM:z(0,-i.keyPanSpeed),Ce=!0;break;case i.keys.LEFT:z(i.keyPanSpeed,0),Ce=!0;break;case i.keys.RIGHT:z(-i.keyPanSpeed,0),Ce=!0;break}Ce&&(Q.preventDefault(),i.update())}function $e(){if(T.length==1)y.set(T[0].pageX,T[0].pageY);else{const Q=.5*(T[0].pageX+T[1].pageX),Ce=.5*(T[0].pageY+T[1].pageY);y.set(Q,Ce)}}function X(){if(T.length==1)g.set(T[0].pageX,T[0].pageY);else{const Q=.5*(T[0].pageX+T[1].pageX),Ce=.5*(T[0].pageY+T[1].pageY);g.set(Q,Ce)}}function Ne(){const Q=T[0].pageX-T[1].pageX,Ce=T[0].pageY-T[1].pageY,tt=Math.sqrt(Q*Q+Ce*Ce);E.set(0,tt)}function Te(){i.enableZoom&&Ne(),i.enablePan&&X()}function De(){i.enableZoom&&Ne(),i.enableRotate&&$e()}function Pe(Q){if(T.length==1)b.set(Q.pageX,Q.pageY);else{const tt=st(Q),it=.5*(Q.pageX+tt.x),kt=.5*(Q.pageY+tt.y);b.set(it,kt)}_.subVectors(b,y).multiplyScalar(i.rotateSpeed);const Ce=i.domElement;Ce&&(q(2*Math.PI*_.x/Ce.clientHeight),ue(2*Math.PI*_.y/Ce.clientHeight)),y.copy(b)}function xt(Q){if(T.length==1)x.set(Q.pageX,Q.pageY);else{const Ce=st(Q),tt=.5*(Q.pageX+Ce.x),it=.5*(Q.pageY+Ce.y);x.set(tt,it)}S.subVectors(x,g).multiplyScalar(i.panSpeed),z(S.x,S.y),g.copy(x)}function et(Q){const Ce=st(Q),tt=Q.pageX-Ce.x,it=Q.pageY-Ce.y,kt=Math.sqrt(tt*tt+it*it);A.set(0,kt),P.set(0,Math.pow(A.y/E.y,i.zoomSpeed)),K(P.y),E.copy(A)}function D(Q){i.enableZoom&&et(Q),i.enablePan&&xt(Q)}function k(Q){i.enableZoom&&et(Q),i.enableRotate&&Pe(Q)}function oe(Q){var Ce,tt;i.enabled!==!1&&(T.length===0&&((Ce=i.domElement)==null||Ce.ownerDocument.addEventListener("pointermove",ke),(tt=i.domElement)==null||tt.ownerDocument.addEventListener("pointerup",Ae)),Vt(Q),Q.pointerType==="touch"?Lt(Q):nt(Q))}function ke(Q){i.enabled!==!1&&(Q.pointerType==="touch"?Ie(Q):We(Q))}function Ae(Q){var Ce,tt,it;de(Q),T.length===0&&((Ce=i.domElement)==null||Ce.releasePointerCapture(Q.pointerId),(tt=i.domElement)==null||tt.ownerDocument.removeEventListener("pointermove",ke),(it=i.domElement)==null||it.ownerDocument.removeEventListener("pointerup",Ae)),i.dispatchEvent(s),l=o.NONE}function Se(Q){de(Q)}function nt(Q){let Ce;switch(Q.button){case 0:Ce=i.mouseButtons.LEFT;break;case 1:Ce=i.mouseButtons.MIDDLE;break;case 2:Ce=i.mouseButtons.RIGHT;break;default:Ce=-1}switch(Ce){case Yr.DOLLY:if(i.enableZoom===!1)return;ce(Q),l=o.DOLLY;break;case Yr.ROTATE:if(Q.ctrlKey||Q.metaKey||Q.shiftKey){if(i.enablePan===!1)return;Ee(Q),l=o.PAN}else{if(i.enableRotate===!1)return;je(Q),l=o.ROTATE}break;case Yr.PAN:if(Q.ctrlKey||Q.metaKey||Q.shiftKey){if(i.enableRotate===!1)return;je(Q),l=o.ROTATE}else{if(i.enablePan===!1)return;Ee(Q),l=o.PAN}break;default:l=o.NONE}l!==o.NONE&&i.dispatchEvent(a)}function We(Q){if(i.enabled!==!1)switch(l){case o.ROTATE:if(i.enableRotate===!1)return;ze(Q);break;case o.DOLLY:if(i.enableZoom===!1)return;Je(Q);break;case o.PAN:if(i.enablePan===!1)return;St(Q);break}}function Ke(Q){i.enabled===!1||i.enableZoom===!1||l!==o.NONE&&l!==o.ROTATE||(Q.preventDefault(),i.dispatchEvent(a),pt(Q),i.dispatchEvent(s))}function Mt(Q){i.enabled===!1||i.enablePan===!1||Tt(Q)}function Lt(Q){switch(yt(Q),T.length){case 1:switch(i.touches.ONE){case rr.ROTATE:if(i.enableRotate===!1)return;$e(),l=o.TOUCH_ROTATE;break;case rr.PAN:if(i.enablePan===!1)return;X(),l=o.TOUCH_PAN;break;default:l=o.NONE}break;case 2:switch(i.touches.TWO){case rr.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;Te(),l=o.TOUCH_DOLLY_PAN;break;case rr.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;De(),l=o.TOUCH_DOLLY_ROTATE;break;default:l=o.NONE}break;default:l=o.NONE}l!==o.NONE&&i.dispatchEvent(a)}function Ie(Q){switch(yt(Q),l){case o.TOUCH_ROTATE:if(i.enableRotate===!1)return;Pe(Q),i.update();break;case o.TOUCH_PAN:if(i.enablePan===!1)return;xt(Q),i.update();break;case o.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;D(Q),i.update();break;case o.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;k(Q),i.update();break;default:l=o.NONE}}function Xt(Q){i.enabled!==!1&&Q.preventDefault()}function Vt(Q){T.push(Q)}function de(Q){delete R[Q.pointerId];for(let Ce=0;Ce<T.length;Ce++)if(T[Ce].pointerId==Q.pointerId){T.splice(Ce,1);return}}function yt(Q){let Ce=R[Q.pointerId];Ce===void 0&&(Ce=new Le,R[Q.pointerId]=Ce),Ce.set(Q.pageX,Q.pageY)}function st(Q){const Ce=Q.pointerId===T[0].pointerId?T[1]:T[0];return R[Ce.pointerId]}t!==void 0&&this.connect(t),this.update()}};const Hz=I.forwardRef(({makeDefault:n,camera:e,regress:t,domElement:i,enableDamping:r=!0,keyEvents:a=!1,onChange:s,onStart:o,onEnd:l,...d},h)=>{const f=Vr(P=>P.invalidate),p=Vr(P=>P.camera),m=Vr(P=>P.gl),y=Vr(P=>P.events),b=Vr(P=>P.setEvents),_=Vr(P=>P.set),g=Vr(P=>P.get),x=Vr(P=>P.performance),S=e||p,E=i||y.connected||m.domElement,A=I.useMemo(()=>new jz(S),[S]);return fM(()=>{A.enabled&&A.update()},-1),I.useEffect(()=>(a&&A.connect(a===!0?E:a),A.connect(E),()=>void A.dispose()),[a,E,t,A,f]),I.useEffect(()=>{const P=Y=>{f(),t&&x.regress(),s&&s(Y)},C=Y=>{o&&o(Y)},N=Y=>{l&&l(Y)};return A.addEventListener("change",P),A.addEventListener("start",C),A.addEventListener("end",N),()=>{A.removeEventListener("start",C),A.removeEventListener("end",N),A.removeEventListener("change",P)}},[s,o,l,A,f,b]),I.useEffect(()=>{if(n){const P=g().controls;return _({controls:A}),()=>_({controls:P})}},[n,A]),I.createElement("primitive",u3({ref:h,object:A,enableDamping:r},d))}),Vz=I.memo(function({data:e,visitedCountries:t,visitedCities:i,futureCities:r,setCurrentHoveredCity:a}){const s=I.useContext(vf),{isDarkTheme:o}=s,l=I.useRef(null),d=6,h=46,f=30,p=I.useMemo(()=>{var g;return(g=e.features)==null?void 0:g.map(x=>xe.jsx(WF,{country:x,visitedCountries:t,isDarkTheme:o},x.id))},[e,t,o]),m=(g,x)=>x.coordinates[1]-g.coordinates[1],y=I.useMemo(()=>i.sort(m).map(g=>xe.jsx(sy,{city:g,setCurrHoveredCity:a},g.name)),[i,a]),b=I.useMemo(()=>r.sort(m).map(g=>xe.jsx(sy,{city:g,isFuture:!0,setCurrHoveredCity:a},g.name)),[r,a]),_=xe.jsx(Hz,{enableRotate:!1,zoomToCursor:!0,enableDamping:!0,dampingFactor:.2,mouseButtons:{LEFT:Yr.PAN},touches:{ONE:rr.PAN,TWO:rr.DOLLY_PAN},target:[d,h,0],zoomSpeed:1.1,maxDistance:100,minDistance:2});return I.useEffect(()=>{const g=()=>{if(l.current){const{innerWidth:x,innerHeight:S}=window;l.current.style.width=`${x}px`,l.current.style.height=`${S}px`}};return window.addEventListener("resize",g),()=>{window.removeEventListener("resize",g)}},[]),xe.jsx("div",{className:"map",ref:l,style:{width:window.innerWidth,height:window.innerHeight},children:xe.jsxs(EF,{camera:{position:[d,h,f],scale:[1,.8,1]},style:{backgroundColor:o?"#121212":"#ffffff",transition:"background-color 0.3s ease-in-out"},children:[xe.jsx(PF,{}),_,xe.jsx("ambientLight",{intensity:2e3,color:"#ffffff"}),xe.jsx("directionalLight",{position:[d,h,f]}),xe.jsx("mesh",{children:p},"countries-mesh"),b,y]})})}),Gz=I.memo(function(e){const{isInfoTabOpen:t,isGallery:i}=mf(),[r,a]=I.useState(null);return xe.jsxs("div",{className:"home-template",children:[xe.jsx(Nz,{}),xe.jsx($F,{children:t?e.children:null}),xe.jsx(XF,{isVisible:i,children:i?e.children:null}),xe.jsx(Vz,{data:e.countriesFeatures,visitedCountries:CM,visitedCities:A4,futureCities:y7,currHoveredCity:r,setCurrentHoveredCity:a})]})});function Wz(){const n=()=>{const r=localStorage.getItem("theme");if(r)return r==="dark";const a=window.matchMedia("(prefers-color-scheme: dark)").matches;return localStorage.setItem("theme",a?"dark":"light"),a},[e,t]=I.useState(n());return{isDarkTheme:e,handleDarkModeSwitch:()=>{const r=e?"light":"dark";localStorage.setItem("theme",r),t(!e)}}}const vf=I.createContext(void 0);function Xz(){const n=_a(),[e]=OC(),t=e.get("to"),{isDarkTheme:i,handleDarkModeSwitch:r}=Wz(),a={isDarkTheme:i,handleDarkModeSwitch:r},o=EU(lL);return t&&setTimeout(()=>n("/"+t),300),xe.jsx("div",{className:`home ${i?"home--dark":"home--light"}`,children:xe.jsx(vf.Provider,{value:a,children:xe.jsx(Gz,{countriesFeatures:o,children:xe.jsx(Tw,{})})})})}const Yz={type:"logger",log(n){this.output("log",n)},warn(n){this.output("warn",n)},error(n){this.output("error",n)},output(n,e){console&&console[n]&&console[n].apply(console,e)}};class J5{constructor(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.init(e,t)}init(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||Yz,this.options=t,this.debug=t.debug}log(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return this.forward(t,"log","",!0)}warn(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return this.forward(t,"warn","",!0)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return this.forward(t,"error","")}deprecate(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}forward(e,t,i,r){return r&&!this.debug?null:(typeof e[0]=="string"&&(e[0]=`${i}${this.prefix} ${e[0]}`),this.logger[t](e))}create(e){return new J5(this.logger,{prefix:`${this.prefix}:${e}:`,...this.options})}clone(e){return e=e||this.options,e.prefix=e.prefix||this.prefix,new J5(this.logger,e)}}var A2=new J5;class Zu{constructor(){this.observers={}}on(e,t){return e.split(" ").forEach(i=>{this.observers[i]||(this.observers[i]=new Map);const r=this.observers[i].get(t)||0;this.observers[i].set(t,r+1)}),this}off(e,t){if(this.observers[e]){if(!t){delete this.observers[e];return}this.observers[e].delete(t)}}emit(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),r=1;r<t;r++)i[r-1]=arguments[r];this.observers[e]&&Array.from(this.observers[e].entries()).forEach(s=>{let[o,l]=s;for(let d=0;d<l;d++)o(...i)}),this.observers["*"]&&Array.from(this.observers["*"].entries()).forEach(s=>{let[o,l]=s;for(let d=0;d<l;d++)o.apply(o,[e,...i])})}}function gl(){let n,e;const t=new Promise((i,r)=>{n=i,e=r});return t.resolve=n,t.reject=e,t}function Ty(n){return n==null?"":""+n}function qz(n,e,t){n.forEach(i=>{e[i]&&(t[i]=e[i])})}const $z=/###/g;function jl(n,e,t){function i(o){return o&&o.indexOf("###")>-1?o.replace($z,"."):o}function r(){return!n||typeof n=="string"}const a=typeof e!="string"?e:e.split(".");let s=0;for(;s<a.length-1;){if(r())return{};const o=i(a[s]);!n[o]&&t&&(n[o]=new t),Object.prototype.hasOwnProperty.call(n,o)?n=n[o]:n={},++s}return r()?{}:{obj:n,k:i(a[s])}}function Ly(n,e,t){const{obj:i,k:r}=jl(n,e,Object);if(i!==void 0||e.length===1){i[r]=t;return}let a=e[e.length-1],s=e.slice(0,e.length-1),o=jl(n,s,Object);for(;o.obj===void 0&&s.length;)a=`${s[s.length-1]}.${a}`,s=s.slice(0,s.length-1),o=jl(n,s,Object),o&&o.obj&&typeof o.obj[`${o.k}.${a}`]<"u"&&(o.obj=void 0);o.obj[`${o.k}.${a}`]=t}function Kz(n,e,t,i){const{obj:r,k:a}=jl(n,e,Object);r[a]=r[a]||[],i&&(r[a]=r[a].concat(t)),i||r[a].push(t)}function Q5(n,e){const{obj:t,k:i}=jl(n,e);if(t)return t[i]}function Zz(n,e,t){const i=Q5(n,t);return i!==void 0?i:Q5(e,t)}function RM(n,e,t){for(const i in e)i!=="__proto__"&&i!=="constructor"&&(i in n?typeof n[i]=="string"||n[i]instanceof String||typeof e[i]=="string"||e[i]instanceof String?t&&(n[i]=e[i]):RM(n[i],e[i],t):n[i]=e[i]);return n}function So(n){return n.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var Jz={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function Qz(n){return typeof n=="string"?n.replace(/[&<>"'\/]/g,e=>Jz[e]):n}class ej{constructor(e){this.capacity=e,this.regExpMap=new Map,this.regExpQueue=[]}getRegExp(e){const t=this.regExpMap.get(e);if(t!==void 0)return t;const i=new RegExp(e);return this.regExpQueue.length===this.capacity&&this.regExpMap.delete(this.regExpQueue.shift()),this.regExpMap.set(e,i),this.regExpQueue.push(e),i}}const tj=[" ",",","?","!",";"],nj=new ej(20);function ij(n,e,t){e=e||"",t=t||"";const i=tj.filter(s=>e.indexOf(s)<0&&t.indexOf(s)<0);if(i.length===0)return!0;const r=nj.getRegExp(`(${i.map(s=>s==="?"?"\\?":s).join("|")})`);let a=!r.test(n);if(!a){const s=n.indexOf(t);s>0&&!r.test(n.substring(0,s))&&(a=!0)}return a}function _7(n,e){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:".";if(!n)return;if(n[e])return n[e];const i=e.split(t);let r=n;for(let a=0;a<i.length;){if(!r||typeof r!="object")return;let s,o="";for(let l=a;l<i.length;++l)if(l!==a&&(o+=t),o+=i[l],s=r[o],s!==void 0){if(["string","number","boolean"].indexOf(typeof s)>-1&&l<i.length-1)continue;a+=l-a+1;break}r=s}return r}function eu(n){return n&&n.indexOf("_")>0?n.replace("_","-"):n}class Cy extends Zu{constructor(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{ns:["translation"],defaultNS:"translation"};super(),this.data=e||{},this.options=t,this.options.keySeparator===void 0&&(this.options.keySeparator="."),this.options.ignoreJSONStructure===void 0&&(this.options.ignoreJSONStructure=!0)}addNamespaces(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}removeNamespaces(e){const t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}getResource(e,t,i){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};const a=r.keySeparator!==void 0?r.keySeparator:this.options.keySeparator,s=r.ignoreJSONStructure!==void 0?r.ignoreJSONStructure:this.options.ignoreJSONStructure;let o;e.indexOf(".")>-1?o=e.split("."):(o=[e,t],i&&(Array.isArray(i)?o.push(...i):typeof i=="string"&&a?o.push(...i.split(a)):o.push(i)));const l=Q5(this.data,o);return!l&&!t&&!i&&e.indexOf(".")>-1&&(e=o[0],t=o[1],i=o.slice(2).join(".")),l||!s||typeof i!="string"?l:_7(this.data&&this.data[e]&&this.data[e][t],i,a)}addResource(e,t,i,r){let a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{silent:!1};const s=a.keySeparator!==void 0?a.keySeparator:this.options.keySeparator;let o=[e,t];i&&(o=o.concat(s?i.split(s):i)),e.indexOf(".")>-1&&(o=e.split("."),r=t,t=o[1]),this.addNamespaces(t),Ly(this.data,o,r),a.silent||this.emit("added",e,t,i,r)}addResources(e,t,i){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{silent:!1};for(const a in i)(typeof i[a]=="string"||Object.prototype.toString.apply(i[a])==="[object Array]")&&this.addResource(e,t,a,i[a],{silent:!0});r.silent||this.emit("added",e,t,i)}addResourceBundle(e,t,i,r,a){let s=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{silent:!1,skipCopy:!1},o=[e,t];e.indexOf(".")>-1&&(o=e.split("."),r=i,i=t,t=o[1]),this.addNamespaces(t);let l=Q5(this.data,o)||{};s.skipCopy||(i=JSON.parse(JSON.stringify(i))),r?RM(l,i,a):l={...l,...i},Ly(this.data,o,l),s.silent||this.emit("added",e,t,i)}removeResourceBundle(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}hasResourceBundle(e,t){return this.getResource(e,t)!==void 0}getResourceBundle(e,t){return t||(t=this.options.defaultNS),this.options.compatibilityAPI==="v1"?{...this.getResource(e,t)}:this.getResource(e,t)}getDataByLanguage(e){return this.data[e]}hasLanguageSomeTranslations(e){const t=this.getDataByLanguage(e);return!!(t&&Object.keys(t)||[]).find(r=>t[r]&&Object.keys(t[r]).length>0)}toJSON(){return this.data}}var kM={processors:{},addPostProcessor(n){this.processors[n.name]=n},handle(n,e,t,i,r){return n.forEach(a=>{this.processors[a]&&(e=this.processors[a].process(e,t,i,r))}),e}};const Ay={};class tu extends Zu{constructor(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};super(),qz(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,this),this.options=t,this.options.keySeparator===void 0&&(this.options.keySeparator="."),this.logger=A2.create("translator")}changeLanguage(e){e&&(this.language=e)}exists(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}};if(e==null)return!1;const i=this.resolve(e,t);return i&&i.res!==void 0}extractFromKey(e,t){let i=t.nsSeparator!==void 0?t.nsSeparator:this.options.nsSeparator;i===void 0&&(i=":");const r=t.keySeparator!==void 0?t.keySeparator:this.options.keySeparator;let a=t.ns||this.options.defaultNS||[];const s=i&&e.indexOf(i)>-1,o=!this.options.userDefinedKeySeparator&&!t.keySeparator&&!this.options.userDefinedNsSeparator&&!t.nsSeparator&&!ij(e,i,r);if(s&&!o){const l=e.match(this.interpolator.nestingRegexp);if(l&&l.length>0)return{key:e,namespaces:a};const d=e.split(i);(i!==r||i===r&&this.options.ns.indexOf(d[0])>-1)&&(a=d.shift()),e=d.join(r)}return typeof a=="string"&&(a=[a]),{key:e,namespaces:a}}translate(e,t,i){if(typeof t!="object"&&this.options.overloadTranslationOptionHandler&&(t=this.options.overloadTranslationOptionHandler(arguments)),typeof t=="object"&&(t={...t}),t||(t={}),e==null)return"";Array.isArray(e)||(e=[String(e)]);const r=t.returnDetails!==void 0?t.returnDetails:this.options.returnDetails,a=t.keySeparator!==void 0?t.keySeparator:this.options.keySeparator,{key:s,namespaces:o}=this.extractFromKey(e[e.length-1],t),l=o[o.length-1],d=t.lng||this.language,h=t.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(d&&d.toLowerCase()==="cimode"){if(h){const E=t.nsSeparator||this.options.nsSeparator;return r?{res:`${l}${E}${s}`,usedKey:s,exactUsedKey:s,usedLng:d,usedNS:l,usedParams:this.getUsedParamsDetails(t)}:`${l}${E}${s}`}return r?{res:s,usedKey:s,exactUsedKey:s,usedLng:d,usedNS:l,usedParams:this.getUsedParamsDetails(t)}:s}const f=this.resolve(e,t);let p=f&&f.res;const m=f&&f.usedKey||s,y=f&&f.exactUsedKey||s,b=Object.prototype.toString.apply(p),_=["[object Number]","[object Function]","[object RegExp]"],g=t.joinArrays!==void 0?t.joinArrays:this.options.joinArrays,x=!this.i18nFormat||this.i18nFormat.handleAsObject;if(x&&p&&(typeof p!="string"&&typeof p!="boolean"&&typeof p!="number")&&_.indexOf(b)<0&&!(typeof g=="string"&&b==="[object Array]")){if(!t.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");const E=this.options.returnedObjectHandler?this.options.returnedObjectHandler(m,p,{...t,ns:o}):`key '${s} (${this.language})' returned an object instead of string.`;return r?(f.res=E,f.usedParams=this.getUsedParamsDetails(t),f):E}if(a){const E=b==="[object Array]",A=E?[]:{},P=E?y:m;for(const C in p)if(Object.prototype.hasOwnProperty.call(p,C)){const N=`${P}${a}${C}`;A[C]=this.translate(N,{...t,joinArrays:!1,ns:o}),A[C]===N&&(A[C]=p[C])}p=A}}else if(x&&typeof g=="string"&&b==="[object Array]")p=p.join(g),p&&(p=this.extendTranslation(p,e,t,i));else{let E=!1,A=!1;const P=t.count!==void 0&&typeof t.count!="string",C=tu.hasDefaultValue(t),N=P?this.pluralResolver.getSuffix(d,t.count,t):"",Y=t.ordinal&&P?this.pluralResolver.getSuffix(d,t.count,{ordinal:!1}):"",T=P&&!t.ordinal&&t.count===0&&this.pluralResolver.shouldUseIntlApi(),R=T&&t[`defaultValue${this.options.pluralSeparator}zero`]||t[`defaultValue${N}`]||t[`defaultValue${Y}`]||t.defaultValue;!this.isValidLookup(p)&&C&&(E=!0,p=R),this.isValidLookup(p)||(A=!0,p=s);const he=(t.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&A?void 0:p,q=C&&R!==p&&this.options.updateMissing;if(A||E||q){if(this.logger.log(q?"updateKey":"missingKey",d,l,s,q?R:p),a){const z=this.resolve(s,{...t,keySeparator:!1});z&&z.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let ue=[];const se=this.languageUtils.getFallbackCodes(this.options.fallbackLng,t.lng||this.language);if(this.options.saveMissingTo==="fallback"&&se&&se[0])for(let z=0;z<se.length;z++)ue.push(se[z]);else this.options.saveMissingTo==="all"?ue=this.languageUtils.toResolveHierarchy(t.lng||this.language):ue.push(t.lng||this.language);const ve=(z,K,Z)=>{const re=C&&Z!==p?Z:he;this.options.missingKeyHandler?this.options.missingKeyHandler(z,l,K,re,q,t):this.backendConnector&&this.backendConnector.saveMissing&&this.backendConnector.saveMissing(z,l,K,re,q,t),this.emit("missingKey",z,l,K,p)};this.options.saveMissing&&(this.options.saveMissingPlurals&&P?ue.forEach(z=>{const K=this.pluralResolver.getSuffixes(z,t);T&&t[`defaultValue${this.options.pluralSeparator}zero`]&&K.indexOf(`${this.options.pluralSeparator}zero`)<0&&K.push(`${this.options.pluralSeparator}zero`),K.forEach(Z=>{ve([z],s+Z,t[`defaultValue${Z}`]||R)})}):ve(ue,s,R))}p=this.extendTranslation(p,e,t,f,i),A&&p===s&&this.options.appendNamespaceToMissingKey&&(p=`${l}:${s}`),(A||E)&&this.options.parseMissingKeyHandler&&(this.options.compatibilityAPI!=="v1"?p=this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${l}:${s}`:s,E?p:void 0):p=this.options.parseMissingKeyHandler(p))}return r?(f.res=p,f.usedParams=this.getUsedParamsDetails(t),f):p}extendTranslation(e,t,i,r,a){var s=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,{...this.options.interpolation.defaultVariables,...i},i.lng||this.language||r.usedLng,r.usedNS,r.usedKey,{resolved:r});else if(!i.skipInterpolation){i.interpolation&&this.interpolator.init({...i,interpolation:{...this.options.interpolation,...i.interpolation}});const d=typeof e=="string"&&(i&&i.interpolation&&i.interpolation.skipOnVariables!==void 0?i.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);let h;if(d){const p=e.match(this.interpolator.nestingRegexp);h=p&&p.length}let f=i.replace&&typeof i.replace!="string"?i.replace:i;if(this.options.interpolation.defaultVariables&&(f={...this.options.interpolation.defaultVariables,...f}),e=this.interpolator.interpolate(e,f,i.lng||this.language,i),d){const p=e.match(this.interpolator.nestingRegexp),m=p&&p.length;h<m&&(i.nest=!1)}!i.lng&&this.options.compatibilityAPI!=="v1"&&r&&r.res&&(i.lng=r.usedLng),i.nest!==!1&&(e=this.interpolator.nest(e,function(){for(var p=arguments.length,m=new Array(p),y=0;y<p;y++)m[y]=arguments[y];return a&&a[0]===m[0]&&!i.context?(s.logger.warn(`It seems you are nesting recursively key: ${m[0]} in key: ${t[0]}`),null):s.translate(...m,t)},i)),i.interpolation&&this.interpolator.reset()}const o=i.postProcess||this.options.postProcess,l=typeof o=="string"?[o]:o;return e!=null&&l&&l.length&&i.applyPostProcessor!==!1&&(e=kM.handle(l,e,t,this.options&&this.options.postProcessPassResolved?{i18nResolved:{...r,usedParams:this.getUsedParamsDetails(i)},...i}:i,this)),e}resolve(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i,r,a,s,o;return typeof e=="string"&&(e=[e]),e.forEach(l=>{if(this.isValidLookup(i))return;const d=this.extractFromKey(l,t),h=d.key;r=h;let f=d.namespaces;this.options.fallbackNS&&(f=f.concat(this.options.fallbackNS));const p=t.count!==void 0&&typeof t.count!="string",m=p&&!t.ordinal&&t.count===0&&this.pluralResolver.shouldUseIntlApi(),y=t.context!==void 0&&(typeof t.context=="string"||typeof t.context=="number")&&t.context!=="",b=t.lngs?t.lngs:this.languageUtils.toResolveHierarchy(t.lng||this.language,t.fallbackLng);f.forEach(_=>{this.isValidLookup(i)||(o=_,!Ay[`${b[0]}-${_}`]&&this.utils&&this.utils.hasLoadedNamespace&&!this.utils.hasLoadedNamespace(o)&&(Ay[`${b[0]}-${_}`]=!0,this.logger.warn(`key "${r}" for languages "${b.join(", ")}" won't get resolved as namespace "${o}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),b.forEach(g=>{if(this.isValidLookup(i))return;s=g;const x=[h];if(this.i18nFormat&&this.i18nFormat.addLookupKeys)this.i18nFormat.addLookupKeys(x,h,g,_,t);else{let E;p&&(E=this.pluralResolver.getSuffix(g,t.count,t));const A=`${this.options.pluralSeparator}zero`,P=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(p&&(x.push(h+E),t.ordinal&&E.indexOf(P)===0&&x.push(h+E.replace(P,this.options.pluralSeparator)),m&&x.push(h+A)),y){const C=`${h}${this.options.contextSeparator}${t.context}`;x.push(C),p&&(x.push(C+E),t.ordinal&&E.indexOf(P)===0&&x.push(C+E.replace(P,this.options.pluralSeparator)),m&&x.push(C+A))}}let S;for(;S=x.pop();)this.isValidLookup(i)||(a=S,i=this.getResource(g,_,S,t))}))})}),{res:i,usedKey:r,exactUsedKey:a,usedLng:s,usedNS:o}}isValidLookup(e){return e!==void 0&&!(!this.options.returnNull&&e===null)&&!(!this.options.returnEmptyString&&e==="")}getResource(e,t,i){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,i,r):this.resourceStore.getResource(e,t,i,r)}getUsedParamsDetails(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const t=["defaultValue","ordinal","context","replace","lng","lngs","fallbackLng","ns","keySeparator","nsSeparator","returnObjects","returnDetails","joinArrays","postProcess","interpolation"],i=e.replace&&typeof e.replace!="string";let r=i?e.replace:e;if(i&&typeof e.count<"u"&&(r.count=e.count),this.options.interpolation.defaultVariables&&(r={...this.options.interpolation.defaultVariables,...r}),!i){r={...r};for(const a of t)delete r[a]}return r}static hasDefaultValue(e){const t="defaultValue";for(const i in e)if(Object.prototype.hasOwnProperty.call(e,i)&&t===i.substring(0,t.length)&&e[i]!==void 0)return!0;return!1}}function v8(n){return n.charAt(0).toUpperCase()+n.slice(1)}class Ry{constructor(e){this.options=e,this.supportedLngs=this.options.supportedLngs||!1,this.logger=A2.create("languageUtils")}getScriptPartFromCode(e){if(e=eu(e),!e||e.indexOf("-")<0)return null;const t=e.split("-");return t.length===2||(t.pop(),t[t.length-1].toLowerCase()==="x")?null:this.formatLanguageCode(t.join("-"))}getLanguagePartFromCode(e){if(e=eu(e),!e||e.indexOf("-")<0)return e;const t=e.split("-");return this.formatLanguageCode(t[0])}formatLanguageCode(e){if(typeof e=="string"&&e.indexOf("-")>-1){const t=["hans","hant","latn","cyrl","cans","mong","arab"];let i=e.split("-");return this.options.lowerCaseLng?i=i.map(r=>r.toLowerCase()):i.length===2?(i[0]=i[0].toLowerCase(),i[1]=i[1].toUpperCase(),t.indexOf(i[1].toLowerCase())>-1&&(i[1]=v8(i[1].toLowerCase()))):i.length===3&&(i[0]=i[0].toLowerCase(),i[1].length===2&&(i[1]=i[1].toUpperCase()),i[0]!=="sgn"&&i[2].length===2&&(i[2]=i[2].toUpperCase()),t.indexOf(i[1].toLowerCase())>-1&&(i[1]=v8(i[1].toLowerCase())),t.indexOf(i[2].toLowerCase())>-1&&(i[2]=v8(i[2].toLowerCase()))),i.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}isSupportedCode(e){return(this.options.load==="languageOnly"||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}getBestMatchFromCodes(e){if(!e)return null;let t;return e.forEach(i=>{if(t)return;const r=this.formatLanguageCode(i);(!this.options.supportedLngs||this.isSupportedCode(r))&&(t=r)}),!t&&this.options.supportedLngs&&e.forEach(i=>{if(t)return;const r=this.getLanguagePartFromCode(i);if(this.isSupportedCode(r))return t=r;t=this.options.supportedLngs.find(a=>{if(a===r)return a;if(!(a.indexOf("-")<0&&r.indexOf("-")<0)&&(a.indexOf("-")>0&&r.indexOf("-")<0&&a.substring(0,a.indexOf("-"))===r||a.indexOf(r)===0&&r.length>1))return a})}),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t}getFallbackCodes(e,t){if(!e)return[];if(typeof e=="function"&&(e=e(t)),typeof e=="string"&&(e=[e]),Object.prototype.toString.apply(e)==="[object Array]")return e;if(!t)return e.default||[];let i=e[t];return i||(i=e[this.getScriptPartFromCode(t)]),i||(i=e[this.formatLanguageCode(t)]),i||(i=e[this.getLanguagePartFromCode(t)]),i||(i=e.default),i||[]}toResolveHierarchy(e,t){const i=this.getFallbackCodes(t||this.options.fallbackLng||[],e),r=[],a=s=>{s&&(this.isSupportedCode(s)?r.push(s):this.logger.warn(`rejecting language code not found in supportedLngs: ${s}`))};return typeof e=="string"&&(e.indexOf("-")>-1||e.indexOf("_")>-1)?(this.options.load!=="languageOnly"&&a(this.formatLanguageCode(e)),this.options.load!=="languageOnly"&&this.options.load!=="currentOnly"&&a(this.getScriptPartFromCode(e)),this.options.load!=="currentOnly"&&a(this.getLanguagePartFromCode(e))):typeof e=="string"&&a(this.formatLanguageCode(e)),i.forEach(s=>{r.indexOf(s)<0&&a(this.formatLanguageCode(s))}),r}}let rj=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],aj={1:function(n){return+(n>1)},2:function(n){return+(n!=1)},3:function(n){return 0},4:function(n){return n%10==1&&n%100!=11?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2},5:function(n){return n==0?0:n==1?1:n==2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5},6:function(n){return n==1?0:n>=2&&n<=4?1:2},7:function(n){return n==1?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2},8:function(n){return n==1?0:n==2?1:n!=8&&n!=11?2:3},9:function(n){return+(n>=2)},10:function(n){return n==1?0:n==2?1:n<7?2:n<11?3:4},11:function(n){return n==1||n==11?0:n==2||n==12?1:n>2&&n<20?2:3},12:function(n){return+(n%10!=1||n%100==11)},13:function(n){return+(n!==0)},14:function(n){return n==1?0:n==2?1:n==3?2:3},15:function(n){return n%10==1&&n%100!=11?0:n%10>=2&&(n%100<10||n%100>=20)?1:2},16:function(n){return n%10==1&&n%100!=11?0:n!==0?1:2},17:function(n){return n==1||n%10==1&&n%100!=11?0:1},18:function(n){return n==0?0:n==1?1:2},19:function(n){return n==1?0:n==0||n%100>1&&n%100<11?1:n%100>10&&n%100<20?2:3},20:function(n){return n==1?0:n==0||n%100>0&&n%100<20?1:2},21:function(n){return n%100==1?1:n%100==2?2:n%100==3||n%100==4?3:0},22:function(n){return n==1?0:n==2?1:(n<0||n>10)&&n%10==0?2:3}};const sj=["v1","v2","v3"],oj=["v4"],ky={zero:0,one:1,two:2,few:3,many:4,other:5};function lj(){const n={};return rj.forEach(e=>{e.lngs.forEach(t=>{n[t]={numbers:e.nr,plurals:aj[e.fc]}})}),n}class cj{constructor(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.languageUtils=e,this.options=t,this.logger=A2.create("pluralResolver"),(!this.options.compatibilityJSON||oj.includes(this.options.compatibilityJSON))&&(typeof Intl>"u"||!Intl.PluralRules)&&(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=lj()}addRule(e,t){this.rules[e]=t}getRule(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(eu(e==="dev"?"en":e),{type:t.ordinal?"ordinal":"cardinal"})}catch{return}return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}needsPlural(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const i=this.getRule(e,t);return this.shouldUseIntlApi()?i&&i.resolvedOptions().pluralCategories.length>1:i&&i.numbers.length>1}getPluralFormsOfKey(e,t){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};return this.getSuffixes(e,i).map(r=>`${t}${r}`)}getSuffixes(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const i=this.getRule(e,t);return i?this.shouldUseIntlApi()?i.resolvedOptions().pluralCategories.sort((r,a)=>ky[r]-ky[a]).map(r=>`${this.options.prepend}${t.ordinal?`ordinal${this.options.prepend}`:""}${r}`):i.numbers.map(r=>this.getSuffix(e,r,t)):[]}getSuffix(e,t){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};const r=this.getRule(e,i);return r?this.shouldUseIntlApi()?`${this.options.prepend}${i.ordinal?`ordinal${this.options.prepend}`:""}${r.select(t)}`:this.getSuffixRetroCompatible(r,t):(this.logger.warn(`no plural rule found for: ${e}`),"")}getSuffixRetroCompatible(e,t){const i=e.noAbs?e.plurals(t):e.plurals(Math.abs(t));let r=e.numbers[i];this.options.simplifyPluralSuffix&&e.numbers.length===2&&e.numbers[0]===1&&(r===2?r="plural":r===1&&(r=""));const a=()=>this.options.prepend&&r.toString()?this.options.prepend+r.toString():r.toString();return this.options.compatibilityJSON==="v1"?r===1?"":typeof r=="number"?`_plural_${r.toString()}`:a():this.options.compatibilityJSON==="v2"||this.options.simplifyPluralSuffix&&e.numbers.length===2&&e.numbers[0]===1?a():this.options.prepend&&i.toString()?this.options.prepend+i.toString():i.toString()}shouldUseIntlApi(){return!sj.includes(this.options.compatibilityJSON)}}function Iy(n,e,t){let i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:".",r=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0,a=Zz(n,e,t);return!a&&r&&typeof t=="string"&&(a=_7(n,t,i),a===void 0&&(a=_7(e,t,i))),a}class uj{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.logger=A2.create("interpolator"),this.options=e,this.format=e.interpolation&&e.interpolation.format||(t=>t),this.init(e)}init(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});const t=e.interpolation;this.escape=t.escape!==void 0?t.escape:Qz,this.escapeValue=t.escapeValue!==void 0?t.escapeValue:!0,this.useRawValueToEscape=t.useRawValueToEscape!==void 0?t.useRawValueToEscape:!1,this.prefix=t.prefix?So(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?So(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?So(t.nestingPrefix):t.nestingPrefixEscaped||So("$t("),this.nestingSuffix=t.nestingSuffix?So(t.nestingSuffix):t.nestingSuffixEscaped||So(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=t.alwaysFormat!==void 0?t.alwaysFormat:!1,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){const e=(t,i)=>t&&t.source===i?(t.lastIndex=0,t):new RegExp(i,"g");this.regexp=e(this.regexp,`${this.prefix}(.+?)${this.suffix}`),this.regexpUnescape=e(this.regexpUnescape,`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`),this.nestingRegexp=e(this.nestingRegexp,`${this.nestingPrefix}(.+?)${this.nestingSuffix}`)}interpolate(e,t,i,r){let a,s,o;const l=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function d(y){return y.replace(/\$/g,"$$$$")}const h=y=>{if(y.indexOf(this.formatSeparator)<0){const x=Iy(t,l,y,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(x,void 0,i,{...r,...t,interpolationkey:y}):x}const b=y.split(this.formatSeparator),_=b.shift().trim(),g=b.join(this.formatSeparator).trim();return this.format(Iy(t,l,_,this.options.keySeparator,this.options.ignoreJSONStructure),g,i,{...r,...t,interpolationkey:_})};this.resetRegExp();const f=r&&r.missingInterpolationHandler||this.options.missingInterpolationHandler,p=r&&r.interpolation&&r.interpolation.skipOnVariables!==void 0?r.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:y=>d(y)},{regex:this.regexp,safeValue:y=>this.escapeValue?d(this.escape(y)):d(y)}].forEach(y=>{for(o=0;a=y.regex.exec(e);){const b=a[1].trim();if(s=h(b),s===void 0)if(typeof f=="function"){const g=f(e,a,r);s=typeof g=="string"?g:""}else if(r&&Object.prototype.hasOwnProperty.call(r,b))s="";else if(p){s=a[0];continue}else this.logger.warn(`missed to pass in variable ${b} for interpolating ${e}`),s="";else typeof s!="string"&&!this.useRawValueToEscape&&(s=Ty(s));const _=y.safeValue(s);if(e=e.replace(a[0],_),p?(y.regex.lastIndex+=s.length,y.regex.lastIndex-=a[0].length):y.regex.lastIndex=0,o++,o>=this.maxReplaces)break}}),e}nest(e,t){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r,a,s;function o(l,d){const h=this.nestingOptionsSeparator;if(l.indexOf(h)<0)return l;const f=l.split(new RegExp(`${h}[ ]*{`));let p=`{${f[1]}`;l=f[0],p=this.interpolate(p,s);const m=p.match(/'/g),y=p.match(/"/g);(m&&m.length%2===0&&!y||y.length%2!==0)&&(p=p.replace(/'/g,'"'));try{s=JSON.parse(p),d&&(s={...d,...s})}catch(b){return this.logger.warn(`failed parsing options string in nesting for key ${l}`,b),`${l}${h}${p}`}return delete s.defaultValue,l}for(;r=this.nestingRegexp.exec(e);){let l=[];s={...i},s=s.replace&&typeof s.replace!="string"?s.replace:s,s.applyPostProcessor=!1,delete s.defaultValue;let d=!1;if(r[0].indexOf(this.formatSeparator)!==-1&&!/{.*}/.test(r[1])){const h=r[1].split(this.formatSeparator).map(f=>f.trim());r[1]=h.shift(),l=h,d=!0}if(a=t(o.call(this,r[1].trim(),s),s),a&&r[0]===e&&typeof a!="string")return a;typeof a!="string"&&(a=Ty(a)),a||(this.logger.warn(`missed to resolve ${r[1]} for nesting ${e}`),a=""),d&&(a=l.reduce((h,f)=>this.format(h,f,i.lng,{...i,interpolationkey:r[1].trim()}),a.trim())),e=e.replace(r[0],a),this.regexp.lastIndex=0}return e}}function dj(n){let e=n.toLowerCase().trim();const t={};if(n.indexOf("(")>-1){const i=n.split("(");e=i[0].toLowerCase().trim();const r=i[1].substring(0,i[1].length-1);e==="currency"&&r.indexOf(":")<0?t.currency||(t.currency=r.trim()):e==="relativetime"&&r.indexOf(":")<0?t.range||(t.range=r.trim()):r.split(";").forEach(s=>{if(!s)return;const[o,...l]=s.split(":"),d=l.join(":").trim().replace(/^'+|'+$/g,"");t[o.trim()]||(t[o.trim()]=d),d==="false"&&(t[o.trim()]=!1),d==="true"&&(t[o.trim()]=!0),isNaN(d)||(t[o.trim()]=parseInt(d,10))})}return{formatName:e,formatOptions:t}}function Mo(n){const e={};return function(i,r,a){const s=r+JSON.stringify(a);let o=e[s];return o||(o=n(eu(r),a),e[s]=o),o(i)}}class hj{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.logger=A2.create("formatter"),this.options=e,this.formats={number:Mo((t,i)=>{const r=new Intl.NumberFormat(t,{...i});return a=>r.format(a)}),currency:Mo((t,i)=>{const r=new Intl.NumberFormat(t,{...i,style:"currency"});return a=>r.format(a)}),datetime:Mo((t,i)=>{const r=new Intl.DateTimeFormat(t,{...i});return a=>r.format(a)}),relativetime:Mo((t,i)=>{const r=new Intl.RelativeTimeFormat(t,{...i});return a=>r.format(a,i.range||"day")}),list:Mo((t,i)=>{const r=new Intl.ListFormat(t,{...i});return a=>r.format(a)})},this.init(e)}init(e){const i=(arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}}).interpolation;this.formatSeparator=i.formatSeparator?i.formatSeparator:i.formatSeparator||","}add(e,t){this.formats[e.toLowerCase().trim()]=t}addCached(e,t){this.formats[e.toLowerCase().trim()]=Mo(t)}format(e,t,i){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};return t.split(this.formatSeparator).reduce((o,l)=>{const{formatName:d,formatOptions:h}=dj(l);if(this.formats[d]){let f=o;try{const p=r&&r.formatParams&&r.formatParams[r.interpolationkey]||{},m=p.locale||p.lng||r.locale||r.lng||i;f=this.formats[d](o,m,{...h,...r,...p})}catch(p){this.logger.warn(p)}return f}else this.logger.warn(`there was no format function for ${d}`);return o},e)}}function fj(n,e){n.pending[e]!==void 0&&(delete n.pending[e],n.pendingCount--)}class pj extends Zu{constructor(e,t,i){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};super(),this.backend=e,this.store=t,this.services=i,this.languageUtils=i.languageUtils,this.options=r,this.logger=A2.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=r.maxParallelReads||10,this.readingCalls=0,this.maxRetries=r.maxRetries>=0?r.maxRetries:5,this.retryTimeout=r.retryTimeout>=1?r.retryTimeout:350,this.state={},this.queue=[],this.backend&&this.backend.init&&this.backend.init(i,r.backend,r)}queueLoad(e,t,i,r){const a={},s={},o={},l={};return e.forEach(d=>{let h=!0;t.forEach(f=>{const p=`${d}|${f}`;!i.reload&&this.store.hasResourceBundle(d,f)?this.state[p]=2:this.state[p]<0||(this.state[p]===1?s[p]===void 0&&(s[p]=!0):(this.state[p]=1,h=!1,s[p]===void 0&&(s[p]=!0),a[p]===void 0&&(a[p]=!0),l[f]===void 0&&(l[f]=!0)))}),h||(o[d]=!0)}),(Object.keys(a).length||Object.keys(s).length)&&this.queue.push({pending:s,pendingCount:Object.keys(s).length,loaded:{},errors:[],callback:r}),{toLoad:Object.keys(a),pending:Object.keys(s),toLoadLanguages:Object.keys(o),toLoadNamespaces:Object.keys(l)}}loaded(e,t,i){const r=e.split("|"),a=r[0],s=r[1];t&&this.emit("failedLoading",a,s,t),i&&this.store.addResourceBundle(a,s,i,void 0,void 0,{skipCopy:!0}),this.state[e]=t?-1:2;const o={};this.queue.forEach(l=>{Kz(l.loaded,[a],s),fj(l,e),t&&l.errors.push(t),l.pendingCount===0&&!l.done&&(Object.keys(l.loaded).forEach(d=>{o[d]||(o[d]={});const h=l.loaded[d];h.length&&h.forEach(f=>{o[d][f]===void 0&&(o[d][f]=!0)})}),l.done=!0,l.errors.length?l.callback(l.errors):l.callback())}),this.emit("loaded",o),this.queue=this.queue.filter(l=>!l.done)}read(e,t,i){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:this.retryTimeout,s=arguments.length>5?arguments[5]:void 0;if(!e.length)return s(null,{});if(this.readingCalls>=this.maxParallelReads){this.waitingReads.push({lng:e,ns:t,fcName:i,tried:r,wait:a,callback:s});return}this.readingCalls++;const o=(d,h)=>{if(this.readingCalls--,this.waitingReads.length>0){const f=this.waitingReads.shift();this.read(f.lng,f.ns,f.fcName,f.tried,f.wait,f.callback)}if(d&&h&&r<this.maxRetries){setTimeout(()=>{this.read.call(this,e,t,i,r+1,a*2,s)},a);return}s(d,h)},l=this.backend[i].bind(this.backend);if(l.length===2){try{const d=l(e,t);d&&typeof d.then=="function"?d.then(h=>o(null,h)).catch(o):o(null,d)}catch(d){o(d)}return}return l(e,t,o)}prepareLoading(e,t){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),r&&r();typeof e=="string"&&(e=this.languageUtils.toResolveHierarchy(e)),typeof t=="string"&&(t=[t]);const a=this.queueLoad(e,t,i,r);if(!a.toLoad.length)return a.pending.length||r(),null;a.toLoad.forEach(s=>{this.loadOne(s)})}load(e,t,i){this.prepareLoading(e,t,{},i)}reload(e,t,i){this.prepareLoading(e,t,{reload:!0},i)}loadOne(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"";const i=e.split("|"),r=i[0],a=i[1];this.read(r,a,"read",void 0,void 0,(s,o)=>{s&&this.logger.warn(`${t}loading namespace ${a} for language ${r} failed`,s),!s&&o&&this.logger.log(`${t}loaded namespace ${a} for language ${r}`,o),this.loaded(e,s,o)})}saveMissing(e,t,i,r,a){let s=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{},o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:()=>{};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)){this.logger.warn(`did not save key "${i}" as the namespace "${t}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");return}if(!(i==null||i==="")){if(this.backend&&this.backend.create){const l={...s,isUpdate:a},d=this.backend.create.bind(this.backend);if(d.length<6)try{let h;d.length===5?h=d(e,t,i,r,l):h=d(e,t,i,r),h&&typeof h.then=="function"?h.then(f=>o(null,f)).catch(o):o(null,h)}catch(h){o(h)}else d(e,t,i,r,o,l)}!e||!e[0]||this.store.addResource(e[0],t,i,r)}}}function Ny(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){let t={};if(typeof e[1]=="object"&&(t=e[1]),typeof e[1]=="string"&&(t.defaultValue=e[1]),typeof e[2]=="string"&&(t.tDescription=e[2]),typeof e[2]=="object"||typeof e[3]=="object"){const i=e[3]||e[2];Object.keys(i).forEach(r=>{t[r]=i[r]})}return t},interpolation:{escapeValue:!0,format:n=>n,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function Dy(n){return typeof n.ns=="string"&&(n.ns=[n.ns]),typeof n.fallbackLng=="string"&&(n.fallbackLng=[n.fallbackLng]),typeof n.fallbackNS=="string"&&(n.fallbackNS=[n.fallbackNS]),n.supportedLngs&&n.supportedLngs.indexOf("cimode")<0&&(n.supportedLngs=n.supportedLngs.concat(["cimode"])),n}function Zc(){}function mj(n){Object.getOwnPropertyNames(Object.getPrototypeOf(n)).forEach(t=>{typeof n[t]=="function"&&(n[t]=n[t].bind(n))})}class R4 extends Zu{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;if(super(),this.options=Dy(e),this.services={},this.logger=A2,this.modules={external:[]},mj(this),t&&!this.isInitialized&&!e.isClone){if(!this.options.initImmediate)return this.init(e,t),this;setTimeout(()=>{this.init(e,t)},0)}}init(){var e=this;let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},i=arguments.length>1?arguments[1]:void 0;this.isInitializing=!0,typeof t=="function"&&(i=t,t={}),!t.defaultNS&&t.defaultNS!==!1&&t.ns&&(typeof t.ns=="string"?t.defaultNS=t.ns:t.ns.indexOf("translation")<0&&(t.defaultNS=t.ns[0]));const r=Ny();this.options={...r,...this.options,...Dy(t)},this.options.compatibilityAPI!=="v1"&&(this.options.interpolation={...r.interpolation,...this.options.interpolation}),t.keySeparator!==void 0&&(this.options.userDefinedKeySeparator=t.keySeparator),t.nsSeparator!==void 0&&(this.options.userDefinedNsSeparator=t.nsSeparator);function a(h){return h?typeof h=="function"?new h:h:null}if(!this.options.isClone){this.modules.logger?A2.init(a(this.modules.logger),this.options):A2.init(null,this.options);let h;this.modules.formatter?h=this.modules.formatter:typeof Intl<"u"&&(h=hj);const f=new Ry(this.options);this.store=new Cy(this.options.resources,this.options);const p=this.services;p.logger=A2,p.resourceStore=this.store,p.languageUtils=f,p.pluralResolver=new cj(f,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),h&&(!this.options.interpolation.format||this.options.interpolation.format===r.interpolation.format)&&(p.formatter=a(h),p.formatter.init(p,this.options),this.options.interpolation.format=p.formatter.format.bind(p.formatter)),p.interpolator=new uj(this.options),p.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},p.backendConnector=new pj(a(this.modules.backend),p.resourceStore,p,this.options),p.backendConnector.on("*",function(m){for(var y=arguments.length,b=new Array(y>1?y-1:0),_=1;_<y;_++)b[_-1]=arguments[_];e.emit(m,...b)}),this.modules.languageDetector&&(p.languageDetector=a(this.modules.languageDetector),p.languageDetector.init&&p.languageDetector.init(p,this.options.detection,this.options)),this.modules.i18nFormat&&(p.i18nFormat=a(this.modules.i18nFormat),p.i18nFormat.init&&p.i18nFormat.init(this)),this.translator=new tu(this.services,this.options),this.translator.on("*",function(m){for(var y=arguments.length,b=new Array(y>1?y-1:0),_=1;_<y;_++)b[_-1]=arguments[_];e.emit(m,...b)}),this.modules.external.forEach(m=>{m.init&&m.init(this)})}if(this.format=this.options.interpolation.format,i||(i=Zc),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){const h=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);h.length>0&&h[0]!=="dev"&&(this.options.lng=h[0])}!this.services.languageDetector&&!this.options.lng&&this.logger.warn("init: no languageDetector is used and no lng is defined"),["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach(h=>{this[h]=function(){return e.store[h](...arguments)}}),["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach(h=>{this[h]=function(){return e.store[h](...arguments),e}});const l=gl(),d=()=>{const h=(f,p)=>{this.isInitializing=!1,this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),l.resolve(p),i(f,p)};if(this.languages&&this.options.compatibilityAPI!=="v1"&&!this.isInitialized)return h(null,this.t.bind(this));this.changeLanguage(this.options.lng,h)};return this.options.resources||!this.options.initImmediate?d():setTimeout(d,0),l}loadResources(e){let i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Zc;const r=typeof e=="string"?e:this.language;if(typeof e=="function"&&(i=e),!this.options.resources||this.options.partialBundledLanguages){if(r&&r.toLowerCase()==="cimode"&&(!this.options.preload||this.options.preload.length===0))return i();const a=[],s=o=>{if(!o||o==="cimode")return;this.services.languageUtils.toResolveHierarchy(o).forEach(d=>{d!=="cimode"&&a.indexOf(d)<0&&a.push(d)})};r?s(r):this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(l=>s(l)),this.options.preload&&this.options.preload.forEach(o=>s(o)),this.services.backendConnector.load(a,this.options.ns,o=>{!o&&!this.resolvedLanguage&&this.language&&this.setResolvedLanguage(this.language),i(o)})}else i(null)}reloadResources(e,t,i){const r=gl();return e||(e=this.languages),t||(t=this.options.ns),i||(i=Zc),this.services.backendConnector.reload(e,t,a=>{r.resolve(),i(a)}),r}use(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return e.type==="backend"&&(this.modules.backend=e),(e.type==="logger"||e.log&&e.warn&&e.error)&&(this.modules.logger=e),e.type==="languageDetector"&&(this.modules.languageDetector=e),e.type==="i18nFormat"&&(this.modules.i18nFormat=e),e.type==="postProcessor"&&kM.addPostProcessor(e),e.type==="formatter"&&(this.modules.formatter=e),e.type==="3rdParty"&&this.modules.external.push(e),this}setResolvedLanguage(e){if(!(!e||!this.languages)&&!(["cimode","dev"].indexOf(e)>-1))for(let t=0;t<this.languages.length;t++){const i=this.languages[t];if(!(["cimode","dev"].indexOf(i)>-1)&&this.store.hasLanguageSomeTranslations(i)){this.resolvedLanguage=i;break}}}changeLanguage(e,t){var i=this;this.isLanguageChangingTo=e;const r=gl();this.emit("languageChanging",e);const a=l=>{this.language=l,this.languages=this.services.languageUtils.toResolveHierarchy(l),this.resolvedLanguage=void 0,this.setResolvedLanguage(l)},s=(l,d)=>{d?(a(d),this.translator.changeLanguage(d),this.isLanguageChangingTo=void 0,this.emit("languageChanged",d),this.logger.log("languageChanged",d)):this.isLanguageChangingTo=void 0,r.resolve(function(){return i.t(...arguments)}),t&&t(l,function(){return i.t(...arguments)})},o=l=>{!e&&!l&&this.services.languageDetector&&(l=[]);const d=typeof l=="string"?l:this.services.languageUtils.getBestMatchFromCodes(l);d&&(this.language||a(d),this.translator.language||this.translator.changeLanguage(d),this.services.languageDetector&&this.services.languageDetector.cacheUserLanguage&&this.services.languageDetector.cacheUserLanguage(d)),this.loadResources(d,h=>{s(h,d)})};return!e&&this.services.languageDetector&&!this.services.languageDetector.async?o(this.services.languageDetector.detect()):!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect.length===0?this.services.languageDetector.detect().then(o):this.services.languageDetector.detect(o):o(e),r}getFixedT(e,t,i){var r=this;const a=function(s,o){let l;if(typeof o!="object"){for(var d=arguments.length,h=new Array(d>2?d-2:0),f=2;f<d;f++)h[f-2]=arguments[f];l=r.options.overloadTranslationOptionHandler([s,o].concat(h))}else l={...o};l.lng=l.lng||a.lng,l.lngs=l.lngs||a.lngs,l.ns=l.ns||a.ns,l.keyPrefix=l.keyPrefix||i||a.keyPrefix;const p=r.options.keySeparator||".";let m;return l.keyPrefix&&Array.isArray(s)?m=s.map(y=>`${l.keyPrefix}${p}${y}`):m=l.keyPrefix?`${l.keyPrefix}${p}${s}`:s,r.t(m,l)};return typeof e=="string"?a.lng=e:a.lngs=e,a.ns=t,a.keyPrefix=i,a}t(){return this.translator&&this.translator.translate(...arguments)}exists(){return this.translator&&this.translator.exists(...arguments)}setDefaultNamespace(e){this.options.defaultNS=e}hasLoadedNamespace(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;const i=t.lng||this.resolvedLanguage||this.languages[0],r=this.options?this.options.fallbackLng:!1,a=this.languages[this.languages.length-1];if(i.toLowerCase()==="cimode")return!0;const s=(o,l)=>{const d=this.services.backendConnector.state[`${o}|${l}`];return d===-1||d===2};if(t.precheck){const o=t.precheck(this,s);if(o!==void 0)return o}return!!(this.hasResourceBundle(i,e)||!this.services.backendConnector.backend||this.options.resources&&!this.options.partialBundledLanguages||s(i,e)&&(!r||s(a,e)))}loadNamespaces(e,t){const i=gl();return this.options.ns?(typeof e=="string"&&(e=[e]),e.forEach(r=>{this.options.ns.indexOf(r)<0&&this.options.ns.push(r)}),this.loadResources(r=>{i.resolve(),t&&t(r)}),i):(t&&t(),Promise.resolve())}loadLanguages(e,t){const i=gl();typeof e=="string"&&(e=[e]);const r=this.options.preload||[],a=e.filter(s=>r.indexOf(s)<0);return a.length?(this.options.preload=r.concat(a),this.loadResources(s=>{i.resolve(),t&&t(s)}),i):(t&&t(),Promise.resolve())}dir(e){if(e||(e=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),!e)return"rtl";const t=["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"],i=this.services&&this.services.languageUtils||new Ry(Ny());return t.indexOf(i.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;return new R4(e,t)}cloneInstance(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Zc;const i=e.forkResourceStore;i&&delete e.forkResourceStore;const r={...this.options,...e,isClone:!0},a=new R4(r);return(e.debug!==void 0||e.prefix!==void 0)&&(a.logger=a.logger.clone(e)),["store","services","language"].forEach(o=>{a[o]=this[o]}),a.services={...this.services},a.services.utils={hasLoadedNamespace:a.hasLoadedNamespace.bind(a)},i&&(a.store=new Cy(this.store.data,r),a.services.resourceStore=a.store),a.translator=new tu(a.services,r),a.translator.on("*",function(o){for(var l=arguments.length,d=new Array(l>1?l-1:0),h=1;h<l;h++)d[h-1]=arguments[h];a.emit(o,...d)}),a.init(r,t),a.translator.options=r,a.translator.backendConnector.services.utils={hasLoadedNamespace:a.hasLoadedNamespace.bind(a)},a}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}const zn=R4.createInstance();zn.createInstance=R4.createInstance;zn.createInstance;zn.dir;zn.init;zn.loadResources;zn.reloadResources;zn.use;zn.changeLanguage;zn.getFixedT;zn.t;zn.exists;zn.setDefaultNamespace;zn.hasLoadedNamespace;zn.loadNamespaces;zn.loadLanguages;const gj={Berlin:"Berlino",Brussels:"Bruxelles",Bruges:"Bruges",Budapest:"Budapest",Barcelona:"Barcellona",London:"Londra",Turin:"Torino",Padua:"Padova",Rome:"Roma",Anderlecht:"Anderlecht",Livorno:"Livorno",Pisa:"Pisa",Genoa:"Genova","Gressoney-La-Trinité":"Gressoney-La-Trinité",Cuneo:"Cuneo",Assisi:"Assisi",Perugia:"Perugia",Terni:"Terni",Venice:"Venezia",Verona:"Verona",Imola:"Imola",Braga:"Braga",Porto:"Porto",Tokyo:"Tokyo",Takayama:"Takayama",Shirawakago:"Shirawakago",Kanazawa:"Kanazawa",Kyoto:"Kyoto",Osaka:"Osaka",Nara:"Nara",Cefalù:"Cefalù"},vj={Belgium:"Belgio",Hungary:"Ungheria",Italy:"Italia",Spain:"Spagna",UnitedKingdom:"Regno Unito",Germany:"Germania",Japan:"Giappone",Portugal:"Portogallo"},yj={title:"Città visitate"},_j={title:"Prossime destinazioni"},xj="Alla galleria",wj={cities:gj,countries:vj,visited:yj,future:_j,gallery:xj},bj={Berlin:"Berlin",Brussels:"Brussels",Bruges:"Bruges",Budapest:"Budapest",Barcelona:"Barcelona",London:"London",Turin:"Turin",Padua:"Padua",Rome:"Rome",Anderlecht:"Anderlecht",Livorno:"Livorno",Pisa:"Pisa",Genoa:"Genoa","Gressoney-La-Trinité":"Gressoney-La-Trinité",Cuneo:"Cuneo",Assisi:"Assisi",Perugia:"Perugia",Terni:"Terni",Venice:"Venice",Verona:"Verona",Imola:"Imola",Braga:"Braga",Porto:"Porto",Tokyo:"Tokyo",Takayama:"Takayama",Shirawakago:"Shirawakago",Kanazawa:"Kanazawa",Kyoto:"Kyoto",Osaka:"Osaka",Nara:"Nara",Cefalù:"Cefalù"},Sj={Belgium:"Belgium",Hungary:"Hungary",Italy:"Italy",Spain:"Spain",UnitedKingdom:"United Kingdom",Germany:"Germany",Japan:"Japan",Portugal:"Portugal"},Mj={title:"Visited Cities"},Ej={title:"Future Destinations"},Pj="To Gallery",Tj={cities:bj,countries:Sj,visited:Mj,future:Ej,gallery:Pj};function Lj(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function k4(n){"@babel/helpers - typeof";return k4=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k4(n)}function Cj(n,e){if(k4(n)!="object"||!n)return n;var t=n[Symbol.toPrimitive];if(t!==void 0){var i=t.call(n,e||"default");if(k4(i)!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(n)}function Aj(n){var e=Cj(n,"string");return k4(e)=="symbol"?e:e+""}function Oy(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,Aj(i.key),i)}}function Rj(n,e,t){return e&&Oy(n.prototype,e),t&&Oy(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}var IM=[],kj=IM.forEach,Ij=IM.slice;function Nj(n){return kj.call(Ij.call(arguments,1),function(e){if(e)for(var t in e)n[t]===void 0&&(n[t]=e[t])}),n}var By=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,Dj=function(e,t,i){var r=i||{};r.path=r.path||"/";var a=encodeURIComponent(t),s="".concat(e,"=").concat(a);if(r.maxAge>0){var o=r.maxAge-0;if(Number.isNaN(o))throw new Error("maxAge should be a Number");s+="; Max-Age=".concat(Math.floor(o))}if(r.domain){if(!By.test(r.domain))throw new TypeError("option domain is invalid");s+="; Domain=".concat(r.domain)}if(r.path){if(!By.test(r.path))throw new TypeError("option path is invalid");s+="; Path=".concat(r.path)}if(r.expires){if(typeof r.expires.toUTCString!="function")throw new TypeError("option expires is invalid");s+="; Expires=".concat(r.expires.toUTCString())}if(r.httpOnly&&(s+="; HttpOnly"),r.secure&&(s+="; Secure"),r.sameSite){var l=typeof r.sameSite=="string"?r.sameSite.toLowerCase():r.sameSite;switch(l){case!0:s+="; SameSite=Strict";break;case"lax":s+="; SameSite=Lax";break;case"strict":s+="; SameSite=Strict";break;case"none":s+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}}return s},Uy={create:function(e,t,i,r){var a=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{path:"/",sameSite:"strict"};i&&(a.expires=new Date,a.expires.setTime(a.expires.getTime()+i*60*1e3)),r&&(a.domain=r),document.cookie=Dj(e,encodeURIComponent(t),a)},read:function(e){for(var t="".concat(e,"="),i=document.cookie.split(";"),r=0;r<i.length;r++){for(var a=i[r];a.charAt(0)===" ";)a=a.substring(1,a.length);if(a.indexOf(t)===0)return a.substring(t.length,a.length)}return null},remove:function(e){this.create(e,"",-1)}},Oj={name:"cookie",lookup:function(e){var t;if(e.lookupCookie&&typeof document<"u"){var i=Uy.read(e.lookupCookie);i&&(t=i)}return t},cacheUserLanguage:function(e,t){t.lookupCookie&&typeof document<"u"&&Uy.create(t.lookupCookie,e,t.cookieMinutes,t.cookieDomain,t.cookieOptions)}},Bj={name:"querystring",lookup:function(e){var t;if(typeof window<"u"){var i=window.location.search;!window.location.search&&window.location.hash&&window.location.hash.indexOf("?")>-1&&(i=window.location.hash.substring(window.location.hash.indexOf("?")));for(var r=i.substring(1),a=r.split("&"),s=0;s<a.length;s++){var o=a[s].indexOf("=");if(o>0){var l=a[s].substring(0,o);l===e.lookupQuerystring&&(t=a[s].substring(o+1))}}}return t}},vl=null,Fy=function(){if(vl!==null)return vl;try{vl=window!=="undefined"&&window.localStorage!==null;var e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch{vl=!1}return vl},Uj={name:"localStorage",lookup:function(e){var t;if(e.lookupLocalStorage&&Fy()){var i=window.localStorage.getItem(e.lookupLocalStorage);i&&(t=i)}return t},cacheUserLanguage:function(e,t){t.lookupLocalStorage&&Fy()&&window.localStorage.setItem(t.lookupLocalStorage,e)}},yl=null,zy=function(){if(yl!==null)return yl;try{yl=window!=="undefined"&&window.sessionStorage!==null;var e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch{yl=!1}return yl},Fj={name:"sessionStorage",lookup:function(e){var t;if(e.lookupSessionStorage&&zy()){var i=window.sessionStorage.getItem(e.lookupSessionStorage);i&&(t=i)}return t},cacheUserLanguage:function(e,t){t.lookupSessionStorage&&zy()&&window.sessionStorage.setItem(t.lookupSessionStorage,e)}},zj={name:"navigator",lookup:function(e){var t=[];if(typeof navigator<"u"){if(navigator.languages)for(var i=0;i<navigator.languages.length;i++)t.push(navigator.languages[i]);navigator.userLanguage&&t.push(navigator.userLanguage),navigator.language&&t.push(navigator.language)}return t.length>0?t:void 0}},jj={name:"htmlTag",lookup:function(e){var t,i=e.htmlTag||(typeof document<"u"?document.documentElement:null);return i&&typeof i.getAttribute=="function"&&(t=i.getAttribute("lang")),t}},Hj={name:"path",lookup:function(e){var t;if(typeof window<"u"){var i=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(i instanceof Array)if(typeof e.lookupFromPathIndex=="number"){if(typeof i[e.lookupFromPathIndex]!="string")return;t=i[e.lookupFromPathIndex].replace("/","")}else t=i[0].replace("/","")}return t}},Vj={name:"subdomain",lookup:function(e){var t=typeof e.lookupFromSubdomainIndex=="number"?e.lookupFromSubdomainIndex+1:1,i=typeof window<"u"&&window.location&&window.location.hostname&&window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);if(i)return i[t]}};function Gj(){return{order:["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"],convertDetectedLanguage:function(e){return e}}}var NM=function(){function n(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};Lj(this,n),this.type="languageDetector",this.detectors={},this.init(e,t)}return Rj(n,[{key:"init",value:function(t){var i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};this.services=t||{languageUtils:{}},this.options=Nj(i,this.options||{},Gj()),typeof this.options.convertDetectedLanguage=="string"&&this.options.convertDetectedLanguage.indexOf("15897")>-1&&(this.options.convertDetectedLanguage=function(a){return a.replace("-","_")}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=r,this.addDetector(Oj),this.addDetector(Bj),this.addDetector(Uj),this.addDetector(Fj),this.addDetector(zj),this.addDetector(jj),this.addDetector(Hj),this.addDetector(Vj)}},{key:"addDetector",value:function(t){return this.detectors[t.name]=t,this}},{key:"detect",value:function(t){var i=this;t||(t=this.options.order);var r=[];return t.forEach(function(a){if(i.detectors[a]){var s=i.detectors[a].lookup(i.options);s&&typeof s=="string"&&(s=[s]),s&&(r=r.concat(s))}}),r=r.map(function(a){return i.options.convertDetectedLanguage(a)}),this.services.languageUtils.getBestMatchFromCodes?r:r.length>0?r[0]:null}},{key:"cacheUserLanguage",value:function(t,i){var r=this;i||(i=this.options.caches),i&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(t)>-1||i.forEach(function(a){r.detectors[a]&&r.detectors[a].cacheUserLanguage(t,r.options)}))}}]),n}();NM.type="languageDetector";const Wj={en:{home:Tj},it:{home:wj}};zn.use(NM).use(FF).init({resources:Wj,debug:!1,fallbackLng:"en",saveMissing:!0});function Xj(n){const{cityName:e,travelIdx:t}=n.params,i=A4.find(r=>r.name===e);return!i||!t?null:{city:i,travelIdx:parseInt(t)}}function Yj(n){const{cityName:e,travelIdx:t,photoIdx:i}=n.params,r=A4.find(a=>a.name===e);return!r||!t||!i?null:{city:r,travelIdx:parseInt(t),photoIdx:parseInt(i)}}y8.createRoot(document.getElementById("root")).render(xe.jsx(or.StrictMode,{children:xe.jsx(RC,{router:bC([{path:"/",element:xe.jsx(Xz,{}),children:[{path:"visited",element:xe.jsx(kz,{})},{path:"future",element:xe.jsx(Rz,{})},{path:"gallery/:cityName/:travelIdx",element:xe.jsx(qF,{}),loader:Xj,children:[{path:":photoIdx",element:xe.jsx(Bz,{}),loader:Yj}]}]}])})}))});export default qj();
