@use "../../../styles/variables.module" as v;
@use "../../../styles/mixins" as m;

.filter-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9;
}

.filter {
  position: relative;
  .filter__button {
    width: 2.5rem;
    height: 2.5rem;
    &.filter__button--open {
      @include m.set-button-colors(
        v.$filterButton,
        v.$filterButtonContent,
        v.$filterButtonHover
      );
    }
  }
  .filter__options {
    position: absolute;
    right: 0;
    top: 3rem;
    z-index: 10;
    border-radius: 0.5rem;
    padding: 1rem;
    box-shadow: rgba(0, 0, 0, 0.56) 0px 22px 70px 4px;
    width: 16rem;
    .filter__options__list {
      display: flex;
      max-height: 14rem;
      overflow-y: auto;
      flex-direction: column;
      padding-right: 0.6rem;
      .filter__option {
        display: flex;
        align-items: center;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        margin-block: 0.1rem;
        opacity: 0.2;
        cursor: pointer;
        @include m.transition(all, 0.3s, ease-in-out);
        svg {
          width: 1.5rem;
          height: 1.5rem;
          margin-right: 0.5rem;
          flex-shrink: 0;
        }
        &.filter__option--selected {
          opacity: 1;
        }
      }
    }
  }
}

.home--light {
  .filter__options {
    background-color: v.$lightInfoTab;
    color: v.$darkLeftBar;
    .filter__option {
      &.filter__option--selected {
        background-color: v.$lightButton;
      }
      &:hover {
        background-color: v.$lightButtonHover;
      }
    }
  }
}

.home--dark {
  .filter__options {
    background-color: v.$darkInfoTab;
    color: v.$lightLeftBar;
    .filter__option {
      &.filter__option--selected {
        background-color: v.$darkButton;
      }
      &:not(.filter__option--mobile):hover {
        background-color: v.$darkButtonHover;
      }
    }
  }
}

.filter-transition-enter {
  opacity: 0;
  transform: translateY(-10px);
}
.filter-transition-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition:
    opacity 200ms,
    transform 200ms;
}
.filter-transition-exit {
  opacity: 1;
  transform: translateY(0);
}
.filter-transition-exit-active {
  opacity: 0;
  transform: translateY(-10px);
  transition:
    opacity 200ms,
    transform 200ms;
}

@media (max-width: 460px) {
  .filter {
    .filter__options {
      width: 13rem;
    }
  }
}
